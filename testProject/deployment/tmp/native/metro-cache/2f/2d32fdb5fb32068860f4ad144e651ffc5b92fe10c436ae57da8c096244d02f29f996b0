{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":279,"column":0,"index":8328}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"../Utilities/Platform","data":{"asyncType":null,"locs":[{"start":{"line":14,"column":0,"index":352},"end":{"line":14,"column":45,"index":397}}],"key":"3JpW2lByst9OohsYWa25ZOinj2I="}},{"name":"../Utilities/RCTLog","data":{"asyncType":null,"locs":[{"start":{"line":15,"column":0,"index":398},"end":{"line":15,"column":41,"index":439}}],"key":"Uuj/Cy2CxwSpVOuCB8J/Nbqu/Os="}},{"name":"./Data/LogBoxData","data":{"asyncType":null,"locs":[{"start":{"line":37,"column":21,"index":932},"end":{"line":37,"column":49,"index":960}}],"key":"K5kTudEgKIwocGVzIW0z8MB2Ajk="}},{"name":"./Data/parseLogBoxLog","data":{"asyncType":null,"locs":[{"start":{"line":38,"column":47,"index":1009},"end":{"line":38,"column":79,"index":1041}},{"start":{"line":16,"column":0,"index":440},"end":{"line":16,"column":56,"index":496}}],"key":"3iOElTH1ik3IcLhNaEJLMMKfNkk="}},{"name":"../NativeModules/specs/NativeLogBox","data":{"asyncType":null,"locs":[{"start":{"line":56,"column":6,"index":1401},"end":{"line":56,"column":52,"index":1447}}],"key":"3NGMD8vmV28wtRZ8vh45i5e10Mo="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _Platform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"../Utilities/Platform\"));\n  var _RCTLog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"../Utilities/RCTLog\"));\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * \n   * @format\n   */\n\n  var LogBox;\n  /**\n   * LogBox displays logs in the app.\n   */\n  if (__DEV__) {\n    var LogBoxData = _$$_REQUIRE(_dependencyMap[3], \"./Data/LogBoxData\");\n    var _require = _$$_REQUIRE(_dependencyMap[4], \"./Data/parseLogBoxLog\"),\n      parseLogBoxLog = _require.parseLogBoxLog,\n      parseInterpolation = _require.parseInterpolation;\n    var originalConsoleError;\n    var originalConsoleWarn;\n    var consoleErrorImpl;\n    var consoleWarnImpl;\n    var isLogBoxInstalled = false;\n    LogBox = {\n      install: function install() {\n        if (isLogBoxInstalled) {\n          return;\n        }\n        isLogBoxInstalled = true;\n\n        // Trigger lazy initialization of module.\n        _$$_REQUIRE(_dependencyMap[5], \"../NativeModules/specs/NativeLogBox\");\n\n        // IMPORTANT: we only overwrite `console.error` and `console.warn` once.\n        // When we uninstall we keep the same reference and only change its\n        // internal implementation\n        var isFirstInstall = originalConsoleError == null;\n        if (isFirstInstall) {\n          originalConsoleError = console.error.bind(console);\n          originalConsoleWarn = console.warn.bind(console);\n\n          // $FlowExpectedError[cannot-write]\n          console.error = function () {\n            consoleErrorImpl.apply(void 0, arguments);\n          };\n          // $FlowExpectedError[cannot-write]\n          console.warn = function () {\n            consoleWarnImpl.apply(void 0, arguments);\n          };\n        }\n        consoleErrorImpl = registerError;\n        consoleWarnImpl = registerWarning;\n        if (_Platform.default.isTesting) {\n          LogBoxData.setDisabled(true);\n        }\n        _RCTLog.default.setWarningHandler(function () {\n          registerWarning.apply(void 0, arguments);\n        });\n      },\n      uninstall: function uninstall() {\n        if (!isLogBoxInstalled) {\n          return;\n        }\n        isLogBoxInstalled = false;\n\n        // IMPORTANT: we don't re-assign to `console` in case the method has been\n        // decorated again after installing LogBox. E.g.:\n        // Before uninstalling: original > LogBox > OtherErrorHandler\n        // After uninstalling:  original > LogBox (noop) > OtherErrorHandler\n        consoleErrorImpl = originalConsoleError;\n        consoleWarnImpl = originalConsoleWarn;\n      },\n      isInstalled: function isInstalled() {\n        return isLogBoxInstalled;\n      },\n      ignoreLogs: function ignoreLogs(patterns) {\n        LogBoxData.addIgnorePatterns(patterns);\n      },\n      ignoreAllLogs: function ignoreAllLogs(value) {\n        LogBoxData.setDisabled(value == null ? true : value);\n      },\n      clearAllLogs: function clearAllLogs() {\n        LogBoxData.clear();\n      },\n      addLog: function addLog(log) {\n        if (isLogBoxInstalled) {\n          LogBoxData.addLog(log);\n        }\n      },\n      addException: function addException(error) {\n        if (isLogBoxInstalled) {\n          LogBoxData.addException(error);\n        }\n      }\n    };\n    var isRCTLogAdviceWarning = function isRCTLogAdviceWarning() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      // RCTLogAdvice is a native logging function designed to show users\n      // a message in the console, but not show it to them in Logbox.\n      return typeof args[0] === 'string' && args[0].startsWith('(ADVICE)');\n    };\n    var isWarningModuleWarning = function isWarningModuleWarning() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n      return typeof args[0] === 'string' && args[0].startsWith('Warning: ');\n    };\n    var registerWarning = function registerWarning() {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n      // Let warnings within LogBox itself fall through.\n      if (LogBoxData.isLogBoxErrorMessage(String(args[0]))) {\n        originalConsoleError.apply(void 0, args);\n        return;\n      } else {\n        // Be sure to pass LogBox warnings through.\n        originalConsoleWarn.apply(void 0, args);\n      }\n      try {\n        if (!isRCTLogAdviceWarning.apply(void 0, args)) {\n          var _parseLogBoxLog = parseLogBoxLog(args),\n            category = _parseLogBoxLog.category,\n            message = _parseLogBoxLog.message,\n            componentStack = _parseLogBoxLog.componentStack,\n            componentStackType = _parseLogBoxLog.componentStackType;\n          if (!LogBoxData.isMessageIgnored(message.content)) {\n            LogBoxData.addLog({\n              level: 'warn',\n              category: category,\n              message: message,\n              componentStack: componentStack,\n              componentStackType: componentStackType\n            });\n          }\n        }\n      } catch (err) {\n        LogBoxData.reportLogBoxError(err);\n      }\n    };\n\n    /* $FlowFixMe[missing-local-annot] The type annotation(s) required by Flow's\n     * LTI update could not be added via codemod */\n    var registerError = function registerError() {\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n      // Let errors within LogBox itself fall through.\n      if (LogBoxData.isLogBoxErrorMessage(args[0])) {\n        originalConsoleError.apply(void 0, args);\n        return;\n      }\n      try {\n        if (!isWarningModuleWarning.apply(void 0, args) && !(0, _$$_REQUIRE(_dependencyMap[4], \"./Data/parseLogBoxLog\").hasComponentStack)(args)) {\n          // Only show LogBox for the 'warning' module, or React errors with\n          // component stacks, otherwise pass the error through.u\n          //\n          // By passing through, this will get picked up by the React console override,\n          // potentially adding the component stack. React then passes it back to the\n          // React Native ExceptionsManager, which reports it to LogBox as an error.\n          //\n          // Ideally, we refactor all RN error handling so that LogBox patching\n          // errors is not necessary, and they are reported the same as a framework.\n          // The blocker to this is that the ExceptionManager console.error override\n          // strigifys all of the args before passing it through to LogBox, which\n          // would lose all of the interpolation information.\n          //\n          // The 'warning' module needs to be handled here because React internally calls\n          // `console.error('Warning: ')` with the component stack already included.\n          originalConsoleError.apply(void 0, args);\n          return;\n        }\n        var format = args[0].replace('Warning: ', '');\n        var filterResult = LogBoxData.checkWarningFilter(format);\n        var level = 'error';\n        if (filterResult.monitorEvent !== 'warning_unhandled') {\n          if (filterResult.suppressCompletely) {\n            return;\n          }\n          if (filterResult.suppressDialog_LEGACY === true) {\n            level = 'warn';\n          } else if (filterResult.forceDialogImmediately === true) {\n            level = 'fatal'; // Do not downgrade. These are real bugs with same severity as throws.\n          }\n        }\n\n        // Unfortunately, we need to add the Warning: prefix back for downstream dependencies.\n        // Downstream, we check for this prefix to know that LogBox already handled it, so\n        // it doesn't get reported back to LogBox. It's an absolute mess.\n        args[0] = `Warning: ${filterResult.finalFormat}`;\n        var _parseLogBoxLog2 = parseLogBoxLog(args),\n          category = _parseLogBoxLog2.category,\n          message = _parseLogBoxLog2.message,\n          componentStack = _parseLogBoxLog2.componentStack,\n          componentStackType = _parseLogBoxLog2.componentStackType;\n\n        // Interpolate the message so they are formatted for adb and other CLIs.\n        // This is different than the message.content above because it includes component stacks.\n        var interpolated = parseInterpolation(args);\n        originalConsoleError(interpolated.message.content);\n        if (!LogBoxData.isMessageIgnored(message.content)) {\n          LogBoxData.addLog({\n            level: level,\n            category: category,\n            message: message,\n            componentStack: componentStack,\n            componentStackType: componentStackType\n          });\n        }\n      } catch (err) {\n        LogBoxData.reportLogBoxError(err);\n      }\n    };\n  } else {\n    LogBox = {\n      install: function install() {\n        // Do nothing.\n      },\n      uninstall: function uninstall() {\n        // Do nothing.\n      },\n      isInstalled: function isInstalled() {\n        return false;\n      },\n      ignoreLogs: function ignoreLogs(patterns) {\n        // Do nothing.\n      },\n      ignoreAllLogs: function ignoreAllLogs(value) {\n        // Do nothing.\n      },\n      clearAllLogs: function clearAllLogs() {\n        // Do nothing.\n      },\n      addLog: function addLog(log) {\n        // Do nothing.\n      },\n      addException: function addException(error) {\n        // Do nothing.\n      }\n    };\n  }\n  var _default = exports.default = LogBox;\n});","lineCount":254,"map":[[7,2,14,0],[7,6,14,0,"_Platform"],[7,15,14,0],[7,18,14,0,"_interopRequireDefault"],[7,40,14,0],[7,41,14,0,"_$$_REQUIRE"],[7,52,14,0],[7,53,14,0,"_dependencyMap"],[7,67,14,0],[8,2,15,0],[8,6,15,0,"_RCTLog"],[8,13,15,0],[8,16,15,0,"_interopRequireDefault"],[8,38,15,0],[8,39,15,0,"_$$_REQUIRE"],[8,50,15,0],[8,51,15,0,"_dependencyMap"],[8,65,15,0],[9,2,1,0],[10,0,2,0],[11,0,3,0],[12,0,4,0],[13,0,5,0],[14,0,6,0],[15,0,7,0],[16,0,8,0],[17,0,9,0],[19,2,20,0],[19,6,20,4,"LogBox"],[19,12,20,10],[20,2,33,0],[21,0,34,0],[22,0,35,0],[23,2,36,0],[23,6,36,4,"__DEV__"],[23,13,36,11],[23,15,36,13],[24,4,37,2],[24,8,37,8,"LogBoxData"],[24,18,37,18],[24,21,37,21,"require"],[24,32,37,28],[24,33,37,28,"_dependencyMap"],[24,47,37,28],[24,71,37,48],[24,72,37,49],[25,4,38,2],[25,8,38,2,"_require"],[25,16,38,2],[25,19,38,47,"require"],[25,30,38,54],[25,31,38,54,"_dependencyMap"],[25,45,38,54],[25,73,38,78],[25,74,38,79],[26,6,38,9,"parseLogBoxLog"],[26,20,38,23],[26,23,38,23,"_require"],[26,31,38,23],[26,32,38,9,"parseLogBoxLog"],[26,46,38,23],[27,6,38,25,"parseInterpolation"],[27,24,38,43],[27,27,38,43,"_require"],[27,35,38,43],[27,36,38,25,"parseInterpolation"],[27,54,38,43],[28,4,40,2],[28,8,40,6,"originalConsoleError"],[28,28,40,26],[29,4,41,2],[29,8,41,6,"originalConsoleWarn"],[29,27,41,25],[30,4,42,2],[30,8,42,6,"consoleErrorImpl"],[30,24,42,22],[31,4,43,2],[31,8,43,6,"consoleWarnImpl"],[31,23,43,54],[32,4,45,2],[32,8,45,6,"isLogBoxInstalled"],[32,25,45,32],[32,28,45,35],[32,33,45,40],[33,4,47,2,"LogBox"],[33,10,47,8],[33,13,47,11],[34,6,48,4,"install"],[34,13,48,11],[34,24,48,4,"install"],[34,31,48,11,"install"],[34,32,48,11],[34,34,48,20],[35,8,49,6],[35,12,49,10,"isLogBoxInstalled"],[35,29,49,27],[35,31,49,29],[36,10,50,8],[37,8,51,6],[38,8,53,6,"isLogBoxInstalled"],[38,25,53,23],[38,28,53,26],[38,32,53,30],[40,8,55,6],[41,8,56,6,"require"],[41,19,56,13],[41,20,56,13,"_dependencyMap"],[41,34,56,13],[41,76,56,51],[41,77,56,52],[43,8,58,6],[44,8,59,6],[45,8,60,6],[46,8,61,6],[46,12,61,12,"isFirstInstall"],[46,26,61,26],[46,29,61,29,"originalConsoleError"],[46,49,61,49],[46,53,61,53],[46,57,61,57],[47,8,62,6],[47,12,62,10,"isFirstInstall"],[47,26,62,24],[47,28,62,26],[48,10,63,8,"originalConsoleError"],[48,30,63,28],[48,33,63,31,"console"],[48,40,63,38],[48,41,63,39,"error"],[48,46,63,44],[48,47,63,45,"bind"],[48,51,63,49],[48,52,63,50,"console"],[48,59,63,57],[48,60,63,58],[49,10,64,8,"originalConsoleWarn"],[49,29,64,27],[49,32,64,30,"console"],[49,39,64,37],[49,40,64,38,"warn"],[49,44,64,42],[49,45,64,43,"bind"],[49,49,64,47],[49,50,64,48,"console"],[49,57,64,55],[49,58,64,56],[51,10,66,8],[52,10,67,8,"console"],[52,17,67,15],[52,18,67,16,"error"],[52,23,67,21],[52,26,67,24],[52,38,67,37],[53,12,68,10,"consoleErrorImpl"],[53,28,68,26],[53,29,68,26,"apply"],[53,34,68,26],[53,43,68,26,"arguments"],[53,52,68,34],[53,53,68,35],[54,10,69,8],[54,11,69,9],[55,10,70,8],[56,10,71,8,"console"],[56,17,71,15],[56,18,71,16,"warn"],[56,22,71,20],[56,25,71,23],[56,37,71,36],[57,12,72,10,"consoleWarnImpl"],[57,27,72,25],[57,28,72,25,"apply"],[57,33,72,25],[57,42,72,25,"arguments"],[57,51,72,33],[57,52,72,34],[58,10,73,8],[58,11,73,9],[59,8,74,6],[60,8,76,6,"consoleErrorImpl"],[60,24,76,22],[60,27,76,25,"registerError"],[60,40,76,38],[61,8,77,6,"consoleWarnImpl"],[61,23,77,21],[61,26,77,24,"registerWarning"],[61,41,77,39],[62,8,79,6],[62,12,79,10,"Platform"],[62,29,79,18],[62,30,79,19,"isTesting"],[62,39,79,28],[62,41,79,30],[63,10,80,8,"LogBoxData"],[63,20,80,18],[63,21,80,19,"setDisabled"],[63,32,80,30],[63,33,80,31],[63,37,80,35],[63,38,80,36],[64,8,81,6],[65,8,83,6,"RCTLog"],[65,23,83,12],[65,24,83,13,"setWarningHandler"],[65,41,83,30],[65,42,83,31],[65,54,83,44],[66,10,84,8,"registerWarning"],[66,25,84,23],[66,26,84,23,"apply"],[66,31,84,23],[66,40,84,23,"arguments"],[66,49,84,31],[66,50,84,32],[67,8,85,6],[67,9,85,7],[67,10,85,8],[68,6,86,4],[68,7,86,5],[69,6,88,4,"uninstall"],[69,15,88,13],[69,26,88,4,"uninstall"],[69,35,88,13,"uninstall"],[69,36,88,13],[69,38,88,22],[70,8,89,6],[70,12,89,10],[70,13,89,11,"isLogBoxInstalled"],[70,30,89,28],[70,32,89,30],[71,10,90,8],[72,8,91,6],[73,8,93,6,"isLogBoxInstalled"],[73,25,93,23],[73,28,93,26],[73,33,93,31],[75,8,95,6],[76,8,96,6],[77,8,97,6],[78,8,98,6],[79,8,99,6,"consoleErrorImpl"],[79,24,99,22],[79,27,99,25,"originalConsoleError"],[79,47,99,45],[80,8,100,6,"consoleWarnImpl"],[80,23,100,21],[80,26,100,24,"originalConsoleWarn"],[80,45,100,43],[81,6,101,4],[81,7,101,5],[82,6,103,4,"isInstalled"],[82,17,103,15],[82,28,103,4,"isInstalled"],[82,39,103,15,"isInstalled"],[82,40,103,15],[82,42,103,27],[83,8,104,6],[83,15,104,13,"isLogBoxInstalled"],[83,32,104,30],[84,6,105,4],[84,7,105,5],[85,6,107,4,"ignoreLogs"],[85,16,107,14],[85,27,107,4,"ignoreLogs"],[85,37,107,14,"ignoreLogs"],[85,38,107,15,"patterns"],[85,46,107,54],[85,48,107,62],[86,8,108,6,"LogBoxData"],[86,18,108,16],[86,19,108,17,"addIgnorePatterns"],[86,36,108,34],[86,37,108,35,"patterns"],[86,45,108,43],[86,46,108,44],[87,6,109,4],[87,7,109,5],[88,6,111,4,"ignoreAllLogs"],[88,19,111,17],[88,30,111,4,"ignoreAllLogs"],[88,43,111,17,"ignoreAllLogs"],[88,44,111,18,"value"],[88,49,111,34],[88,51,111,42],[89,8,112,6,"LogBoxData"],[89,18,112,16],[89,19,112,17,"setDisabled"],[89,30,112,28],[89,31,112,29,"value"],[89,36,112,34],[89,40,112,38],[89,44,112,42],[89,47,112,45],[89,51,112,49],[89,54,112,52,"value"],[89,59,112,57],[89,60,112,58],[90,6,113,4],[90,7,113,5],[91,6,115,4,"clearAllLogs"],[91,18,115,16],[91,29,115,4,"clearAllLogs"],[91,41,115,16,"clearAllLogs"],[91,42,115,16],[91,44,115,25],[92,8,116,6,"LogBoxData"],[92,18,116,16],[92,19,116,17,"clear"],[92,24,116,22],[92,25,116,23],[92,26,116,24],[93,6,117,4],[93,7,117,5],[94,6,119,4,"addLog"],[94,12,119,10],[94,23,119,4,"addLog"],[94,29,119,10,"addLog"],[94,30,119,11,"log"],[94,33,119,23],[94,35,119,31],[95,8,120,6],[95,12,120,10,"isLogBoxInstalled"],[95,29,120,27],[95,31,120,29],[96,10,121,8,"LogBoxData"],[96,20,121,18],[96,21,121,19,"addLog"],[96,27,121,25],[96,28,121,26,"log"],[96,31,121,29],[96,32,121,30],[97,8,122,6],[98,6,123,4],[98,7,123,5],[99,6,125,4,"addException"],[99,18,125,16],[99,29,125,4,"addException"],[99,41,125,16,"addException"],[99,42,125,17,"error"],[99,47,125,45],[99,49,125,53],[100,8,126,6],[100,12,126,10,"isLogBoxInstalled"],[100,29,126,27],[100,31,126,29],[101,10,127,8,"LogBoxData"],[101,20,127,18],[101,21,127,19,"addException"],[101,33,127,31],[101,34,127,32,"error"],[101,39,127,37],[101,40,127,38],[102,8,128,6],[103,6,129,4],[104,4,130,2],[104,5,130,3],[105,4,132,2],[105,8,132,8,"isRCTLogAdviceWarning"],[105,29,132,29],[105,32,132,32],[105,41,132,8,"isRCTLogAdviceWarning"],[105,62,132,29,"isRCTLogAdviceWarning"],[105,63,132,29],[105,65,132,59],[106,6,132,59],[106,15,132,59,"_len"],[106,19,132,59],[106,22,132,59,"arguments"],[106,31,132,59],[106,32,132,59,"length"],[106,38,132,59],[106,40,132,36,"args"],[106,44,132,40],[106,51,132,40,"Array"],[106,56,132,40],[106,57,132,40,"_len"],[106,61,132,40],[106,64,132,40,"_key"],[106,68,132,40],[106,74,132,40,"_key"],[106,78,132,40],[106,81,132,40,"_len"],[106,85,132,40],[106,87,132,40,"_key"],[106,91,132,40],[107,8,132,36,"args"],[107,12,132,40],[107,13,132,40,"_key"],[107,17,132,40],[107,21,132,40,"arguments"],[107,30,132,40],[107,31,132,40,"_key"],[107,35,132,40],[108,6,132,40],[109,6,133,4],[110,6,134,4],[111,6,135,4],[111,13,135,11],[111,20,135,18,"args"],[111,24,135,22],[111,25,135,23],[111,26,135,24],[111,27,135,25],[111,32,135,30],[111,40,135,38],[111,44,135,42,"args"],[111,48,135,46],[111,49,135,47],[111,50,135,48],[111,51,135,49],[111,52,135,50,"startsWith"],[111,62,135,60],[111,63,135,61],[111,73,135,71],[111,74,135,72],[112,4,136,2],[112,5,136,3],[113,4,138,2],[113,8,138,8,"isWarningModuleWarning"],[113,30,138,30],[113,33,138,33],[113,42,138,8,"isWarningModuleWarning"],[113,64,138,30,"isWarningModuleWarning"],[113,65,138,30],[113,67,138,60],[114,6,138,60],[114,15,138,60,"_len2"],[114,20,138,60],[114,23,138,60,"arguments"],[114,32,138,60],[114,33,138,60,"length"],[114,39,138,60],[114,41,138,37,"args"],[114,45,138,41],[114,52,138,41,"Array"],[114,57,138,41],[114,58,138,41,"_len2"],[114,63,138,41],[114,66,138,41,"_key2"],[114,71,138,41],[114,77,138,41,"_key2"],[114,82,138,41],[114,85,138,41,"_len2"],[114,90,138,41],[114,92,138,41,"_key2"],[114,97,138,41],[115,8,138,37,"args"],[115,12,138,41],[115,13,138,41,"_key2"],[115,18,138,41],[115,22,138,41,"arguments"],[115,31,138,41],[115,32,138,41,"_key2"],[115,37,138,41],[116,6,138,41],[117,6,139,4],[117,13,139,11],[117,20,139,18,"args"],[117,24,139,22],[117,25,139,23],[117,26,139,24],[117,27,139,25],[117,32,139,30],[117,40,139,38],[117,44,139,42,"args"],[117,48,139,46],[117,49,139,47],[117,50,139,48],[117,51,139,49],[117,52,139,50,"startsWith"],[117,62,139,60],[117,63,139,61],[117,74,139,72],[117,75,139,73],[118,4,140,2],[118,5,140,3],[119,4,142,2],[119,8,142,8,"registerWarning"],[119,23,142,23],[119,26,142,26],[119,35,142,8,"registerWarning"],[119,50,142,23,"registerWarning"],[119,51,142,23],[119,53,142,59],[120,6,142,59],[120,15,142,59,"_len3"],[120,20,142,59],[120,23,142,59,"arguments"],[120,32,142,59],[120,33,142,59,"length"],[120,39,142,59],[120,41,142,30,"args"],[120,45,142,34],[120,52,142,34,"Array"],[120,57,142,34],[120,58,142,34,"_len3"],[120,63,142,34],[120,66,142,34,"_key3"],[120,71,142,34],[120,77,142,34,"_key3"],[120,82,142,34],[120,85,142,34,"_len3"],[120,90,142,34],[120,92,142,34,"_key3"],[120,97,142,34],[121,8,142,30,"args"],[121,12,142,34],[121,13,142,34,"_key3"],[121,18,142,34],[121,22,142,34,"arguments"],[121,31,142,34],[121,32,142,34,"_key3"],[121,37,142,34],[122,6,142,34],[123,6,143,4],[124,6,144,4],[124,10,144,8,"LogBoxData"],[124,20,144,18],[124,21,144,19,"isLogBoxErrorMessage"],[124,41,144,39],[124,42,144,40,"String"],[124,48,144,46],[124,49,144,47,"args"],[124,53,144,51],[124,54,144,52],[124,55,144,53],[124,56,144,54],[124,57,144,55],[124,58,144,56],[124,60,144,58],[125,8,145,6,"originalConsoleError"],[125,28,145,26],[125,29,145,26,"apply"],[125,34,145,26],[125,43,145,30,"args"],[125,47,145,34],[125,48,145,35],[126,8,146,6],[127,6,147,4],[127,7,147,5],[127,13,147,11],[128,8,148,6],[129,8,149,6,"originalConsoleWarn"],[129,27,149,25],[129,28,149,25,"apply"],[129,33,149,25],[129,42,149,29,"args"],[129,46,149,33],[129,47,149,34],[130,6,150,4],[131,6,152,4],[131,10,152,8],[132,8,153,6],[132,12,153,10],[132,13,153,11,"isRCTLogAdviceWarning"],[132,34,153,32],[132,35,153,32,"apply"],[132,40,153,32],[132,49,153,36,"args"],[132,53,153,40],[132,54,153,41],[132,56,153,43],[133,10,154,8],[133,14,154,8,"_parseLogBoxLog"],[133,29,154,8],[133,32,155,10,"parseLogBoxLog"],[133,46,155,24],[133,47,155,25,"args"],[133,51,155,29],[133,52,155,30],[134,12,154,15,"category"],[134,20,154,23],[134,23,154,23,"_parseLogBoxLog"],[134,38,154,23],[134,39,154,15,"category"],[134,47,154,23],[135,12,154,25,"message"],[135,19,154,32],[135,22,154,32,"_parseLogBoxLog"],[135,37,154,32],[135,38,154,25,"message"],[135,45,154,32],[136,12,154,34,"componentStack"],[136,26,154,48],[136,29,154,48,"_parseLogBoxLog"],[136,44,154,48],[136,45,154,34,"componentStack"],[136,59,154,48],[137,12,154,50,"componentStackType"],[137,30,154,68],[137,33,154,68,"_parseLogBoxLog"],[137,48,154,68],[137,49,154,50,"componentStackType"],[137,67,154,68],[138,10,157,8],[138,14,157,12],[138,15,157,13,"LogBoxData"],[138,25,157,23],[138,26,157,24,"isMessageIgnored"],[138,42,157,40],[138,43,157,41,"message"],[138,50,157,48],[138,51,157,49,"content"],[138,58,157,56],[138,59,157,57],[138,61,157,59],[139,12,158,10,"LogBoxData"],[139,22,158,20],[139,23,158,21,"addLog"],[139,29,158,27],[139,30,158,28],[140,14,159,12,"level"],[140,19,159,17],[140,21,159,19],[140,27,159,25],[141,14,160,12,"category"],[141,22,160,20],[141,24,160,12,"category"],[141,32,160,20],[142,14,161,12,"message"],[142,21,161,19],[142,23,161,12,"message"],[142,30,161,19],[143,14,162,12,"componentStack"],[143,28,162,26],[143,30,162,12,"componentStack"],[143,44,162,26],[144,14,163,12,"componentStackType"],[144,32,163,30],[144,34,163,12,"componentStackType"],[145,12,164,10],[145,13,164,11],[145,14,164,12],[146,10,165,8],[147,8,166,6],[148,6,167,4],[148,7,167,5],[148,8,167,6],[148,15,167,13,"err"],[148,18,167,16],[148,20,167,18],[149,8,168,6,"LogBoxData"],[149,18,168,16],[149,19,168,17,"reportLogBoxError"],[149,36,168,34],[149,37,168,35,"err"],[149,40,168,38],[149,41,168,39],[150,6,169,4],[151,4,170,2],[151,5,170,3],[153,4,172,2],[154,0,173,0],[155,4,174,2],[155,8,174,8,"registerError"],[155,21,174,21],[155,24,174,24],[155,33,174,8,"registerError"],[155,46,174,21,"registerError"],[155,47,174,21],[155,49,174,43],[156,6,174,43],[156,15,174,43,"_len4"],[156,20,174,43],[156,23,174,43,"arguments"],[156,32,174,43],[156,33,174,43,"length"],[156,39,174,43],[156,41,174,28,"args"],[156,45,174,32],[156,52,174,32,"Array"],[156,57,174,32],[156,58,174,32,"_len4"],[156,63,174,32],[156,66,174,32,"_key4"],[156,71,174,32],[156,77,174,32,"_key4"],[156,82,174,32],[156,85,174,32,"_len4"],[156,90,174,32],[156,92,174,32,"_key4"],[156,97,174,32],[157,8,174,28,"args"],[157,12,174,32],[157,13,174,32,"_key4"],[157,18,174,32],[157,22,174,32,"arguments"],[157,31,174,32],[157,32,174,32,"_key4"],[157,37,174,32],[158,6,174,32],[159,6,175,4],[160,6,176,4],[160,10,176,8,"LogBoxData"],[160,20,176,18],[160,21,176,19,"isLogBoxErrorMessage"],[160,41,176,39],[160,42,176,40,"args"],[160,46,176,44],[160,47,176,45],[160,48,176,46],[160,49,176,47],[160,50,176,48],[160,52,176,50],[161,8,177,6,"originalConsoleError"],[161,28,177,26],[161,29,177,26,"apply"],[161,34,177,26],[161,43,177,30,"args"],[161,47,177,34],[161,48,177,35],[162,8,178,6],[163,6,179,4],[164,6,181,4],[164,10,181,8],[165,8,182,6],[165,12,182,10],[165,13,182,11,"isWarningModuleWarning"],[165,35,182,33],[165,36,182,33,"apply"],[165,41,182,33],[165,50,182,37,"args"],[165,54,182,41],[165,55,182,42],[165,59,182,46],[165,60,182,47],[165,64,182,47,"hasComponentStack"],[165,94,182,47],[165,95,182,47,"hasComponentStack"],[165,137,182,64],[165,139,182,65,"args"],[165,143,182,69],[165,144,182,70],[165,146,182,72],[166,10,183,8],[167,10,184,8],[168,10,185,8],[169,10,186,8],[170,10,187,8],[171,10,188,8],[172,10,189,8],[173,10,190,8],[174,10,191,8],[175,10,192,8],[176,10,193,8],[177,10,194,8],[178,10,195,8],[179,10,196,8],[180,10,197,8],[181,10,198,8,"originalConsoleError"],[181,30,198,28],[181,31,198,28,"apply"],[181,36,198,28],[181,45,198,32,"args"],[181,49,198,36],[181,50,198,37],[182,10,199,8],[183,8,200,6],[184,8,202,6],[184,12,202,12,"format"],[184,18,202,18],[184,21,202,21,"args"],[184,25,202,25],[184,26,202,26],[184,27,202,27],[184,28,202,28],[184,29,202,29,"replace"],[184,36,202,36],[184,37,202,37],[184,48,202,48],[184,50,202,50],[184,52,202,52],[184,53,202,53],[185,8,203,6],[185,12,203,12,"filterResult"],[185,24,203,24],[185,27,203,27,"LogBoxData"],[185,37,203,37],[185,38,203,38,"checkWarningFilter"],[185,56,203,56],[185,57,203,57,"format"],[185,63,203,63],[185,64,203,64],[186,8,204,6],[186,12,204,10,"level"],[186,17,204,15],[186,20,204,18],[186,27,204,25],[187,8,205,6],[187,12,205,10,"filterResult"],[187,24,205,22],[187,25,205,23,"monitorEvent"],[187,37,205,35],[187,42,205,40],[187,61,205,59],[187,63,205,61],[188,10,206,8],[188,14,206,12,"filterResult"],[188,26,206,24],[188,27,206,25,"suppressCompletely"],[188,45,206,43],[188,47,206,45],[189,12,207,10],[190,10,208,8],[191,10,210,8],[191,14,210,12,"filterResult"],[191,26,210,24],[191,27,210,25,"suppressDialog_LEGACY"],[191,48,210,46],[191,53,210,51],[191,57,210,55],[191,59,210,57],[192,12,211,10,"level"],[192,17,211,15],[192,20,211,18],[192,26,211,24],[193,10,212,8],[193,11,212,9],[193,17,212,15],[193,21,212,19,"filterResult"],[193,33,212,31],[193,34,212,32,"forceDialogImmediately"],[193,56,212,54],[193,61,212,59],[193,65,212,63],[193,67,212,65],[194,12,213,10,"level"],[194,17,213,15],[194,20,213,18],[194,27,213,25],[194,28,213,26],[194,29,213,27],[195,10,214,8],[196,8,215,6],[198,8,217,6],[199,8,218,6],[200,8,219,6],[201,8,220,6,"args"],[201,12,220,10],[201,13,220,11],[201,14,220,12],[201,15,220,13],[201,18,220,16],[201,30,220,28,"filterResult"],[201,42,220,40],[201,43,220,41,"finalFormat"],[201,54,220,52],[201,56,220,54],[202,8,221,6],[202,12,221,6,"_parseLogBoxLog2"],[202,28,221,6],[202,31,222,8,"parseLogBoxLog"],[202,45,222,22],[202,46,222,23,"args"],[202,50,222,27],[202,51,222,28],[203,10,221,13,"category"],[203,18,221,21],[203,21,221,21,"_parseLogBoxLog2"],[203,37,221,21],[203,38,221,13,"category"],[203,46,221,21],[204,10,221,23,"message"],[204,17,221,30],[204,20,221,30,"_parseLogBoxLog2"],[204,36,221,30],[204,37,221,23,"message"],[204,44,221,30],[205,10,221,32,"componentStack"],[205,24,221,46],[205,27,221,46,"_parseLogBoxLog2"],[205,43,221,46],[205,44,221,32,"componentStack"],[205,58,221,46],[206,10,221,48,"componentStackType"],[206,28,221,66],[206,31,221,66,"_parseLogBoxLog2"],[206,47,221,66],[206,48,221,48,"componentStackType"],[206,66,221,66],[208,8,224,6],[209,8,225,6],[210,8,226,6],[210,12,226,12,"interpolated"],[210,24,226,24],[210,27,226,27,"parseInterpolation"],[210,45,226,45],[210,46,226,46,"args"],[210,50,226,50],[210,51,226,51],[211,8,227,6,"originalConsoleError"],[211,28,227,26],[211,29,227,27,"interpolated"],[211,41,227,39],[211,42,227,40,"message"],[211,49,227,47],[211,50,227,48,"content"],[211,57,227,55],[211,58,227,56],[212,8,229,6],[212,12,229,10],[212,13,229,11,"LogBoxData"],[212,23,229,21],[212,24,229,22,"isMessageIgnored"],[212,40,229,38],[212,41,229,39,"message"],[212,48,229,46],[212,49,229,47,"content"],[212,56,229,54],[212,57,229,55],[212,59,229,57],[213,10,230,8,"LogBoxData"],[213,20,230,18],[213,21,230,19,"addLog"],[213,27,230,25],[213,28,230,26],[214,12,231,10,"level"],[214,17,231,15],[214,19,231,10,"level"],[214,24,231,15],[215,12,232,10,"category"],[215,20,232,18],[215,22,232,10,"category"],[215,30,232,18],[216,12,233,10,"message"],[216,19,233,17],[216,21,233,10,"message"],[216,28,233,17],[217,12,234,10,"componentStack"],[217,26,234,24],[217,28,234,10,"componentStack"],[217,42,234,24],[218,12,235,10,"componentStackType"],[218,30,235,28],[218,32,235,10,"componentStackType"],[219,10,236,8],[219,11,236,9],[219,12,236,10],[220,8,237,6],[221,6,238,4],[221,7,238,5],[221,8,238,6],[221,15,238,13,"err"],[221,18,238,16],[221,20,238,18],[222,8,239,6,"LogBoxData"],[222,18,239,16],[222,19,239,17,"reportLogBoxError"],[222,36,239,34],[222,37,239,35,"err"],[222,40,239,38],[222,41,239,39],[223,6,240,4],[224,4,241,2],[224,5,241,3],[225,2,242,0],[225,3,242,1],[225,9,242,7],[226,4,243,2,"LogBox"],[226,10,243,8],[226,13,243,11],[227,6,244,4,"install"],[227,13,244,11],[227,24,244,4,"install"],[227,31,244,11,"install"],[227,32,244,11],[227,34,244,20],[228,8,245,6],[229,6,245,6],[229,7,246,5],[230,6,248,4,"uninstall"],[230,15,248,13],[230,26,248,4,"uninstall"],[230,35,248,13,"uninstall"],[230,36,248,13],[230,38,248,22],[231,8,249,6],[232,6,249,6],[232,7,250,5],[233,6,252,4,"isInstalled"],[233,17,252,15],[233,28,252,4,"isInstalled"],[233,39,252,15,"isInstalled"],[233,40,252,15],[233,42,252,27],[234,8,253,6],[234,15,253,13],[234,20,253,18],[235,6,254,4],[235,7,254,5],[236,6,256,4,"ignoreLogs"],[236,16,256,14],[236,27,256,4,"ignoreLogs"],[236,37,256,14,"ignoreLogs"],[236,38,256,15,"patterns"],[236,46,256,54],[236,48,256,62],[237,8,257,6],[238,6,257,6],[238,7,258,5],[239,6,260,4,"ignoreAllLogs"],[239,19,260,17],[239,30,260,4,"ignoreAllLogs"],[239,43,260,17,"ignoreAllLogs"],[239,44,260,18,"value"],[239,49,260,34],[239,51,260,42],[240,8,261,6],[241,6,261,6],[241,7,262,5],[242,6,264,4,"clearAllLogs"],[242,18,264,16],[242,29,264,4,"clearAllLogs"],[242,41,264,16,"clearAllLogs"],[242,42,264,16],[242,44,264,25],[243,8,265,6],[244,6,265,6],[244,7,266,5],[245,6,268,4,"addLog"],[245,12,268,10],[245,23,268,4,"addLog"],[245,29,268,10,"addLog"],[245,30,268,11,"log"],[245,33,268,23],[245,35,268,31],[246,8,269,6],[247,6,269,6],[247,7,270,5],[248,6,272,4,"addException"],[248,18,272,16],[248,29,272,4,"addException"],[248,41,272,16,"addException"],[248,42,272,17,"error"],[248,47,272,45],[248,49,272,53],[249,8,273,6],[250,6,273,6],[251,4,275,2],[251,5,275,3],[252,2,276,0],[253,2,276,1],[253,6,276,1,"_default"],[253,14,276,1],[253,17,276,1,"exports"],[253,24,276,1],[253,25,276,1,"default"],[253,32,276,1],[253,35,278,16,"LogBox"],[253,41,278,22],[254,0,278,22],[254,3]],"functionMap":{"names":["<global>","install","console.error","console.warn","RCTLog.setWarningHandler$argument_0","uninstall","isInstalled","ignoreLogs","ignoreAllLogs","clearAllLogs","addLog","addException","isRCTLogAdviceWarning","isWarningModuleWarning","registerWarning","registerError"],"mappings":"AAA;IC+C;wBCmB;SDE;uBEE;SFE;+BGU;OHE;KDC;IKE;KLa;IME;KNE;IOE;KPE;IQE;KRE;ISE;KTE;IUE;KVI;IWE;KXI;gCYG;GZI;iCaE;GbE;0BcE;Gd4B;wBeI;GfmE;ICG;KDE;IKE;KLE;IME;KNE;IOE;KPE;IQE;KRE;ISE;KTE;IUE;KVE;IWE;KXE"}},"type":"js/module"}]}