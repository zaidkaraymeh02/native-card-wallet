{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":122,"column":0,"index":3806}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"invariant","data":{"asyncType":null,"locs":[{"start":{"line":11,"column":0,"index":222},"end":{"line":11,"column":34,"index":256}}],"key":"Fzi/BpZws2YooIGJ9b6u0HJtuks="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.createStringifySafeWithLimits = createStringifySafeWithLimits;\n  exports.default = void 0;\n  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"invariant\"));\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * @format\n   * \n   */\n\n  /**\n   * Tries to stringify with JSON.stringify and toString, but catches exceptions\n   * (e.g. from circular objects) and always returns a string and never throws.\n   */\n  function createStringifySafeWithLimits(limits) {\n    var _limits$maxDepth = limits.maxDepth,\n      maxDepth = _limits$maxDepth === void 0 ? Number.POSITIVE_INFINITY : _limits$maxDepth,\n      _limits$maxStringLimi = limits.maxStringLimit,\n      maxStringLimit = _limits$maxStringLimi === void 0 ? Number.POSITIVE_INFINITY : _limits$maxStringLimi,\n      _limits$maxArrayLimit = limits.maxArrayLimit,\n      maxArrayLimit = _limits$maxArrayLimit === void 0 ? Number.POSITIVE_INFINITY : _limits$maxArrayLimit,\n      _limits$maxObjectKeys = limits.maxObjectKeysLimit,\n      maxObjectKeysLimit = _limits$maxObjectKeys === void 0 ? Number.POSITIVE_INFINITY : _limits$maxObjectKeys;\n    var stack = [];\n    /* $FlowFixMe[missing-this-annot] The 'this' type annotation(s) required by\n     * Flow's LTI update could not be added via codemod */\n    function replacer(key, value) {\n      while (stack.length && this !== stack[0]) {\n        stack.shift();\n      }\n      if (typeof value === 'string') {\n        var truncatedString = '...(truncated)...';\n        if (value.length > maxStringLimit + truncatedString.length) {\n          return value.substring(0, maxStringLimit) + truncatedString;\n        }\n        return value;\n      }\n      if (typeof value !== 'object' || value === null) {\n        return value;\n      }\n      var retval = value;\n      if (Array.isArray(value)) {\n        if (stack.length >= maxDepth) {\n          retval = `[ ... array with ${value.length} values ... ]`;\n        } else if (value.length > maxArrayLimit) {\n          retval = value.slice(0, maxArrayLimit).concat([`... extra ${value.length - maxArrayLimit} values truncated ...`]);\n        }\n      } else {\n        // Add refinement after Array.isArray call.\n        (0, _invariant.default)(typeof value === 'object', 'This was already found earlier');\n        var keys = Object.keys(value);\n        if (stack.length >= maxDepth) {\n          retval = `{ ... object with ${keys.length} keys ... }`;\n        } else if (keys.length > maxObjectKeysLimit) {\n          // Return a sample of the keys.\n          retval = {};\n          for (var k of keys.slice(0, maxObjectKeysLimit)) {\n            retval[k] = value[k];\n          }\n          var truncatedKey = '...(truncated keys)...';\n          retval[truncatedKey] = keys.length - maxObjectKeysLimit;\n        }\n      }\n      stack.unshift(retval);\n      return retval;\n    }\n    return function stringifySafe(arg) {\n      if (arg === undefined) {\n        return 'undefined';\n      } else if (arg === null) {\n        return 'null';\n      } else if (typeof arg === 'function') {\n        try {\n          return arg.toString();\n        } catch (e) {\n          return '[function unknown]';\n        }\n      } else if (arg instanceof Error) {\n        return arg.name + ': ' + arg.message;\n      } else {\n        // Perform a try catch, just in case the object has a circular\n        // reference or stringify throws for some other reason.\n        try {\n          var ret = JSON.stringify(arg, replacer);\n          if (ret === undefined) {\n            return '[\"' + typeof arg + '\" failed to stringify]';\n          }\n          return ret;\n        } catch (e) {\n          if (typeof arg.toString === 'function') {\n            try {\n              // $FlowFixMe[incompatible-use] : toString shouldn't take any arguments in general.\n              return arg.toString();\n            } catch (E) {}\n          }\n        }\n      }\n      return '[\"' + typeof arg + '\" failed to stringify]';\n    };\n  }\n  var stringifySafe = createStringifySafeWithLimits({\n    maxDepth: 10,\n    maxStringLimit: 100,\n    maxArrayLimit: 50,\n    maxObjectKeysLimit: 50\n  });\n  var _default = exports.default = stringifySafe;\n});","lineCount":116,"map":[[8,2,11,0],[8,6,11,0,"_invariant"],[8,16,11,0],[8,19,11,0,"_interopRequireDefault"],[8,41,11,0],[8,42,11,0,"_$$_REQUIRE"],[8,53,11,0],[8,54,11,0,"_dependencyMap"],[8,68,11,0],[9,2,1,0],[10,0,2,0],[11,0,3,0],[12,0,4,0],[13,0,5,0],[14,0,6,0],[15,0,7,0],[16,0,8,0],[17,0,9,0],[19,2,13,0],[20,0,14,0],[21,0,15,0],[22,0,16,0],[23,2,17,7],[23,11,17,16,"createStringifySafeWithLimits"],[23,40,17,45,"createStringifySafeWithLimits"],[23,41,17,46,"limits"],[23,47,22,2],[23,49,22,21],[24,4,23,2],[24,8,23,2,"_limits$maxDepth"],[24,24,23,2],[24,27,28,6,"limits"],[24,33,28,12],[24,34,24,4,"maxDepth"],[24,42,24,12],[25,6,24,4,"maxDepth"],[25,14,24,12],[25,17,24,12,"_limits$maxDepth"],[25,33,24,12],[25,47,24,15,"Number"],[25,53,24,21],[25,54,24,22,"POSITIVE_INFINITY"],[25,71,24,39],[25,74,24,39,"_limits$maxDepth"],[25,90,24,39],[26,6,24,39,"_limits$maxStringLimi"],[26,27,24,39],[26,30,28,6,"limits"],[26,36,28,12],[26,37,25,4,"maxStringLimit"],[26,51,25,18],[27,6,25,4,"maxStringLimit"],[27,20,25,18],[27,23,25,18,"_limits$maxStringLimi"],[27,44,25,18],[27,58,25,21,"Number"],[27,64,25,27],[27,65,25,28,"POSITIVE_INFINITY"],[27,82,25,45],[27,85,25,45,"_limits$maxStringLimi"],[27,106,25,45],[28,6,25,45,"_limits$maxArrayLimit"],[28,27,25,45],[28,30,28,6,"limits"],[28,36,28,12],[28,37,26,4,"maxArrayLimit"],[28,50,26,17],[29,6,26,4,"maxArrayLimit"],[29,19,26,17],[29,22,26,17,"_limits$maxArrayLimit"],[29,43,26,17],[29,57,26,20,"Number"],[29,63,26,26],[29,64,26,27,"POSITIVE_INFINITY"],[29,81,26,44],[29,84,26,44,"_limits$maxArrayLimit"],[29,105,26,44],[30,6,26,44,"_limits$maxObjectKeys"],[30,27,26,44],[30,30,28,6,"limits"],[30,36,28,12],[30,37,27,4,"maxObjectKeysLimit"],[30,55,27,22],[31,6,27,4,"maxObjectKeysLimit"],[31,24,27,22],[31,27,27,22,"_limits$maxObjectKeys"],[31,48,27,22],[31,62,27,25,"Number"],[31,68,27,31],[31,69,27,32,"POSITIVE_INFINITY"],[31,86,27,49],[31,89,27,49,"_limits$maxObjectKeys"],[31,110,27,49],[32,4,29,2],[32,8,29,8,"stack"],[32,13,29,27],[32,16,29,30],[32,18,29,32],[33,4,30,2],[34,0,31,0],[35,4,32,2],[35,13,32,11,"replacer"],[35,21,32,19,"replacer"],[35,22,32,20,"key"],[35,25,32,31],[35,27,32,33,"value"],[35,32,32,45],[35,34,32,54],[36,6,33,4],[36,13,33,11,"stack"],[36,18,33,16],[36,19,33,17,"length"],[36,25,33,23],[36,29,33,27],[36,33,33,31],[36,38,33,36,"stack"],[36,43,33,41],[36,44,33,42],[36,45,33,43],[36,46,33,44],[36,48,33,46],[37,8,34,6,"stack"],[37,13,34,11],[37,14,34,12,"shift"],[37,19,34,17],[37,20,34,18],[37,21,34,19],[38,6,35,4],[39,6,37,4],[39,10,37,8],[39,17,37,15,"value"],[39,22,37,20],[39,27,37,25],[39,35,37,33],[39,37,37,35],[40,8,38,6],[40,12,38,12,"truncatedString"],[40,27,38,27],[40,30,38,30],[40,49,38,49],[41,8,39,6],[41,12,39,10,"value"],[41,17,39,15],[41,18,39,16,"length"],[41,24,39,22],[41,27,39,25,"maxStringLimit"],[41,41,39,39],[41,44,39,42,"truncatedString"],[41,59,39,57],[41,60,39,58,"length"],[41,66,39,64],[41,68,39,66],[42,10,40,8],[42,17,40,15,"value"],[42,22,40,20],[42,23,40,21,"substring"],[42,32,40,30],[42,33,40,31],[42,34,40,32],[42,36,40,34,"maxStringLimit"],[42,50,40,48],[42,51,40,49],[42,54,40,52,"truncatedString"],[42,69,40,67],[43,8,41,6],[44,8,42,6],[44,15,42,13,"value"],[44,20,42,18],[45,6,43,4],[46,6,44,4],[46,10,44,8],[46,17,44,15,"value"],[46,22,44,20],[46,27,44,25],[46,35,44,33],[46,39,44,37,"value"],[46,44,44,42],[46,49,44,47],[46,53,44,51],[46,55,44,53],[47,8,45,6],[47,15,45,13,"value"],[47,20,45,18],[48,6,46,4],[49,6,48,4],[49,10,48,8,"retval"],[49,16,48,21],[49,19,48,24,"value"],[49,24,48,29],[50,6,49,4],[50,10,49,8,"Array"],[50,15,49,13],[50,16,49,14,"isArray"],[50,23,49,21],[50,24,49,22,"value"],[50,29,49,27],[50,30,49,28],[50,32,49,30],[51,8,50,6],[51,12,50,10,"stack"],[51,17,50,15],[51,18,50,16,"length"],[51,24,50,22],[51,28,50,26,"maxDepth"],[51,36,50,34],[51,38,50,36],[52,10,51,8,"retval"],[52,16,51,14],[52,19,51,17],[52,39,51,37,"value"],[52,44,51,42],[52,45,51,43,"length"],[52,51,51,49],[52,66,51,64],[53,8,52,6],[53,9,52,7],[53,15,52,13],[53,19,52,17,"value"],[53,24,52,22],[53,25,52,23,"length"],[53,31,52,29],[53,34,52,32,"maxArrayLimit"],[53,47,52,45],[53,49,52,47],[54,10,53,8,"retval"],[54,16,53,14],[54,19,53,17,"value"],[54,24,53,22],[54,25,54,11,"slice"],[54,30,54,16],[54,31,54,17],[54,32,54,18],[54,34,54,20,"maxArrayLimit"],[54,47,54,33],[54,48,54,34],[54,49,55,11,"concat"],[54,55,55,17],[54,56,55,18],[54,57,56,12],[54,70,56,25,"value"],[54,75,56,30],[54,76,56,31,"length"],[54,82,56,37],[54,85,56,40,"maxArrayLimit"],[54,98,56,53],[54,121,56,76],[54,122,57,11],[54,123,57,12],[55,8,58,6],[56,6,59,4],[56,7,59,5],[56,13,59,11],[57,8,60,6],[58,8,61,6],[58,12,61,6,"invariant"],[58,30,61,15],[58,32,61,16],[58,39,61,23,"value"],[58,44,61,28],[58,49,61,33],[58,57,61,41],[58,59,61,43],[58,91,61,75],[58,92,61,76],[59,8,62,6],[59,12,62,10,"keys"],[59,16,62,14],[59,19,62,17,"Object"],[59,25,62,23],[59,26,62,24,"keys"],[59,30,62,28],[59,31,62,29,"value"],[59,36,62,34],[59,37,62,35],[60,8,63,6],[60,12,63,10,"stack"],[60,17,63,15],[60,18,63,16,"length"],[60,24,63,22],[60,28,63,26,"maxDepth"],[60,36,63,34],[60,38,63,36],[61,10,64,8,"retval"],[61,16,64,14],[61,19,64,17],[61,40,64,38,"keys"],[61,44,64,42],[61,45,64,43,"length"],[61,51,64,49],[61,64,64,62],[62,8,65,6],[62,9,65,7],[62,15,65,13],[62,19,65,17,"keys"],[62,23,65,21],[62,24,65,22,"length"],[62,30,65,28],[62,33,65,31,"maxObjectKeysLimit"],[62,51,65,49],[62,53,65,51],[63,10,66,8],[64,10,67,8,"retval"],[64,16,67,14],[64,19,67,18],[64,20,67,19],[64,21,67,40],[65,10,68,8],[65,15,68,13],[65,19,68,17,"k"],[65,20,68,18],[65,24,68,22,"keys"],[65,28,68,26],[65,29,68,27,"slice"],[65,34,68,32],[65,35,68,33],[65,36,68,34],[65,38,68,36,"maxObjectKeysLimit"],[65,56,68,54],[65,57,68,55],[65,59,68,57],[66,12,69,10,"retval"],[66,18,69,16],[66,19,69,17,"k"],[66,20,69,18],[66,21,69,19],[66,24,69,22,"value"],[66,29,69,27],[66,30,69,28,"k"],[66,31,69,29],[66,32,69,30],[67,10,70,8],[68,10,71,8],[68,14,71,14,"truncatedKey"],[68,26,71,26],[68,29,71,29],[68,53,71,53],[69,10,72,8,"retval"],[69,16,72,14],[69,17,72,15,"truncatedKey"],[69,29,72,27],[69,30,72,28],[69,33,72,31,"keys"],[69,37,72,35],[69,38,72,36,"length"],[69,44,72,42],[69,47,72,45,"maxObjectKeysLimit"],[69,65,72,63],[70,8,73,6],[71,6,74,4],[72,6,75,4,"stack"],[72,11,75,9],[72,12,75,10,"unshift"],[72,19,75,17],[72,20,75,18,"retval"],[72,26,75,24],[72,27,75,25],[73,6,76,4],[73,13,76,11,"retval"],[73,19,76,17],[74,4,77,2],[75,4,79,2],[75,11,79,9],[75,20,79,18,"stringifySafe"],[75,33,79,31,"stringifySafe"],[75,34,79,32,"arg"],[75,37,79,42],[75,39,79,52],[76,6,80,4],[76,10,80,8,"arg"],[76,13,80,11],[76,18,80,16,"undefined"],[76,27,80,25],[76,29,80,27],[77,8,81,6],[77,15,81,13],[77,26,81,24],[78,6,82,4],[78,7,82,5],[78,13,82,11],[78,17,82,15,"arg"],[78,20,82,18],[78,25,82,23],[78,29,82,27],[78,31,82,29],[79,8,83,6],[79,15,83,13],[79,21,83,19],[80,6,84,4],[80,7,84,5],[80,13,84,11],[80,17,84,15],[80,24,84,22,"arg"],[80,27,84,25],[80,32,84,30],[80,42,84,40],[80,44,84,42],[81,8,85,6],[81,12,85,10],[82,10,86,8],[82,17,86,15,"arg"],[82,20,86,18],[82,21,86,19,"toString"],[82,29,86,27],[82,30,86,28],[82,31,86,29],[83,8,87,6],[83,9,87,7],[83,10,87,8],[83,17,87,15,"e"],[83,18,87,16],[83,20,87,18],[84,10,88,8],[84,17,88,15],[84,37,88,35],[85,8,89,6],[86,6,90,4],[86,7,90,5],[86,13,90,11],[86,17,90,15,"arg"],[86,20,90,18],[86,32,90,30,"Error"],[86,37,90,35],[86,39,90,37],[87,8,91,6],[87,15,91,13,"arg"],[87,18,91,16],[87,19,91,17,"name"],[87,23,91,21],[87,26,91,24],[87,30,91,28],[87,33,91,31,"arg"],[87,36,91,34],[87,37,91,35,"message"],[87,44,91,42],[88,6,92,4],[88,7,92,5],[88,13,92,11],[89,8,93,6],[90,8,94,6],[91,8,95,6],[91,12,95,10],[92,10,96,8],[92,14,96,14,"ret"],[92,17,96,17],[92,20,96,20,"JSON"],[92,24,96,24],[92,25,96,25,"stringify"],[92,34,96,34],[92,35,96,35,"arg"],[92,38,96,38],[92,40,96,40,"replacer"],[92,48,96,48],[92,49,96,49],[93,10,97,8],[93,14,97,12,"ret"],[93,17,97,15],[93,22,97,20,"undefined"],[93,31,97,29],[93,33,97,31],[94,12,98,10],[94,19,98,17],[94,23,98,21],[94,26,98,24],[94,33,98,31,"arg"],[94,36,98,34],[94,39,98,37],[94,63,98,61],[95,10,99,8],[96,10,100,8],[96,17,100,15,"ret"],[96,20,100,18],[97,8,101,6],[97,9,101,7],[97,10,101,8],[97,17,101,15,"e"],[97,18,101,16],[97,20,101,18],[98,10,102,8],[98,14,102,12],[98,21,102,19,"arg"],[98,24,102,22],[98,25,102,23,"toString"],[98,33,102,31],[98,38,102,36],[98,48,102,46],[98,50,102,48],[99,12,103,10],[99,16,103,14],[100,14,104,12],[101,14,105,12],[101,21,105,19,"arg"],[101,24,105,22],[101,25,105,23,"toString"],[101,33,105,31],[101,34,105,32],[101,35,105,33],[102,12,106,10],[102,13,106,11],[102,14,106,12],[102,21,106,19,"E"],[102,22,106,20],[102,24,106,22],[102,25,106,23],[103,10,107,8],[104,8,108,6],[105,6,109,4],[106,6,110,4],[106,13,110,11],[106,17,110,15],[106,20,110,18],[106,27,110,25,"arg"],[106,30,110,28],[106,33,110,31],[106,57,110,55],[107,4,111,2],[107,5,111,3],[108,2,112,0],[109,2,114,0],[109,6,114,6,"stringifySafe"],[109,19,114,36],[109,22,114,39,"createStringifySafeWithLimits"],[109,51,114,68],[109,52,114,69],[110,4,115,2,"maxDepth"],[110,12,115,10],[110,14,115,12],[110,16,115,14],[111,4,116,2,"maxStringLimit"],[111,18,116,16],[111,20,116,18],[111,23,116,21],[112,4,117,2,"maxArrayLimit"],[112,17,117,15],[112,19,117,17],[112,21,117,19],[113,4,118,2,"maxObjectKeysLimit"],[113,22,118,20],[113,24,118,22],[114,2,119,0],[114,3,119,1],[114,4,119,2],[115,2,119,3],[115,6,119,3,"_default"],[115,14,119,3],[115,17,119,3,"exports"],[115,24,119,3],[115,25,119,3,"default"],[115,32,119,3],[115,35,121,15,"stringifySafe"],[115,48,121,28],[116,0,121,28],[116,3]],"functionMap":{"names":["<global>","createStringifySafeWithLimits","replacer","stringifySafe"],"mappings":"AAA;OCgB;ECe;GD6C;SEE;GFgC;CDC"}},"type":"js/module"}]}