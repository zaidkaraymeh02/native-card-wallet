{"dependencies":[{"name":"react-native","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":54,"index":54}}],"key":"XEo4Z+Aarw9Y7I7ZLBt66vGLAVQ="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = adjustFont;\n  exports.width = exports.height = void 0;\n  var _reactNative = _$$_REQUIRE(_dependencyMap[0], \"react-native\");\n  var _Dimensions$get = _reactNative.Dimensions.get(\"window\"),\n    height = exports.height = _Dimensions$get.height,\n    width = exports.width = _Dimensions$get.width;\n  var pixelRatio = _reactNative.PixelRatio.get();\n  /**\n   *\n   * Adjust the font size based on the screen size\n   *\n   * @param   {number}    size   Font size\n   *\n   * @return  {number} Returns adjusted font size\n   */\n  function adjustFont(size) {\n    if (pixelRatio === 2) {\n      // iphone 5s and older Androids\n      if (width < 360) {\n        return size * 0.95;\n      }\n      // iphone 5\n      if (height < 667) {\n        return size;\n      }\n      // iphone 6-6s\n      else if (height >= 667 && height <= 735) {\n        return size * 1.15;\n      }\n      // older phablets\n      return size * 1.25;\n    }\n    if (pixelRatio === 3) {\n      // catch Android font scaling on small machines\n      // where pixel ratio / font scale ratio => 3:3\n      if (width <= 360) {\n        return size;\n      }\n      // Catch other weird android width sizings\n      if (height < 667) {\n        return size * 1.15;\n      }\n      // catch in-between size Androids and scale font up\n      if (height >= 667 && height <= 735) {\n        return size * 1.2;\n      }\n      // catch larger devices\n      // ie iphone 6s plus / 7 plus / mi note\n      return size * 1.27;\n    }\n    if (pixelRatio === 3.5) {\n      // catch Android font scaling on small machines\n      // where pixel ratio / font scale ratio => 3:3\n      if (width <= 360) {\n        return size;\n      }\n      // Catch other smaller android height sizings\n      if (height < 667) {\n        return size * 1.2;\n      }\n      // catch in-between size Androids and scale font up\n      if (height >= 667 && height <= 735) {\n        return size * 1.25;\n      }\n      // catch larger phablet devices\n      return size * 1.4;\n    }\n    // if older device ie pixelRatio !== 2 || 3 || 3.5\n    return size;\n  }\n  //\n});","lineCount":76,"map":[[7,2,1,0],[7,6,1,0,"_reactNative"],[7,18,1,0],[7,21,1,0,"_$$_REQUIRE"],[7,32,1,0],[7,33,1,0,"_dependencyMap"],[7,47,1,0],[8,2,2,0],[8,6,2,0,"_Dimensions$get"],[8,21,2,0],[8,24,2,26,"Dimensions"],[8,47,2,36],[8,48,2,37,"get"],[8,51,2,40],[8,52,2,41],[8,60,2,49],[8,61,2,50],[9,4,2,8,"height"],[9,10,2,14],[9,13,2,14,"exports"],[9,20,2,14],[9,21,2,14,"height"],[9,27,2,14],[9,30,2,14,"_Dimensions$get"],[9,45,2,14],[9,46,2,8,"height"],[9,52,2,14],[10,4,2,16,"width"],[10,9,2,21],[10,12,2,21,"exports"],[10,19,2,21],[10,20,2,21,"width"],[10,25,2,21],[10,28,2,21,"_Dimensions$get"],[10,43,2,21],[10,44,2,16,"width"],[10,49,2,21],[11,2,3,0],[11,6,3,6,"pixelRatio"],[11,16,3,16],[11,19,3,19,"PixelRatio"],[11,42,3,29],[11,43,3,30,"get"],[11,46,3,33],[11,47,3,34],[11,48,3,35],[12,2,4,0],[13,0,5,0],[14,0,6,0],[15,0,7,0],[16,0,8,0],[17,0,9,0],[18,0,10,0],[19,0,11,0],[20,2,12,0],[20,11,12,9,"adjustFont"],[20,21,12,19,"adjustFont"],[20,22,12,20,"size"],[20,26,12,24],[20,28,12,26],[21,4,13,4],[21,8,13,8,"pixelRatio"],[21,18,13,18],[21,23,13,23],[21,24,13,24],[21,26,13,26],[22,6,14,8],[23,6,15,8],[23,10,15,12,"width"],[23,15,15,17],[23,18,15,20],[23,21,15,23],[23,23,15,25],[24,8,16,12],[24,15,16,19,"size"],[24,19,16,23],[24,22,16,26],[24,26,16,30],[25,6,17,8],[26,6,18,8],[27,6,19,8],[27,10,19,12,"height"],[27,16,19,18],[27,19,19,21],[27,22,19,24],[27,24,19,26],[28,8,20,12],[28,15,20,19,"size"],[28,19,20,23],[29,6,21,8],[30,6,22,8],[31,6,22,8],[31,11,23,13],[31,15,23,17,"height"],[31,21,23,23],[31,25,23,27],[31,28,23,30],[31,32,23,34,"height"],[31,38,23,40],[31,42,23,44],[31,45,23,47],[31,47,23,49],[32,8,24,12],[32,15,24,19,"size"],[32,19,24,23],[32,22,24,26],[32,26,24,30],[33,6,25,8],[34,6,26,8],[35,6,27,8],[35,13,27,15,"size"],[35,17,27,19],[35,20,27,22],[35,24,27,26],[36,4,28,4],[37,4,29,4],[37,8,29,8,"pixelRatio"],[37,18,29,18],[37,23,29,23],[37,24,29,24],[37,26,29,26],[38,6,30,8],[39,6,31,8],[40,6,32,8],[40,10,32,12,"width"],[40,15,32,17],[40,19,32,21],[40,22,32,24],[40,24,32,26],[41,8,33,12],[41,15,33,19,"size"],[41,19,33,23],[42,6,34,8],[43,6,35,8],[44,6,36,8],[44,10,36,12,"height"],[44,16,36,18],[44,19,36,21],[44,22,36,24],[44,24,36,26],[45,8,37,12],[45,15,37,19,"size"],[45,19,37,23],[45,22,37,26],[45,26,37,30],[46,6,38,8],[47,6,39,8],[48,6,40,8],[48,10,40,12,"height"],[48,16,40,18],[48,20,40,22],[48,23,40,25],[48,27,40,29,"height"],[48,33,40,35],[48,37,40,39],[48,40,40,42],[48,42,40,44],[49,8,41,12],[49,15,41,19,"size"],[49,19,41,23],[49,22,41,26],[49,25,41,29],[50,6,42,8],[51,6,43,8],[52,6,44,8],[53,6,45,8],[53,13,45,15,"size"],[53,17,45,19],[53,20,45,22],[53,24,45,26],[54,4,46,4],[55,4,47,4],[55,8,47,8,"pixelRatio"],[55,18,47,18],[55,23,47,23],[55,26,47,26],[55,28,47,28],[56,6,48,8],[57,6,49,8],[58,6,50,8],[58,10,50,12,"width"],[58,15,50,17],[58,19,50,21],[58,22,50,24],[58,24,50,26],[59,8,51,12],[59,15,51,19,"size"],[59,19,51,23],[60,6,52,8],[61,6,53,8],[62,6,54,8],[62,10,54,12,"height"],[62,16,54,18],[62,19,54,21],[62,22,54,24],[62,24,54,26],[63,8,55,12],[63,15,55,19,"size"],[63,19,55,23],[63,22,55,26],[63,25,55,29],[64,6,56,8],[65,6,57,8],[66,6,58,8],[66,10,58,12,"height"],[66,16,58,18],[66,20,58,22],[66,23,58,25],[66,27,58,29,"height"],[66,33,58,35],[66,37,58,39],[66,40,58,42],[66,42,58,44],[67,8,59,12],[67,15,59,19,"size"],[67,19,59,23],[67,22,59,26],[67,26,59,30],[68,6,60,8],[69,6,61,8],[70,6,62,8],[70,13,62,15,"size"],[70,17,62,19],[70,20,62,22],[70,23,62,25],[71,4,63,4],[72,4,64,4],[73,4,65,4],[73,11,65,11,"size"],[73,15,65,15],[74,2,66,0],[75,2,67,0],[76,0,67,0],[76,3]],"functionMap":{"names":["<global>","adjustFont"],"mappings":"AAA;ACW;CDsD"}},"type":"js/module"}]}