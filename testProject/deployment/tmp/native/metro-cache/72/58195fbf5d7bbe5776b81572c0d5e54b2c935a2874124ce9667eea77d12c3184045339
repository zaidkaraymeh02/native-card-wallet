{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":206,"column":0,"index":5782}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":206,"column":0,"index":5782}}],"key":"ohGilxjVqjyE1GooDVDt9OYg9x0="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":206,"column":0,"index":5782}}],"key":"V6GYoXnblvuuGHJNMy7MHyaunsU="}},{"name":"../../EventEmitter/NativeEventEmitter","data":{"asyncType":null,"locs":[{"start":{"line":13,"column":0,"index":303},"end":{"line":13,"column":71,"index":374}}],"key":"E+56ZRkowIj+6mmJqmKlacRTrB8="}},{"name":"../../LayoutAnimation/LayoutAnimation","data":{"asyncType":null,"locs":[{"start":{"line":14,"column":0,"index":375},"end":{"line":14,"column":68,"index":443}}],"key":"rF0eAZYaQSJpRXhRRG0wiFGdDOg="}},{"name":"../../Utilities/dismissKeyboard","data":{"asyncType":null,"locs":[{"start":{"line":15,"column":0,"index":444},"end":{"line":15,"column":62,"index":506}}],"key":"5cDgsJwx4GDVbGMAY/1yrQcMJXg="}},{"name":"../../Utilities/Platform","data":{"asyncType":null,"locs":[{"start":{"line":16,"column":0,"index":507},"end":{"line":16,"column":48,"index":555}}],"key":"u8HkMskTipFtyna6raQCNa0ZU48="}},{"name":"./NativeKeyboardObserver","data":{"asyncType":null,"locs":[{"start":{"line":17,"column":0,"index":556},"end":{"line":17,"column":62,"index":618}}],"key":"jpa6TsIld3oXe3obEykJVPtbsvw="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n  var _NativeEventEmitter = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"../../EventEmitter/NativeEventEmitter\"));\n  var _LayoutAnimation = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"../../LayoutAnimation/LayoutAnimation\"));\n  var _dismissKeyboard = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"../../Utilities/dismissKeyboard\"));\n  var _Platform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"../../Utilities/Platform\"));\n  var _NativeKeyboardObserver = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"./NativeKeyboardObserver\"));\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * @format\n   * \n   */\n  /**\n   * `Keyboard` module to control keyboard events.\n   *\n   * ### Usage\n   *\n   * The Keyboard module allows you to listen for native events and react to them, as\n   * well as make changes to the keyboard, like dismissing it.\n   *\n   *```\n   * import React, { Component } from 'react';\n   * import { Keyboard, TextInput } from 'react-native';\n   *\n   * class Example extends Component {\n   *   componentWillMount () {\n   *     this.keyboardDidShowListener = Keyboard.addListener('keyboardDidShow', this._keyboardDidShow);\n   *     this.keyboardDidHideListener = Keyboard.addListener('keyboardDidHide', this._keyboardDidHide);\n   *   }\n   *\n   *   componentWillUnmount () {\n   *     this.keyboardDidShowListener.remove();\n   *     this.keyboardDidHideListener.remove();\n   *   }\n   *\n   *   _keyboardDidShow () {\n   *     alert('Keyboard Shown');\n   *   }\n   *\n   *   _keyboardDidHide () {\n   *     alert('Keyboard Hidden');\n   *   }\n   *\n   *   render() {\n   *     return (\n   *       <TextInput\n   *         onSubmitEditing={Keyboard.dismiss}\n   *       />\n   *     );\n   *   }\n   * }\n   *```\n   */\n  var Keyboard = /*#__PURE__*/function () {\n    function Keyboard() {\n      var _this = this;\n      (0, _classCallCheck2.default)(this, Keyboard);\n      this._emitter = new _NativeEventEmitter.default(\n      // T88715063: NativeEventEmitter only used this parameter on iOS. Now it uses it on all platforms, so this code was modified automatically to preserve its behavior\n      // If you want to use the native module on other platforms, please remove this condition and test its behavior\n      _Platform.default.OS !== 'ios' ? null : _NativeKeyboardObserver.default);\n      this.addListener('keyboardDidShow', function (ev) {\n        _this._currentlyShowing = ev;\n      });\n      this.addListener('keyboardDidHide', function (_ev) {\n        _this._currentlyShowing = null;\n      });\n    }\n\n    /**\n     * The `addListener` function connects a JavaScript function to an identified native\n     * keyboard notification event.\n     *\n     * This function then returns the reference to the listener.\n     *\n     * @param {string} eventName The `nativeEvent` is the string that identifies the event you're listening for.  This\n     *can be any of the following:\n     *\n     * - `keyboardWillShow`\n     * - `keyboardDidShow`\n     * - `keyboardWillHide`\n     * - `keyboardDidHide`\n     * - `keyboardWillChangeFrame`\n     * - `keyboardDidChangeFrame`\n     *\n     * Android versions prior to API 30 rely on observing layout changes when\n     * `android:windowSoftInputMode` is set to `adjustResize` or `adjustPan`.\n     *\n     * `keyboardWillShow` as well as `keyboardWillHide` are not available on Android since there is\n     * no native corresponding event.\n     *\n     * @param {function} callback function to be called when the event fires.\n     */\n    return (0, _createClass2.default)(Keyboard, [{\n      key: \"addListener\",\n      value: function addListener(eventType, listener, context) {\n        return this._emitter.addListener(eventType, listener);\n      }\n\n      /**\n       * Removes all listeners for a specific event type.\n       *\n       * @param {string} eventType The native event string listeners are watching which will be removed.\n       */\n    }, {\n      key: \"removeAllListeners\",\n      value: function removeAllListeners(eventType) {\n        this._emitter.removeAllListeners(eventType);\n      }\n\n      /**\n       * Dismisses the active keyboard and removes focus.\n       */\n    }, {\n      key: \"dismiss\",\n      value: function dismiss() {\n        (0, _dismissKeyboard.default)();\n      }\n\n      /**\n       * Whether the keyboard is last known to be visible.\n       */\n    }, {\n      key: \"isVisible\",\n      value: function isVisible() {\n        return !!this._currentlyShowing;\n      }\n\n      /**\n       * Return the metrics of the soft-keyboard if visible.\n       */\n    }, {\n      key: \"metrics\",\n      value: function metrics() {\n        var _this$_currentlyShowi;\n        return (_this$_currentlyShowi = this._currentlyShowing) == null ? void 0 : _this$_currentlyShowi.endCoordinates;\n      }\n\n      /**\n       * Useful for syncing TextInput (or other keyboard accessory view) size of\n       * position changes with keyboard movements.\n       */\n    }, {\n      key: \"scheduleLayoutAnimation\",\n      value: function scheduleLayoutAnimation(event) {\n        var duration = event.duration,\n          easing = event.easing;\n        if (duration != null && duration !== 0) {\n          _LayoutAnimation.default.configureNext({\n            duration: duration,\n            update: {\n              duration: duration,\n              type: easing != null && _LayoutAnimation.default.Types[easing] || 'keyboard'\n            }\n          });\n        }\n      }\n    }]);\n  }();\n  module.exports = new Keyboard();\n});","lineCount":167,"map":[[5,2,13,0],[5,6,13,0,"_NativeEventEmitter"],[5,25,13,0],[5,28,13,0,"_interopRequireDefault"],[5,50,13,0],[5,51,13,0,"_$$_REQUIRE"],[5,62,13,0],[5,63,13,0,"_dependencyMap"],[5,77,13,0],[6,2,14,0],[6,6,14,0,"_LayoutAnimation"],[6,22,14,0],[6,25,14,0,"_interopRequireDefault"],[6,47,14,0],[6,48,14,0,"_$$_REQUIRE"],[6,59,14,0],[6,60,14,0,"_dependencyMap"],[6,74,14,0],[7,2,15,0],[7,6,15,0,"_dismissKeyboard"],[7,22,15,0],[7,25,15,0,"_interopRequireDefault"],[7,47,15,0],[7,48,15,0,"_$$_REQUIRE"],[7,59,15,0],[7,60,15,0,"_dependencyMap"],[7,74,15,0],[8,2,16,0],[8,6,16,0,"_Platform"],[8,15,16,0],[8,18,16,0,"_interopRequireDefault"],[8,40,16,0],[8,41,16,0,"_$$_REQUIRE"],[8,52,16,0],[8,53,16,0,"_dependencyMap"],[8,67,16,0],[9,2,17,0],[9,6,17,0,"_NativeKeyboardObserver"],[9,29,17,0],[9,32,17,0,"_interopRequireDefault"],[9,54,17,0],[9,55,17,0,"_$$_REQUIRE"],[9,66,17,0],[9,67,17,0,"_dependencyMap"],[9,81,17,0],[10,2,1,0],[11,0,2,0],[12,0,3,0],[13,0,4,0],[14,0,5,0],[15,0,6,0],[16,0,7,0],[17,0,8,0],[18,0,9,0],[19,2,64,0],[20,0,65,0],[21,0,66,0],[22,0,67,0],[23,0,68,0],[24,0,69,0],[25,0,70,0],[26,0,71,0],[27,0,72,0],[28,0,73,0],[29,0,74,0],[30,0,75,0],[31,0,76,0],[32,0,77,0],[33,0,78,0],[34,0,79,0],[35,0,80,0],[36,0,81,0],[37,0,82,0],[38,0,83,0],[39,0,84,0],[40,0,85,0],[41,0,86,0],[42,0,87,0],[43,0,88,0],[44,0,89,0],[45,0,90,0],[46,0,91,0],[47,0,92,0],[48,0,93,0],[49,0,94,0],[50,0,95,0],[51,0,96,0],[52,0,97,0],[53,0,98,0],[54,0,99,0],[55,0,100,0],[56,0,101,0],[57,0,102,0],[58,0,103,0],[59,0,104,0],[60,2,64,0],[60,6,106,6,"Keyboard"],[60,14,106,14],[61,4,116,2],[61,13,116,2,"Keyboard"],[61,22,116,2],[61,24,116,16],[62,6,116,16],[62,10,116,16,"_this"],[62,15,116,16],[63,6,116,16],[63,10,116,16,"_classCallCheck2"],[63,26,116,16],[63,27,116,16,"default"],[63,34,116,16],[63,42,116,16,"Keyboard"],[63,50,116,16],[64,6,116,16],[64,11,109,2,"_emitter"],[64,19,109,10],[64,22,110,4],[64,26,110,8,"NativeEventEmitter"],[64,53,110,26],[65,6,111,6],[66,6,112,6],[67,6,113,6,"Platform"],[67,23,113,14],[67,24,113,15,"OS"],[67,26,113,17],[67,31,113,22],[67,36,113,27],[67,39,113,30],[67,43,113,34],[67,46,113,37,"NativeKeyboardObserver"],[67,77,114,4],[67,78,114,5],[68,6,117,4],[68,10,117,8],[68,11,117,9,"addListener"],[68,22,117,20],[68,23,117,21],[68,40,117,38],[68,42,117,40],[68,52,117,40,"ev"],[68,54,117,42],[68,56,117,46],[69,8,118,6,"_this"],[69,13,118,10],[69,14,118,11,"_currentlyShowing"],[69,31,118,28],[69,34,118,31,"ev"],[69,36,118,33],[70,6,119,4],[70,7,119,5],[70,8,119,6],[71,6,120,4],[71,10,120,8],[71,11,120,9,"addListener"],[71,22,120,20],[71,23,120,21],[71,40,120,38],[71,42,120,40],[71,52,120,40,"_ev"],[71,55,120,43],[71,57,120,47],[72,8,121,6,"_this"],[72,13,121,10],[72,14,121,11,"_currentlyShowing"],[72,31,121,28],[72,34,121,31],[72,38,121,35],[73,6,122,4],[73,7,122,5],[73,8,122,6],[74,4,123,2],[76,4,125,2],[77,0,126,0],[78,0,127,0],[79,0,128,0],[80,0,129,0],[81,0,130,0],[82,0,131,0],[83,0,132,0],[84,0,133,0],[85,0,134,0],[86,0,135,0],[87,0,136,0],[88,0,137,0],[89,0,138,0],[90,0,139,0],[91,0,140,0],[92,0,141,0],[93,0,142,0],[94,0,143,0],[95,0,144,0],[96,0,145,0],[97,0,146,0],[98,0,147,0],[99,0,148,0],[100,4,125,2],[100,15,125,2,"_createClass2"],[100,28,125,2],[100,29,125,2,"default"],[100,36,125,2],[100,38,125,2,"Keyboard"],[100,46,125,2],[101,6,125,2,"key"],[101,9,125,2],[102,6,125,2,"value"],[102,11,125,2],[102,13,149,2],[102,22,149,2,"addListener"],[102,33,149,13,"addListener"],[102,34,150,4,"eventType"],[102,43,150,16],[102,45,151,4,"listener"],[102,53,151,69],[102,55,152,4,"context"],[102,62,152,19],[102,64,153,23],[103,8,154,4],[103,15,154,11],[103,19,154,15],[103,20,154,16,"_emitter"],[103,28,154,24],[103,29,154,25,"addListener"],[103,40,154,36],[103,41,154,37,"eventType"],[103,50,154,46],[103,52,154,48,"listener"],[103,60,154,56],[103,61,154,57],[104,6,155,2],[106,6,157,2],[107,0,158,0],[108,0,159,0],[109,0,160,0],[110,0,161,0],[111,4,157,2],[112,6,157,2,"key"],[112,9,157,2],[113,6,157,2,"value"],[113,11,157,2],[113,13,162,2],[113,22,162,2,"removeAllListeners"],[113,40,162,20,"removeAllListeners"],[113,41,162,57,"eventType"],[113,50,162,70],[113,52,162,78],[114,8,163,4],[114,12,163,8],[114,13,163,9,"_emitter"],[114,21,163,17],[114,22,163,18,"removeAllListeners"],[114,40,163,36],[114,41,163,37,"eventType"],[114,50,163,46],[114,51,163,47],[115,6,164,2],[117,6,166,2],[118,0,167,0],[119,0,168,0],[120,4,166,2],[121,6,166,2,"key"],[121,9,166,2],[122,6,166,2,"value"],[122,11,166,2],[122,13,169,2],[122,22,169,2,"dismiss"],[122,29,169,9,"dismiss"],[122,30,169,9],[122,32,169,18],[123,8,170,4],[123,12,170,4,"dismissKeyboard"],[123,36,170,19],[123,38,170,20],[123,39,170,21],[124,6,171,2],[126,6,173,2],[127,0,174,0],[128,0,175,0],[129,4,173,2],[130,6,173,2,"key"],[130,9,173,2],[131,6,173,2,"value"],[131,11,173,2],[131,13,176,2],[131,22,176,2,"isVisible"],[131,31,176,11,"isVisible"],[131,32,176,11],[131,34,176,23],[132,8,177,4],[132,15,177,11],[132,16,177,12],[132,17,177,13],[132,21,177,17],[132,22,177,18,"_currentlyShowing"],[132,39,177,35],[133,6,178,2],[135,6,180,2],[136,0,181,0],[137,0,182,0],[138,4,180,2],[139,6,180,2,"key"],[139,9,180,2],[140,6,180,2,"value"],[140,11,180,2],[140,13,183,2],[140,22,183,2,"metrics"],[140,29,183,9,"metrics"],[140,30,183,9],[140,32,183,30],[141,8,183,30],[141,12,183,30,"_this$_currentlyShowi"],[141,33,183,30],[142,8,184,4],[142,16,184,4,"_this$_currentlyShowi"],[142,37,184,4],[142,40,184,11],[142,44,184,15],[142,45,184,16,"_currentlyShowing"],[142,62,184,33],[142,83,184,11,"_this$_currentlyShowi"],[142,104,184,11],[142,105,184,35,"endCoordinates"],[142,119,184,49],[143,6,185,2],[145,6,187,2],[146,0,188,0],[147,0,189,0],[148,0,190,0],[149,4,187,2],[150,6,187,2,"key"],[150,9,187,2],[151,6,187,2,"value"],[151,11,187,2],[151,13,191,2],[151,22,191,2,"scheduleLayoutAnimation"],[151,45,191,25,"scheduleLayoutAnimation"],[151,46,191,26,"event"],[151,51,191,46],[151,53,191,54],[152,8,192,4],[152,12,192,11,"duration"],[152,20,192,19],[152,23,192,31,"event"],[152,28,192,36],[152,29,192,11,"duration"],[152,37,192,19],[153,10,192,21,"easing"],[153,16,192,27],[153,19,192,31,"event"],[153,24,192,36],[153,25,192,21,"easing"],[153,31,192,27],[154,8,193,4],[154,12,193,8,"duration"],[154,20,193,16],[154,24,193,20],[154,28,193,24],[154,32,193,28,"duration"],[154,40,193,36],[154,45,193,41],[154,46,193,42],[154,48,193,44],[155,10,194,6,"LayoutAnimation"],[155,34,194,21],[155,35,194,22,"configureNext"],[155,48,194,35],[155,49,194,36],[156,12,195,8,"duration"],[156,20,195,16],[156,22,195,18,"duration"],[156,30,195,26],[157,12,196,8,"update"],[157,18,196,14],[157,20,196,16],[158,14,197,10,"duration"],[158,22,197,18],[158,24,197,20,"duration"],[158,32,197,28],[159,14,198,10,"type"],[159,18,198,14],[159,20,198,17,"easing"],[159,26,198,23],[159,30,198,27],[159,34,198,31],[159,38,198,35,"LayoutAnimation"],[159,62,198,50],[159,63,198,51,"Types"],[159,68,198,56],[159,69,198,57,"easing"],[159,75,198,63],[159,76,198,64],[159,80,198,69],[160,12,199,8],[161,10,200,6],[161,11,200,7],[161,12,200,8],[162,8,201,4],[163,6,202,2],[164,4,202,3],[165,2,202,3],[166,2,205,0,"module"],[166,8,205,6],[166,9,205,7,"exports"],[166,16,205,14],[166,19,205,18],[166,23,205,22,"Keyboard"],[166,31,205,30],[166,32,205,31],[166,33,205,43],[167,0,205,44],[167,3]],"functionMap":{"names":["<global>","Keyboard","constructor","addListener$argument_1","addListener","removeAllListeners","dismiss","isVisible","metrics","scheduleLayoutAnimation"],"mappings":"AAA;ACyG;ECU;wCCC;KDE;wCCC;KDE;GDC;EG0B;GHM;EIO;GJE;EKK;GLE;EMK;GNE;EOK;GPE;EQM;GRW;CDC"}},"type":"js/module"}]}