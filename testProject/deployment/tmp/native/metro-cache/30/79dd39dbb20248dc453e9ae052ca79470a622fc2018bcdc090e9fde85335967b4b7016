{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":249,"column":0,"index":9120}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":249,"column":0,"index":9120}}],"key":"EU+qeBIKi4KcIzPeK4PbkLqFqVY="}},{"name":"../../src/private/featureflags/ReactNativeFeatureFlags","data":{"asyncType":null,"locs":[{"start":{"line":13,"column":0,"index":243},"end":{"line":13,"column":98,"index":341}}],"key":"On9He5TjYQGJzGlPyyzDdz1kZUA="}},{"name":"../Utilities/useRefEffect","data":{"asyncType":null,"locs":[{"start":{"line":15,"column":0,"index":474},"end":{"line":15,"column":53,"index":527}}],"key":"0Ino3uH9u8KSQHLp3+X6UggVxDg="}},{"name":"./NativeAnimatedHelper","data":{"asyncType":null,"locs":[{"start":{"line":17,"column":0,"index":575},"end":{"line":17,"column":58,"index":633}}],"key":"6BPYM8/QSn/uL9frVIhpnADZnTI="}},{"name":"./nodes/AnimatedProps","data":{"asyncType":null,"locs":[{"start":{"line":18,"column":0,"index":634},"end":{"line":18,"column":50,"index":684}}],"key":"t4ZPNv99gCT+ys58yK2MYmEcBMA="}},{"name":"react","data":{"asyncType":null,"locs":[{"start":{"line":19,"column":0,"index":685},"end":{"line":26,"column":15,"index":791}}],"key":"a4EMkKqamYWCMMPV7UeQlqGQ+ks="}},{"name":"./AnimatedEvent","data":{"asyncType":null,"locs":[{"start":{"line":16,"column":0,"index":528},"end":{"line":16,"column":46,"index":574}}],"key":"HOnHqnbjAcj/KCNluvPGmX3fOfk="}},{"name":"../ReactNative/ReactFabricPublicInstance/ReactFabricPublicInstanceUtils","data":{"asyncType":null,"locs":[{"start":{"line":14,"column":0,"index":342},"end":{"line":14,"column":131,"index":473}},{"start":{"line":14,"column":0,"index":342},"end":{"line":14,"column":131,"index":473}},{"start":{"line":14,"column":0,"index":342},"end":{"line":14,"column":131,"index":473}}],"key":"mReH5GDZMwTtjQyJosNn8kaohr0="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * \n   * @format\n   */\n\n  'use strict';\n\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = useAnimatedProps;\n  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\"));\n  var ReactNativeFeatureFlags = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[2], \"../../src/private/featureflags/ReactNativeFeatureFlags\"));\n  var _useRefEffect = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"../Utilities/useRefEffect\"));\n  var _NativeAnimatedHelper = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"./NativeAnimatedHelper\"));\n  var _AnimatedProps = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"./nodes/AnimatedProps\"));\n  var _react = _$$_REQUIRE(_dependencyMap[6], \"react\");\n  function _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\n  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\n  function useAnimatedProps(props) {\n    var _useReducer = (0, _react.useReducer)(function (count) {\n        return count + 1;\n      }, 0),\n      _useReducer2 = (0, _slicedToArray2.default)(_useReducer, 2),\n      scheduleUpdate = _useReducer2[1];\n    var onUpdateRef = (0, _react.useRef)(null);\n    var timerRef = (0, _react.useRef)(null);\n\n    // TODO: Only invalidate `node` if animated props or `style` change. In the\n    // previous implementation, we permitted `style` to override props with the\n    // same name property name as styles, so we can probably continue doing that.\n    // The ordering of other props *should* not matter.\n    var node = (0, _react.useMemo)(function () {\n      return new _AnimatedProps.default(props, function () {\n        return onUpdateRef.current == null ? void 0 : onUpdateRef.current();\n      });\n    }, [props]);\n    var useNativePropsInFabric = ReactNativeFeatureFlags.shouldUseSetNativePropsInFabric();\n    useAnimatedPropsLifecycle(node);\n\n    // TODO: This \"effect\" does three things:\n    //\n    //   1) Call `setNativeView`.\n    //   2) Update `onUpdateRef`.\n    //   3) Update listeners for `AnimatedEvent` props.\n    //\n    // Ideally, each of these would be separate \"effects\" so that they are not\n    // unnecessarily re-run when irrelevant dependencies change. For example, we\n    // should be able to hoist all `AnimatedEvent` props and only do #3 if either\n    // the `AnimatedEvent` props change or `instance` changes.\n    //\n    // But there is no way to transparently compose three separate callback refs,\n    // so we just combine them all into one for now.\n    var refEffect = (0, _react.useCallback)(function (instance) {\n      // NOTE: This may be called more often than necessary (e.g. when `props`\n      // changes), but `setNativeView` already optimizes for that.\n      node.setNativeView(instance);\n\n      // NOTE: When using the JS animation driver, this callback is called on\n      // every animation frame. When using the native driver, this callback is\n      // called when the animation completes.\n      onUpdateRef.current = function () {\n        if (process.env.NODE_ENV === 'test') {\n          // Check 1: this is a test.\n          // call `scheduleUpdate` to bypass use of setNativeProps.\n          return scheduleUpdate();\n        }\n        var isFabricNode = isFabricInstance(instance);\n        if (node.__isNative) {\n          // Check 2: this is an animation driven by native.\n          // In native driven animations, this callback is only called once the animation completes.\n          if (isFabricNode) {\n            // Call `scheduleUpdate` to synchronise Fiber and Shadow tree.\n            // Must not be called in Paper.\n            scheduleUpdate();\n          }\n          return;\n        }\n        if (typeof instance !== 'object' || typeof (instance == null ? void 0 : instance.setNativeProps) !== 'function') {\n          // Check 3: the instance does not support setNativeProps. Call `scheduleUpdate`.\n          return scheduleUpdate();\n        }\n        if (!isFabricNode) {\n          // Check 4: this is a paper instance, call setNativeProps.\n          // $FlowIgnore[not-a-function] - Assume it's still a function.\n          // $FlowFixMe[incompatible-use]\n          return instance.setNativeProps(node.__getAnimatedValue());\n        }\n        if (!useNativePropsInFabric) {\n          // Check 5: setNativeProps are disabled.\n          return scheduleUpdate();\n        }\n\n        // This is a Fabric instance and setNativeProps is supported.\n\n        // $FlowIgnore[not-a-function] - Assume it's still a function.\n        // $FlowFixMe[incompatible-use]\n        instance.setNativeProps(node.__getAnimatedValue());\n\n        // Keeping state of Fiber tree and Shadow tree in sync.\n        //\n        // This is done by calling `scheduleUpdate` which will trigger a commit.\n        // However, React commit is not fast enough to drive animations.\n        // This is where setNativeProps comes in handy but the state between\n        // Fiber tree and Shadow tree needs to be kept in sync.\n        // The goal is to call `scheduleUpdate` as little as possible to maintain\n        // performance but frequently enough to keep state in sync.\n        // Debounce is set to 48ms, which is 3 * the duration of a frame.\n        // 3 frames was the highest value where flickering state was not observed.\n        if (timerRef.current != null) {\n          clearTimeout(timerRef.current);\n        }\n        timerRef.current = setTimeout(function () {\n          timerRef.current = null;\n          scheduleUpdate();\n        }, 48);\n      };\n      var target = getEventTarget(instance);\n      var events = [];\n      for (var propName in props) {\n        // $FlowFixMe[invalid-computed-prop]\n        var propValue = props[propName];\n        if (propValue instanceof _$$_REQUIRE(_dependencyMap[7], \"./AnimatedEvent\").AnimatedEvent && propValue.__isNative) {\n          propValue.__attach(target, propName);\n          events.push([propName, propValue]);\n        }\n      }\n      return function () {\n        onUpdateRef.current = null;\n        for (var _ref of events) {\n          var _ref2 = (0, _slicedToArray2.default)(_ref, 2);\n          var _propName = _ref2[0];\n          var _propValue = _ref2[1];\n          _propValue.__detach(target, _propName);\n        }\n      };\n    }, [props, node, useNativePropsInFabric]);\n    var callbackRef = (0, _useRefEffect.default)(refEffect);\n    return [reduceAnimatedProps(node), callbackRef];\n  }\n  function reduceAnimatedProps(node) {\n    // Force `collapsable` to be false so that the native view is not flattened.\n    // Flattened views cannot be accurately referenced by the native driver.\n    return Object.assign({}, node.__getValue(), {\n      collapsable: false\n    });\n  }\n\n  /**\n   * Manages the lifecycle of the supplied `AnimatedProps` by invoking `__attach`\n   * and `__detach`. However, this is more complicated because `AnimatedProps`\n   * uses reference counting to determine when to recursively detach its children\n   * nodes. So in order to optimize this, we avoid detaching until the next attach\n   * unless we are unmounting.\n   */\n  function useAnimatedPropsLifecycle(node) {\n    var prevNodeRef = (0, _react.useRef)(null);\n    var isUnmountingRef = (0, _react.useRef)(false);\n    (0, _react.useEffect)(function () {\n      // It is ok for multiple components to call `flushQueue` because it noops\n      // if the queue is empty. When multiple animated components are mounted at\n      // the same time. Only first component flushes the queue and the others will noop.\n      _NativeAnimatedHelper.default.API.flushQueue();\n    });\n    (0, _react.useLayoutEffect)(function () {\n      isUnmountingRef.current = false;\n      return function () {\n        isUnmountingRef.current = true;\n      };\n    }, []);\n    (0, _react.useLayoutEffect)(function () {\n      node.__attach();\n      if (prevNodeRef.current != null) {\n        var prevNode = prevNodeRef.current;\n        // TODO: Stop restoring default values (unless `reset` is called).\n        prevNode.__restoreDefaultValues();\n        prevNode.__detach();\n        prevNodeRef.current = null;\n      }\n      return function () {\n        if (isUnmountingRef.current) {\n          // NOTE: Do not restore default values on unmount, see D18197735.\n          node.__detach();\n        } else {\n          prevNodeRef.current = node;\n        }\n      };\n    }, [node]);\n  }\n  function getEventTarget(instance) {\n    return typeof instance === 'object' && typeof (instance == null ? void 0 : instance.getScrollableNode) === 'function' ?\n    // $FlowFixMe[incompatible-use] - Legacy instance assumptions.\n    instance.getScrollableNode() : instance;\n  }\n\n  // $FlowFixMe[unclear-type] - Legacy instance assumptions.\n  function isFabricInstance(instance) {\n    var _instance$getScrollRe;\n    return (0, _$$_REQUIRE(_dependencyMap[8], \"../ReactNative/ReactFabricPublicInstance/ReactFabricPublicInstanceUtils\").isPublicInstance)(instance) ||\n    // Some components have a setNativeProps function but aren't a host component\n    // such as lists like FlatList and SectionList. These should also use\n    // forceUpdate in Fabric since setNativeProps doesn't exist on the underlying\n    // host component. This crazy hack is essentially special casing those lists and\n    // ScrollView itself to use forceUpdate in Fabric.\n    // If these components end up using forwardRef then these hacks can go away\n    // as instance would actually be the underlying host component and the above check\n    // would be sufficient.\n    (0, _$$_REQUIRE(_dependencyMap[8], \"../ReactNative/ReactFabricPublicInstance/ReactFabricPublicInstanceUtils\").isPublicInstance)(instance == null || instance.getNativeScrollRef == null ? void 0 : instance.getNativeScrollRef()) || (0, _$$_REQUIRE(_dependencyMap[8], \"../ReactNative/ReactFabricPublicInstance/ReactFabricPublicInstanceUtils\").isPublicInstance)(instance == null || instance.getScrollResponder == null || (_instance$getScrollRe = instance.getScrollResponder()) == null || _instance$getScrollRe.getNativeScrollRef == null ? void 0 : _instance$getScrollRe.getNativeScrollRef());\n  }\n});","lineCount":217,"map":[[2,2,1,0],[3,0,2,0],[4,0,3,0],[5,0,4,0],[6,0,5,0],[7,0,6,0],[8,0,7,0],[9,0,8,0],[10,0,9,0],[12,2,11,0],[12,14,11,12],[14,2,11,13],[14,6,11,13,"_interopRequireDefault"],[14,28,11,13],[14,31,11,13,"_$$_REQUIRE"],[14,42,11,13],[14,43,11,13,"_dependencyMap"],[14,57,11,13],[15,2,11,13,"Object"],[15,8,11,13],[15,9,11,13,"defineProperty"],[15,23,11,13],[15,24,11,13,"exports"],[15,31,11,13],[16,4,11,13,"value"],[16,9,11,13],[17,2,11,13],[18,2,11,13,"exports"],[18,9,11,13],[18,10,11,13,"default"],[18,17,11,13],[18,20,11,13,"useAnimatedProps"],[18,36,11,13],[19,2,11,13],[19,6,11,13,"_slicedToArray2"],[19,21,11,13],[19,24,11,13,"_interopRequireDefault"],[19,46,11,13],[19,47,11,13,"_$$_REQUIRE"],[19,58,11,13],[19,59,11,13,"_dependencyMap"],[19,73,11,13],[20,2,13,0],[20,6,13,0,"ReactNativeFeatureFlags"],[20,29,13,0],[20,32,13,0,"_interopRequireWildcard"],[20,55,13,0],[20,56,13,0,"_$$_REQUIRE"],[20,67,13,0],[20,68,13,0,"_dependencyMap"],[20,82,13,0],[21,2,15,0],[21,6,15,0,"_useRefEffect"],[21,19,15,0],[21,22,15,0,"_interopRequireDefault"],[21,44,15,0],[21,45,15,0,"_$$_REQUIRE"],[21,56,15,0],[21,57,15,0,"_dependencyMap"],[21,71,15,0],[22,2,17,0],[22,6,17,0,"_NativeAnimatedHelper"],[22,27,17,0],[22,30,17,0,"_interopRequireDefault"],[22,52,17,0],[22,53,17,0,"_$$_REQUIRE"],[22,64,17,0],[22,65,17,0,"_dependencyMap"],[22,79,17,0],[23,2,18,0],[23,6,18,0,"_AnimatedProps"],[23,20,18,0],[23,23,18,0,"_interopRequireDefault"],[23,45,18,0],[23,46,18,0,"_$$_REQUIRE"],[23,57,18,0],[23,58,18,0,"_dependencyMap"],[23,72,18,0],[24,2,19,0],[24,6,19,0,"_react"],[24,12,19,0],[24,15,19,0,"_$$_REQUIRE"],[24,26,19,0],[24,27,19,0,"_dependencyMap"],[24,41,19,0],[25,2,26,15],[25,11,26,15,"_getRequireWildcardCache"],[25,36,26,15,"e"],[25,37,26,15],[25,66,26,15,"WeakMap"],[25,73,26,15],[25,92,26,15,"r"],[25,93,26,15],[25,100,26,15,"WeakMap"],[25,107,26,15],[25,111,26,15,"t"],[25,112,26,15],[25,119,26,15,"WeakMap"],[25,126,26,15],[25,138,26,15,"_getRequireWildcardCache"],[25,162,26,15],[25,174,26,15,"_getRequireWildcardCache"],[25,199,26,15,"e"],[25,200,26,15],[25,211,26,15,"e"],[25,212,26,15],[25,215,26,15,"t"],[25,216,26,15],[25,219,26,15,"r"],[25,220,26,15],[25,225,26,15,"e"],[25,226,26,15],[26,2,26,15],[26,11,26,15,"_interopRequireWildcard"],[26,35,26,15,"e"],[26,36,26,15],[26,38,26,15,"r"],[26,39,26,15],[26,48,26,15,"r"],[26,49,26,15],[26,53,26,15,"e"],[26,54,26,15],[26,58,26,15,"e"],[26,59,26,15],[26,60,26,15,"__esModule"],[26,70,26,15],[26,79,26,15,"e"],[26,80,26,15],[26,95,26,15,"e"],[26,96,26,15],[26,119,26,15,"e"],[26,120,26,15],[26,145,26,15,"e"],[26,146,26,15],[26,157,26,15,"default"],[26,164,26,15],[26,166,26,15,"e"],[26,167,26,15],[26,175,26,15,"t"],[26,176,26,15],[26,179,26,15,"_getRequireWildcardCache"],[26,203,26,15],[26,204,26,15,"r"],[26,205,26,15],[26,212,26,15,"t"],[26,213,26,15],[26,217,26,15,"t"],[26,218,26,15],[26,219,26,15,"has"],[26,222,26,15],[26,223,26,15,"e"],[26,224,26,15],[26,234,26,15,"t"],[26,235,26,15],[26,236,26,15,"get"],[26,239,26,15],[26,240,26,15,"e"],[26,241,26,15],[26,248,26,15,"n"],[26,249,26,15],[26,254,26,15,"__proto__"],[26,263,26,15],[26,273,26,15,"a"],[26,274,26,15],[26,277,26,15,"Object"],[26,283,26,15],[26,284,26,15,"defineProperty"],[26,298,26,15],[26,302,26,15,"Object"],[26,308,26,15],[26,309,26,15,"getOwnPropertyDescriptor"],[26,333,26,15],[26,344,26,15,"u"],[26,345,26,15],[26,349,26,15,"e"],[26,350,26,15],[26,370,26,15,"u"],[26,371,26,15],[26,378,26,15,"hasOwnProperty"],[26,392,26,15],[26,393,26,15,"call"],[26,397,26,15],[26,398,26,15,"e"],[26,399,26,15],[26,401,26,15,"u"],[26,402,26,15],[26,411,26,15,"i"],[26,412,26,15],[26,415,26,15,"a"],[26,416,26,15],[26,419,26,15,"Object"],[26,425,26,15],[26,426,26,15,"getOwnPropertyDescriptor"],[26,450,26,15],[26,451,26,15,"e"],[26,452,26,15],[26,454,26,15,"u"],[26,455,26,15],[26,465,26,15,"i"],[26,466,26,15],[26,471,26,15,"i"],[26,472,26,15],[26,473,26,15,"get"],[26,476,26,15],[26,480,26,15,"i"],[26,481,26,15],[26,482,26,15,"set"],[26,485,26,15],[26,489,26,15,"Object"],[26,495,26,15],[26,496,26,15,"defineProperty"],[26,510,26,15],[26,511,26,15,"n"],[26,512,26,15],[26,514,26,15,"u"],[26,515,26,15],[26,517,26,15,"i"],[26,518,26,15],[26,522,26,15,"n"],[26,523,26,15],[26,524,26,15,"u"],[26,525,26,15],[26,529,26,15,"e"],[26,530,26,15],[26,531,26,15,"u"],[26,532,26,15],[26,544,26,15,"n"],[26,545,26,15],[26,546,26,15,"default"],[26,553,26,15],[26,556,26,15,"e"],[26,557,26,15],[26,559,26,15,"t"],[26,560,26,15],[26,564,26,15,"t"],[26,565,26,15],[26,566,26,15,"set"],[26,569,26,15],[26,570,26,15,"e"],[26,571,26,15],[26,573,26,15,"n"],[26,574,26,15],[26,577,26,15,"n"],[26,578,26,15],[27,2,35,15],[27,11,35,24,"useAnimatedProps"],[27,27,35,40,"useAnimatedProps"],[27,28,36,2,"props"],[27,33,36,15],[27,35,37,57],[28,4,38,2],[28,8,38,2,"_useReducer"],[28,19,38,2],[28,22,38,29],[28,26,38,29,"useReducer"],[28,43,38,39],[28,45,38,54],[28,55,38,54,"count"],[28,60,38,59],[29,8,38,59],[29,15,38,63,"count"],[29,20,38,68],[29,23,38,71],[29,24,38,72],[30,6,38,72],[30,9,38,74],[30,10,38,75],[30,11,38,76],[31,6,38,76,"_useReducer2"],[31,18,38,76],[31,25,38,76,"_slicedToArray2"],[31,40,38,76],[31,41,38,76,"default"],[31,48,38,76],[31,50,38,76,"_useReducer"],[31,61,38,76],[32,6,38,11,"scheduleUpdate"],[32,20,38,25],[32,23,38,25,"_useReducer2"],[32,35,38,25],[33,4,39,2],[33,8,39,8,"onUpdateRef"],[33,19,39,19],[33,22,39,22],[33,26,39,22,"useRef"],[33,39,39,28],[33,41,39,42],[33,45,39,46],[33,46,39,47],[34,4,40,2],[34,8,40,8,"timerRef"],[34,16,40,16],[34,19,40,19],[34,23,40,19,"useRef"],[34,36,40,25],[34,38,40,44],[34,42,40,48],[34,43,40,49],[36,4,42,2],[37,4,43,2],[38,4,44,2],[39,4,45,2],[40,4,46,2],[40,8,46,8,"node"],[40,12,46,12],[40,15,46,15],[40,19,46,15,"useMemo"],[40,33,46,22],[40,35,47,4],[41,6,47,4],[41,13,47,10],[41,17,47,14,"AnimatedProps"],[41,39,47,27],[41,40,47,28,"props"],[41,45,47,33],[41,47,47,35],[42,8,47,35],[42,15,47,41,"onUpdateRef"],[42,26,47,52],[42,27,47,53,"current"],[42,34,47,60],[42,54,47,41,"onUpdateRef"],[42,65,47,52],[42,66,47,53,"current"],[42,73,47,60],[42,74,47,63],[42,75,47,64],[43,6,47,64],[43,8,47,65],[44,4,47,65],[44,7,48,4],[44,8,48,5,"props"],[44,13,48,10],[44,14,49,2],[44,15,49,3],[45,4,50,2],[45,8,50,8,"useNativePropsInFabric"],[45,30,50,30],[45,33,51,4,"ReactNativeFeatureFlags"],[45,56,51,27],[45,57,51,28,"shouldUseSetNativePropsInFabric"],[45,88,51,59],[45,89,51,60],[45,90,51,61],[46,4,52,2,"useAnimatedPropsLifecycle"],[46,29,52,27],[46,30,52,28,"node"],[46,34,52,32],[46,35,52,33],[48,4,54,2],[49,4,55,2],[50,4,56,2],[51,4,57,2],[52,4,58,2],[53,4,59,2],[54,4,60,2],[55,4,61,2],[56,4,62,2],[57,4,63,2],[58,4,64,2],[59,4,65,2],[60,4,66,2],[61,4,67,2],[61,8,67,8,"refEffect"],[61,17,67,17],[61,20,67,20],[61,24,67,20,"useCallback"],[61,42,67,31],[61,44,68,4],[61,54,68,5,"instance"],[61,62,68,24],[61,64,68,29],[62,6,69,6],[63,6,70,6],[64,6,71,6,"node"],[64,10,71,10],[64,11,71,11,"setNativeView"],[64,24,71,24],[64,25,71,25,"instance"],[64,33,71,33],[64,34,71,34],[66,6,73,6],[67,6,74,6],[68,6,75,6],[69,6,76,6,"onUpdateRef"],[69,17,76,17],[69,18,76,18,"current"],[69,25,76,25],[69,28,76,28],[69,40,76,34],[70,8,77,8],[70,12,77,12,"process"],[70,19,77,19],[70,20,77,20,"env"],[70,23,77,23],[70,24,77,24,"NODE_ENV"],[70,32,77,32],[70,37,77,37],[70,43,77,43],[70,45,77,45],[71,10,78,10],[72,10,79,10],[73,10,80,10],[73,17,80,17,"scheduleUpdate"],[73,31,80,31],[73,32,80,32],[73,33,80,33],[74,8,81,8],[75,8,83,8],[75,12,83,14,"isFabricNode"],[75,24,83,26],[75,27,83,29,"isFabricInstance"],[75,43,83,45],[75,44,83,46,"instance"],[75,52,83,54],[75,53,83,55],[76,8,84,8],[76,12,84,12,"node"],[76,16,84,16],[76,17,84,17,"__isNative"],[76,27,84,27],[76,29,84,29],[77,10,85,10],[78,10,86,10],[79,10,87,10],[79,14,87,14,"isFabricNode"],[79,26,87,26],[79,28,87,28],[80,12,88,12],[81,12,89,12],[82,12,90,12,"scheduleUpdate"],[82,26,90,26],[82,27,90,27],[82,28,90,28],[83,10,91,10],[84,10,92,10],[85,8,93,8],[86,8,95,8],[86,12,96,10],[86,19,96,17,"instance"],[86,27,96,25],[86,32,96,30],[86,40,96,38],[86,44,97,10],[86,52,97,17,"instance"],[86,60,97,25],[86,80,97,17,"instance"],[86,88,97,25],[86,89,97,27,"setNativeProps"],[86,103,97,41],[86,109,97,46],[86,119,97,56],[86,121,98,10],[87,10,99,10],[88,10,100,10],[88,17,100,17,"scheduleUpdate"],[88,31,100,31],[88,32,100,32],[88,33,100,33],[89,8,101,8],[90,8,103,8],[90,12,103,12],[90,13,103,13,"isFabricNode"],[90,25,103,25],[90,27,103,27],[91,10,104,10],[92,10,105,10],[93,10,106,10],[94,10,107,10],[94,17,107,17,"instance"],[94,25,107,25],[94,26,107,26,"setNativeProps"],[94,40,107,40],[94,41,107,41,"node"],[94,45,107,45],[94,46,107,46,"__getAnimatedValue"],[94,64,107,64],[94,65,107,65],[94,66,107,66],[94,67,107,67],[95,8,108,8],[96,8,110,8],[96,12,110,12],[96,13,110,13,"useNativePropsInFabric"],[96,35,110,35],[96,37,110,37],[97,10,111,10],[98,10,112,10],[98,17,112,17,"scheduleUpdate"],[98,31,112,31],[98,32,112,32],[98,33,112,33],[99,8,113,8],[101,8,115,8],[103,8,117,8],[104,8,118,8],[105,8,119,8,"instance"],[105,16,119,16],[105,17,119,17,"setNativeProps"],[105,31,119,31],[105,32,119,32,"node"],[105,36,119,36],[105,37,119,37,"__getAnimatedValue"],[105,55,119,55],[105,56,119,56],[105,57,119,57],[105,58,119,58],[107,8,121,8],[108,8,122,8],[109,8,123,8],[110,8,124,8],[111,8,125,8],[112,8,126,8],[113,8,127,8],[114,8,128,8],[115,8,129,8],[116,8,130,8],[117,8,131,8],[117,12,131,12,"timerRef"],[117,20,131,20],[117,21,131,21,"current"],[117,28,131,28],[117,32,131,32],[117,36,131,36],[117,38,131,38],[118,10,132,10,"clearTimeout"],[118,22,132,22],[118,23,132,23,"timerRef"],[118,31,132,31],[118,32,132,32,"current"],[118,39,132,39],[118,40,132,40],[119,8,133,8],[120,8,134,8,"timerRef"],[120,16,134,16],[120,17,134,17,"current"],[120,24,134,24],[120,27,134,27,"setTimeout"],[120,37,134,37],[120,38,134,38],[120,50,134,44],[121,10,135,10,"timerRef"],[121,18,135,18],[121,19,135,19,"current"],[121,26,135,26],[121,29,135,29],[121,33,135,33],[122,10,136,10,"scheduleUpdate"],[122,24,136,24],[122,25,136,25],[122,26,136,26],[123,8,137,8],[123,9,137,9],[123,11,137,11],[123,13,137,13],[123,14,137,14],[124,6,138,6],[124,7,138,7],[125,6,140,6],[125,10,140,12,"target"],[125,16,140,18],[125,19,140,21,"getEventTarget"],[125,33,140,35],[125,34,140,36,"instance"],[125,42,140,44],[125,43,140,45],[126,6,141,6],[126,10,141,12,"events"],[126,16,141,18],[126,19,141,21],[126,21,141,23],[127,6,143,6],[127,11,143,11],[127,15,143,17,"propName"],[127,23,143,25],[127,27,143,29,"props"],[127,32,143,34],[127,34,143,36],[128,8,144,8],[129,8,145,8],[129,12,145,14,"propValue"],[129,21,145,23],[129,24,145,26,"props"],[129,29,145,31],[129,30,145,32,"propName"],[129,38,145,40],[129,39,145,41],[130,8,146,8],[130,12,146,12,"propValue"],[130,21,146,21],[130,33,146,33,"AnimatedEvent"],[130,63,146,33],[130,64,146,33,"AnimatedEvent"],[130,96,146,46],[130,100,146,50,"propValue"],[130,109,146,59],[130,110,146,60,"__isNative"],[130,120,146,70],[130,122,146,72],[131,10,147,10,"propValue"],[131,19,147,19],[131,20,147,20,"__attach"],[131,28,147,28],[131,29,147,29,"target"],[131,35,147,35],[131,37,147,37,"propName"],[131,45,147,45],[131,46,147,46],[132,10,148,10,"events"],[132,16,148,16],[132,17,148,17,"push"],[132,21,148,21],[132,22,148,22],[132,23,148,23,"propName"],[132,31,148,31],[132,33,148,33,"propValue"],[132,42,148,42],[132,43,148,43],[132,44,148,44],[133,8,149,8],[134,6,150,6],[135,6,152,6],[135,13,152,13],[135,25,152,19],[136,8,153,8,"onUpdateRef"],[136,19,153,19],[136,20,153,20,"current"],[136,27,153,27],[136,30,153,30],[136,34,153,34],[137,8,155,8],[137,17,155,8,"_ref"],[137,21,155,8],[137,25,155,44,"events"],[137,31,155,50],[137,33,155,52],[138,10,155,52],[138,14,155,52,"_ref2"],[138,19,155,52],[138,26,155,52,"_slicedToArray2"],[138,41,155,52],[138,42,155,52,"default"],[138,49,155,52],[138,51,155,52,"_ref"],[138,55,155,52],[139,10,155,52],[139,14,155,20,"propName"],[139,23,155,28],[139,26,155,28,"_ref2"],[139,31,155,28],[140,10,155,28],[140,14,155,30,"propValue"],[140,24,155,39],[140,27,155,39,"_ref2"],[140,32,155,39],[141,10,156,10,"propValue"],[141,20,156,19],[141,21,156,20,"__detach"],[141,29,156,28],[141,30,156,29,"target"],[141,36,156,35],[141,38,156,37,"propName"],[141,47,156,45],[141,48,156,46],[142,8,157,8],[143,6,158,6],[143,7,158,7],[144,4,159,4],[144,5,159,5],[144,7,160,4],[144,8,160,5,"props"],[144,13,160,10],[144,15,160,12,"node"],[144,19,160,16],[144,21,160,18,"useNativePropsInFabric"],[144,43,160,40],[144,44,161,2],[144,45,161,3],[145,4,162,2],[145,8,162,8,"callbackRef"],[145,19,162,19],[145,22,162,22],[145,26,162,22,"useRefEffect"],[145,47,162,34],[145,49,162,46,"refEffect"],[145,58,162,55],[145,59,162,56],[146,4,164,2],[146,11,164,9],[146,12,164,10,"reduceAnimatedProps"],[146,31,164,29],[146,32,164,38,"node"],[146,36,164,42],[146,37,164,43],[146,39,164,45,"callbackRef"],[146,50,164,56],[146,51,164,57],[147,2,165,0],[148,2,167,0],[148,11,167,9,"reduceAnimatedProps"],[148,30,167,28,"reduceAnimatedProps"],[148,31,168,2,"node"],[148,35,168,21],[148,37,169,24],[149,4,170,2],[150,4,171,2],[151,4,172,2],[151,11,172,2,"Object"],[151,17,172,2],[151,18,172,2,"assign"],[151,24,172,2],[151,29,173,7,"node"],[151,33,173,11],[151,34,173,12,"__getValue"],[151,44,173,22],[151,45,173,23],[151,46,173,24],[152,6,174,4,"collapsable"],[152,17,174,15],[152,19,174,17],[153,4,174,22],[154,2,176,0],[156,2,178,0],[157,0,179,0],[158,0,180,0],[159,0,181,0],[160,0,182,0],[161,0,183,0],[162,0,184,0],[163,2,185,0],[163,11,185,9,"useAnimatedPropsLifecycle"],[163,36,185,34,"useAnimatedPropsLifecycle"],[163,37,185,35,"node"],[163,41,185,54],[163,43,185,62],[164,4,186,2],[164,8,186,8,"prevNodeRef"],[164,19,186,19],[164,22,186,22],[164,26,186,22,"useRef"],[164,39,186,28],[164,41,186,45],[164,45,186,49],[164,46,186,50],[165,4,187,2],[165,8,187,8,"isUnmountingRef"],[165,23,187,23],[165,26,187,26],[165,30,187,26,"useRef"],[165,43,187,32],[165,45,187,42],[165,50,187,47],[165,51,187,48],[166,4,189,2],[166,8,189,2,"useEffect"],[166,24,189,11],[166,26,189,12],[166,38,189,18],[167,6,190,4],[168,6,191,4],[169,6,192,4],[170,6,193,4,"NativeAnimatedHelper"],[170,35,193,24],[170,36,193,25,"API"],[170,39,193,28],[170,40,193,29,"flushQueue"],[170,50,193,39],[170,51,193,40],[170,52,193,41],[171,4,194,2],[171,5,194,3],[171,6,194,4],[172,4,196,2],[172,8,196,2,"useLayoutEffect"],[172,30,196,17],[172,32,196,18],[172,44,196,24],[173,6,197,4,"isUnmountingRef"],[173,21,197,19],[173,22,197,20,"current"],[173,29,197,27],[173,32,197,30],[173,37,197,35],[174,6,198,4],[174,13,198,11],[174,25,198,17],[175,8,199,6,"isUnmountingRef"],[175,23,199,21],[175,24,199,22,"current"],[175,31,199,29],[175,34,199,32],[175,38,199,36],[176,6,200,4],[176,7,200,5],[177,4,201,2],[177,5,201,3],[177,7,201,5],[177,9,201,7],[177,10,201,8],[178,4,203,2],[178,8,203,2,"useLayoutEffect"],[178,30,203,17],[178,32,203,18],[178,44,203,24],[179,6,204,4,"node"],[179,10,204,8],[179,11,204,9,"__attach"],[179,19,204,17],[179,20,204,18],[179,21,204,19],[180,6,205,4],[180,10,205,8,"prevNodeRef"],[180,21,205,19],[180,22,205,20,"current"],[180,29,205,27],[180,33,205,31],[180,37,205,35],[180,39,205,37],[181,8,206,6],[181,12,206,12,"prevNode"],[181,20,206,20],[181,23,206,23,"prevNodeRef"],[181,34,206,34],[181,35,206,35,"current"],[181,42,206,42],[182,8,207,6],[183,8,208,6,"prevNode"],[183,16,208,14],[183,17,208,15,"__restoreDefaultValues"],[183,39,208,37],[183,40,208,38],[183,41,208,39],[184,8,209,6,"prevNode"],[184,16,209,14],[184,17,209,15,"__detach"],[184,25,209,23],[184,26,209,24],[184,27,209,25],[185,8,210,6,"prevNodeRef"],[185,19,210,17],[185,20,210,18,"current"],[185,27,210,25],[185,30,210,28],[185,34,210,32],[186,6,211,4],[187,6,212,4],[187,13,212,11],[187,25,212,17],[188,8,213,6],[188,12,213,10,"isUnmountingRef"],[188,27,213,25],[188,28,213,26,"current"],[188,35,213,33],[188,37,213,35],[189,10,214,8],[190,10,215,8,"node"],[190,14,215,12],[190,15,215,13,"__detach"],[190,23,215,21],[190,24,215,22],[190,25,215,23],[191,8,216,6],[191,9,216,7],[191,15,216,13],[192,10,217,8,"prevNodeRef"],[192,21,217,19],[192,22,217,20,"current"],[192,29,217,27],[192,32,217,30,"node"],[192,36,217,34],[193,8,218,6],[194,6,219,4],[194,7,219,5],[195,4,220,2],[195,5,220,3],[195,7,220,5],[195,8,220,6,"node"],[195,12,220,10],[195,13,220,11],[195,14,220,12],[196,2,221,0],[197,2,223,0],[197,11,223,9,"getEventTarget"],[197,25,223,23,"getEventTarget"],[197,26,223,35,"instance"],[197,34,223,54],[197,36,223,67],[198,4,224,2],[198,11,224,9],[198,18,224,16,"instance"],[198,26,224,24],[198,31,224,29],[198,39,224,37],[198,43,225,4],[198,51,225,11,"instance"],[198,59,225,19],[198,79,225,11,"instance"],[198,87,225,19],[198,88,225,21,"getScrollableNode"],[198,105,225,38],[198,111,225,43],[198,121,225,53],[199,4,226,6],[200,4,227,6,"instance"],[200,12,227,14],[200,13,227,15,"getScrollableNode"],[200,30,227,32],[200,31,227,33],[200,32,227,34],[200,35,228,6,"instance"],[200,43,228,14],[201,2,229,0],[203,2,231,0],[204,2,232,0],[204,11,232,9,"isFabricInstance"],[204,27,232,25,"isFabricInstance"],[204,28,232,26,"instance"],[204,36,232,39],[204,38,232,50],[205,4,232,50],[205,8,232,50,"_instance$getScrollRe"],[205,29,232,50],[206,4,233,2],[206,11,234,4],[206,15,234,4,"isFabricPublicInstance"],[206,45,234,4],[206,46,234,4,"isFabricPublicInstance"],[206,137,234,26],[206,139,234,27,"instance"],[206,147,234,35],[206,148,234,36],[207,4,235,4],[208,4,236,4],[209,4,237,4],[210,4,238,4],[211,4,239,4],[212,4,240,4],[213,4,241,4],[214,4,242,4],[215,4,243,4],[215,8,243,4,"isFabricPublicInstance"],[215,38,243,4],[215,39,243,4,"isFabricPublicInstance"],[215,130,243,26],[215,132,243,27,"instance"],[215,140,243,35],[215,152,243,27,"instance"],[215,160,243,35],[215,161,243,37,"getNativeScrollRef"],[215,179,243,55],[215,199,243,27,"instance"],[215,207,243,35],[215,208,243,37,"getNativeScrollRef"],[215,226,243,55],[215,227,243,58],[215,228,243,59],[215,229,243,60],[215,233,244,4],[215,237,244,4,"isFabricPublicInstance"],[215,267,244,4],[215,268,244,4,"isFabricPublicInstance"],[215,359,244,26],[215,361,245,6,"instance"],[215,369,245,14],[215,381,245,6,"instance"],[215,389,245,14],[215,390,245,16,"getScrollResponder"],[215,408,245,34],[215,421,245,34,"_instance$getScrollRe"],[215,442,245,34],[215,445,245,6,"instance"],[215,453,245,14],[215,454,245,16,"getScrollResponder"],[215,472,245,34],[215,473,245,37],[215,474,245,38],[215,487,245,6,"_instance$getScrollRe"],[215,508,245,6],[215,509,245,40,"getNativeScrollRef"],[215,527,245,58],[215,547,245,6,"_instance$getScrollRe"],[215,568,245,6],[215,569,245,40,"getNativeScrollRef"],[215,587,245,58],[215,588,245,61],[215,589,246,4],[215,590,246,5],[216,2,248,0],[217,0,248,1],[217,3]],"functionMap":{"names":["<global>","useAnimatedProps","useReducer$argument_0","useMemo$argument_0","AnimatedProps$argument_1","refEffect","onUpdateRef.current","setTimeout$argument_0","<anonymous>","reduceAnimatedProps","useAnimatedPropsLifecycle","useEffect$argument_0","useLayoutEffect$argument_0","getEventTarget","isFabricInstance"],"mappings":"AAA;eCkC;sDCG,kBD;IES,+BC,6BD,CF;IIqB;4BCQ;sCC0D;SDG;ODC;aGc;OHM;KJC;CDM;ASE;CTS;AUS;YCI;GDK;kBEE;WJE;KIE;GFC;kBEE;WJS;KIO;GFC;CVC;AaE;CbM;AcG;CdgB"}},"type":"js/module"}]}