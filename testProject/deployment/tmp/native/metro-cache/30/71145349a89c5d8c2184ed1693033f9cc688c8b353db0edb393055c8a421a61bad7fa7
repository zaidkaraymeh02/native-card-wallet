{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":70,"column":0,"index":1890}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":70,"column":0,"index":1890}}],"key":"ohGilxjVqjyE1GooDVDt9OYg9x0="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":70,"column":0,"index":1890}}],"key":"V6GYoXnblvuuGHJNMy7MHyaunsU="}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":70,"column":0,"index":1890}}],"key":"rcd0dMwf8BS2g+8U1wyhIOxtYEo="}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":70,"column":0,"index":1890}}],"key":"4pxOr+e+5cSZAdeEKxSt3F7LoKY="}},{"name":"@babel/runtime/helpers/inherits","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":70,"column":0,"index":1890}}],"key":"EDnOjopp9yNVawSzfBRsy2dq5dM="}},{"name":"react-native","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":42,"index":42}}],"key":"XEo4Z+Aarw9Y7I7ZLBt66vGLAVQ="}},{"name":"./AnimatedNode","data":{"asyncType":null,"locs":[{"start":{"line":3,"column":0,"index":44},"end":{"line":3,"column":42,"index":86}}],"key":"3roa5JYtcfxCkpexJXwVNW3mWv0="}},{"name":"fbjs/lib/areEqual","data":{"asyncType":null,"locs":[{"start":{"line":6,"column":0,"index":154},"end":{"line":6,"column":42,"index":196}}],"key":"jVhiQhShIH3Y2FMXQ5EY6rGo8/E="}},{"name":"./AnimatedTransform","data":{"asyncType":null,"locs":[{"start":{"line":4,"column":0,"index":87},"end":{"line":4,"column":65,"index":152}}],"key":"Aq5aYmIVMjnlcgggZf8/ZDGwrpY="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.createOrReuseStyleNode = createOrReuseStyleNode;\n  exports.default = void 0;\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/getPrototypeOf\"));\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/inherits\"));\n  var _reactNative = _$$_REQUIRE(_dependencyMap[6], \"react-native\");\n  var _AnimatedNode2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"./AnimatedNode\"));\n  var _areEqual = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"fbjs/lib/areEqual\"));\n  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }\n  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\n  function sanitizeStyle(inputStyle) {\n    var style = {};\n    for (var key in inputStyle) {\n      var value = inputStyle[key];\n      if (value instanceof _AnimatedNode2.default) {\n        style[key] = value.__nodeID;\n      }\n    }\n    return style;\n  }\n  function createOrReuseStyleNode(style, oldNode) {\n    style = _reactNative.StyleSheet.flatten(style) || {};\n    if (style.transform) {\n      style = Object.assign({}, style, {\n        transform: (0, _$$_REQUIRE(_dependencyMap[9], \"./AnimatedTransform\").createOrReuseTransformNode)(style.transform, oldNode && oldNode._style.transform)\n      });\n    }\n    var config = sanitizeStyle(style);\n    if (oldNode && (0, _areEqual.default)(config, oldNode._config)) {\n      return oldNode;\n    }\n    return new AnimatedStyle(style, config);\n  }\n\n  /**\n   * AnimatedStyle should never be directly instantiated, use createOrReuseStyleNode\n   * in order to make a new instance of this node.\n   */\n  var AnimatedStyle = exports.default = /*#__PURE__*/function (_AnimatedNode) {\n    function AnimatedStyle(style, config) {\n      var _this;\n      (0, _classCallCheck2.default)(this, AnimatedStyle);\n      _this = _callSuper(this, AnimatedStyle, [{\n        type: 'style',\n        style: config\n      }, Object.values(style)]);\n      _this._config = config;\n      _this._style = style;\n      return _this;\n    }\n    (0, _inherits2.default)(AnimatedStyle, _AnimatedNode);\n    return (0, _createClass2.default)(AnimatedStyle, [{\n      key: \"toString\",\n      value: function toString() {\n        return `AnimatedStyle, id: ${this.__nodeID}`;\n      }\n    }, {\n      key: \"_walkStyleAndGetAnimatedValues\",\n      value: function _walkStyleAndGetAnimatedValues(style) {\n        var updatedStyle = {};\n        for (var key in style) {\n          var value = style[key];\n          if (value instanceof _AnimatedNode2.default) {\n            updatedStyle[key] = value.__getValue();\n          } else if (value && !Array.isArray(value) && typeof value === 'object') {\n            // Support animating nested values (for example: shadowOffset.height)\n            updatedStyle[key] = this._walkStyleAndGetAnimatedValues(value);\n          }\n        }\n        return updatedStyle;\n      }\n    }, {\n      key: \"__onEvaluate\",\n      value: function __onEvaluate() {\n        return this._walkStyleAndGetAnimatedValues(this._style);\n      }\n    }]);\n  }(_AnimatedNode2.default);\n});","lineCount":86,"map":[[13,2,1,0],[13,6,1,0,"_reactNative"],[13,18,1,0],[13,21,1,0,"_$$_REQUIRE"],[13,32,1,0],[13,33,1,0,"_dependencyMap"],[13,47,1,0],[14,2,3,0],[14,6,3,0,"_AnimatedNode2"],[14,20,3,0],[14,23,3,0,"_interopRequireDefault"],[14,45,3,0],[14,46,3,0,"_$$_REQUIRE"],[14,57,3,0],[14,58,3,0,"_dependencyMap"],[14,72,3,0],[15,2,6,0],[15,6,6,0,"_areEqual"],[15,15,6,0],[15,18,6,0,"_interopRequireDefault"],[15,40,6,0],[15,41,6,0,"_$$_REQUIRE"],[15,52,6,0],[15,53,6,0,"_dependencyMap"],[15,67,6,0],[16,2,6,42],[16,11,6,42,"_callSuper"],[16,22,6,42,"t"],[16,23,6,42],[16,25,6,42,"o"],[16,26,6,42],[16,28,6,42,"e"],[16,29,6,42],[16,40,6,42,"o"],[16,41,6,42],[16,48,6,42,"_getPrototypeOf2"],[16,64,6,42],[16,65,6,42,"default"],[16,72,6,42],[16,74,6,42,"o"],[16,75,6,42],[16,82,6,42,"_possibleConstructorReturn2"],[16,109,6,42],[16,110,6,42,"default"],[16,117,6,42],[16,119,6,42,"t"],[16,120,6,42],[16,122,6,42,"_isNativeReflectConstruct"],[16,147,6,42],[16,152,6,42,"Reflect"],[16,159,6,42],[16,160,6,42,"construct"],[16,169,6,42],[16,170,6,42,"o"],[16,171,6,42],[16,173,6,42,"e"],[16,174,6,42],[16,186,6,42,"_getPrototypeOf2"],[16,202,6,42],[16,203,6,42,"default"],[16,210,6,42],[16,212,6,42,"t"],[16,213,6,42],[16,215,6,42,"constructor"],[16,226,6,42],[16,230,6,42,"o"],[16,231,6,42],[16,232,6,42,"apply"],[16,237,6,42],[16,238,6,42,"t"],[16,239,6,42],[16,241,6,42,"e"],[16,242,6,42],[17,2,6,42],[17,11,6,42,"_isNativeReflectConstruct"],[17,37,6,42],[17,51,6,42,"t"],[17,52,6,42],[17,56,6,42,"Boolean"],[17,63,6,42],[17,64,6,42,"prototype"],[17,73,6,42],[17,74,6,42,"valueOf"],[17,81,6,42],[17,82,6,42,"call"],[17,86,6,42],[17,87,6,42,"Reflect"],[17,94,6,42],[17,95,6,42,"construct"],[17,104,6,42],[17,105,6,42,"Boolean"],[17,112,6,42],[17,145,6,42,"t"],[17,146,6,42],[17,159,6,42,"_isNativeReflectConstruct"],[17,184,6,42],[17,196,6,42,"_isNativeReflectConstruct"],[17,222,6,42],[17,235,6,42,"t"],[17,236,6,42],[18,2,8,0],[18,11,8,9,"sanitizeStyle"],[18,24,8,22,"sanitizeStyle"],[18,25,8,23,"inputStyle"],[18,35,8,33],[18,37,8,35],[19,4,9,2],[19,8,9,8,"style"],[19,13,9,13],[19,16,9,16],[19,17,9,17],[19,18,9,18],[20,4,10,2],[20,9,10,7],[20,13,10,13,"key"],[20,16,10,16],[20,20,10,20,"inputStyle"],[20,30,10,30],[20,32,10,32],[21,6,11,4],[21,10,11,10,"value"],[21,15,11,15],[21,18,11,18,"inputStyle"],[21,28,11,28],[21,29,11,29,"key"],[21,32,11,32],[21,33,11,33],[22,6,12,4],[22,10,12,8,"value"],[22,15,12,13],[22,27,12,25,"AnimatedNode"],[22,49,12,37],[22,51,12,39],[23,8,13,6,"style"],[23,13,13,11],[23,14,13,12,"key"],[23,17,13,15],[23,18,13,16],[23,21,13,19,"value"],[23,26,13,24],[23,27,13,25,"__nodeID"],[23,35,13,33],[24,6,14,4],[25,4,15,2],[26,4,16,2],[26,11,16,9,"style"],[26,16,16,14],[27,2,17,0],[28,2,19,7],[28,11,19,16,"createOrReuseStyleNode"],[28,33,19,38,"createOrReuseStyleNode"],[28,34,19,39,"style"],[28,39,19,44],[28,41,19,46,"oldNode"],[28,48,19,53],[28,50,19,55],[29,4,20,2,"style"],[29,9,20,7],[29,12,20,10,"StyleSheet"],[29,35,20,20],[29,36,20,21,"flatten"],[29,43,20,28],[29,44,20,29,"style"],[29,49,20,34],[29,50,20,35],[29,54,20,39],[29,55,20,40],[29,56,20,41],[30,4,21,2],[30,8,21,6,"style"],[30,13,21,11],[30,14,21,12,"transform"],[30,23,21,21],[30,25,21,23],[31,6,22,4,"style"],[31,11,22,9],[31,14,22,9,"Object"],[31,20,22,9],[31,21,22,9,"assign"],[31,27,22,9],[31,32,23,9,"style"],[31,37,23,14],[32,8,24,6,"transform"],[32,17,24,15],[32,19,24,17],[32,23,24,17,"createOrReuseTransformNode"],[32,53,24,17],[32,54,24,17,"createOrReuseTransformNode"],[32,103,24,43],[32,105,25,8,"style"],[32,110,25,13],[32,111,25,14,"transform"],[32,120,25,23],[32,122,26,8,"oldNode"],[32,129,26,15],[32,133,26,19,"oldNode"],[32,140,26,26],[32,141,26,27,"_style"],[32,147,26,33],[32,148,26,34,"transform"],[32,157,27,6],[33,6,27,7],[33,8,28,5],[34,4,29,2],[35,4,30,2],[35,8,30,8,"config"],[35,14,30,14],[35,17,30,17,"sanitizeStyle"],[35,30,30,30],[35,31,30,31,"style"],[35,36,30,36],[35,37,30,37],[36,4,31,2],[36,8,31,6,"oldNode"],[36,15,31,13],[36,19,31,17],[36,23,31,17,"deepEqual"],[36,40,31,26],[36,42,31,27,"config"],[36,48,31,33],[36,50,31,35,"oldNode"],[36,57,31,42],[36,58,31,43,"_config"],[36,65,31,50],[36,66,31,51],[36,68,31,53],[37,6,32,4],[37,13,32,11,"oldNode"],[37,20,32,18],[38,4,33,2],[39,4,34,2],[39,11,34,9],[39,15,34,13,"AnimatedStyle"],[39,28,34,26],[39,29,34,27,"style"],[39,34,34,32],[39,36,34,34,"config"],[39,42,34,40],[39,43,34,41],[40,2,35,0],[42,2,37,0],[43,0,38,0],[44,0,39,0],[45,0,40,0],[46,2,37,0],[46,6,41,21,"AnimatedStyle"],[46,19,41,34],[46,22,41,34,"exports"],[46,29,41,34],[46,30,41,34,"default"],[46,37,41,34],[46,63,41,34,"_AnimatedNode"],[46,76,41,34],[47,4,42,2],[47,13,42,2,"AnimatedStyle"],[47,27,42,14,"style"],[47,32,42,19],[47,34,42,21,"config"],[47,40,42,27],[47,42,42,29],[48,6,42,29],[48,10,42,29,"_this"],[48,15,42,29],[49,6,42,29],[49,10,42,29,"_classCallCheck2"],[49,26,42,29],[49,27,42,29,"default"],[49,34,42,29],[49,42,42,29,"AnimatedStyle"],[49,55,42,29],[50,6,43,4,"_this"],[50,11,43,4],[50,14,43,4,"_callSuper"],[50,24,43,4],[50,31,43,4,"AnimatedStyle"],[50,44,43,4],[50,47,43,10],[51,8,43,12,"type"],[51,12,43,16],[51,14,43,18],[51,21,43,25],[52,8,43,27,"style"],[52,13,43,32],[52,15,43,34,"config"],[53,6,43,41],[53,7,43,42],[53,9,43,44,"Object"],[53,15,43,50],[53,16,43,51,"values"],[53,22,43,57],[53,23,43,58,"style"],[53,28,43,63],[53,29,43,64],[54,6,44,4,"_this"],[54,11,44,4],[54,12,44,9,"_config"],[54,19,44,16],[54,22,44,19,"config"],[54,28,44,25],[55,6,45,4,"_this"],[55,11,45,4],[55,12,45,9,"_style"],[55,18,45,15],[55,21,45,18,"style"],[55,26,45,23],[56,6,45,24],[56,13,45,24,"_this"],[56,18,45,24],[57,4,46,2],[58,4,46,3],[58,8,46,3,"_inherits2"],[58,18,46,3],[58,19,46,3,"default"],[58,26,46,3],[58,28,46,3,"AnimatedStyle"],[58,41,46,3],[58,43,46,3,"_AnimatedNode"],[58,56,46,3],[59,4,46,3],[59,15,46,3,"_createClass2"],[59,28,46,3],[59,29,46,3,"default"],[59,36,46,3],[59,38,46,3,"AnimatedStyle"],[59,51,46,3],[60,6,46,3,"key"],[60,9,46,3],[61,6,46,3,"value"],[61,11,46,3],[61,13,48,2],[61,22,48,2,"toString"],[61,30,48,10,"toString"],[61,31,48,10],[61,33,48,13],[62,8,49,4],[62,15,49,11],[62,37,49,33],[62,41,49,37],[62,42,49,38,"__nodeID"],[62,50,49,46],[62,52,49,48],[63,6,50,2],[64,4,50,3],[65,6,50,3,"key"],[65,9,50,3],[66,6,50,3,"value"],[66,11,50,3],[66,13,52,2],[66,22,52,2,"_walkStyleAndGetAnimatedValues"],[66,52,52,32,"_walkStyleAndGetAnimatedValues"],[66,53,52,33,"style"],[66,58,52,38],[66,60,52,40],[67,8,53,4],[67,12,53,10,"updatedStyle"],[67,24,53,22],[67,27,53,25],[67,28,53,26],[67,29,53,27],[68,8,54,4],[68,13,54,9],[68,17,54,15,"key"],[68,20,54,18],[68,24,54,22,"style"],[68,29,54,27],[68,31,54,29],[69,10,55,6],[69,14,55,12,"value"],[69,19,55,17],[69,22,55,20,"style"],[69,27,55,25],[69,28,55,26,"key"],[69,31,55,29],[69,32,55,30],[70,10,56,6],[70,14,56,10,"value"],[70,19,56,15],[70,31,56,27,"AnimatedNode"],[70,53,56,39],[70,55,56,41],[71,12,57,8,"updatedStyle"],[71,24,57,20],[71,25,57,21,"key"],[71,28,57,24],[71,29,57,25],[71,32,57,28,"value"],[71,37,57,33],[71,38,57,34,"__getValue"],[71,48,57,44],[71,49,57,45],[71,50,57,46],[72,10,58,6],[72,11,58,7],[72,17,58,13],[72,21,58,17,"value"],[72,26,58,22],[72,30,58,26],[72,31,58,27,"Array"],[72,36,58,32],[72,37,58,33,"isArray"],[72,44,58,40],[72,45,58,41,"value"],[72,50,58,46],[72,51,58,47],[72,55,58,51],[72,62,58,58,"value"],[72,67,58,63],[72,72,58,68],[72,80,58,76],[72,82,58,78],[73,12,59,8],[74,12,60,8,"updatedStyle"],[74,24,60,20],[74,25,60,21,"key"],[74,28,60,24],[74,29,60,25],[74,32,60,28],[74,36,60,32],[74,37,60,33,"_walkStyleAndGetAnimatedValues"],[74,67,60,63],[74,68,60,64,"value"],[74,73,60,69],[74,74,60,70],[75,10,61,6],[76,8,62,4],[77,8,63,4],[77,15,63,11,"updatedStyle"],[77,27,63,23],[78,6,64,2],[79,4,64,3],[80,6,64,3,"key"],[80,9,64,3],[81,6,64,3,"value"],[81,11,64,3],[81,13,66,2],[81,22,66,2,"__onEvaluate"],[81,34,66,14,"__onEvaluate"],[81,35,66,14],[81,37,66,17],[82,8,67,4],[82,15,67,11],[82,19,67,15],[82,20,67,16,"_walkStyleAndGetAnimatedValues"],[82,50,67,46],[82,51,67,47],[82,55,67,51],[82,56,67,52,"_style"],[82,62,67,58],[82,63,67,59],[83,6,68,2],[84,4,68,3],[85,2,68,3],[85,4,41,43,"AnimatedNode"],[85,26,41,55],[86,0,41,55],[86,3]],"functionMap":{"names":["<global>","sanitizeStyle","createOrReuseStyleNode","AnimatedStyle","constructor","toString","_walkStyleAndGetAnimatedValues","__onEvaluate"],"mappings":"AAA;ACO;CDS;OEE;CFgB;eGM;ECC;GDI;EEE;GFE;EGE;GHY;EIE;GJE;CHC"}},"type":"js/module"}]}