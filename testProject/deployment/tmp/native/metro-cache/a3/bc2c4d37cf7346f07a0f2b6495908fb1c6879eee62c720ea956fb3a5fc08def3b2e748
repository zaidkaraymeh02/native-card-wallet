{"dependencies":[{"name":"react","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":31,"index":31}}],"key":"a4EMkKqamYWCMMPV7UeQlqGQ+ks="}},{"name":"react-native","data":{"asyncType":null,"locs":[{"start":{"line":2,"column":0,"index":32},"end":{"line":2,"column":66,"index":98}}],"key":"XEo4Z+Aarw9Y7I7ZLBt66vGLAVQ="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = useKeyboardManager;\n  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0], \"react\"));\n  var _reactNative = _$$_REQUIRE(_dependencyMap[1], \"react-native\");\n  function _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\n  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\n  function useKeyboardManager(isEnabled) {\n    // Numeric id of the previously focused text input\n    // When a gesture didn't change the tab, we can restore the focused input with this\n    var previouslyFocusedTextInputRef = React.useRef(undefined);\n    var startTimestampRef = React.useRef(0);\n    var keyboardTimeoutRef = React.useRef();\n    var clearKeyboardTimeout = React.useCallback(function () {\n      if (keyboardTimeoutRef.current !== undefined) {\n        clearTimeout(keyboardTimeoutRef.current);\n        keyboardTimeoutRef.current = undefined;\n      }\n    }, []);\n    var onPageChangeStart = React.useCallback(function () {\n      if (!isEnabled()) {\n        return;\n      }\n      clearKeyboardTimeout();\n      var input = _reactNative.TextInput.State.currentlyFocusedInput();\n\n      // When a page change begins, blur the currently focused input\n      input == null || input.blur();\n\n      // Store the id of this input so we can refocus it if change was cancelled\n      previouslyFocusedTextInputRef.current = input;\n\n      // Store timestamp for touch start\n      startTimestampRef.current = Date.now();\n    }, [clearKeyboardTimeout, isEnabled]);\n    var onPageChangeConfirm = React.useCallback(function (force) {\n      if (!isEnabled()) {\n        return;\n      }\n      clearKeyboardTimeout();\n      if (force) {\n        // Always dismiss input, even if we don't have a ref to it\n        // We might not have the ref if onPageChangeStart was never called\n        // This can happen if page change was not from a gesture\n        _reactNative.Keyboard.dismiss();\n      } else {\n        var input = previouslyFocusedTextInputRef.current;\n\n        // Dismiss the keyboard only if an input was a focused before\n        // This makes sure we don't dismiss input on going back and focusing an input\n        input == null || input.blur();\n      }\n\n      // Cleanup the ID on successful page change\n      previouslyFocusedTextInputRef.current = undefined;\n    }, [clearKeyboardTimeout, isEnabled]);\n    var onPageChangeCancel = React.useCallback(function () {\n      if (!isEnabled()) {\n        return;\n      }\n      clearKeyboardTimeout();\n\n      // The page didn't change, we should restore the focus of text input\n      var input = previouslyFocusedTextInputRef.current;\n      if (input) {\n        // If the interaction was super short we should make sure keyboard won't hide again.\n\n        // Too fast input refocus will result only in keyboard flashing on screen and hiding right away.\n        // During first ~100ms keyboard will be dismissed no matter what,\n        // so we have to make sure it won't interrupt input refocus logic.\n        // That's why when the interaction is shorter than 100ms we add delay so it won't hide once again.\n        // Subtracting timestamps makes us sure the delay is executed only when needed.\n        if (Date.now() - startTimestampRef.current < 100) {\n          keyboardTimeoutRef.current = setTimeout(function () {\n            input == null || input.focus();\n            previouslyFocusedTextInputRef.current = undefined;\n          }, 100);\n        } else {\n          input == null || input.focus();\n          previouslyFocusedTextInputRef.current = undefined;\n        }\n      }\n    }, [clearKeyboardTimeout, isEnabled]);\n    React.useEffect(function () {\n      return function () {\n        return clearKeyboardTimeout();\n      };\n    }, [clearKeyboardTimeout]);\n    return {\n      onPageChangeStart: onPageChangeStart,\n      onPageChangeConfirm: onPageChangeConfirm,\n      onPageChangeCancel: onPageChangeCancel\n    };\n  }\n});","lineCount":97,"map":[[6,2,1,0],[6,6,1,0,"React"],[6,11,1,0],[6,14,1,0,"_interopRequireWildcard"],[6,37,1,0],[6,38,1,0,"_$$_REQUIRE"],[6,49,1,0],[6,50,1,0,"_dependencyMap"],[6,64,1,0],[7,2,2,0],[7,6,2,0,"_reactNative"],[7,18,2,0],[7,21,2,0,"_$$_REQUIRE"],[7,32,2,0],[7,33,2,0,"_dependencyMap"],[7,47,2,0],[8,2,2,66],[8,11,2,66,"_getRequireWildcardCache"],[8,36,2,66,"e"],[8,37,2,66],[8,66,2,66,"WeakMap"],[8,73,2,66],[8,92,2,66,"r"],[8,93,2,66],[8,100,2,66,"WeakMap"],[8,107,2,66],[8,111,2,66,"t"],[8,112,2,66],[8,119,2,66,"WeakMap"],[8,126,2,66],[8,138,2,66,"_getRequireWildcardCache"],[8,162,2,66],[8,174,2,66,"_getRequireWildcardCache"],[8,199,2,66,"e"],[8,200,2,66],[8,211,2,66,"e"],[8,212,2,66],[8,215,2,66,"t"],[8,216,2,66],[8,219,2,66,"r"],[8,220,2,66],[8,225,2,66,"e"],[8,226,2,66],[9,2,2,66],[9,11,2,66,"_interopRequireWildcard"],[9,35,2,66,"e"],[9,36,2,66],[9,38,2,66,"r"],[9,39,2,66],[9,48,2,66,"r"],[9,49,2,66],[9,53,2,66,"e"],[9,54,2,66],[9,58,2,66,"e"],[9,59,2,66],[9,60,2,66,"__esModule"],[9,70,2,66],[9,79,2,66,"e"],[9,80,2,66],[9,95,2,66,"e"],[9,96,2,66],[9,119,2,66,"e"],[9,120,2,66],[9,145,2,66,"e"],[9,146,2,66],[9,157,2,66,"default"],[9,164,2,66],[9,166,2,66,"e"],[9,167,2,66],[9,175,2,66,"t"],[9,176,2,66],[9,179,2,66,"_getRequireWildcardCache"],[9,203,2,66],[9,204,2,66,"r"],[9,205,2,66],[9,212,2,66,"t"],[9,213,2,66],[9,217,2,66,"t"],[9,218,2,66],[9,219,2,66,"has"],[9,222,2,66],[9,223,2,66,"e"],[9,224,2,66],[9,234,2,66,"t"],[9,235,2,66],[9,236,2,66,"get"],[9,239,2,66],[9,240,2,66,"e"],[9,241,2,66],[9,248,2,66,"n"],[9,249,2,66],[9,254,2,66,"__proto__"],[9,263,2,66],[9,273,2,66,"a"],[9,274,2,66],[9,277,2,66,"Object"],[9,283,2,66],[9,284,2,66,"defineProperty"],[9,298,2,66],[9,302,2,66,"Object"],[9,308,2,66],[9,309,2,66,"getOwnPropertyDescriptor"],[9,333,2,66],[9,344,2,66,"u"],[9,345,2,66],[9,349,2,66,"e"],[9,350,2,66],[9,370,2,66,"u"],[9,371,2,66],[9,378,2,66,"hasOwnProperty"],[9,392,2,66],[9,393,2,66,"call"],[9,397,2,66],[9,398,2,66,"e"],[9,399,2,66],[9,401,2,66,"u"],[9,402,2,66],[9,411,2,66,"i"],[9,412,2,66],[9,415,2,66,"a"],[9,416,2,66],[9,419,2,66,"Object"],[9,425,2,66],[9,426,2,66,"getOwnPropertyDescriptor"],[9,450,2,66],[9,451,2,66,"e"],[9,452,2,66],[9,454,2,66,"u"],[9,455,2,66],[9,465,2,66,"i"],[9,466,2,66],[9,471,2,66,"i"],[9,472,2,66],[9,473,2,66,"get"],[9,476,2,66],[9,480,2,66,"i"],[9,481,2,66],[9,482,2,66,"set"],[9,485,2,66],[9,489,2,66,"Object"],[9,495,2,66],[9,496,2,66,"defineProperty"],[9,510,2,66],[9,511,2,66,"n"],[9,512,2,66],[9,514,2,66,"u"],[9,515,2,66],[9,517,2,66,"i"],[9,518,2,66],[9,522,2,66,"n"],[9,523,2,66],[9,524,2,66,"u"],[9,525,2,66],[9,529,2,66,"e"],[9,530,2,66],[9,531,2,66,"u"],[9,532,2,66],[9,544,2,66,"n"],[9,545,2,66],[9,546,2,66,"default"],[9,553,2,66],[9,556,2,66,"e"],[9,557,2,66],[9,559,2,66,"t"],[9,560,2,66],[9,564,2,66,"t"],[9,565,2,66],[9,566,2,66,"set"],[9,569,2,66],[9,570,2,66,"e"],[9,571,2,66],[9,573,2,66,"n"],[9,574,2,66],[9,577,2,66,"n"],[9,578,2,66],[10,2,6,15],[10,11,6,24,"useKeyboardManager"],[10,29,6,42,"useKeyboardManager"],[10,30,6,43,"isEnabled"],[10,39,6,67],[10,41,6,69],[11,4,7,2],[12,4,8,2],[13,4,9,2],[13,8,9,8,"previouslyFocusedTextInputRef"],[13,37,9,37],[13,40,9,40,"React"],[13,45,9,45],[13,46,9,46,"useRef"],[13,52,9,52],[13,53,9,63,"undefined"],[13,62,9,72],[13,63,9,73],[14,4,10,2],[14,8,10,8,"startTimestampRef"],[14,25,10,25],[14,28,10,28,"React"],[14,33,10,33],[14,34,10,34,"useRef"],[14,40,10,40],[14,41,10,49],[14,42,10,50],[14,43,10,51],[15,4,11,2],[15,8,11,8,"keyboardTimeoutRef"],[15,26,11,26],[15,29,11,29,"React"],[15,34,11,34],[15,35,11,35,"useRef"],[15,41,11,41],[15,42,11,47],[15,43,11,48],[16,4,13,2],[16,8,13,8,"clearKeyboardTimeout"],[16,28,13,28],[16,31,13,31,"React"],[16,36,13,36],[16,37,13,37,"useCallback"],[16,48,13,48],[16,49,13,49],[16,61,13,55],[17,6,14,4],[17,10,14,8,"keyboardTimeoutRef"],[17,28,14,26],[17,29,14,27,"current"],[17,36,14,34],[17,41,14,39,"undefined"],[17,50,14,48],[17,52,14,50],[18,8,15,6,"clearTimeout"],[18,20,15,18],[18,21,15,19,"keyboardTimeoutRef"],[18,39,15,37],[18,40,15,38,"current"],[18,47,15,45],[18,48,15,46],[19,8,16,6,"keyboardTimeoutRef"],[19,26,16,24],[19,27,16,25,"current"],[19,34,16,32],[19,37,16,35,"undefined"],[19,46,16,44],[20,6,17,4],[21,4,18,2],[21,5,18,3],[21,7,18,5],[21,9,18,7],[21,10,18,8],[22,4,20,2],[22,8,20,8,"onPageChangeStart"],[22,25,20,25],[22,28,20,28,"React"],[22,33,20,33],[22,34,20,34,"useCallback"],[22,45,20,45],[22,46,20,46],[22,58,20,52],[23,6,21,4],[23,10,21,8],[23,11,21,9,"isEnabled"],[23,20,21,18],[23,21,21,19],[23,22,21,20],[23,24,21,22],[24,8,22,6],[25,6,23,4],[26,6,25,4,"clearKeyboardTimeout"],[26,26,25,24],[26,27,25,25],[26,28,25,26],[27,6,27,4],[27,10,27,10,"input"],[27,15,27,25],[27,18,27,28,"TextInput"],[27,40,27,37],[27,41,27,38,"State"],[27,46,27,43],[27,47,27,44,"currentlyFocusedInput"],[27,68,27,65],[27,69,27,66],[27,70,27,67],[29,6,29,4],[30,6,30,4,"input"],[30,11,30,9],[30,23,30,4,"input"],[30,28,30,9],[30,29,30,11,"blur"],[30,33,30,15],[30,34,30,16],[30,35,30,17],[32,6,32,4],[33,6,33,4,"previouslyFocusedTextInputRef"],[33,35,33,33],[33,36,33,34,"current"],[33,43,33,41],[33,46,33,44,"input"],[33,51,33,49],[35,6,35,4],[36,6,36,4,"startTimestampRef"],[36,23,36,21],[36,24,36,22,"current"],[36,31,36,29],[36,34,36,32,"Date"],[36,38,36,36],[36,39,36,37,"now"],[36,42,36,40],[36,43,36,41],[36,44,36,42],[37,4,37,2],[37,5,37,3],[37,7,37,5],[37,8,37,6,"clearKeyboardTimeout"],[37,28,37,26],[37,30,37,28,"isEnabled"],[37,39,37,37],[37,40,37,38],[37,41,37,39],[38,4,39,2],[38,8,39,8,"onPageChangeConfirm"],[38,27,39,27],[38,30,39,30,"React"],[38,35,39,35],[38,36,39,36,"useCallback"],[38,47,39,47],[38,48,40,4],[38,58,40,5,"force"],[38,63,40,19],[38,65,40,24],[39,6,41,6],[39,10,41,10],[39,11,41,11,"isEnabled"],[39,20,41,20],[39,21,41,21],[39,22,41,22],[39,24,41,24],[40,8,42,8],[41,6,43,6],[42,6,45,6,"clearKeyboardTimeout"],[42,26,45,26],[42,27,45,27],[42,28,45,28],[43,6,47,6],[43,10,47,10,"force"],[43,15,47,15],[43,17,47,17],[44,8,48,8],[45,8,49,8],[46,8,50,8],[47,8,51,8,"Keyboard"],[47,29,51,16],[47,30,51,17,"dismiss"],[47,37,51,24],[47,38,51,25],[47,39,51,26],[48,6,52,6],[48,7,52,7],[48,13,52,13],[49,8,53,8],[49,12,53,14,"input"],[49,17,53,19],[49,20,53,22,"previouslyFocusedTextInputRef"],[49,49,53,51],[49,50,53,52,"current"],[49,57,53,59],[51,8,55,8],[52,8,56,8],[53,8,57,8,"input"],[53,13,57,13],[53,25,57,8,"input"],[53,30,57,13],[53,31,57,15,"blur"],[53,35,57,19],[53,36,57,20],[53,37,57,21],[54,6,58,6],[56,6,60,6],[57,6,61,6,"previouslyFocusedTextInputRef"],[57,35,61,35],[57,36,61,36,"current"],[57,43,61,43],[57,46,61,46,"undefined"],[57,55,61,55],[58,4,62,4],[58,5,62,5],[58,7,63,4],[58,8,63,5,"clearKeyboardTimeout"],[58,28,63,25],[58,30,63,27,"isEnabled"],[58,39,63,36],[58,40,64,2],[58,41,64,3],[59,4,66,2],[59,8,66,8,"onPageChangeCancel"],[59,26,66,26],[59,29,66,29,"React"],[59,34,66,34],[59,35,66,35,"useCallback"],[59,46,66,46],[59,47,66,47],[59,59,66,53],[60,6,67,4],[60,10,67,8],[60,11,67,9,"isEnabled"],[60,20,67,18],[60,21,67,19],[60,22,67,20],[60,24,67,22],[61,8,68,6],[62,6,69,4],[63,6,71,4,"clearKeyboardTimeout"],[63,26,71,24],[63,27,71,25],[63,28,71,26],[65,6,73,4],[66,6,74,4],[66,10,74,10,"input"],[66,15,74,15],[66,18,74,18,"previouslyFocusedTextInputRef"],[66,47,74,47],[66,48,74,48,"current"],[66,55,74,55],[67,6,76,4],[67,10,76,8,"input"],[67,15,76,13],[67,17,76,15],[68,8,77,6],[70,8,79,6],[71,8,80,6],[72,8,81,6],[73,8,82,6],[74,8,83,6],[75,8,84,6],[75,12,84,10,"Date"],[75,16,84,14],[75,17,84,15,"now"],[75,20,84,18],[75,21,84,19],[75,22,84,20],[75,25,84,23,"startTimestampRef"],[75,42,84,40],[75,43,84,41,"current"],[75,50,84,48],[75,53,84,51],[75,56,84,54],[75,58,84,56],[76,10,85,8,"keyboardTimeoutRef"],[76,28,85,26],[76,29,85,27,"current"],[76,36,85,34],[76,39,85,37,"setTimeout"],[76,49,85,47],[76,50,85,48],[76,62,85,54],[77,12,86,10,"input"],[77,17,86,15],[77,29,86,10,"input"],[77,34,86,15],[77,35,86,17,"focus"],[77,40,86,22],[77,41,86,23],[77,42,86,24],[78,12,87,10,"previouslyFocusedTextInputRef"],[78,41,87,39],[78,42,87,40,"current"],[78,49,87,47],[78,52,87,50,"undefined"],[78,61,87,59],[79,10,88,8],[79,11,88,9],[79,13,88,11],[79,16,88,14],[79,17,88,15],[80,8,89,6],[80,9,89,7],[80,15,89,13],[81,10,90,8,"input"],[81,15,90,13],[81,27,90,8,"input"],[81,32,90,13],[81,33,90,15,"focus"],[81,38,90,20],[81,39,90,21],[81,40,90,22],[82,10,91,8,"previouslyFocusedTextInputRef"],[82,39,91,37],[82,40,91,38,"current"],[82,47,91,45],[82,50,91,48,"undefined"],[82,59,91,57],[83,8,92,6],[84,6,93,4],[85,4,94,2],[85,5,94,3],[85,7,94,5],[85,8,94,6,"clearKeyboardTimeout"],[85,28,94,26],[85,30,94,28,"isEnabled"],[85,39,94,37],[85,40,94,38],[85,41,94,39],[86,4,96,2,"React"],[86,9,96,7],[86,10,96,8,"useEffect"],[86,19,96,17],[86,20,96,18],[86,32,96,24],[87,6,97,4],[87,13,97,11],[88,8,97,11],[88,15,97,17,"clearKeyboardTimeout"],[88,35,97,37],[88,36,97,38],[88,37,97,39],[89,6,97,39],[90,4,98,2],[90,5,98,3],[90,7,98,5],[90,8,98,6,"clearKeyboardTimeout"],[90,28,98,26],[90,29,98,27],[90,30,98,28],[91,4,100,2],[91,11,100,9],[92,6,101,4,"onPageChangeStart"],[92,23,101,21],[92,25,101,4,"onPageChangeStart"],[92,42,101,21],[93,6,102,4,"onPageChangeConfirm"],[93,25,102,23],[93,27,102,4,"onPageChangeConfirm"],[93,46,102,23],[94,6,103,4,"onPageChangeCancel"],[94,24,103,22],[94,26,103,4,"onPageChangeCancel"],[95,4,104,2],[95,5,104,3],[96,2,105,0],[97,0,105,1],[97,3]],"functionMap":{"names":["<global>","useKeyboardManager","clearKeyboardTimeout","onPageChangeStart","onPageChangeConfirm","onPageChangeCancel","setTimeout$argument_0","React.useEffect$argument_0","<anonymous>"],"mappings":"AAA;eCK;iDCO;GDK;8CEE;GFiB;IGG;KHsB;+CII;gDCmB;SDG;GJM;kBME;WCC,4BD;GNC;CDO"}},"type":"js/module"}]}