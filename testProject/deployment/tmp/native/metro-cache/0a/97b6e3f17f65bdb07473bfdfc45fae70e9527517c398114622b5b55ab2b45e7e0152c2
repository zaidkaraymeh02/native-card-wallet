{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":294,"column":0,"index":8718}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/readOnlyError","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":294,"column":0,"index":8718}}],"key":"sXvaNDymRtlPafiB+f0cuzg7sKM="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":294,"column":0,"index":8718}}],"key":"ohGilxjVqjyE1GooDVDt9OYg9x0="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":294,"column":0,"index":8718}}],"key":"V6GYoXnblvuuGHJNMy7MHyaunsU="}},{"name":"../../../../Libraries/Utilities/warnOnce","data":{"asyncType":null,"locs":[{"start":{"line":20,"column":0,"index":500},"end":{"line":20,"column":64,"index":564}}],"key":"Ghh5qlfuZKYys9QXlkSDlK8AUjk="}},{"name":"./EventCounts","data":{"asyncType":null,"locs":[{"start":{"line":21,"column":0,"index":565},"end":{"line":21,"column":40,"index":605}}],"key":"jwR/v3s0YGimAkhZcXLqPRw0Pig="}},{"name":"./MemoryInfo","data":{"asyncType":null,"locs":[{"start":{"line":22,"column":0,"index":606},"end":{"line":22,"column":38,"index":644}}],"key":"dxSGpmGNu9nn97h5U//y4Z7TNCE="}},{"name":"./ReactNativeStartupTiming","data":{"asyncType":null,"locs":[{"start":{"line":30,"column":0,"index":942},"end":{"line":30,"column":66,"index":1008}}],"key":"e1WSS1Vx32J2Zrr9VnAGPRKnSbc="}},{"name":"./specs/NativePerformance","data":{"asyncType":null,"locs":[{"start":{"line":31,"column":0,"index":1009},"end":{"line":31,"column":58,"index":1067}}],"key":"dSyYbx9fIQc06HOZYZ8x/I6MjMY="}},{"name":"./specs/NativePerformanceObserver","data":{"asyncType":null,"locs":[{"start":{"line":32,"column":0,"index":1068},"end":{"line":32,"column":74,"index":1142}}],"key":"e5cFiNYK24FFj+OBvYsOcKKfpSs="}},{"name":"./PerformanceEntry","data":{"asyncType":null,"locs":[{"start":{"line":23,"column":0,"index":645},"end":{"line":23,"column":61,"index":706}},{"start":{"line":23,"column":0,"index":645},"end":{"line":23,"column":61,"index":706}},{"start":{"line":23,"column":0,"index":645},"end":{"line":23,"column":61,"index":706}},{"start":{"line":23,"column":0,"index":645},"end":{"line":23,"column":61,"index":706}},{"start":{"line":23,"column":0,"index":645},"end":{"line":23,"column":61,"index":706}}],"key":"limm2T+T1Tv0g3goGjXkwAZT0/A="}},{"name":"./RawPerformanceEntry","data":{"asyncType":null,"locs":[{"start":{"line":25,"column":0,"index":778},"end":{"line":28,"column":31,"index":872}},{"start":{"line":25,"column":0,"index":778},"end":{"line":28,"column":31,"index":872}},{"start":{"line":25,"column":0,"index":778},"end":{"line":28,"column":31,"index":872}},{"start":{"line":25,"column":0,"index":778},"end":{"line":28,"column":31,"index":872}},{"start":{"line":25,"column":0,"index":778},"end":{"line":28,"column":31,"index":872}},{"start":{"line":25,"column":0,"index":778},"end":{"line":28,"column":31,"index":872}},{"start":{"line":25,"column":0,"index":778},"end":{"line":28,"column":31,"index":872}},{"start":{"line":25,"column":0,"index":778},"end":{"line":28,"column":31,"index":872}}],"key":"zrkCAbiGCMzHpBgnI/Ykq8YEer4="}},{"name":"./UserTiming","data":{"asyncType":null,"locs":[{"start":{"line":33,"column":0,"index":1143},"end":{"line":33,"column":65,"index":1208}},{"start":{"line":33,"column":0,"index":1143},"end":{"line":33,"column":65,"index":1208}}],"key":"XM+UYOP8Bdq7Emnl92thq3oOZ90="}},{"name":"./PerformanceObserver","data":{"asyncType":null,"locs":[{"start":{"line":24,"column":0,"index":707},"end":{"line":24,"column":70,"index":777}},{"start":{"line":24,"column":0,"index":707},"end":{"line":24,"column":70,"index":777}},{"start":{"line":24,"column":0,"index":707},"end":{"line":24,"column":70,"index":777}},{"start":{"line":24,"column":0,"index":707},"end":{"line":24,"column":70,"index":777}},{"start":{"line":24,"column":0,"index":707},"end":{"line":24,"column":70,"index":777}}],"key":"dZd/Qr9hEmOi9AeTIps7GE30VG4="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _readOnlyError2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/readOnlyError\"));\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/createClass\"));\n  var _warnOnce = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"../../../../Libraries/Utilities/warnOnce\"));\n  var _EventCounts = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"./EventCounts\"));\n  var _MemoryInfo = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"./MemoryInfo\"));\n  var _ReactNativeStartupTiming = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"./ReactNativeStartupTiming\"));\n  var _NativePerformance = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"./specs/NativePerformance\"));\n  var _NativePerformanceObserver = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9], \"./specs/NativePerformanceObserver\"));\n  var _ref, _NativePerformance$no;\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * @format\n   * \n   */\n  // flowlint unsafe-getters-setters:off\n  var getCurrentTimeStamp = (_ref = (_NativePerformance$no = _NativePerformance.default == null ? void 0 : _NativePerformance.default.now) != null ? _NativePerformance$no : global.nativePerformanceNow) != null ? _ref : function () {\n    return Date.now();\n  };\n\n  // We want some of the performance entry types to be always logged,\n  // even if they are not currently observed - this is either to be able to\n  // retrieve them at any time via Performance.getEntries* or to refer by other entries\n  // (such as when measures may refer to marks, even if the latter are not observed)\n  if (_NativePerformanceObserver.default != null && _NativePerformanceObserver.default.setIsBuffered) {\n    _NativePerformanceObserver.default == null || _NativePerformanceObserver.default.setIsBuffered(_$$_REQUIRE(_dependencyMap[10], \"./PerformanceEntry\").ALWAYS_LOGGED_ENTRY_TYPES.map(_$$_REQUIRE(_dependencyMap[11], \"./RawPerformanceEntry\").performanceEntryTypeToRaw), true);\n  }\n  function warnNoNativePerformance() {\n    (0, _warnOnce.default)('missing-native-performance', 'Missing native implementation of Performance');\n  }\n\n  /**\n   * Partial implementation of the Performance interface for RN,\n   * corresponding to the standard in\n   * https://www.w3.org/TR/user-timing/#extensions-performance-interface\n   */\n  var Performance = exports.default = /*#__PURE__*/function () {\n    function Performance() {\n      (0, _classCallCheck2.default)(this, Performance);\n      this.eventCounts = new _EventCounts.default();\n    }\n    return (0, _createClass2.default)(Performance, [{\n      key: \"memory\",\n      get:\n      // Get the current JS memory information.\n      function get() {\n        if (_NativePerformance.default != null && _NativePerformance.default.getSimpleMemoryInfo) {\n          // JSI API implementations may have different variants of names for the JS\n          // heap information we need here. We will parse the result based on our\n          // guess of the implementation for now.\n          var memoryInfo = _NativePerformance.default.getSimpleMemoryInfo();\n          if (memoryInfo.hasOwnProperty('hermes_heapSize')) {\n            // We got memory information from Hermes\n            var totalJSHeapSize = memoryInfo.hermes_heapSize,\n              usedJSHeapSize = memoryInfo.hermes_allocatedBytes;\n            return new _MemoryInfo.default({\n              jsHeapSizeLimit: null,\n              // We don't know the heap size limit from Hermes.\n              totalJSHeapSize: totalJSHeapSize,\n              usedJSHeapSize: usedJSHeapSize\n            });\n          } else {\n            // JSC and V8 has no native implementations for memory information in JSI::Instrumentation\n            return new _MemoryInfo.default();\n          }\n        }\n        return new _MemoryInfo.default();\n      }\n\n      // Startup metrics is not used in web, but only in React Native.\n    }, {\n      key: \"rnStartupTiming\",\n      get: function get() {\n        if (_NativePerformance.default != null && _NativePerformance.default.getReactNativeStartupTiming) {\n          var _NativePerformance$ge = _NativePerformance.default.getReactNativeStartupTiming(),\n            startTime = _NativePerformance$ge.startTime,\n            endTime = _NativePerformance$ge.endTime,\n            initializeRuntimeStart = _NativePerformance$ge.initializeRuntimeStart,\n            initializeRuntimeEnd = _NativePerformance$ge.initializeRuntimeEnd,\n            executeJavaScriptBundleEntryPointStart = _NativePerformance$ge.executeJavaScriptBundleEntryPointStart,\n            executeJavaScriptBundleEntryPointEnd = _NativePerformance$ge.executeJavaScriptBundleEntryPointEnd;\n          return new _ReactNativeStartupTiming.default({\n            startTime: startTime,\n            endTime: endTime,\n            initializeRuntimeStart: initializeRuntimeStart,\n            initializeRuntimeEnd: initializeRuntimeEnd,\n            executeJavaScriptBundleEntryPointStart: executeJavaScriptBundleEntryPointStart,\n            executeJavaScriptBundleEntryPointEnd: executeJavaScriptBundleEntryPointEnd\n          });\n        }\n        return new _ReactNativeStartupTiming.default();\n      }\n    }, {\n      key: \"mark\",\n      value: function mark(markName, markOptions) {\n        var mark = new (_$$_REQUIRE(_dependencyMap[12], \"./UserTiming\").PerformanceMark)(markName, markOptions);\n        if (_NativePerformance.default != null && _NativePerformance.default.mark) {\n          _NativePerformance.default.mark(markName, mark.startTime);\n        } else {\n          warnNoNativePerformance();\n        }\n        return mark;\n      }\n    }, {\n      key: \"clearMarks\",\n      value: function clearMarks(markName) {\n        if (!(_NativePerformanceObserver.default != null && _NativePerformanceObserver.default.clearEntries)) {\n          (0, _$$_REQUIRE(_dependencyMap[13], \"./PerformanceObserver\").warnNoNativePerformanceObserver)();\n          return;\n        }\n        _NativePerformanceObserver.default == null || _NativePerformanceObserver.default.clearEntries(_$$_REQUIRE(_dependencyMap[11], \"./RawPerformanceEntry\").RawPerformanceEntryTypeValues.MARK, markName);\n      }\n    }, {\n      key: \"measure\",\n      value: function measure(measureName, startMarkOrOptions, endMark) {\n        var options;\n        var startMarkName,\n          endMarkName = endMark,\n          duration,\n          startTime = 0,\n          endTime = 0;\n        if (typeof startMarkOrOptions === 'string') {\n          startMarkName = startMarkOrOptions;\n        } else if (startMarkOrOptions !== undefined) {\n          var _options$duration;\n          options = startMarkOrOptions;\n          if (endMark !== undefined) {\n            throw new TypeError(\"Performance.measure: Can't have both options and endMark\");\n          }\n          if (options.start === undefined && options.end === undefined) {\n            throw new TypeError('Performance.measure: Must have at least one of start/end specified in options');\n          }\n          if (options.start !== undefined && options.end !== undefined && options.duration !== undefined) {\n            throw new TypeError(\"Performance.measure: Can't have both start/end and duration explicitly in options\");\n          }\n          if (typeof options.start === 'number') {\n            startTime = options.start;\n          } else {\n            startMarkName = options.start;\n          }\n          if (typeof options.end === 'number') {\n            endTime = options.end;\n          } else {\n            endMarkName = options.end;\n          }\n          duration = (_options$duration = options.duration) != null ? _options$duration : duration;\n        }\n        var measure = new (_$$_REQUIRE(_dependencyMap[12], \"./UserTiming\").PerformanceMeasure)(measureName, options);\n        if (_NativePerformance.default != null && _NativePerformance.default.measure) {\n          _NativePerformance.default.measure(measureName, startTime, endTime, duration, startMarkName, endMarkName);\n        } else {\n          warnNoNativePerformance();\n        }\n        return measure;\n      }\n    }, {\n      key: \"clearMeasures\",\n      value: function clearMeasures(measureName) {\n        if (!(_NativePerformanceObserver.default != null && _NativePerformanceObserver.default.clearEntries)) {\n          (0, _$$_REQUIRE(_dependencyMap[13], \"./PerformanceObserver\").warnNoNativePerformanceObserver)();\n          return;\n        }\n        _NativePerformanceObserver.default == null || _NativePerformanceObserver.default.clearEntries(_$$_REQUIRE(_dependencyMap[11], \"./RawPerformanceEntry\").RawPerformanceEntryTypeValues.MEASURE, measureName);\n      }\n\n      /**\n       * Returns a double, measured in milliseconds.\n       * https://developer.mozilla.org/en-US/docs/Web/API/Performance/now\n       */\n    }, {\n      key: \"now\",\n      value: function now() {\n        return getCurrentTimeStamp();\n      }\n\n      /**\n       * An extension that allows to get back to JS all currently logged marks/measures\n       * (in our case, be it from JS or native), see\n       * https://www.w3.org/TR/performance-timeline/#extensions-to-the-performance-interface\n       */\n    }, {\n      key: \"getEntries\",\n      value: function getEntries() {\n        if (!(_NativePerformanceObserver.default != null && _NativePerformanceObserver.default.getEntries)) {\n          (0, _$$_REQUIRE(_dependencyMap[13], \"./PerformanceObserver\").warnNoNativePerformanceObserver)();\n          return [];\n        }\n        return _NativePerformanceObserver.default.getEntries().map(_$$_REQUIRE(_dependencyMap[11], \"./RawPerformanceEntry\").rawToPerformanceEntry);\n      }\n    }, {\n      key: \"getEntriesByType\",\n      value: function getEntriesByType(entryType) {\n        if (!_$$_REQUIRE(_dependencyMap[10], \"./PerformanceEntry\").ALWAYS_LOGGED_ENTRY_TYPES.includes(entryType)) {\n          console.warn(`Performance.getEntriesByType: Only valid for ${JSON.stringify(_$$_REQUIRE(_dependencyMap[10], \"./PerformanceEntry\").ALWAYS_LOGGED_ENTRY_TYPES)} entry types, got ${entryType}`);\n          return [];\n        }\n        if (!(_NativePerformanceObserver.default != null && _NativePerformanceObserver.default.getEntries)) {\n          (0, _$$_REQUIRE(_dependencyMap[13], \"./PerformanceObserver\").warnNoNativePerformanceObserver)();\n          return [];\n        }\n        return _NativePerformanceObserver.default.getEntries((0, _$$_REQUIRE(_dependencyMap[11], \"./RawPerformanceEntry\").performanceEntryTypeToRaw)(entryType)).map(_$$_REQUIRE(_dependencyMap[11], \"./RawPerformanceEntry\").rawToPerformanceEntry);\n      }\n    }, {\n      key: \"getEntriesByName\",\n      value: function getEntriesByName(entryName, entryType) {\n        if (entryType !== undefined && !_$$_REQUIRE(_dependencyMap[10], \"./PerformanceEntry\").ALWAYS_LOGGED_ENTRY_TYPES.includes(entryType)) {\n          console.warn(`Performance.getEntriesByName: Only valid for ${JSON.stringify(_$$_REQUIRE(_dependencyMap[10], \"./PerformanceEntry\").ALWAYS_LOGGED_ENTRY_TYPES)} entry types, got ${entryType}`);\n          return [];\n        }\n        if (!(_NativePerformanceObserver.default != null && _NativePerformanceObserver.default.getEntries)) {\n          (0, _$$_REQUIRE(_dependencyMap[13], \"./PerformanceObserver\").warnNoNativePerformanceObserver)();\n          return [];\n        }\n        return _NativePerformanceObserver.default.getEntries(entryType != null ? (0, _$$_REQUIRE(_dependencyMap[11], \"./RawPerformanceEntry\").performanceEntryTypeToRaw)(entryType) : undefined, entryName).map(_$$_REQUIRE(_dependencyMap[11], \"./RawPerformanceEntry\").rawToPerformanceEntry);\n      }\n    }]);\n  }();\n});","lineCount":228,"map":[[10,2,20,0],[10,6,20,0,"_warnOnce"],[10,15,20,0],[10,18,20,0,"_interopRequireDefault"],[10,40,20,0],[10,41,20,0,"_$$_REQUIRE"],[10,52,20,0],[10,53,20,0,"_dependencyMap"],[10,67,20,0],[11,2,21,0],[11,6,21,0,"_EventCounts"],[11,18,21,0],[11,21,21,0,"_interopRequireDefault"],[11,43,21,0],[11,44,21,0,"_$$_REQUIRE"],[11,55,21,0],[11,56,21,0,"_dependencyMap"],[11,70,21,0],[12,2,22,0],[12,6,22,0,"_MemoryInfo"],[12,17,22,0],[12,20,22,0,"_interopRequireDefault"],[12,42,22,0],[12,43,22,0,"_$$_REQUIRE"],[12,54,22,0],[12,55,22,0,"_dependencyMap"],[12,69,22,0],[13,2,30,0],[13,6,30,0,"_ReactNativeStartupTiming"],[13,31,30,0],[13,34,30,0,"_interopRequireDefault"],[13,56,30,0],[13,57,30,0,"_$$_REQUIRE"],[13,68,30,0],[13,69,30,0,"_dependencyMap"],[13,83,30,0],[14,2,31,0],[14,6,31,0,"_NativePerformance"],[14,24,31,0],[14,27,31,0,"_interopRequireDefault"],[14,49,31,0],[14,50,31,0,"_$$_REQUIRE"],[14,61,31,0],[14,62,31,0,"_dependencyMap"],[14,76,31,0],[15,2,32,0],[15,6,32,0,"_NativePerformanceObserver"],[15,32,32,0],[15,35,32,0,"_interopRequireDefault"],[15,57,32,0],[15,58,32,0,"_$$_REQUIRE"],[15,69,32,0],[15,70,32,0,"_dependencyMap"],[15,84,32,0],[16,2,32,74],[16,6,32,74,"_ref"],[16,10,32,74],[16,12,32,74,"_NativePerformance$no"],[16,33,32,74],[17,2,1,0],[18,0,2,0],[19,0,3,0],[20,0,4,0],[21,0,5,0],[22,0,6,0],[23,0,7,0],[24,0,8,0],[25,0,9,0],[26,2,11,0],[27,2,40,0],[27,6,40,6,"getCurrentTimeStamp"],[27,25,40,49],[27,29,40,49,"_ref"],[27,33,40,49],[27,37,40,49,"_NativePerformance$no"],[27,58,40,49],[27,61,41,2,"NativePerformance"],[27,87,41,19],[27,107,41,2,"NativePerformance"],[27,133,41,19],[27,134,41,21,"now"],[27,137,41,24],[27,149,41,24,"_NativePerformance$no"],[27,170,41,24],[27,173,41,28,"global"],[27,179,41,34],[27,180,41,35,"nativePerformanceNow"],[27,200,41,55],[27,212,41,55,"_ref"],[27,216,41,55],[27,219,41,60],[28,4,41,60],[28,11,41,66,"Date"],[28,15,41,70],[28,16,41,71,"now"],[28,19,41,74],[28,20,41,75],[28,21,41,76],[29,2,41,76],[29,3,41,77],[31,2,43,0],[32,2,44,0],[33,2,45,0],[34,2,46,0],[35,2,47,0],[35,6,47,4,"NativePerformanceObserver"],[35,40,47,29],[35,52,47,4,"NativePerformanceObserver"],[35,86,47,29],[35,87,47,31,"setIsBuffered"],[35,100,47,44],[35,102,47,46],[36,4,48,2,"NativePerformanceObserver"],[36,38,48,27],[36,50,48,2,"NativePerformanceObserver"],[36,84,48,27],[36,85,48,29,"setIsBuffered"],[36,98,48,42],[36,99,49,4,"ALWAYS_LOGGED_ENTRY_TYPES"],[36,130,49,4],[36,131,49,4,"ALWAYS_LOGGED_ENTRY_TYPES"],[36,178,49,29],[36,179,49,30,"map"],[36,182,49,33],[36,183,49,34,"performanceEntryTypeToRaw"],[36,214,49,34],[36,215,49,34,"performanceEntryTypeToRaw"],[36,265,49,59],[36,266,49,60],[36,268,50,4],[36,272,51,2],[36,273,51,3],[37,2,52,0],[38,2,54,0],[38,11,54,9,"warnNoNativePerformance"],[38,34,54,32,"warnNoNativePerformance"],[38,35,54,32],[38,37,54,35],[39,4,55,2],[39,8,55,2,"warnOnce"],[39,25,55,10],[39,27,56,4],[39,55,56,32],[39,57,57,4],[39,103,58,2],[39,104,58,3],[40,2,59,0],[42,2,61,0],[43,0,62,0],[44,0,63,0],[45,0,64,0],[46,0,65,0],[47,2,61,0],[47,6,66,21,"Performance"],[47,17,66,32],[47,20,66,32,"exports"],[47,27,66,32],[47,28,66,32,"default"],[47,35,66,32],[48,4,66,32],[48,13,66,32,"Performance"],[48,25,66,32],[49,6,66,32],[49,10,66,32,"_classCallCheck2"],[49,26,66,32],[49,27,66,32,"default"],[49,34,66,32],[49,42,66,32,"Performance"],[49,53,66,32],[50,6,66,32],[50,11,67,2,"eventCounts"],[50,22,67,13],[50,25,67,29],[50,29,67,33,"EventCounts"],[50,49,67,44],[50,50,67,45],[50,51,67,46],[51,4,67,46],[52,4,67,46],[52,15,67,46,"_createClass2"],[52,28,67,46],[52,29,67,46,"default"],[52,36,67,46],[52,38,67,46,"Performance"],[52,49,67,46],[53,6,67,46,"key"],[53,9,67,46],[54,6,67,46,"get"],[54,9,67,46],[55,6,69,2],[56,6,70,2],[56,15,70,2,"get"],[56,19,70,2],[56,21,70,27],[57,8,71,4],[57,12,71,8,"NativePerformance"],[57,38,71,25],[57,50,71,8,"NativePerformance"],[57,76,71,25],[57,77,71,27,"getSimpleMemoryInfo"],[57,96,71,46],[57,98,71,48],[58,10,72,6],[59,10,73,6],[60,10,74,6],[61,10,75,6],[61,14,75,12,"memoryInfo"],[61,24,75,22],[61,27,75,25,"NativePerformance"],[61,53,75,42],[61,54,75,43,"getSimpleMemoryInfo"],[61,73,75,62],[61,74,75,63],[61,75,75,64],[62,10,76,6],[62,14,76,10,"memoryInfo"],[62,24,76,20],[62,25,76,21,"hasOwnProperty"],[62,39,76,35],[62,40,76,36],[62,57,76,53],[62,58,76,54],[62,60,76,56],[63,12,77,8],[64,12,78,8],[64,16,79,27,"totalJSHeapSize"],[64,31,79,42],[64,34,81,12,"memoryInfo"],[64,44,81,22],[64,45,79,10,"hermes_heapSize"],[64,60,79,25],[65,14,80,33,"usedJSHeapSize"],[65,28,80,47],[65,31,81,12,"memoryInfo"],[65,41,81,22],[65,42,80,10,"hermes_allocatedBytes"],[65,63,80,31],[66,12,83,8],[66,19,83,15],[66,23,83,19,"MemoryInfo"],[66,42,83,29],[66,43,83,30],[67,14,84,10,"jsHeapSizeLimit"],[67,29,84,25],[67,31,84,27],[67,35,84,31],[68,14,84,33],[69,14,85,10,"totalJSHeapSize"],[69,29,85,25],[69,31,85,10,"totalJSHeapSize"],[69,46,85,25],[70,14,86,10,"usedJSHeapSize"],[70,28,86,24],[70,30,86,10,"usedJSHeapSize"],[71,12,87,8],[71,13,87,9],[71,14,87,10],[72,10,88,6],[72,11,88,7],[72,17,88,13],[73,12,89,8],[74,12,90,8],[74,19,90,15],[74,23,90,19,"MemoryInfo"],[74,42,90,29],[74,43,90,30],[74,44,90,31],[75,10,91,6],[76,8,92,4],[77,8,94,4],[77,15,94,11],[77,19,94,15,"MemoryInfo"],[77,38,94,25],[77,39,94,26],[77,40,94,27],[78,6,95,2],[80,6,97,2],[81,4,97,2],[82,6,97,2,"key"],[82,9,97,2],[83,6,97,2,"get"],[83,9,97,2],[83,11,98,2],[83,20,98,2,"get"],[83,24,98,2],[83,26,98,50],[84,8,99,4],[84,12,99,8,"NativePerformance"],[84,38,99,25],[84,50,99,8,"NativePerformance"],[84,76,99,25],[84,77,99,27,"getReactNativeStartupTiming"],[84,104,99,54],[84,106,99,56],[85,10,100,6],[85,14,100,6,"_NativePerformance$ge"],[85,35,100,6],[85,38,107,10,"NativePerformance"],[85,64,107,27],[85,65,107,28,"getReactNativeStartupTiming"],[85,92,107,55],[85,93,107,56],[85,94,107,57],[86,12,101,8,"startTime"],[86,21,101,17],[86,24,101,17,"_NativePerformance$ge"],[86,45,101,17],[86,46,101,8,"startTime"],[86,55,101,17],[87,12,102,8,"endTime"],[87,19,102,15],[87,22,102,15,"_NativePerformance$ge"],[87,43,102,15],[87,44,102,8,"endTime"],[87,51,102,15],[88,12,103,8,"initializeRuntimeStart"],[88,34,103,30],[88,37,103,30,"_NativePerformance$ge"],[88,58,103,30],[88,59,103,8,"initializeRuntimeStart"],[88,81,103,30],[89,12,104,8,"initializeRuntimeEnd"],[89,32,104,28],[89,35,104,28,"_NativePerformance$ge"],[89,56,104,28],[89,57,104,8,"initializeRuntimeEnd"],[89,77,104,28],[90,12,105,8,"executeJavaScriptBundleEntryPointStart"],[90,50,105,46],[90,53,105,46,"_NativePerformance$ge"],[90,74,105,46],[90,75,105,8,"executeJavaScriptBundleEntryPointStart"],[90,113,105,46],[91,12,106,8,"executeJavaScriptBundleEntryPointEnd"],[91,48,106,44],[91,51,106,44,"_NativePerformance$ge"],[91,72,106,44],[91,73,106,8,"executeJavaScriptBundleEntryPointEnd"],[91,109,106,44],[92,10,108,6],[92,17,108,13],[92,21,108,17,"ReactNativeStartupTiming"],[92,54,108,41],[92,55,108,42],[93,12,109,8,"startTime"],[93,21,109,17],[93,23,109,8,"startTime"],[93,32,109,17],[94,12,110,8,"endTime"],[94,19,110,15],[94,21,110,8,"endTime"],[94,28,110,15],[95,12,111,8,"initializeRuntimeStart"],[95,34,111,30],[95,36,111,8,"initializeRuntimeStart"],[95,58,111,30],[96,12,112,8,"initializeRuntimeEnd"],[96,32,112,28],[96,34,112,8,"initializeRuntimeEnd"],[96,54,112,28],[97,12,113,8,"executeJavaScriptBundleEntryPointStart"],[97,50,113,46],[97,52,113,8,"executeJavaScriptBundleEntryPointStart"],[97,90,113,46],[98,12,114,8,"executeJavaScriptBundleEntryPointEnd"],[98,48,114,44],[98,50,114,8,"executeJavaScriptBundleEntryPointEnd"],[99,10,115,6],[99,11,115,7],[99,12,115,8],[100,8,116,4],[101,8,117,4],[101,15,117,11],[101,19,117,15,"ReactNativeStartupTiming"],[101,52,117,39],[101,53,117,40],[101,54,117,41],[102,6,118,2],[103,4,118,3],[104,6,118,3,"key"],[104,9,118,3],[105,6,118,3,"value"],[105,11,118,3],[105,13,120,2],[105,22,120,2,"mark"],[105,26,120,6,"mark"],[105,27,121,4,"markName"],[105,35,121,20],[105,37,122,4,"markOptions"],[105,48,122,40],[105,50,123,21],[106,8,124,4],[106,12,124,10,"mark"],[106,16,124,14],[106,19,124,17],[106,24,124,21,"PerformanceMark"],[106,55,124,21],[106,56,124,21,"PerformanceMark"],[106,87,124,36],[106,89,124,37,"markName"],[106,97,124,45],[106,99,124,47,"markOptions"],[106,110,124,58],[106,111,124,59],[107,8,126,4],[107,12,126,8,"NativePerformance"],[107,38,126,25],[107,50,126,8,"NativePerformance"],[107,76,126,25],[107,77,126,27,"mark"],[107,81,126,31],[107,83,126,33],[108,10,127,6,"NativePerformance"],[108,36,127,23],[108,37,127,24,"mark"],[108,41,127,28],[108,42,127,29,"markName"],[108,50,127,37],[108,52,127,39,"mark"],[108,56,127,43],[108,57,127,44,"startTime"],[108,66,127,53],[108,67,127,54],[109,8,128,4],[109,9,128,5],[109,15,128,11],[110,10,129,6,"warnNoNativePerformance"],[110,33,129,29],[110,34,129,30],[110,35,129,31],[111,8,130,4],[112,8,132,4],[112,15,132,11,"mark"],[112,19,132,15],[113,6,133,2],[114,4,133,3],[115,6,133,3,"key"],[115,9,133,3],[116,6,133,3,"value"],[116,11,133,3],[116,13,135,2],[116,22,135,2,"clearMarks"],[116,32,135,12,"clearMarks"],[116,33,135,13,"markName"],[116,41,135,30],[116,43,135,38],[117,8,136,4],[117,12,136,8],[117,14,136,9,"NativePerformanceObserver"],[117,48,136,34],[117,60,136,9,"NativePerformanceObserver"],[117,94,136,34],[117,95,136,36,"clearEntries"],[117,107,136,48],[117,110,136,50],[118,10,137,6],[118,14,137,6,"warnNoNativePerformanceObserver"],[118,45,137,6],[118,46,137,6,"warnNoNativePerformanceObserver"],[118,102,137,37],[118,104,137,38],[118,105,137,39],[119,10,138,6],[120,8,139,4],[121,8,141,4,"NativePerformanceObserver"],[121,42,141,29],[121,54,141,4,"NativePerformanceObserver"],[121,88,141,29],[121,89,141,31,"clearEntries"],[121,101,141,43],[121,102,142,6,"RawPerformanceEntryTypeValues"],[121,133,142,6],[121,134,142,6,"RawPerformanceEntryTypeValues"],[121,188,142,35],[121,189,142,36,"MARK"],[121,193,142,40],[121,195,143,6,"markName"],[121,203,144,4],[121,204,144,5],[122,6,145,2],[123,4,145,3],[124,6,145,3,"key"],[124,9,145,3],[125,6,145,3,"value"],[125,11,145,3],[125,13,147,2],[125,22,147,2,"measure"],[125,29,147,9,"measure"],[125,30,148,4,"measureName"],[125,41,148,23],[125,43,149,4,"startMarkOrOptions"],[125,61,149,59],[125,63,150,4,"endMark"],[125,70,150,20],[125,72,151,24],[126,8,152,4],[126,12,152,8,"options"],[126,19,152,15],[127,8,153,4],[127,12,153,8,"startMarkName"],[127,25,153,21],[128,10,154,6,"endMarkName"],[128,21,154,17],[128,24,154,20,"endMark"],[128,31,154,27],[129,10,155,6,"duration"],[129,18,155,14],[130,10,156,6,"startTime"],[130,19,156,15],[130,22,156,18],[130,23,156,19],[131,10,157,6,"endTime"],[131,17,157,13],[131,20,157,16],[131,21,157,17],[132,8,159,4],[132,12,159,8],[132,19,159,15,"startMarkOrOptions"],[132,37,159,33],[132,42,159,38],[132,50,159,46],[132,52,159,48],[133,10,160,6,"startMarkName"],[133,23,160,19],[133,26,160,22,"startMarkOrOptions"],[133,44,160,40],[134,8,161,4],[134,9,161,5],[134,15,161,11],[134,19,161,15,"startMarkOrOptions"],[134,37,161,33],[134,42,161,38,"undefined"],[134,51,161,47],[134,53,161,49],[135,10,161,49],[135,14,161,49,"_options$duration"],[135,31,161,49],[136,10,162,6,"options"],[136,17,162,13],[136,20,162,16,"startMarkOrOptions"],[136,38,162,34],[137,10,163,6],[137,14,163,10,"endMark"],[137,21,163,17],[137,26,163,22,"undefined"],[137,35,163,31],[137,37,163,33],[138,12,164,8],[138,18,164,14],[138,22,164,18,"TypeError"],[138,31,164,27],[138,32,165,10],[138,90,166,8],[138,91,166,9],[139,10,167,6],[140,10,168,6],[140,14,168,10,"options"],[140,21,168,17],[140,22,168,18,"start"],[140,27,168,23],[140,32,168,28,"undefined"],[140,41,168,37],[140,45,168,41,"options"],[140,52,168,48],[140,53,168,49,"end"],[140,56,168,52],[140,61,168,57,"undefined"],[140,70,168,66],[140,72,168,68],[141,12,169,8],[141,18,169,14],[141,22,169,18,"TypeError"],[141,31,169,27],[141,32,170,10],[141,111,171,8],[141,112,171,9],[142,10,172,6],[143,10,173,6],[143,14,174,8,"options"],[143,21,174,15],[143,22,174,16,"start"],[143,27,174,21],[143,32,174,26,"undefined"],[143,41,174,35],[143,45,175,8,"options"],[143,52,175,15],[143,53,175,16,"end"],[143,56,175,19],[143,61,175,24,"undefined"],[143,70,175,33],[143,74,176,8,"options"],[143,81,176,15],[143,82,176,16,"duration"],[143,90,176,24],[143,95,176,29,"undefined"],[143,104,176,38],[143,106,177,8],[144,12,178,8],[144,18,178,14],[144,22,178,18,"TypeError"],[144,31,178,27],[144,32,179,10],[144,115,180,8],[144,116,180,9],[145,10,181,6],[146,10,183,6],[146,14,183,10],[146,21,183,17,"options"],[146,28,183,24],[146,29,183,25,"start"],[146,34,183,30],[146,39,183,35],[146,47,183,43],[146,49,183,45],[147,12,184,8,"startTime"],[147,21,184,17],[147,24,184,20,"options"],[147,31,184,27],[147,32,184,28,"start"],[147,37,184,33],[148,10,185,6],[148,11,185,7],[148,17,185,13],[149,12,186,8,"startMarkName"],[149,25,186,21],[149,28,186,24,"options"],[149,35,186,31],[149,36,186,32,"start"],[149,41,186,37],[150,10,187,6],[151,10,189,6],[151,14,189,10],[151,21,189,17,"options"],[151,28,189,24],[151,29,189,25,"end"],[151,32,189,28],[151,37,189,33],[151,45,189,41],[151,47,189,43],[152,12,190,8,"endTime"],[152,19,190,15],[152,22,190,18,"options"],[152,29,190,25],[152,30,190,26,"end"],[152,33,190,29],[153,10,191,6],[153,11,191,7],[153,17,191,13],[154,12,192,8,"endMarkName"],[154,23,192,19],[154,26,192,22,"options"],[154,33,192,29],[154,34,192,30,"end"],[154,37,192,33],[155,10,193,6],[156,10,195,6,"duration"],[156,18,195,14],[156,22,195,14,"_options$duration"],[156,39,195,14],[156,42,195,17,"options"],[156,49,195,24],[156,50,195,25,"duration"],[156,58,195,33],[156,70,195,33,"_options$duration"],[156,87,195,33],[156,90,195,37,"duration"],[156,98,195,45],[157,8,196,4],[158,8,198,4],[158,12,198,10,"measure"],[158,19,198,17],[158,22,198,20],[158,27,198,24,"PerformanceMeasure"],[158,58,198,24],[158,59,198,24,"PerformanceMeasure"],[158,93,198,42],[158,95,198,43,"measureName"],[158,106,198,54],[158,108,198,56,"options"],[158,115,198,63],[158,116,198,64],[159,8,200,4],[159,12,200,8,"NativePerformance"],[159,38,200,25],[159,50,200,8,"NativePerformance"],[159,76,200,25],[159,77,200,27,"measure"],[159,84,200,34],[159,86,200,36],[160,10,201,6,"NativePerformance"],[160,36,201,23],[160,37,201,24,"measure"],[160,44,201,31],[160,45,202,8,"measureName"],[160,56,202,19],[160,58,203,8,"startTime"],[160,67,203,17],[160,69,204,8,"endTime"],[160,76,204,15],[160,78,205,8,"duration"],[160,86,205,16],[160,88,206,8,"startMarkName"],[160,101,206,21],[160,103,207,8,"endMarkName"],[160,114,208,6],[160,115,208,7],[161,8,209,4],[161,9,209,5],[161,15,209,11],[162,10,210,6,"warnNoNativePerformance"],[162,33,210,29],[162,34,210,30],[162,35,210,31],[163,8,211,4],[164,8,213,4],[164,15,213,11,"measure"],[164,22,213,18],[165,6,214,2],[166,4,214,3],[167,6,214,3,"key"],[167,9,214,3],[168,6,214,3,"value"],[168,11,214,3],[168,13,216,2],[168,22,216,2,"clearMeasures"],[168,35,216,15,"clearMeasures"],[168,36,216,16,"measureName"],[168,47,216,36],[168,49,216,44],[169,8,217,4],[169,12,217,8],[169,14,217,9,"NativePerformanceObserver"],[169,48,217,34],[169,60,217,9,"NativePerformanceObserver"],[169,94,217,34],[169,95,217,36,"clearEntries"],[169,107,217,48],[169,110,217,50],[170,10,218,6],[170,14,218,6,"warnNoNativePerformanceObserver"],[170,45,218,6],[170,46,218,6,"warnNoNativePerformanceObserver"],[170,102,218,37],[170,104,218,38],[170,105,218,39],[171,10,219,6],[172,8,220,4],[173,8,222,4,"NativePerformanceObserver"],[173,42,222,29],[173,54,222,4,"NativePerformanceObserver"],[173,88,222,29],[173,89,222,31,"clearEntries"],[173,101,222,43],[173,102,223,6,"RawPerformanceEntryTypeValues"],[173,133,223,6],[173,134,223,6,"RawPerformanceEntryTypeValues"],[173,188,223,35],[173,189,223,36,"MEASURE"],[173,196,223,43],[173,198,224,6,"measureName"],[173,209,225,4],[173,210,225,5],[174,6,226,2],[176,6,228,2],[177,0,229,0],[178,0,230,0],[179,0,231,0],[180,4,228,2],[181,6,228,2,"key"],[181,9,228,2],[182,6,228,2,"value"],[182,11,228,2],[182,13,232,2],[182,22,232,2,"now"],[182,25,232,5,"now"],[182,26,232,5],[182,28,232,26],[183,8,233,4],[183,15,233,11,"getCurrentTimeStamp"],[183,34,233,30],[183,35,233,31],[183,36,233,32],[184,6,234,2],[186,6,236,2],[187,0,237,0],[188,0,238,0],[189,0,239,0],[190,0,240,0],[191,4,236,2],[192,6,236,2,"key"],[192,9,236,2],[193,6,236,2,"value"],[193,11,236,2],[193,13,241,2],[193,22,241,2,"getEntries"],[193,32,241,12,"getEntries"],[193,33,241,12],[193,35,241,37],[194,8,242,4],[194,12,242,8],[194,14,242,9,"NativePerformanceObserver"],[194,48,242,34],[194,60,242,9,"NativePerformanceObserver"],[194,94,242,34],[194,95,242,36,"getEntries"],[194,105,242,46],[194,108,242,48],[195,10,243,6],[195,14,243,6,"warnNoNativePerformanceObserver"],[195,45,243,6],[195,46,243,6,"warnNoNativePerformanceObserver"],[195,102,243,37],[195,104,243,38],[195,105,243,39],[196,10,244,6],[196,17,244,13],[196,19,244,15],[197,8,245,4],[198,8,246,4],[198,15,246,11,"NativePerformanceObserver"],[198,49,246,36],[198,50,246,37,"getEntries"],[198,60,246,47],[198,61,246,48],[198,62,246,49],[198,63,246,50,"map"],[198,66,246,53],[198,67,246,54,"rawToPerformanceEntry"],[198,98,246,54],[198,99,246,54,"rawToPerformanceEntry"],[198,145,246,75],[198,146,246,76],[199,6,247,2],[200,4,247,3],[201,6,247,3,"key"],[201,9,247,3],[202,6,247,3,"value"],[202,11,247,3],[202,13,249,2],[202,22,249,2,"getEntriesByType"],[202,38,249,18,"getEntriesByType"],[202,39,249,19,"entryType"],[202,48,249,50],[202,50,249,74],[203,8,250,4],[203,12,250,8],[203,13,250,9,"ALWAYS_LOGGED_ENTRY_TYPES"],[203,44,250,9],[203,45,250,9,"ALWAYS_LOGGED_ENTRY_TYPES"],[203,92,250,34],[203,93,250,35,"includes"],[203,101,250,43],[203,102,250,44,"entryType"],[203,111,250,53],[203,112,250,54],[203,114,250,56],[204,10,251,6,"console"],[204,17,251,13],[204,18,251,14,"warn"],[204,22,251,18],[204,23,252,8],[204,71,252,56,"JSON"],[204,75,252,60],[204,76,252,61,"stringify"],[204,85,252,70],[204,86,253,10,"ALWAYS_LOGGED_ENTRY_TYPES"],[204,117,253,10],[204,118,253,10,"ALWAYS_LOGGED_ENTRY_TYPES"],[204,165,254,8],[204,166,254,9],[204,187,254,30,"entryType"],[204,196,254,39],[204,198,255,6],[204,199,255,7],[205,10,256,6],[205,17,256,13],[205,19,256,15],[206,8,257,4],[207,8,259,4],[207,12,259,8],[207,14,259,9,"NativePerformanceObserver"],[207,48,259,34],[207,60,259,9,"NativePerformanceObserver"],[207,94,259,34],[207,95,259,36,"getEntries"],[207,105,259,46],[207,108,259,48],[208,10,260,6],[208,14,260,6,"warnNoNativePerformanceObserver"],[208,45,260,6],[208,46,260,6,"warnNoNativePerformanceObserver"],[208,102,260,37],[208,104,260,38],[208,105,260,39],[209,10,261,6],[209,17,261,13],[209,19,261,15],[210,8,262,4],[211,8,263,4],[211,15,263,11,"NativePerformanceObserver"],[211,49,263,36],[211,50,263,37,"getEntries"],[211,60,263,47],[211,61,264,6],[211,65,264,6,"performanceEntryTypeToRaw"],[211,96,264,6],[211,97,264,6,"performanceEntryTypeToRaw"],[211,147,264,31],[211,149,264,32,"entryType"],[211,158,264,41],[211,159,265,4],[211,160,265,5],[211,161,265,6,"map"],[211,164,265,9],[211,165,265,10,"rawToPerformanceEntry"],[211,196,265,10],[211,197,265,10,"rawToPerformanceEntry"],[211,243,265,31],[211,244,265,32],[212,6,266,2],[213,4,266,3],[214,6,266,3,"key"],[214,9,266,3],[215,6,266,3,"value"],[215,11,266,3],[215,13,268,2],[215,22,268,2,"getEntriesByName"],[215,38,268,18,"getEntriesByName"],[215,39,269,4,"entryName"],[215,48,269,21],[215,50,270,4,"entryType"],[215,59,270,36],[215,61,271,26],[216,8,272,4],[216,12,273,6,"entryType"],[216,21,273,15],[216,26,273,20,"undefined"],[216,35,273,29],[216,39,274,6],[216,40,274,7,"ALWAYS_LOGGED_ENTRY_TYPES"],[216,71,274,7],[216,72,274,7,"ALWAYS_LOGGED_ENTRY_TYPES"],[216,119,274,32],[216,120,274,33,"includes"],[216,128,274,41],[216,129,274,42,"entryType"],[216,138,274,51],[216,139,274,52],[216,141,275,6],[217,10,276,6,"console"],[217,17,276,13],[217,18,276,14,"warn"],[217,22,276,18],[217,23,277,8],[217,71,277,56,"JSON"],[217,75,277,60],[217,76,277,61,"stringify"],[217,85,277,70],[217,86,278,10,"ALWAYS_LOGGED_ENTRY_TYPES"],[217,117,278,10],[217,118,278,10,"ALWAYS_LOGGED_ENTRY_TYPES"],[217,165,279,8],[217,166,279,9],[217,187,279,30,"entryType"],[217,196,279,39],[217,198,280,6],[217,199,280,7],[218,10,281,6],[218,17,281,13],[218,19,281,15],[219,8,282,4],[220,8,284,4],[220,12,284,8],[220,14,284,9,"NativePerformanceObserver"],[220,48,284,34],[220,60,284,9,"NativePerformanceObserver"],[220,94,284,34],[220,95,284,36,"getEntries"],[220,105,284,46],[220,108,284,48],[221,10,285,6],[221,14,285,6,"warnNoNativePerformanceObserver"],[221,45,285,6],[221,46,285,6,"warnNoNativePerformanceObserver"],[221,102,285,37],[221,104,285,38],[221,105,285,39],[222,10,286,6],[222,17,286,13],[222,19,286,15],[223,8,287,4],[224,8,288,4],[224,15,288,11,"NativePerformanceObserver"],[224,49,288,36],[224,50,288,37,"getEntries"],[224,60,288,47],[224,61,289,6,"entryType"],[224,70,289,15],[224,74,289,19],[224,78,289,23],[224,81,289,26],[224,85,289,26,"performanceEntryTypeToRaw"],[224,116,289,26],[224,117,289,26,"performanceEntryTypeToRaw"],[224,167,289,51],[224,169,289,52,"entryType"],[224,178,289,61],[224,179,289,62],[224,182,289,65,"undefined"],[224,191,289,74],[224,193,290,6,"entryName"],[224,202,291,4],[224,203,291,5],[224,204,291,6,"map"],[224,207,291,9],[224,208,291,10,"rawToPerformanceEntry"],[224,239,291,10],[224,240,291,10,"rawToPerformanceEntry"],[224,286,291,31],[224,287,291,32],[225,6,292,2],[226,4,292,3],[227,2,292,3],[228,0,292,3],[228,3]],"functionMap":{"names":["<global>","<anonymous>","warnNoNativePerformance","Performance","get__memory","get__rnStartupTiming","mark","clearMarks","measure","clearMeasures","now","getEntries","getEntriesByType","getEntriesByName"],"mappings":"AAA;4DCwC,gBD;AEa;CFK;eGO;ECI;GDyB;EEG;GFoB;EGE;GHa;EIE;GJU;EKE;GLmE;EME;GNU;EOM;GPE;EQO;GRM;ESE;GTiB;EUE;GVwB;CHC"}},"type":"js/module"}]}