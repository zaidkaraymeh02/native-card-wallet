{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":134,"column":0,"index":4425}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"invariant","data":{"asyncType":null,"locs":[{"start":{"line":12,"column":0,"index":229},"end":{"line":12,"column":34,"index":263}}],"key":"Fzi/BpZws2YooIGJ9b6u0HJtuks="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * @format\n   * \n   */\n\n  'use strict';\n\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"invariant\"));\n  /**\n   * Static poolers. Several custom versions for each potential number of\n   * arguments. A completely generic pooler is easy to implement, but would\n   * require accessing the `arguments` object. In each of these, `this` refers to\n   * the Class itself, not an instance. If any others are needed, simply add them\n   * here, or in their own files.\n   */\n  /* $FlowFixMe[missing-this-annot] The 'this' type annotation(s) required by\n   * Flow's LTI update could not be added via codemod */\n  var oneArgumentPooler = function oneArgumentPooler(copyFieldsFrom) {\n    var Klass = this; // eslint-disable-line consistent-this\n    if (Klass.instancePool.length) {\n      var _instance = Klass.instancePool.pop();\n      Klass.call(_instance, copyFieldsFrom);\n      return _instance;\n    } else {\n      return new Klass(copyFieldsFrom);\n    }\n  };\n\n  /* $FlowFixMe[missing-this-annot] The 'this' type annotation(s) required by\n   * Flow's LTI update could not be added via codemod */\n  var twoArgumentPooler = function twoArgumentPooler(a1, a2) {\n    var Klass = this; // eslint-disable-line consistent-this\n    if (Klass.instancePool.length) {\n      var _instance2 = Klass.instancePool.pop();\n      Klass.call(_instance2, a1, a2);\n      return _instance2;\n    } else {\n      return new Klass(a1, a2);\n    }\n  };\n\n  /* $FlowFixMe[missing-this-annot] The 'this' type annotation(s) required by\n   * Flow's LTI update could not be added via codemod */\n  var threeArgumentPooler = function threeArgumentPooler(a1, a2, a3) {\n    var Klass = this; // eslint-disable-line consistent-this\n    if (Klass.instancePool.length) {\n      var _instance3 = Klass.instancePool.pop();\n      Klass.call(_instance3, a1, a2, a3);\n      return _instance3;\n    } else {\n      return new Klass(a1, a2, a3);\n    }\n  };\n\n  /* $FlowFixMe[missing-this-annot] The 'this' type annotation(s) required by\n   * Flow's LTI update could not be added via codemod */\n  var fourArgumentPooler = function fourArgumentPooler(a1, a2, a3, a4) {\n    var Klass = this; // eslint-disable-line consistent-this\n    if (Klass.instancePool.length) {\n      var _instance4 = Klass.instancePool.pop();\n      Klass.call(_instance4, a1, a2, a3, a4);\n      return _instance4;\n    } else {\n      return new Klass(a1, a2, a3, a4);\n    }\n  };\n\n  /* $FlowFixMe[missing-local-annot] The type annotation(s) required by Flow's\n   * LTI update could not be added via codemod */\n  /* $FlowFixMe[missing-this-annot] The 'this' type annotation(s) required by\n   * Flow's LTI update could not be added via codemod */\n  var standardReleaser = function standardReleaser(instance) {\n    var Klass = this; // eslint-disable-line consistent-this\n    (0, _invariant.default)(instance instanceof Klass, 'Trying to release an instance into a pool of a different type.');\n    instance.destructor();\n    if (Klass.instancePool.length < Klass.poolSize) {\n      Klass.instancePool.push(instance);\n    }\n  };\n  var DEFAULT_POOL_SIZE = 10;\n  var DEFAULT_POOLER = oneArgumentPooler;\n  /**\n   * Augments `CopyConstructor` to be a poolable class, augmenting only the class\n   * itself (statically) not adding any prototypical fields. Any CopyConstructor\n   * you give this may have a `poolSize` property, and will look for a\n   * prototypical `destructor` on instances.\n   *\n   * @param {Function} CopyConstructor Constructor that can be used to reset.\n   * @param {Function} pooler Customizable pooler.\n   */\n  var addPoolingTo = function addPoolingTo(CopyConstructor, pooler) {\n    // Casting as any so that flow ignores the actual implementation and trusts\n    // it to match the type we declared\n    var NewKlass = CopyConstructor;\n    NewKlass.instancePool = [];\n    NewKlass.getPooled = pooler || DEFAULT_POOLER;\n    if (!NewKlass.poolSize) {\n      NewKlass.poolSize = DEFAULT_POOL_SIZE;\n    }\n    NewKlass.release = standardReleaser;\n    return NewKlass;\n  };\n  var PooledClass = {\n    addPoolingTo: addPoolingTo,\n    oneArgumentPooler: oneArgumentPooler,\n    twoArgumentPooler: twoArgumentPooler,\n    threeArgumentPooler: threeArgumentPooler,\n    fourArgumentPooler: fourArgumentPooler\n  };\n  module.exports = PooledClass;\n});","lineCount":118,"map":[[2,2,1,0],[3,0,2,0],[4,0,3,0],[5,0,4,0],[6,0,5,0],[7,0,6,0],[8,0,7,0],[9,0,8,0],[10,0,9,0],[12,2,11,0],[12,14,11,12],[14,2,11,13],[14,6,11,13,"_interopRequireDefault"],[14,28,11,13],[14,31,11,13,"_$$_REQUIRE"],[14,42,11,13],[14,43,11,13,"_dependencyMap"],[14,57,11,13],[15,2,12,0],[15,6,12,0,"_invariant"],[15,16,12,0],[15,19,12,0,"_interopRequireDefault"],[15,41,12,0],[15,42,12,0,"_$$_REQUIRE"],[15,53,12,0],[15,54,12,0,"_dependencyMap"],[15,68,12,0],[16,2,14,0],[17,0,15,0],[18,0,16,0],[19,0,17,0],[20,0,18,0],[21,0,19,0],[22,0,20,0],[23,2,21,0],[24,0,22,0],[25,2,23,0],[25,6,23,6,"oneArgumentPooler"],[25,23,23,23],[25,26,23,26],[25,35,23,6,"oneArgumentPooler"],[25,52,23,23,"oneArgumentPooler"],[25,53,23,36,"copyFieldsFrom"],[25,67,23,55],[25,69,23,57],[26,4,24,2],[26,8,24,8,"Klass"],[26,13,24,13],[26,16,24,16],[26,20,24,20],[26,21,24,21],[26,22,24,22],[27,4,25,2],[27,8,25,6,"Klass"],[27,13,25,11],[27,14,25,12,"instancePool"],[27,26,25,24],[27,27,25,25,"length"],[27,33,25,31],[27,35,25,33],[28,6,26,4],[28,10,26,10,"instance"],[28,19,26,18],[28,22,26,21,"Klass"],[28,27,26,26],[28,28,26,27,"instancePool"],[28,40,26,39],[28,41,26,40,"pop"],[28,44,26,43],[28,45,26,44],[28,46,26,45],[29,6,27,4,"Klass"],[29,11,27,9],[29,12,27,10,"call"],[29,16,27,14],[29,17,27,15,"instance"],[29,26,27,23],[29,28,27,25,"copyFieldsFrom"],[29,42,27,39],[29,43,27,40],[30,6,28,4],[30,13,28,11,"instance"],[30,22,28,19],[31,4,29,2],[31,5,29,3],[31,11,29,9],[32,6,30,4],[32,13,30,11],[32,17,30,15,"Klass"],[32,22,30,20],[32,23,30,21,"copyFieldsFrom"],[32,37,30,35],[32,38,30,36],[33,4,31,2],[34,2,32,0],[34,3,32,1],[36,2,34,0],[37,0,35,0],[38,2,36,0],[38,6,36,6,"twoArgumentPooler"],[38,23,36,23],[38,26,36,26],[38,35,36,6,"twoArgumentPooler"],[38,52,36,23,"twoArgumentPooler"],[38,53,36,36,"a1"],[38,55,36,43],[38,57,36,45,"a2"],[38,59,36,52],[38,61,36,54],[39,4,37,2],[39,8,37,8,"Klass"],[39,13,37,13],[39,16,37,16],[39,20,37,20],[39,21,37,21],[39,22,37,22],[40,4,38,2],[40,8,38,6,"Klass"],[40,13,38,11],[40,14,38,12,"instancePool"],[40,26,38,24],[40,27,38,25,"length"],[40,33,38,31],[40,35,38,33],[41,6,39,4],[41,10,39,10,"instance"],[41,20,39,18],[41,23,39,21,"Klass"],[41,28,39,26],[41,29,39,27,"instancePool"],[41,41,39,39],[41,42,39,40,"pop"],[41,45,39,43],[41,46,39,44],[41,47,39,45],[42,6,40,4,"Klass"],[42,11,40,9],[42,12,40,10,"call"],[42,16,40,14],[42,17,40,15,"instance"],[42,27,40,23],[42,29,40,25,"a1"],[42,31,40,27],[42,33,40,29,"a2"],[42,35,40,31],[42,36,40,32],[43,6,41,4],[43,13,41,11,"instance"],[43,23,41,19],[44,4,42,2],[44,5,42,3],[44,11,42,9],[45,6,43,4],[45,13,43,11],[45,17,43,15,"Klass"],[45,22,43,20],[45,23,43,21,"a1"],[45,25,43,23],[45,27,43,25,"a2"],[45,29,43,27],[45,30,43,28],[46,4,44,2],[47,2,45,0],[47,3,45,1],[49,2,47,0],[50,0,48,0],[51,2,49,0],[51,6,49,6,"threeArgumentPooler"],[51,25,49,25],[51,28,49,28],[51,37,49,6,"threeArgumentPooler"],[51,56,49,25,"threeArgumentPooler"],[51,57,49,38,"a1"],[51,59,49,45],[51,61,49,47,"a2"],[51,63,49,54],[51,65,49,56,"a3"],[51,67,49,63],[51,69,49,65],[52,4,50,2],[52,8,50,8,"Klass"],[52,13,50,13],[52,16,50,16],[52,20,50,20],[52,21,50,21],[52,22,50,22],[53,4,51,2],[53,8,51,6,"Klass"],[53,13,51,11],[53,14,51,12,"instancePool"],[53,26,51,24],[53,27,51,25,"length"],[53,33,51,31],[53,35,51,33],[54,6,52,4],[54,10,52,10,"instance"],[54,20,52,18],[54,23,52,21,"Klass"],[54,28,52,26],[54,29,52,27,"instancePool"],[54,41,52,39],[54,42,52,40,"pop"],[54,45,52,43],[54,46,52,44],[54,47,52,45],[55,6,53,4,"Klass"],[55,11,53,9],[55,12,53,10,"call"],[55,16,53,14],[55,17,53,15,"instance"],[55,27,53,23],[55,29,53,25,"a1"],[55,31,53,27],[55,33,53,29,"a2"],[55,35,53,31],[55,37,53,33,"a3"],[55,39,53,35],[55,40,53,36],[56,6,54,4],[56,13,54,11,"instance"],[56,23,54,19],[57,4,55,2],[57,5,55,3],[57,11,55,9],[58,6,56,4],[58,13,56,11],[58,17,56,15,"Klass"],[58,22,56,20],[58,23,56,21,"a1"],[58,25,56,23],[58,27,56,25,"a2"],[58,29,56,27],[58,31,56,29,"a3"],[58,33,56,31],[58,34,56,32],[59,4,57,2],[60,2,58,0],[60,3,58,1],[62,2,60,0],[63,0,61,0],[64,2,62,0],[64,6,62,6,"fourArgumentPooler"],[64,24,62,24],[64,27,62,27],[64,36,62,6,"fourArgumentPooler"],[64,54,62,24,"fourArgumentPooler"],[64,55,62,37,"a1"],[64,57,62,44],[64,59,62,46,"a2"],[64,61,62,53],[64,63,62,55,"a3"],[64,65,62,62],[64,67,62,64,"a4"],[64,69,62,71],[64,71,62,73],[65,4,63,2],[65,8,63,8,"Klass"],[65,13,63,13],[65,16,63,16],[65,20,63,20],[65,21,63,21],[65,22,63,22],[66,4,64,2],[66,8,64,6,"Klass"],[66,13,64,11],[66,14,64,12,"instancePool"],[66,26,64,24],[66,27,64,25,"length"],[66,33,64,31],[66,35,64,33],[67,6,65,4],[67,10,65,10,"instance"],[67,20,65,18],[67,23,65,21,"Klass"],[67,28,65,26],[67,29,65,27,"instancePool"],[67,41,65,39],[67,42,65,40,"pop"],[67,45,65,43],[67,46,65,44],[67,47,65,45],[68,6,66,4,"Klass"],[68,11,66,9],[68,12,66,10,"call"],[68,16,66,14],[68,17,66,15,"instance"],[68,27,66,23],[68,29,66,25,"a1"],[68,31,66,27],[68,33,66,29,"a2"],[68,35,66,31],[68,37,66,33,"a3"],[68,39,66,35],[68,41,66,37,"a4"],[68,43,66,39],[68,44,66,40],[69,6,67,4],[69,13,67,11,"instance"],[69,23,67,19],[70,4,68,2],[70,5,68,3],[70,11,68,9],[71,6,69,4],[71,13,69,11],[71,17,69,15,"Klass"],[71,22,69,20],[71,23,69,21,"a1"],[71,25,69,23],[71,27,69,25,"a2"],[71,29,69,27],[71,31,69,29,"a3"],[71,33,69,31],[71,35,69,33,"a4"],[71,37,69,35],[71,38,69,36],[72,4,70,2],[73,2,71,0],[73,3,71,1],[75,2,73,0],[76,0,74,0],[77,2,75,0],[78,0,76,0],[79,2,77,0],[79,6,77,6,"standardReleaser"],[79,22,77,22],[79,25,77,25],[79,34,77,6,"standardReleaser"],[79,50,77,22,"standardReleaser"],[79,51,77,35,"instance"],[79,59,77,43],[79,61,77,45],[80,4,78,2],[80,8,78,8,"Klass"],[80,13,78,13],[80,16,78,16],[80,20,78,20],[80,21,78,21],[80,22,78,22],[81,4,79,2],[81,8,79,2,"invariant"],[81,26,79,11],[81,28,80,4,"instance"],[81,36,80,12],[81,48,80,24,"Klass"],[81,53,80,29],[81,55,81,4],[81,119,82,2],[81,120,82,3],[82,4,83,2,"instance"],[82,12,83,10],[82,13,83,11,"destructor"],[82,23,83,21],[82,24,83,22],[82,25,83,23],[83,4,84,2],[83,8,84,6,"Klass"],[83,13,84,11],[83,14,84,12,"instancePool"],[83,26,84,24],[83,27,84,25,"length"],[83,33,84,31],[83,36,84,34,"Klass"],[83,41,84,39],[83,42,84,40,"poolSize"],[83,50,84,48],[83,52,84,50],[84,6,85,4,"Klass"],[84,11,85,9],[84,12,85,10,"instancePool"],[84,24,85,22],[84,25,85,23,"push"],[84,29,85,27],[84,30,85,28,"instance"],[84,38,85,36],[84,39,85,37],[85,4,86,2],[86,2,87,0],[86,3,87,1],[87,2,89,0],[87,6,89,6,"DEFAULT_POOL_SIZE"],[87,23,89,23],[87,26,89,26],[87,28,89,28],[88,2,90,0],[88,6,90,6,"DEFAULT_POOLER"],[88,20,90,20],[88,23,90,23,"oneArgumentPooler"],[88,40,90,40],[89,2,94,0],[90,0,95,0],[91,0,96,0],[92,0,97,0],[93,0,98,0],[94,0,99,0],[95,0,100,0],[96,0,101,0],[97,0,102,0],[98,2,103,0],[98,6,103,6,"addPoolingTo"],[98,18,103,18],[98,21,103,21],[98,30,103,6,"addPoolingTo"],[98,42,103,18,"addPoolingTo"],[98,43,104,2,"CopyConstructor"],[98,58,104,27],[98,60,105,2,"pooler"],[98,66,105,16],[98,68,112,2],[99,4,113,2],[100,4,114,2],[101,4,115,2],[101,8,115,8,"NewKlass"],[101,16,115,21],[101,19,115,24,"CopyConstructor"],[101,34,115,39],[102,4,116,2,"NewKlass"],[102,12,116,10],[102,13,116,11,"instancePool"],[102,25,116,23],[102,28,116,26],[102,30,116,28],[103,4,117,2,"NewKlass"],[103,12,117,10],[103,13,117,11,"getPooled"],[103,22,117,20],[103,25,117,23,"pooler"],[103,31,117,29],[103,35,117,33,"DEFAULT_POOLER"],[103,49,117,47],[104,4,118,2],[104,8,118,6],[104,9,118,7,"NewKlass"],[104,17,118,15],[104,18,118,16,"poolSize"],[104,26,118,24],[104,28,118,26],[105,6,119,4,"NewKlass"],[105,14,119,12],[105,15,119,13,"poolSize"],[105,23,119,21],[105,26,119,24,"DEFAULT_POOL_SIZE"],[105,43,119,41],[106,4,120,2],[107,4,121,2,"NewKlass"],[107,12,121,10],[107,13,121,11,"release"],[107,20,121,18],[107,23,121,21,"standardReleaser"],[107,39,121,37],[108,4,122,2],[108,11,122,9,"NewKlass"],[108,19,122,17],[109,2,123,0],[109,3,123,1],[110,2,125,0],[110,6,125,6,"PooledClass"],[110,17,125,17],[110,20,125,20],[111,4,126,2,"addPoolingTo"],[111,16,126,14],[111,18,126,16,"addPoolingTo"],[111,30,126,28],[112,4,127,2,"oneArgumentPooler"],[112,21,127,19],[112,23,127,22,"oneArgumentPooler"],[112,40,127,48],[113,4,128,2,"twoArgumentPooler"],[113,21,128,19],[113,23,128,22,"twoArgumentPooler"],[113,40,128,48],[114,4,129,2,"threeArgumentPooler"],[114,23,129,21],[114,25,129,24,"threeArgumentPooler"],[114,44,129,52],[115,4,130,2,"fourArgumentPooler"],[115,22,130,20],[115,24,130,23,"fourArgumentPooler"],[116,2,131,0],[116,3,131,1],[117,2,133,0,"module"],[117,8,133,6],[117,9,133,7,"exports"],[117,16,133,14],[117,19,133,17,"PooledClass"],[117,30,133,28],[118,0,133,29],[118,3]],"functionMap":{"names":["<global>","oneArgumentPooler","twoArgumentPooler","threeArgumentPooler","fourArgumentPooler","standardReleaser","addPoolingTo"],"mappings":"AAA;0BCsB;CDS;0BEI;CFS;4BGI;CHS;2BII;CJS;yBKM;CLU;qBMgB;CNoB"}},"type":"js/module"}]}