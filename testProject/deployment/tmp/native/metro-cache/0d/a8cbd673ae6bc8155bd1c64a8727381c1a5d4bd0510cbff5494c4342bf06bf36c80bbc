{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":76,"column":0,"index":2370}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"react-native","data":{"asyncType":null,"locs":[{"start":{"line":2,"column":0,"index":32},"end":{"line":2,"column":76,"index":108}}],"key":"XEo4Z+Aarw9Y7I7ZLBt66vGLAVQ="}},{"name":"../RNGestureHandlerModule","data":{"asyncType":null,"locs":[{"start":{"line":5,"column":0,"index":198},"end":{"line":5,"column":63,"index":261}}],"key":"rPPmo2MLpjENsDg3Ww924PhFl60="}},{"name":"../utils","data":{"asyncType":null,"locs":[{"start":{"line":4,"column":0,"index":162},"end":{"line":4,"column":35,"index":197}}],"key":"wnEVYE0exYilYcCniP5DP5xdv08="}},{"name":"./handlersRegistry","data":{"asyncType":null,"locs":[{"start":{"line":3,"column":0,"index":109},"end":{"line":3,"column":52,"index":161}}],"key":"uUSwkNM2LATozp8YVz2n0Z5NN80="}},{"name":"../ghQueueMicrotask","data":{"asyncType":null,"locs":[{"start":{"line":6,"column":0,"index":262},"end":{"line":6,"column":55,"index":317}}],"key":"TTQQP3RHvuVHAscADKbtBNLPyaU="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.filterConfig = filterConfig;\n  exports.findNodeHandle = findNodeHandle;\n  exports.scheduleFlushOperations = scheduleFlushOperations;\n  var _reactNative = _$$_REQUIRE(_dependencyMap[1], \"react-native\");\n  var _RNGestureHandlerModule = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"../RNGestureHandlerModule\"));\n  function isConfigParam(param, name) {\n    // param !== Object(param) returns false if `param` is a function\n    // or an object and returns true if `param` is null\n    return param !== undefined && (param !== Object(param) || !('__isNative' in param)) && name !== 'onHandlerStateChange' && name !== 'onGestureEvent';\n  }\n  function filterConfig(props, validProps) {\n    var defaults = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var filteredConfig = Object.assign({}, defaults);\n    for (var key of validProps) {\n      var value = props[key];\n      if (isConfigParam(value, key)) {\n        if (key === 'simultaneousHandlers' || key === 'waitFor') {\n          value = transformIntoHandlerTags(props[key]);\n        } else if (key === 'hitSlop' && typeof value !== 'object') {\n          value = {\n            top: value,\n            left: value,\n            bottom: value,\n            right: value\n          };\n        }\n        filteredConfig[key] = value;\n      }\n    }\n    return filteredConfig;\n  }\n  function transformIntoHandlerTags(handlerIDs) {\n    handlerIDs = (0, _$$_REQUIRE(_dependencyMap[3], \"../utils\").toArray)(handlerIDs);\n    if (_reactNative.Platform.OS === 'web') {\n      return handlerIDs.map(function (_ref) {\n        var current = _ref.current;\n        return current;\n      }).filter(function (handle) {\n        return handle;\n      });\n    }\n    // converts handler string IDs into their numeric tags\n    return handlerIDs.map(function (handlerID) {\n      var _handlerID$current;\n      return _$$_REQUIRE(_dependencyMap[4], \"./handlersRegistry\").handlerIDToTag[handlerID] || ((_handlerID$current = handlerID.current) == null ? void 0 : _handlerID$current.handlerTag) || -1;\n    }).filter(function (handlerTag) {\n      return handlerTag > 0;\n    });\n  }\n  function findNodeHandle(node) {\n    if (_reactNative.Platform.OS === 'web') {\n      return node;\n    }\n    return (0, _reactNative.findNodeHandle)(node);\n  }\n  var flushOperationsScheduled = false;\n  function scheduleFlushOperations() {\n    if (!flushOperationsScheduled) {\n      flushOperationsScheduled = true;\n      (0, _$$_REQUIRE(_dependencyMap[5], \"../ghQueueMicrotask\").ghQueueMicrotask)(function () {\n        _RNGestureHandlerModule.default.flushOperations();\n        flushOperationsScheduled = false;\n      });\n    }\n  }\n});","lineCount":71,"map":[[9,2,2,0],[9,6,2,0,"_reactNative"],[9,18,2,0],[9,21,2,0,"_$$_REQUIRE"],[9,32,2,0],[9,33,2,0,"_dependencyMap"],[9,47,2,0],[10,2,5,0],[10,6,5,0,"_RNGestureHandlerModule"],[10,29,5,0],[10,32,5,0,"_interopRequireDefault"],[10,54,5,0],[10,55,5,0,"_$$_REQUIRE"],[10,66,5,0],[10,67,5,0,"_dependencyMap"],[10,81,5,0],[11,2,8,0],[11,11,8,9,"isConfigParam"],[11,24,8,22,"isConfigParam"],[11,25,8,23,"param"],[11,30,8,37],[11,32,8,39,"name"],[11,36,8,51],[11,38,8,53],[12,4,9,2],[13,4,10,2],[14,4,11,2],[14,11,12,4,"param"],[14,16,12,9],[14,21,12,14,"undefined"],[14,30,12,23],[14,35,13,5,"param"],[14,40,13,10],[14,45,13,15,"Object"],[14,51,13,21],[14,52,13,22,"param"],[14,57,13,27],[14,58,13,28],[14,62,14,6],[14,64,14,8],[14,76,14,20],[14,80,14,25,"param"],[14,85,14,58],[14,86,14,59],[14,87,14,60],[14,91,15,4,"name"],[14,95,15,8],[14,100,15,13],[14,122,15,35],[14,126,16,4,"name"],[14,130,16,8],[14,135,16,13],[14,151,16,29],[15,2,18,0],[16,2,20,7],[16,11,20,16,"filterConfig"],[16,23,20,28,"filterConfig"],[16,24,21,2,"props"],[16,29,21,32],[16,31,22,2,"validProps"],[16,41,22,22],[16,43,24,2],[17,4,24,2],[17,8,23,2,"defaults"],[17,16,23,35],[17,19,23,35,"arguments"],[17,28,23,35],[17,29,23,35,"length"],[17,35,23,35],[17,43,23,35,"arguments"],[17,52,23,35],[17,60,23,35,"undefined"],[17,69,23,35],[17,72,23,35,"arguments"],[17,81,23,35],[17,87,23,38],[17,88,23,39],[17,89,23,40],[18,4,25,2],[18,8,25,8,"filteredConfig"],[18,22,25,22],[18,25,25,22,"Object"],[18,31,25,22],[18,32,25,22,"assign"],[18,38,25,22],[18,43,25,30,"defaults"],[18,51,25,38],[18,52,25,40],[19,4,26,2],[19,9,26,7],[19,13,26,13,"key"],[19,16,26,16],[19,20,26,20,"validProps"],[19,30,26,30],[19,32,26,32],[20,6,27,4],[20,10,27,8,"value"],[20,15,27,13],[20,18,27,16,"props"],[20,23,27,21],[20,24,27,22,"key"],[20,27,27,25],[20,28,27,26],[21,6,28,4],[21,10,28,8,"isConfigParam"],[21,23,28,21],[21,24,28,22,"value"],[21,29,28,27],[21,31,28,29,"key"],[21,34,28,32],[21,35,28,33],[21,37,28,35],[22,8,29,6],[22,12,29,10,"key"],[22,15,29,13],[22,20,29,18],[22,42,29,40],[22,46,29,44,"key"],[22,49,29,47],[22,54,29,52],[22,63,29,61],[22,65,29,63],[23,10,30,8,"value"],[23,15,30,13],[23,18,30,16,"transformIntoHandlerTags"],[23,42,30,40],[23,43,30,41,"props"],[23,48,30,46],[23,49,30,47,"key"],[23,52,30,50],[23,53,30,51],[23,54,30,52],[24,8,31,6],[24,9,31,7],[24,15,31,13],[24,19,31,17,"key"],[24,22,31,20],[24,27,31,25],[24,36,31,34],[24,40,31,38],[24,47,31,45,"value"],[24,52,31,50],[24,57,31,55],[24,65,31,63],[24,67,31,65],[25,10,32,8,"value"],[25,15,32,13],[25,18,32,16],[26,12,32,18,"top"],[26,15,32,21],[26,17,32,23,"value"],[26,22,32,28],[27,12,32,30,"left"],[27,16,32,34],[27,18,32,36,"value"],[27,23,32,41],[28,12,32,43,"bottom"],[28,18,32,49],[28,20,32,51,"value"],[28,25,32,56],[29,12,32,58,"right"],[29,17,32,63],[29,19,32,65,"value"],[30,10,32,71],[30,11,32,72],[31,8,33,6],[32,8,34,6,"filteredConfig"],[32,22,34,20],[32,23,34,21,"key"],[32,26,34,24],[32,27,34,25],[32,30,34,28,"value"],[32,35,34,33],[33,6,35,4],[34,4,36,2],[35,4,37,2],[35,11,37,9,"filteredConfig"],[35,25,37,23],[36,2,38,0],[37,2,39,0],[37,11,39,9,"transformIntoHandlerTags"],[37,35,39,33,"transformIntoHandlerTags"],[37,36,39,34,"handlerIDs"],[37,46,39,49],[37,48,39,51],[38,4,40,2,"handlerIDs"],[38,14,40,12],[38,17,40,15],[38,21,40,15,"toArray"],[38,51,40,15],[38,52,40,15,"toArray"],[38,71,40,22],[38,73,40,23,"handlerIDs"],[38,83,40,33],[38,84,40,34],[39,4,42,2],[39,8,42,6,"Platform"],[39,29,42,14],[39,30,42,15,"OS"],[39,32,42,17],[39,37,42,22],[39,42,42,27],[39,44,42,29],[40,6,43,4],[40,13,43,11,"handlerIDs"],[40,23,43,21],[40,24,44,7,"map"],[40,27,44,10],[40,28,44,11],[40,38,44,11,"_ref"],[40,42,44,11],[41,8,44,11],[41,12,44,14,"current"],[41,19,44,21],[41,22,44,21,"_ref"],[41,26,44,21],[41,27,44,14,"current"],[41,34,44,21],[42,8,44,21],[42,15,44,46,"current"],[42,22,44,53],[43,6,44,53],[43,8,44,54],[43,9,45,7,"filter"],[43,15,45,13],[43,16,45,14],[43,26,45,15,"handle"],[43,32,45,26],[44,8,45,26],[44,15,45,31,"handle"],[44,21,45,37],[45,6,45,37],[45,8,45,38],[46,4,46,2],[47,4,47,2],[48,4,48,2],[48,11,48,9,"handlerIDs"],[48,21,48,19],[48,22,49,5,"map"],[48,25,49,8],[48,26,50,6],[48,36,50,7,"handlerID"],[48,45,50,21],[49,6,50,21],[49,10,50,21,"_handlerID$current"],[49,28,50,21],[50,6,50,21],[50,13,51,8,"handlerIDToTag"],[50,43,51,8],[50,44,51,8,"handlerIDToTag"],[50,80,51,22],[50,81,51,23,"handlerID"],[50,90,51,32],[50,91,51,33],[50,97,51,33,"_handlerID$current"],[50,115,51,33],[50,118,51,37,"handlerID"],[50,127,51,46],[50,128,51,47,"current"],[50,135,51,54],[50,156,51,37,"_handlerID$current"],[50,174,51,37],[50,175,51,56,"handlerTag"],[50,185,51,66],[50,190,51,70],[50,191,51,71],[50,192,51,72],[51,4,51,72],[51,5,52,4],[51,6,52,5],[51,7,53,5,"filter"],[51,13,53,11],[51,14,53,12],[51,24,53,13,"handlerTag"],[51,34,53,31],[52,6,53,31],[52,13,53,36,"handlerTag"],[52,23,53,46],[52,26,53,49],[52,27,53,50],[53,4,53,50],[53,6,53,51],[54,2,54,0],[55,2,56,7],[55,11,56,16,"findNodeHandle"],[55,25,56,30,"findNodeHandle"],[55,26,57,2,"node"],[55,30,57,77],[55,32,58,73],[56,4,59,2],[56,8,59,6,"Platform"],[56,29,59,14],[56,30,59,15,"OS"],[56,32,59,17],[56,37,59,22],[56,42,59,27],[56,44,59,29],[57,6,60,4],[57,13,60,11,"node"],[57,17,60,15],[58,4,61,2],[59,4,62,2],[59,11,62,9],[59,15,62,9,"findNodeHandleRN"],[59,42,62,25],[59,44,62,26,"node"],[59,48,62,30],[59,49,62,31],[60,2,63,0],[61,2,64,0],[61,6,64,4,"flushOperationsScheduled"],[61,30,64,28],[61,33,64,31],[61,38,64,36],[62,2,66,7],[62,11,66,16,"scheduleFlushOperations"],[62,34,66,39,"scheduleFlushOperations"],[62,35,66,39],[62,37,66,42],[63,4,67,2],[63,8,67,6],[63,9,67,7,"flushOperationsScheduled"],[63,33,67,31],[63,35,67,33],[64,6,68,4,"flushOperationsScheduled"],[64,30,68,28],[64,33,68,31],[64,37,68,35],[65,6,69,4],[65,10,69,4,"ghQueueMicrotask"],[65,40,69,4],[65,41,69,4,"ghQueueMicrotask"],[65,80,69,20],[65,82,69,21],[65,94,69,27],[66,8,70,6,"RNGestureHandlerModule"],[66,39,70,28],[66,40,70,29,"flushOperations"],[66,55,70,44],[66,56,70,45],[66,57,70,46],[67,8,72,6,"flushOperationsScheduled"],[67,32,72,30],[67,35,72,33],[67,40,72,38],[68,6,73,4],[68,7,73,5],[68,8,73,6],[69,4,74,2],[70,2,75,0],[71,0,75,1],[71,3]],"functionMap":{"names":["<global>","isConfigParam","filterConfig","transformIntoHandlerTags","handlerIDs.map$argument_0","handlerIDs.map.filter$argument_0","findNodeHandle","scheduleFlushOperations","ghQueueMicrotask$argument_0"],"mappings":"AAA;ACO;CDU;OEE;CFkB;AGC;WCK,0CD;cEC,uBF;MCK;wEDC;YEE,sCF;CHC;OME;CNO;OOG;qBCG;KDI;CPE"}},"type":"js/module"}]}