{"dependencies":[{"name":"react-native","data":{"asyncType":null,"locs":[{"start":{"line":2,"column":0,"index":48},"end":{"line":2,"column":44,"index":92}}],"key":"XEo4Z+Aarw9Y7I7ZLBt66vGLAVQ="}},{"name":"../utils/convertPercentageColor","data":{"asyncType":null,"locs":[{"start":{"line":3,"column":0,"index":93},"end":{"line":3,"column":73,"index":166}}],"key":"BH7h3uJxl8resxO+V0EwvMSFLzY="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = extractBrush;\n  var _reactNative = _$$_REQUIRE(_dependencyMap[0], \"react-native\");\n  var urlIdPattern = /^url\\(#(.+)\\)$/;\n  var currentColorBrush = {\n    type: 2\n  };\n  var contextFillBrush = {\n    type: 3\n  };\n  var contextStrokeBrush = {\n    type: 4\n  };\n  function extractBrush(color) {\n    if (!color || color === 'none') {\n      return null;\n    }\n    if (color === 'currentColor') {\n      return currentColorBrush;\n    }\n    if (color === 'context-fill') {\n      return contextFillBrush;\n    }\n    if (color === 'context-stroke') {\n      return contextStrokeBrush;\n    }\n    var brush = typeof color === 'string' && color.match(urlIdPattern);\n    if (brush) {\n      return {\n        type: 1,\n        brushRef: brush[1]\n      };\n    }\n\n    // Convert percentage RGB/RGBA color to standard RGB/RGBA color\n    var colorToProcess = (0, _$$_REQUIRE(_dependencyMap[1], \"../utils/convertPercentageColor\").convertPercentageColor)(color);\n    var processedColor = (0, _reactNative.processColor)(colorToProcess);\n    if (typeof processedColor === 'number') {\n      return {\n        type: 0,\n        payload: processedColor\n      };\n    }\n    if (typeof processedColor === 'object' && processedColor !== null) {\n      // if we got an object, it should be `PlatformColor` or `DynamicColorIOS`,\n      // so we pass it as an object with `0` value as first item, which is interpreted\n      // on the native side as color to be managed by `RCTConvert`.\n      return {\n        type: 0,\n        payload: processedColor\n      };\n    }\n    console.warn(`\"${String(color)}\" is not a valid color or brush`);\n    return null;\n  }\n});","lineCount":59,"map":[[6,2,2,0],[6,6,2,0,"_reactNative"],[6,18,2,0],[6,21,2,0,"_$$_REQUIRE"],[6,32,2,0],[6,33,2,0,"_dependencyMap"],[6,47,2,0],[7,2,5,0],[7,6,5,6,"urlIdPattern"],[7,18,5,18],[7,21,5,21],[7,37,5,37],[8,2,7,0],[8,6,7,6,"currentColorBrush"],[8,23,7,23],[8,26,7,26],[9,4,7,28,"type"],[9,8,7,32],[9,10,7,34],[10,2,7,36],[10,3,7,37],[11,2,8,0],[11,6,8,6,"contextFillBrush"],[11,22,8,22],[11,25,8,25],[12,4,8,27,"type"],[12,8,8,31],[12,10,8,33],[13,2,8,35],[13,3,8,36],[14,2,9,0],[14,6,9,6,"contextStrokeBrush"],[14,24,9,24],[14,27,9,27],[15,4,9,29,"type"],[15,8,9,33],[15,10,9,35],[16,2,9,37],[16,3,9,38],[17,2,11,15],[17,11,11,24,"extractBrush"],[17,23,11,36,"extractBrush"],[17,24,11,37,"color"],[17,29,11,55],[17,31,11,57],[18,4,12,2],[18,8,12,6],[18,9,12,7,"color"],[18,14,12,12],[18,18,12,16,"color"],[18,23,12,21],[18,28,12,26],[18,34,12,32],[18,36,12,34],[19,6,13,4],[19,13,13,11],[19,17,13,15],[20,4,14,2],[21,4,16,2],[21,8,16,6,"color"],[21,13,16,11],[21,18,16,16],[21,32,16,30],[21,34,16,32],[22,6,17,4],[22,13,17,11,"currentColorBrush"],[22,30,17,28],[23,4,18,2],[24,4,20,2],[24,8,20,6,"color"],[24,13,20,11],[24,18,20,16],[24,32,20,30],[24,34,20,32],[25,6,21,4],[25,13,21,11,"contextFillBrush"],[25,29,21,27],[26,4,22,2],[27,4,24,2],[27,8,24,6,"color"],[27,13,24,11],[27,18,24,16],[27,34,24,32],[27,36,24,34],[28,6,25,4],[28,13,25,11,"contextStrokeBrush"],[28,31,25,29],[29,4,26,2],[30,4,28,2],[30,8,28,8,"brush"],[30,13,28,13],[30,16,28,16],[30,23,28,23,"color"],[30,28,28,28],[30,33,28,33],[30,41,28,41],[30,45,28,45,"color"],[30,50,28,50],[30,51,28,51,"match"],[30,56,28,56],[30,57,28,57,"urlIdPattern"],[30,69,28,69],[30,70,28,70],[31,4,29,2],[31,8,29,6,"brush"],[31,13,29,11],[31,15,29,13],[32,6,30,4],[32,13,30,11],[33,8,30,13,"type"],[33,12,30,17],[33,14,30,19],[33,15,30,20],[34,8,30,22,"brushRef"],[34,16,30,30],[34,18,30,32,"brush"],[34,23,30,37],[34,24,30,38],[34,25,30,39],[35,6,30,41],[35,7,30,42],[36,4,31,2],[38,4,33,2],[39,4,34,2],[39,8,34,8,"colorToProcess"],[39,22,34,22],[39,25,34,25],[39,29,34,25,"convertPercentageColor"],[39,59,34,25],[39,60,34,25,"convertPercentageColor"],[39,117,34,47],[39,119,34,48,"color"],[39,124,34,53],[39,125,34,54],[40,4,35,2],[40,8,35,8,"processedColor"],[40,22,35,22],[40,25,35,25],[40,29,35,25,"processColor"],[40,54,35,37],[40,56,35,38,"colorToProcess"],[40,70,35,52],[40,71,35,53],[41,4,36,2],[41,8,36,6],[41,15,36,13,"processedColor"],[41,29,36,27],[41,34,36,32],[41,42,36,40],[41,44,36,42],[42,6,37,4],[42,13,37,11],[43,8,37,13,"type"],[43,12,37,17],[43,14,37,19],[43,15,37,20],[44,8,37,22,"payload"],[44,15,37,29],[44,17,37,31,"processedColor"],[45,6,37,46],[45,7,37,47],[46,4,38,2],[47,4,40,2],[47,8,40,6],[47,15,40,13,"processedColor"],[47,29,40,27],[47,34,40,32],[47,42,40,40],[47,46,40,44,"processedColor"],[47,60,40,58],[47,65,40,63],[47,69,40,67],[47,71,40,69],[48,6,41,4],[49,6,42,4],[50,6,43,4],[51,6,44,4],[51,13,44,11],[52,8,44,13,"type"],[52,12,44,17],[52,14,44,19],[52,15,44,20],[53,8,44,22,"payload"],[53,15,44,29],[53,17,44,31,"processedColor"],[54,6,44,46],[54,7,44,47],[55,4,45,2],[56,4,47,2,"console"],[56,11,47,9],[56,12,47,10,"warn"],[56,16,47,14],[56,17,47,15],[56,21,47,19,"String"],[56,27,47,25],[56,28,47,26,"color"],[56,33,47,31],[56,34,47,32],[56,67,47,65],[56,68,47,66],[57,4,48,2],[57,11,48,9],[57,15,48,13],[58,2,49,0],[59,0,49,1],[59,3]],"functionMap":{"names":["<global>","extractBrush"],"mappings":"AAA;eCU;CDsC"}},"type":"js/module"}]}