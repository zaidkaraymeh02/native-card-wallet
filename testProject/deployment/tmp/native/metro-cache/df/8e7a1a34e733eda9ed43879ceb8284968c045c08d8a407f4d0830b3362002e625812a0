{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1995,"column":0,"index":73145}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/objectWithoutProperties","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1995,"column":0,"index":73145}}],"key":"l9ek7s8G7hY7pJY4P1vxwsk0NPM="}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1995,"column":0,"index":73145}}],"key":"EU+qeBIKi4KcIzPeK4PbkLqFqVY="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1995,"column":0,"index":73145}}],"key":"ohGilxjVqjyE1GooDVDt9OYg9x0="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1995,"column":0,"index":73145}}],"key":"V6GYoXnblvuuGHJNMy7MHyaunsU="}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1995,"column":0,"index":73145}}],"key":"rcd0dMwf8BS2g+8U1wyhIOxtYEo="}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1995,"column":0,"index":73145}}],"key":"4pxOr+e+5cSZAdeEKxSt3F7LoKY="}},{"name":"@babel/runtime/helpers/inherits","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1995,"column":0,"index":73145}}],"key":"EDnOjopp9yNVawSzfBRsy2dq5dM="}},{"name":"../../Animated/AnimatedImplementation","data":{"asyncType":null,"locs":[{"start":{"line":26,"column":0,"index":945},"end":{"line":26,"column":75,"index":1020}}],"key":"iIJQAznu5ZI9r3jPHzemleNDzfQ="}},{"name":"../../Interaction/FrameRateLogger","data":{"asyncType":null,"locs":[{"start":{"line":27,"column":0,"index":1021},"end":{"line":27,"column":64,"index":1085}}],"key":"ASdPyMD+cVNnavW4vAcooCleVB4="}},{"name":"../../ReactNative/UIManager","data":{"asyncType":null,"locs":[{"start":{"line":29,"column":0,"index":1150},"end":{"line":29,"column":52,"index":1202}}],"key":"BJvqAApcBQi+p+Q2g/u0ER1zq4Q="}},{"name":"../../StyleSheet/flattenStyle","data":{"asyncType":null,"locs":[{"start":{"line":30,"column":0,"index":1203},"end":{"line":30,"column":57,"index":1260}}],"key":"g+sqej+kEmJ8JPA0E/+1AP6zIz0="}},{"name":"../../StyleSheet/splitLayoutProps","data":{"asyncType":null,"locs":[{"start":{"line":31,"column":0,"index":1261},"end":{"line":31,"column":65,"index":1326}}],"key":"gz4andwK5qWLcUN2RpHcQU7S8qY="}},{"name":"../../StyleSheet/StyleSheet","data":{"asyncType":null,"locs":[{"start":{"line":32,"column":0,"index":1327},"end":{"line":32,"column":53,"index":1380}}],"key":"8T7QAUV0eNWHjP7T5GM/rp2jyUM="}},{"name":"../../Utilities/Dimensions","data":{"asyncType":null,"locs":[{"start":{"line":33,"column":0,"index":1381},"end":{"line":33,"column":52,"index":1433}}],"key":"5YgiTp20ZLCEZWOuHERBOlXu7j0="}},{"name":"../../Utilities/dismissKeyboard","data":{"asyncType":null,"locs":[{"start":{"line":34,"column":0,"index":1434},"end":{"line":34,"column":62,"index":1496}}],"key":"5cDgsJwx4GDVbGMAY/1yrQcMJXg="}},{"name":"../../Utilities/Platform","data":{"asyncType":null,"locs":[{"start":{"line":35,"column":0,"index":1497},"end":{"line":35,"column":48,"index":1545}}],"key":"u8HkMskTipFtyna6raQCNa0ZU48="}},{"name":"../../vendor/emitter/EventEmitter","data":{"asyncType":null,"locs":[{"start":{"line":36,"column":0,"index":1546},"end":{"line":36,"column":61,"index":1607}}],"key":"eoPYpdcoMAJGUMrlyBE3rAoJoqU="}},{"name":"../Keyboard/Keyboard","data":{"asyncType":null,"locs":[{"start":{"line":37,"column":0,"index":1608},"end":{"line":37,"column":44,"index":1652}}],"key":"Wt97WWtfGfaXOP4qySe32Kchlho="}},{"name":"../TextInput/TextInputState","data":{"asyncType":null,"locs":[{"start":{"line":38,"column":0,"index":1653},"end":{"line":38,"column":57,"index":1710}}],"key":"6kDZ/2+QA1PxQuKawObmV+IFLSA="}},{"name":"../View/View","data":{"asyncType":null,"locs":[{"start":{"line":39,"column":0,"index":1711},"end":{"line":39,"column":32,"index":1743}}],"key":"5RouqHua0dKv+sW+w8ijnac3atc="}},{"name":"./AndroidHorizontalScrollContentViewNativeComponent","data":{"asyncType":null,"locs":[{"start":{"line":40,"column":0,"index":1744},"end":{"line":40,"column":116,"index":1860}}],"key":"5U+TXY6GlSH8W+FzIznEkmpFwvk="}},{"name":"./AndroidHorizontalScrollViewNativeComponent","data":{"asyncType":null,"locs":[{"start":{"line":41,"column":0,"index":1861},"end":{"line":41,"column":102,"index":1963}}],"key":"eroxK0p9dRj6FyR9ThKKXpux/Dk="}},{"name":"./processDecelerationRate","data":{"asyncType":null,"locs":[{"start":{"line":42,"column":0,"index":1964},"end":{"line":42,"column":64,"index":2028}}],"key":"oRscUdZIrXcynXKU0SsYA8XAn70="}},{"name":"./ScrollContentViewNativeComponent","data":{"asyncType":null,"locs":[{"start":{"line":43,"column":0,"index":2029},"end":{"line":43,"column":82,"index":2111}}],"key":"NyT8NKtCLBVSouaAM9kYv0ML6XE="}},{"name":"./ScrollViewCommands","data":{"asyncType":null,"locs":[{"start":{"line":44,"column":0,"index":2112},"end":{"line":44,"column":44,"index":2156}}],"key":"OwJw5OrgVOvgO3Du0IPXfOjl2zE="}},{"name":"./ScrollViewContext","data":{"asyncType":null,"locs":[{"start":{"line":45,"column":0,"index":2157},"end":{"line":45,"column":76,"index":2233}}],"key":"hsA5ttI8H+zO56rqtoEdQkG2JLQ="}},{"name":"./ScrollViewNativeComponent","data":{"asyncType":null,"locs":[{"start":{"line":46,"column":0,"index":2234},"end":{"line":46,"column":68,"index":2302}}],"key":"z2VUmX38nmON+xfBI0VvwaS+fPQ="}},{"name":"./ScrollViewStickyHeader","data":{"asyncType":null,"locs":[{"start":{"line":47,"column":0,"index":2303},"end":{"line":47,"column":62,"index":2365}}],"key":"QuBJ2dPm6wX6kdHZphhyc9tUXHg="}},{"name":"invariant","data":{"asyncType":null,"locs":[{"start":{"line":48,"column":0,"index":2366},"end":{"line":48,"column":34,"index":2400}}],"key":"Fzi/BpZws2YooIGJ9b6u0HJtuks="}},{"name":"memoize-one","data":{"asyncType":null,"locs":[{"start":{"line":49,"column":0,"index":2401},"end":{"line":49,"column":34,"index":2435}}],"key":"yhi4AwLgDqwkRU8mLaJv0lkW5pc="}},{"name":"nullthrows","data":{"asyncType":null,"locs":[{"start":{"line":50,"column":0,"index":2436},"end":{"line":50,"column":36,"index":2472}}],"key":"3yYZ/IFwZXE7GnlKPSAzr74cRoo="}},{"name":"react","data":{"asyncType":null,"locs":[{"start":{"line":51,"column":0,"index":2473},"end":{"line":51,"column":31,"index":2504}}],"key":"a4EMkKqamYWCMMPV7UeQlqGQ+ks="}},{"name":"react/jsx-runtime","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1995,"column":0,"index":73145}}],"key":"5dCMGbjkz1QWCPjOwzvy5ZBkuK8="}},{"name":"../../Renderer/shims/ReactNative","data":{"asyncType":null,"locs":[{"start":{"line":54,"column":2,"index":2537},"end":{"line":54,"column":45,"index":2580}}],"key":"BReESGgXxB09DjzeKLoS7jIgAqQ="}},{"name":"../../ReactNative/RendererProxy","data":{"asyncType":null,"locs":[{"start":{"line":28,"column":0,"index":1086},"end":{"line":28,"column":63,"index":1149}},{"start":{"line":28,"column":0,"index":1086},"end":{"line":28,"column":63,"index":1149}},{"start":{"line":28,"column":0,"index":1086},"end":{"line":28,"column":63,"index":1149}}],"key":"QxznglvNF7hpOO8cCvqhdE7Uo6Y="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/objectWithoutProperties\"));\n  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/slicedToArray\"));\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/createClass\"));\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/getPrototypeOf\"));\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"@babel/runtime/helpers/inherits\"));\n  var _AnimatedImplementation = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"../../Animated/AnimatedImplementation\"));\n  var _FrameRateLogger = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9], \"../../Interaction/FrameRateLogger\"));\n  var _UIManager = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10], \"../../ReactNative/UIManager\"));\n  var _flattenStyle = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11], \"../../StyleSheet/flattenStyle\"));\n  var _splitLayoutProps2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12], \"../../StyleSheet/splitLayoutProps\"));\n  var _StyleSheet = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13], \"../../StyleSheet/StyleSheet\"));\n  var _Dimensions = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14], \"../../Utilities/Dimensions\"));\n  var _dismissKeyboard = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15], \"../../Utilities/dismissKeyboard\"));\n  var _Platform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16], \"../../Utilities/Platform\"));\n  var _EventEmitter = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17], \"../../vendor/emitter/EventEmitter\"));\n  var _Keyboard = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[18], \"../Keyboard/Keyboard\"));\n  var _TextInputState = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[19], \"../TextInput/TextInputState\"));\n  var _View = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[20], \"../View/View\"));\n  var _AndroidHorizontalScrollContentViewNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[21], \"./AndroidHorizontalScrollContentViewNativeComponent\"));\n  var _AndroidHorizontalScrollViewNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[22], \"./AndroidHorizontalScrollViewNativeComponent\"));\n  var _processDecelerationRate = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[23], \"./processDecelerationRate\"));\n  var _ScrollContentViewNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[24], \"./ScrollContentViewNativeComponent\"));\n  var _ScrollViewCommands = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[25], \"./ScrollViewCommands\"));\n  var _ScrollViewContext = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[26], \"./ScrollViewContext\"));\n  var _ScrollViewNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[27], \"./ScrollViewNativeComponent\"));\n  var _ScrollViewStickyHeader = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[28], \"./ScrollViewStickyHeader\"));\n  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[29], \"invariant\"));\n  var _memoizeOne = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[30], \"memoize-one\"));\n  var _nullthrows = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[31], \"nullthrows\"));\n  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[32], \"react\"));\n  var _jsxRuntime = _$$_REQUIRE(_dependencyMap[33], \"react/jsx-runtime\");\n  var _excluded = [\"experimental_endDraggingSensitivityMultiplier\"];\n  var _jsxFileName = \"C:\\\\Program Files\\\\Mendix\\\\10.18.1.55792\\\\modeler\\\\tools\\\\node\\\\node_modules\\\\react-native\\\\Libraries\\\\Components\\\\ScrollView\\\\ScrollView.js\";\n  function _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\n  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\n  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }\n  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); } /**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n */\n  if (_Platform.default.OS === 'ios') {\n    _$$_REQUIRE(_dependencyMap[34], \"../../Renderer/shims/ReactNative\"); // Force side effects to prevent T55744311\n  }\n  var _ref = _Platform.default.OS === 'android' ? {\n      NativeHorizontalScrollViewTuple: [_AndroidHorizontalScrollViewNativeComponent.default, _AndroidHorizontalScrollContentViewNativeComponent.default],\n      NativeVerticalScrollViewTuple: [_ScrollViewNativeComponent.default, _View.default]\n    } : {\n      NativeHorizontalScrollViewTuple: [_ScrollViewNativeComponent.default, _ScrollContentViewNativeComponent.default],\n      NativeVerticalScrollViewTuple: [_ScrollViewNativeComponent.default, _ScrollContentViewNativeComponent.default]\n    },\n    NativeHorizontalScrollViewTuple = _ref.NativeHorizontalScrollViewTuple,\n    NativeVerticalScrollViewTuple = _ref.NativeVerticalScrollViewTuple;\n\n  /*\n   * iOS scroll event timing nuances:\n   * ===============================\n   *\n   *\n   * Scrolling without bouncing, if you touch down:\n   * -------------------------------\n   *\n   * 1. `onMomentumScrollBegin` (when animation begins after letting up)\n   *    ... physical touch starts ...\n   * 2. `onTouchStartCapture`   (when you press down to stop the scroll)\n   * 3. `onTouchStart`          (same, but bubble phase)\n   * 4. `onResponderRelease`    (when lifting up - you could pause forever before * lifting)\n   * 5. `onMomentumScrollEnd`\n   *\n   *\n   * Scrolling with bouncing, if you touch down:\n   * -------------------------------\n   *\n   * 1. `onMomentumScrollBegin` (when animation begins after letting up)\n   *    ... bounce begins ...\n   *    ... some time elapses ...\n   *    ... physical touch during bounce ...\n   * 2. `onMomentumScrollEnd`   (Makes no sense why this occurs first during bounce)\n   * 3. `onTouchStartCapture`   (immediately after `onMomentumScrollEnd`)\n   * 4. `onTouchStart`          (same, but bubble phase)\n   * 5. `onTouchEnd`            (You could hold the touch start for a long time)\n   * 6. `onMomentumScrollBegin` (When releasing the view starts bouncing back)\n   *\n   * So when we receive an `onTouchStart`, how can we tell if we are touching\n   * *during* an animation (which then causes the animation to stop)? The only way\n   * to tell is if the `touchStart` occurred immediately after the\n   * `onMomentumScrollEnd`.\n   *\n   * This is abstracted out for you, so you can just call this.scrollResponderIsAnimating() if\n   * necessary\n   *\n   * `ScrollView` also includes logic for blurring a currently focused input\n   * if one is focused while scrolling. This is a natural place\n   * to put this logic since it can support not dismissing the keyboard while\n   * scrolling, unless a recognized \"tap\"-like gesture has occurred.\n   *\n   * The public lifecycle API includes events for keyboard interaction, responder\n   * interaction, and scrolling (among others). The keyboard callbacks\n   * `onKeyboardWill/Did/*` are *global* events, but are invoked on scroll\n   * responder's props so that you can guarantee that the scroll responder's\n   * internal state has been updated accordingly (and deterministically) by\n   * the time the props callbacks are invoke. Otherwise, you would always wonder\n   * if the scroll responder is currently in a state where it recognizes new\n   * keyboard positions etc. If coordinating scrolling with keyboard movement,\n   * *always* use these hooks instead of listening to your own global keyboard\n   * events.\n   *\n   * Public keyboard lifecycle API: (props callbacks)\n   *\n   * Standard Keyboard Appearance Sequence:\n   *\n   *   this.props.onKeyboardWillShow\n   *   this.props.onKeyboardDidShow\n   *\n   * `onScrollResponderKeyboardDismissed` will be invoked if an appropriate\n   * tap inside the scroll responder's scrollable region was responsible\n   * for the dismissal of the keyboard. There are other reasons why the\n   * keyboard could be dismissed.\n   *\n   *   this.props.onScrollResponderKeyboardDismissed\n   *\n   * Standard Keyboard Hide Sequence:\n   *\n   *   this.props.onKeyboardWillHide\n   *   this.props.onKeyboardDidHide\n   */\n\n  // Public methods for ScrollView\n\n  var IS_ANIMATING_TOUCH_START_THRESHOLD_MS = 16;\n  /**\n   * Component that wraps platform ScrollView while providing\n   * integration with touch locking \"responder\" system.\n   *\n   * Keep in mind that ScrollViews must have a bounded height in order to work,\n   * since they contain unbounded-height children into a bounded container (via\n   * a scroll interaction). In order to bound the height of a ScrollView, either\n   * set the height of the view directly (discouraged) or make sure all parent\n   * views have bounded height. Forgetting to transfer `{flex: 1}` down the\n   * view stack can lead to errors here, which the element inspector makes\n   * easy to debug.\n   *\n   * Doesn't yet support other contained responders from blocking this scroll\n   * view from becoming the responder.\n   *\n   *\n   * `<ScrollView>` vs [`<FlatList>`](https://reactnative.dev/docs/flatlist) - which one to use?\n   *\n   * `ScrollView` simply renders all its react child components at once. That\n   * makes it very easy to understand and use.\n   *\n   * On the other hand, this has a performance downside. Imagine you have a very\n   * long list of items you want to display, maybe several screens worth of\n   * content. Creating JS components and native views for everything all at once,\n   * much of which may not even be shown, will contribute to slow rendering and\n   * increased memory usage.\n   *\n   * This is where `FlatList` comes into play. `FlatList` renders items lazily,\n   * just when they are about to appear, and removes items that scroll way off\n   * screen to save memory and processing time.\n   *\n   * `FlatList` is also handy if you want to render separators between your items,\n   * multiple columns, infinite scroll loading, or any number of other features it\n   * supports out of the box.\n   */\n  var ScrollView = /*#__PURE__*/function (_React$Component) {\n    function ScrollView(props) {\n      var _this$props$contentOf, _this$props$contentOf2, _this$props$contentIn, _this$props$contentIn2;\n      var _this;\n      (0, _classCallCheck2.default)(this, ScrollView);\n      _this = _callSuper(this, ScrollView, [props]);\n      _this._scrollAnimatedValueAttachment = null;\n      _this._stickyHeaderRefs = new Map();\n      _this._headerLayoutYs = new Map();\n      _this._keyboardMetrics = null;\n      _this._additionalScrollOffset = 0;\n      _this._isTouching = false;\n      _this._lastMomentumScrollBeginTime = 0;\n      _this._lastMomentumScrollEndTime = 0;\n      // Reset to false every time becomes responder. This is used to:\n      // - Determine if the scroll view has been scrolled and therefore should\n      // refuse to give up its responder lock.\n      // - Determine if releasing should dismiss the keyboard when we are in\n      // tap-to-dismiss mode (this.props.keyboardShouldPersistTaps !== 'always').\n      _this._observedScrollSinceBecomingResponder = false;\n      _this._becameResponderWhileAnimating = false;\n      _this._preventNegativeScrollOffset = null;\n      _this._animated = null;\n      _this._subscriptionKeyboardWillShow = null;\n      _this._subscriptionKeyboardWillHide = null;\n      _this._subscriptionKeyboardDidShow = null;\n      _this._subscriptionKeyboardDidHide = null;\n      _this.state = {\n        layoutHeight: null,\n        onScrollEmitter: null\n      };\n      /**\n       * Returns a reference to the underlying scroll responder, which supports\n       * operations like `scrollTo`. All ScrollView-like components should\n       * implement this method so that they can be composed while providing access\n       * to the underlying scroll responder's methods.\n       */\n      _this.getScrollResponder = function () {\n        // $FlowFixMe[unclear-type]\n        return _this;\n      };\n      _this.getScrollableNode = function () {\n        return (0, _$$_REQUIRE(_dependencyMap[35], \"../../ReactNative/RendererProxy\").findNodeHandle)(_this._scrollView.nativeInstance);\n      };\n      _this.getInnerViewNode = function () {\n        return (0, _$$_REQUIRE(_dependencyMap[35], \"../../ReactNative/RendererProxy\").findNodeHandle)(_this._innerView.nativeInstance);\n      };\n      _this.getInnerViewRef = function () {\n        return _this._innerView.nativeInstance;\n      };\n      _this.getNativeScrollRef = function () {\n        return _this._scrollView.nativeInstance;\n      };\n      /**\n       * Scrolls to a given x, y offset, either immediately or with a smooth animation.\n       *\n       * Example:\n       *\n       * `scrollTo({x: 0, y: 0, animated: true})`\n       *\n       * Note: The weird function signature is due to the fact that, for historical reasons,\n       * the function also accepts separate arguments as an alternative to the options object.\n       * This is deprecated due to ambiguity (y before x), and SHOULD NOT BE USED.\n       */\n      _this.scrollTo = function (options, deprecatedX, deprecatedAnimated) {\n        var x, y, animated;\n        if (typeof options === 'number') {\n          console.warn('`scrollTo(y, x, animated)` is deprecated. Use `scrollTo({x: 5, y: 5, ' + 'animated: true})` instead.');\n          y = options;\n          x = deprecatedX;\n          animated = deprecatedAnimated;\n        } else if (options) {\n          y = options.y;\n          x = options.x;\n          animated = options.animated;\n        }\n        if (_this._scrollView.nativeInstance == null) {\n          return;\n        }\n        _ScrollViewCommands.default.scrollTo(_this._scrollView.nativeInstance, x || 0, y || 0, animated !== false);\n      };\n      /**\n       * If this is a vertical ScrollView scrolls to the bottom.\n       * If this is a horizontal ScrollView scrolls to the right.\n       *\n       * Use `scrollToEnd({animated: true})` for smooth animated scrolling,\n       * `scrollToEnd({animated: false})` for immediate scrolling.\n       * If no options are passed, `animated` defaults to true.\n       */\n      _this.scrollToEnd = function (options) {\n        // Default to true\n        var animated = (options && options.animated) !== false;\n        if (_this._scrollView.nativeInstance == null) {\n          return;\n        }\n        _ScrollViewCommands.default.scrollToEnd(_this._scrollView.nativeInstance, animated);\n      };\n      /**\n       * Displays the scroll indicators momentarily.\n       *\n       * @platform ios\n       */\n      _this.flashScrollIndicators = function () {\n        if (_this._scrollView.nativeInstance == null) {\n          return;\n        }\n        _ScrollViewCommands.default.flashScrollIndicators(_this._scrollView.nativeInstance);\n      };\n      _this._subscribeToOnScroll = function (callback) {\n        // An undefined value means the listener has not been added, yet.\n        // A null value means the listener has been removed.\n        var subscription;\n        _this.setState(function (_ref2) {\n          var onScrollEmitter = _ref2.onScrollEmitter;\n          if (onScrollEmitter) {\n            return null;\n          } else {\n            return {\n              onScrollEmitter: new _EventEmitter.default()\n            };\n          }\n        }, function () {\n          // If `subscription` is null, that means it was removed before we got\n          // here so do nothing.\n          if (subscription !== null) {\n            subscription = (0, _nullthrows.default)(_this.state.onScrollEmitter).addListener('scroll', callback);\n          }\n        });\n        return {\n          remove: function remove() {\n            var _subscription;\n            // If `subscription` was created before this invocation, remove it.\n            (_subscription = subscription) == null || _subscription.remove();\n            // Record this invocation by setting `subscription` to null, in case it\n            // ends up being created after this invocation.\n            subscription = null;\n          }\n        };\n      };\n      /**\n       * This method should be used as the callback to onFocus in a TextInputs'\n       * parent view. Note that any module using this mixin needs to return\n       * the parent view's ref in getScrollViewRef() in order to use this method.\n       * @param {number} nodeHandle The TextInput node handle\n       * @param {number} additionalOffset The scroll view's bottom \"contentInset\".\n       *        Default is 0.\n       * @param {bool} preventNegativeScrolling Whether to allow pulling the content\n       *        down to make it meet the keyboard's top. Default is false.\n       */\n      _this.scrollResponderScrollNativeHandleToKeyboard = function (nodeHandle, additionalOffset, preventNegativeScrollOffset) {\n        _this._additionalScrollOffset = additionalOffset || 0;\n        _this._preventNegativeScrollOffset = !!preventNegativeScrollOffset;\n        if (_this._innerView.nativeInstance == null) {\n          return;\n        }\n        if (typeof nodeHandle === 'number') {\n          _UIManager.default.measureLayout(nodeHandle, (0, _nullthrows.default)((0, _$$_REQUIRE(_dependencyMap[35], \"../../ReactNative/RendererProxy\").findNodeHandle)(_this)),\n          // $FlowFixMe[method-unbinding] added when improving typing for this parameters\n          _this._textInputFocusError, _this._inputMeasureAndScrollToKeyboard);\n        } else {\n          nodeHandle.measureLayout(_this._innerView.nativeInstance, _this._inputMeasureAndScrollToKeyboard,\n          // $FlowFixMe[method-unbinding] added when improving typing for this parameters\n          _this._textInputFocusError);\n        }\n      };\n      /**\n       * A helper function to zoom to a specific rect in the scrollview. The argument has the shape\n       * {x: number; y: number; width: number; height: number; animated: boolean = true}\n       *\n       * @platform ios\n       */\n      _this.scrollResponderZoomTo = function (rect, animated // deprecated, put this inside the rect argument instead\n      ) {\n        (0, _invariant.default)(_Platform.default.OS === 'ios', 'zoomToRect is not implemented');\n        if ('animated' in rect) {\n          _this._animated = rect.animated;\n          delete rect.animated;\n        } else if (typeof animated !== 'undefined') {\n          console.warn('`scrollResponderZoomTo` `animated` argument is deprecated. Use `options.animated` instead');\n        }\n        if (_this._scrollView.nativeInstance == null) {\n          return;\n        }\n        _ScrollViewCommands.default.zoomToRect(_this._scrollView.nativeInstance, rect, animated !== false);\n      };\n      /**\n       * The calculations performed here assume the scroll view takes up the entire\n       * screen - even if has some content inset. We then measure the offsets of the\n       * keyboard, and compensate both for the scroll view's \"contentInset\".\n       *\n       * @param {number} left Position of input w.r.t. table view.\n       * @param {number} top Position of input w.r.t. table view.\n       * @param {number} width Width of the text input.\n       * @param {number} height Height of the text input.\n       */\n      _this._inputMeasureAndScrollToKeyboard = function (left, top, width, height) {\n        var keyboardScreenY = _Dimensions.default.get('window').height;\n        var scrollTextInputIntoVisibleRect = function scrollTextInputIntoVisibleRect() {\n          if (_this._keyboardMetrics != null) {\n            keyboardScreenY = _this._keyboardMetrics.screenY;\n          }\n          var scrollOffsetY = top - keyboardScreenY + height + _this._additionalScrollOffset;\n\n          // By default, this can scroll with negative offset, pulling the content\n          // down so that the target component's bottom meets the keyboard's top.\n          // If requested otherwise, cap the offset at 0 minimum to avoid content\n          // shifting down.\n          if (_this._preventNegativeScrollOffset === true) {\n            scrollOffsetY = Math.max(0, scrollOffsetY);\n          }\n          _this.scrollTo({\n            x: 0,\n            y: scrollOffsetY,\n            animated: true\n          });\n          _this._additionalScrollOffset = 0;\n          _this._preventNegativeScrollOffset = false;\n        };\n        if (_this._keyboardMetrics == null) {\n          // `_keyboardMetrics` is set inside `scrollResponderKeyboardWillShow` which\n          // is not guaranteed to be called before `_inputMeasureAndScrollToKeyboard` but native has already scheduled it.\n          // In case it was not called before `_inputMeasureAndScrollToKeyboard`, we postpone scrolling to\n          // text input.\n          setTimeout(function () {\n            scrollTextInputIntoVisibleRect();\n          }, 0);\n        } else {\n          scrollTextInputIntoVisibleRect();\n        }\n      };\n      _this._handleScroll = function (e) {\n        var _this$state$onScrollE;\n        _this._observedScrollSinceBecomingResponder = true;\n        _this.props.onScroll && _this.props.onScroll(e);\n        (_this$state$onScrollE = _this.state.onScrollEmitter) == null || _this$state$onScrollE.emit('scroll', {\n          x: e.nativeEvent.contentOffset.x,\n          y: e.nativeEvent.contentOffset.y\n        });\n      };\n      _this._handleLayout = function (e) {\n        if (_this.props.invertStickyHeaders === true) {\n          _this.setState({\n            layoutHeight: e.nativeEvent.layout.height\n          });\n        }\n        if (_this.props.onLayout) {\n          _this.props.onLayout(e);\n        }\n      };\n      _this._handleContentOnLayout = function (e) {\n        var _e$nativeEvent$layout = e.nativeEvent.layout,\n          width = _e$nativeEvent$layout.width,\n          height = _e$nativeEvent$layout.height;\n        _this.props.onContentSizeChange && _this.props.onContentSizeChange(width, height);\n      };\n      _this._innerView = createRefForwarder(function (instance) {\n        return instance;\n      });\n      _this._scrollView = createRefForwarder(function (nativeInstance) {\n        // This is a hack. Ideally we would forwardRef  to the underlying\n        // host component. However, since ScrollView has it's own methods that can be\n        // called as well, if we used the standard forwardRef then these\n        // methods wouldn't be accessible and thus be a breaking change.\n        //\n        // Therefore we edit ref to include ScrollView's public methods so that\n        // they are callable from the ref.\n\n        // $FlowFixMe[prop-missing] - Known issue with appending custom methods.\n        var publicInstance = Object.assign(nativeInstance, {\n          getScrollResponder: _this.getScrollResponder,\n          getScrollableNode: _this.getScrollableNode,\n          getInnerViewNode: _this.getInnerViewNode,\n          getInnerViewRef: _this.getInnerViewRef,\n          getNativeScrollRef: _this.getNativeScrollRef,\n          scrollTo: _this.scrollTo,\n          scrollToEnd: _this.scrollToEnd,\n          flashScrollIndicators: _this.flashScrollIndicators,\n          scrollResponderZoomTo: _this.scrollResponderZoomTo,\n          // TODO: Replace unstable_subscribeToOnScroll once scrollView.addEventListener('scroll', (e: ScrollEvent) => {}, {passive: false});\n          unstable_subscribeToOnScroll: _this._subscribeToOnScroll,\n          scrollResponderScrollNativeHandleToKeyboard: _this.scrollResponderScrollNativeHandleToKeyboard\n        });\n        return publicInstance;\n      });\n      /**\n       * Warning, this may be called several times for a single keyboard opening.\n       * It's best to store the information in this method and then take any action\n       * at a later point (either in `keyboardDidShow` or other).\n       *\n       * Here's the order that events occur in:\n       * - focus\n       * - willShow {startCoordinates, endCoordinates} several times\n       * - didShow several times\n       * - blur\n       * - willHide {startCoordinates, endCoordinates} several times\n       * - didHide several times\n       *\n       * The `ScrollResponder` module callbacks for each of these events.\n       * Even though any user could have easily listened to keyboard events\n       * themselves, using these `props` callbacks ensures that ordering of events\n       * is consistent - and not dependent on the order that the keyboard events are\n       * subscribed to. This matters when telling the scroll view to scroll to where\n       * the keyboard is headed - the scroll responder better have been notified of\n       * the keyboard destination before being instructed to scroll to where the\n       * keyboard will be. Stick to the `ScrollResponder` callbacks, and everything\n       * will work.\n       *\n       * WARNING: These callbacks will fire even if a keyboard is displayed in a\n       * different navigation pane. Filter out the events to determine if they are\n       * relevant to you. (For example, only if you receive these callbacks after\n       * you had explicitly focused a node etc).\n       */\n      _this.scrollResponderKeyboardWillShow = function (e) {\n        _this._keyboardMetrics = e.endCoordinates;\n        _this.props.onKeyboardWillShow && _this.props.onKeyboardWillShow(e);\n      };\n      _this.scrollResponderKeyboardWillHide = function (e) {\n        _this._keyboardMetrics = null;\n        _this.props.onKeyboardWillHide && _this.props.onKeyboardWillHide(e);\n      };\n      _this.scrollResponderKeyboardDidShow = function (e) {\n        _this._keyboardMetrics = e.endCoordinates;\n        _this.props.onKeyboardDidShow && _this.props.onKeyboardDidShow(e);\n      };\n      _this.scrollResponderKeyboardDidHide = function (e) {\n        _this._keyboardMetrics = null;\n        _this.props.onKeyboardDidHide && _this.props.onKeyboardDidHide(e);\n      };\n      /**\n       * Invoke this from an `onMomentumScrollBegin` event.\n       */\n      _this._handleMomentumScrollBegin = function (e) {\n        _this._lastMomentumScrollBeginTime = global.performance.now();\n        _this.props.onMomentumScrollBegin && _this.props.onMomentumScrollBegin(e);\n      };\n      /**\n       * Invoke this from an `onMomentumScrollEnd` event.\n       */\n      _this._handleMomentumScrollEnd = function (e) {\n        _FrameRateLogger.default.endScroll();\n        _this._lastMomentumScrollEndTime = global.performance.now();\n        _this.props.onMomentumScrollEnd && _this.props.onMomentumScrollEnd(e);\n      };\n      /**\n       * Unfortunately, `onScrollBeginDrag` also fires when *stopping* the scroll\n       * animation, and there's not an easy way to distinguish a drag vs. stopping\n       * momentum.\n       *\n       * Invoke this from an `onScrollBeginDrag` event.\n       */\n      _this._handleScrollBeginDrag = function (e) {\n        _FrameRateLogger.default.beginScroll(); // TODO: track all scrolls after implementing onScrollEndAnimation\n\n        if (_Platform.default.OS === 'android' && _this.props.keyboardDismissMode === 'on-drag') {\n          (0, _dismissKeyboard.default)();\n        }\n        _this.props.onScrollBeginDrag && _this.props.onScrollBeginDrag(e);\n      };\n      /**\n       * Invoke this from an `onScrollEndDrag` event.\n       */\n      _this._handleScrollEndDrag = function (e) {\n        var velocity = e.nativeEvent.velocity;\n        // - If we are animating, then this is a \"drag\" that is stopping the scrollview and momentum end\n        //   will fire.\n        // - If velocity is non-zero, then the interaction will stop when momentum scroll ends or\n        //   another drag starts and ends.\n        // - If we don't get velocity, better to stop the interaction twice than not stop it.\n        if (!_this._isAnimating() && (!velocity || velocity.x === 0 && velocity.y === 0)) {\n          _FrameRateLogger.default.endScroll();\n        }\n        _this.props.onScrollEndDrag && _this.props.onScrollEndDrag(e);\n      };\n      /**\n       * A helper function for this class that lets us quickly determine if the\n       * view is currently animating. This is particularly useful to know when\n       * a touch has just started or ended.\n       */\n      _this._isAnimating = function () {\n        var now = global.performance.now();\n        var timeSinceLastMomentumScrollEnd = now - _this._lastMomentumScrollEndTime;\n        var isAnimating = timeSinceLastMomentumScrollEnd < IS_ANIMATING_TOUCH_START_THRESHOLD_MS || _this._lastMomentumScrollEndTime < _this._lastMomentumScrollBeginTime;\n        return isAnimating;\n      };\n      /**\n       * Invoke this from an `onResponderGrant` event.\n       */\n      _this._handleResponderGrant = function (e) {\n        _this._observedScrollSinceBecomingResponder = false;\n        _this.props.onResponderGrant && _this.props.onResponderGrant(e);\n        _this._becameResponderWhileAnimating = _this._isAnimating();\n      };\n      /**\n       * Invoke this from an `onResponderReject` event.\n       *\n       * Some other element is not yielding its role as responder. Normally, we'd\n       * just disable the `UIScrollView`, but a touch has already began on it, the\n       * `UIScrollView` will not accept being disabled after that. The easiest\n       * solution for now is to accept the limitation of disallowing this\n       * altogether. To improve this, find a way to disable the `UIScrollView` after\n       * a touch has already started.\n       */\n      _this._handleResponderReject = function () {};\n      /**\n       * Invoke this from an `onResponderRelease` event.\n       */\n      _this._handleResponderRelease = function (e) {\n        _this._isTouching = e.nativeEvent.touches.length !== 0;\n        _this.props.onResponderRelease && _this.props.onResponderRelease(e);\n        if (typeof e.target === 'number') {\n          if (__DEV__) {\n            console.error('Did not expect event target to be a number. Should have been a native component');\n          }\n          return;\n        }\n\n        // By default scroll views will unfocus a textField\n        // if another touch occurs outside of it\n        var currentlyFocusedTextInput = _TextInputState.default.currentlyFocusedInput();\n        if (currentlyFocusedTextInput != null && _this.props.keyboardShouldPersistTaps !== true && _this.props.keyboardShouldPersistTaps !== 'always' && _this._keyboardIsDismissible() && e.target !== currentlyFocusedTextInput && !_this._observedScrollSinceBecomingResponder && !_this._becameResponderWhileAnimating) {\n          _TextInputState.default.blurTextInput(currentlyFocusedTextInput);\n        }\n      };\n      /**\n       * We will allow the scroll view to give up its lock iff it acquired the lock\n       * during an animation. This is a very useful default that happens to satisfy\n       * many common user experiences.\n       *\n       * - Stop a scroll on the left edge, then turn that into an outer view's\n       *   backswipe.\n       * - Stop a scroll mid-bounce at the top, continue pulling to have the outer\n       *   view dismiss.\n       * - However, without catching the scroll view mid-bounce (while it is\n       *   motionless), if you drag far enough for the scroll view to become\n       *   responder (and therefore drag the scroll view a bit), any backswipe\n       *   navigation of a swipe gesture higher in the view hierarchy, should be\n       *   rejected.\n       */\n      _this._handleResponderTerminationRequest = function () {\n        return !_this._observedScrollSinceBecomingResponder;\n      };\n      /**\n       * Invoke this from an `onScroll` event.\n       */\n      _this._handleScrollShouldSetResponder = function () {\n        // Allow any event touch pass through if the default pan responder is disabled\n        if (_this.props.disableScrollViewPanResponder === true) {\n          return false;\n        }\n        return _this._isTouching;\n      };\n      /**\n       * Merely touch starting is not sufficient for a scroll view to become the\n       * responder. Being the \"responder\" means that the very next touch move/end\n       * event will result in an action/movement.\n       *\n       * Invoke this from an `onStartShouldSetResponder` event.\n       *\n       * `onStartShouldSetResponder` is used when the next move/end will trigger\n       * some UI movement/action, but when you want to yield priority to views\n       * nested inside of the view.\n       *\n       * There may be some cases where scroll views actually should return `true`\n       * from `onStartShouldSetResponder`: Any time we are detecting a standard tap\n       * that gives priority to nested views.\n       *\n       * - If a single tap on the scroll view triggers an action such as\n       *   recentering a map style view yet wants to give priority to interaction\n       *   views inside (such as dropped pins or labels), then we would return true\n       *   from this method when there is a single touch.\n       *\n       * - Similar to the previous case, if a two finger \"tap\" should trigger a\n       *   zoom, we would check the `touches` count, and if `>= 2`, we would return\n       *   true.\n       *\n       */\n      _this._handleStartShouldSetResponder = function (e) {\n        // Allow any event touch pass through if the default pan responder is disabled\n        if (_this.props.disableScrollViewPanResponder === true) {\n          return false;\n        }\n        var currentlyFocusedInput = _TextInputState.default.currentlyFocusedInput();\n        if (_this.props.keyboardShouldPersistTaps === 'handled' && _this._keyboardIsDismissible() && e.target !== currentlyFocusedInput) {\n          return true;\n        }\n        return false;\n      };\n      /**\n       * There are times when the scroll view wants to become the responder\n       * (meaning respond to the next immediate `touchStart/touchEnd`), in a way\n       * that *doesn't* give priority to nested views (hence the capture phase):\n       *\n       * - Currently animating.\n       * - Tapping anywhere that is not a text input, while the keyboard is\n       *   up (which should dismiss the keyboard).\n       *\n       * Invoke this from an `onStartShouldSetResponderCapture` event.\n       */\n      _this._handleStartShouldSetResponderCapture = function (e) {\n        // The scroll view should receive taps instead of its descendants if:\n        // * it is already animating/decelerating\n        if (_this._isAnimating()) {\n          return true;\n        }\n\n        // Allow any event touch pass through if the default pan responder is disabled\n        if (_this.props.disableScrollViewPanResponder === true) {\n          return false;\n        }\n\n        // * the keyboard is up, keyboardShouldPersistTaps is 'never' (the default),\n        // and a new touch starts with a non-textinput target (in which case the\n        // first tap should be sent to the scroll view and dismiss the keyboard,\n        // then the second tap goes to the actual interior view)\n        var keyboardShouldPersistTaps = _this.props.keyboardShouldPersistTaps;\n        var keyboardNeverPersistTaps = !keyboardShouldPersistTaps || keyboardShouldPersistTaps === 'never';\n        if (typeof e.target === 'number') {\n          if (__DEV__) {\n            console.error('Did not expect event target to be a number. Should have been a native component');\n          }\n          return false;\n        }\n\n        // Let presses through if the soft keyboard is detached from the viewport\n        if (_this._softKeyboardIsDetached()) {\n          return false;\n        }\n        if (keyboardNeverPersistTaps && _this._keyboardIsDismissible() && e.target != null &&\n        // $FlowFixMe[incompatible-call]\n        !_TextInputState.default.isTextInput(e.target)) {\n          return true;\n        }\n        return false;\n      };\n      /**\n       * Do we consider there to be a dismissible soft-keyboard open?\n       */\n      _this._keyboardIsDismissible = function () {\n        var currentlyFocusedInput = _TextInputState.default.currentlyFocusedInput();\n\n        // We cannot dismiss the keyboard without an input to blur, even if a soft\n        // keyboard is open (e.g. when keyboard is open due to a native component\n        // not participating in TextInputState). It's also possible that the\n        // currently focused input isn't a TextInput (such as by calling ref.focus\n        // on a non-TextInput).\n        var hasFocusedTextInput = currentlyFocusedInput != null && _TextInputState.default.isTextInput(currentlyFocusedInput);\n\n        // Even if an input is focused, we may not have a keyboard to dismiss. E.g\n        // when using a physical keyboard. Ensure we have an event for an opened\n        // keyboard.\n        var softKeyboardMayBeOpen = _this._keyboardMetrics != null || _this._keyboardEventsAreUnreliable();\n        return hasFocusedTextInput && softKeyboardMayBeOpen;\n      };\n      /**\n       * Whether an open soft keyboard is present which does not overlap the\n       * viewport. E.g. for a VR soft-keyboard which is detached from the app\n       * viewport.\n       */\n      _this._softKeyboardIsDetached = function () {\n        return _this._keyboardMetrics != null && _this._keyboardMetrics.height === 0;\n      };\n      _this._keyboardEventsAreUnreliable = function () {\n        // Android versions prior to API 30 rely on observing layout changes when\n        // `android:windowSoftInputMode` is set to `adjustResize` or `adjustPan`.\n        return _Platform.default.OS === 'android' && _Platform.default.Version < 30;\n      };\n      /**\n       * Invoke this from an `onTouchEnd` event.\n       *\n       * @param {PressEvent} e Event.\n       */\n      _this._handleTouchEnd = function (e) {\n        var nativeEvent = e.nativeEvent;\n        _this._isTouching = nativeEvent.touches.length !== 0;\n        var keyboardShouldPersistTaps = _this.props.keyboardShouldPersistTaps;\n        var keyboardNeverPersistsTaps = !keyboardShouldPersistTaps || keyboardShouldPersistTaps === 'never';\n\n        // Dismiss the keyboard now if we didn't become responder in capture phase\n        // to eat presses, but still want to dismiss on interaction.\n        // Don't do anything if the target of the touch event is the current input.\n        var currentlyFocusedTextInput = _TextInputState.default.currentlyFocusedInput();\n        if (currentlyFocusedTextInput != null && e.target !== currentlyFocusedTextInput && _this._softKeyboardIsDetached() && _this._keyboardIsDismissible() && keyboardNeverPersistsTaps) {\n          _TextInputState.default.blurTextInput(currentlyFocusedTextInput);\n        }\n        _this.props.onTouchEnd && _this.props.onTouchEnd(e);\n      };\n      /**\n       * Invoke this from an `onTouchCancel` event.\n       *\n       * @param {PressEvent} e Event.\n       */\n      _this._handleTouchCancel = function (e) {\n        _this._isTouching = false;\n        _this.props.onTouchCancel && _this.props.onTouchCancel(e);\n      };\n      /**\n       * Invoke this from an `onTouchStart` event.\n       *\n       * Since we know that the `SimpleEventPlugin` occurs later in the plugin\n       * order, after `ResponderEventPlugin`, we can detect that we were *not*\n       * permitted to be the responder (presumably because a contained view became\n       * responder). The `onResponderReject` won't fire in that case - it only\n       * fires when a *current* responder rejects our request.\n       *\n       * @param {PressEvent} e Touch Start event.\n       */\n      _this._handleTouchStart = function (e) {\n        _this._isTouching = true;\n        _this.props.onTouchStart && _this.props.onTouchStart(e);\n      };\n      /**\n       * Invoke this from an `onTouchMove` event.\n       *\n       * Since we know that the `SimpleEventPlugin` occurs later in the plugin\n       * order, after `ResponderEventPlugin`, we can detect that we were *not*\n       * permitted to be the responder (presumably because a contained view became\n       * responder). The `onResponderReject` won't fire in that case - it only\n       * fires when a *current* responder rejects our request.\n       *\n       * @param {PressEvent} e Touch Start event.\n       */\n      _this._handleTouchMove = function (e) {\n        _this.props.onTouchMove && _this.props.onTouchMove(e);\n      };\n      _this._scrollAnimatedValue = new _AnimatedImplementation.default.Value((_this$props$contentOf = (_this$props$contentOf2 = _this.props.contentOffset) == null ? void 0 : _this$props$contentOf2.y) != null ? _this$props$contentOf : 0);\n      _this._scrollAnimatedValue.setOffset((_this$props$contentIn = (_this$props$contentIn2 = _this.props.contentInset) == null ? void 0 : _this$props$contentIn2.top) != null ? _this$props$contentIn : 0);\n      return _this;\n    }\n    (0, _inherits2.default)(ScrollView, _React$Component);\n    return (0, _createClass2.default)(ScrollView, [{\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        if (typeof this.props.keyboardShouldPersistTaps === 'boolean') {\n          console.warn(`'keyboardShouldPersistTaps={${this.props.keyboardShouldPersistTaps === true ? 'true' : 'false'}}' is deprecated. ` + `Use 'keyboardShouldPersistTaps=\"${this.props.keyboardShouldPersistTaps ? 'always' : 'never'}\"' instead`);\n        }\n        this._keyboardMetrics = _Keyboard.default.metrics();\n        this._additionalScrollOffset = 0;\n        this._subscriptionKeyboardWillShow = _Keyboard.default.addListener('keyboardWillShow', this.scrollResponderKeyboardWillShow);\n        this._subscriptionKeyboardWillHide = _Keyboard.default.addListener('keyboardWillHide', this.scrollResponderKeyboardWillHide);\n        this._subscriptionKeyboardDidShow = _Keyboard.default.addListener('keyboardDidShow', this.scrollResponderKeyboardDidShow);\n        this._subscriptionKeyboardDidHide = _Keyboard.default.addListener('keyboardDidHide', this.scrollResponderKeyboardDidHide);\n        this._updateAnimatedNodeAttachment();\n      }\n    }, {\n      key: \"componentDidUpdate\",\n      value: function componentDidUpdate(prevProps) {\n        var prevContentInsetTop = prevProps.contentInset ? prevProps.contentInset.top : 0;\n        var newContentInsetTop = this.props.contentInset ? this.props.contentInset.top : 0;\n        if (prevContentInsetTop !== newContentInsetTop) {\n          this._scrollAnimatedValue.setOffset(newContentInsetTop || 0);\n        }\n        this._updateAnimatedNodeAttachment();\n      }\n    }, {\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        var _this$state$onScrollE2;\n        if (this._subscriptionKeyboardWillShow != null) {\n          this._subscriptionKeyboardWillShow.remove();\n        }\n        if (this._subscriptionKeyboardWillHide != null) {\n          this._subscriptionKeyboardWillHide.remove();\n        }\n        if (this._subscriptionKeyboardDidShow != null) {\n          this._subscriptionKeyboardDidShow.remove();\n        }\n        if (this._subscriptionKeyboardDidHide != null) {\n          this._subscriptionKeyboardDidHide.remove();\n        }\n        if (this._scrollAnimatedValueAttachment) {\n          this._scrollAnimatedValueAttachment.detach();\n        }\n        (_this$state$onScrollE2 = this.state.onScrollEmitter) == null || _this$state$onScrollE2.removeAllListeners();\n      }\n    }, {\n      key: \"_textInputFocusError\",\n      value: function _textInputFocusError() {\n        console.warn('Error measuring text field.');\n      }\n    }, {\n      key: \"_getKeyForIndex\",\n      value: function _getKeyForIndex(index, childArray) {\n        var child = childArray[index];\n        return child && child.key;\n      }\n    }, {\n      key: \"_updateAnimatedNodeAttachment\",\n      value: function _updateAnimatedNodeAttachment() {\n        if (this._scrollAnimatedValueAttachment) {\n          this._scrollAnimatedValueAttachment.detach();\n        }\n        if (this.props.stickyHeaderIndices && this.props.stickyHeaderIndices.length > 0) {\n          this._scrollAnimatedValueAttachment = _AnimatedImplementation.default.attachNativeEvent(this._scrollView.nativeInstance, 'onScroll', [{\n            nativeEvent: {\n              contentOffset: {\n                y: this._scrollAnimatedValue\n              }\n            }\n          }]);\n        }\n      }\n    }, {\n      key: \"_setStickyHeaderRef\",\n      value: function _setStickyHeaderRef(key, ref) {\n        if (ref) {\n          this._stickyHeaderRefs.set(key, ref);\n        } else {\n          this._stickyHeaderRefs.delete(key);\n        }\n      }\n    }, {\n      key: \"_onStickyHeaderLayout\",\n      value: function _onStickyHeaderLayout(index, event, key) {\n        var stickyHeaderIndices = this.props.stickyHeaderIndices;\n        if (!stickyHeaderIndices) {\n          return;\n        }\n        var childArray = React.Children.toArray(this.props.children);\n        if (key !== this._getKeyForIndex(index, childArray)) {\n          // ignore stale layout update\n          return;\n        }\n        var layoutY = event.nativeEvent.layout.y;\n        this._headerLayoutYs.set(key, layoutY);\n        var indexOfIndex = stickyHeaderIndices.indexOf(index);\n        var previousHeaderIndex = stickyHeaderIndices[indexOfIndex - 1];\n        if (previousHeaderIndex != null) {\n          var previousHeader = this._stickyHeaderRefs.get(this._getKeyForIndex(previousHeaderIndex, childArray));\n          previousHeader && previousHeader.setNextHeaderY && previousHeader.setNextHeaderY(layoutY);\n        }\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this2 = this;\n        var _ref3 = this.props.horizontal === true ? NativeHorizontalScrollViewTuple : NativeVerticalScrollViewTuple,\n          _ref4 = (0, _slicedToArray2.default)(_ref3, 2),\n          NativeDirectionalScrollView = _ref4[0],\n          NativeDirectionalScrollContentView = _ref4[1];\n        var contentContainerStyle = [this.props.horizontal === true && styles.contentContainerHorizontal, this.props.contentContainerStyle];\n        if (__DEV__ && this.props.style !== undefined) {\n          // $FlowFixMe[underconstrained-implicit-instantiation]\n          var style = (0, _flattenStyle.default)(this.props.style);\n          var childLayoutProps = ['alignItems', 'justifyContent'].filter(\n          // $FlowFixMe[incompatible-use]\n          function (prop) {\n            return style && style[prop] !== undefined;\n          });\n          (0, _invariant.default)(childLayoutProps.length === 0, 'ScrollView child layout (' + JSON.stringify(childLayoutProps) + ') must be applied through the contentContainerStyle prop.');\n        }\n        var contentSizeChangeProps = this.props.onContentSizeChange == null ? null : {\n          onLayout: this._handleContentOnLayout\n        };\n        var stickyHeaderIndices = this.props.stickyHeaderIndices;\n        var children = this.props.children;\n        /**\n         * This function can cause unnecessary remount when nested in conditionals as it causes remap of children keys.\n         * https://react.dev/reference/react/Children#children-toarray-caveats\n         */\n        children = React.Children.toArray(children);\n        if (stickyHeaderIndices != null && stickyHeaderIndices.length > 0) {\n          children = children.map(function (child, index) {\n            var indexOfIndex = child ? stickyHeaderIndices.indexOf(index) : -1;\n            if (indexOfIndex > -1) {\n              var key = child.key;\n              var nextIndex = stickyHeaderIndices[indexOfIndex + 1];\n              var StickyHeaderComponent = _this2.props.StickyHeaderComponent || _ScrollViewStickyHeader.default;\n              return /*#__PURE__*/(0, _jsxRuntime.jsx)(StickyHeaderComponent, {\n                ref: function ref(_ref5) {\n                  return _this2._setStickyHeaderRef(key, _ref5);\n                },\n                nextHeaderLayoutY: _this2._headerLayoutYs.get(_this2._getKeyForIndex(nextIndex, children)),\n                onLayout: function onLayout(event) {\n                  return _this2._onStickyHeaderLayout(index, event, key);\n                },\n                scrollAnimatedValue: _this2._scrollAnimatedValue,\n                inverted: _this2.props.invertStickyHeaders,\n                hiddenOnScroll: _this2.props.stickyHeaderHiddenOnScroll,\n                scrollViewHeight: _this2.state.layoutHeight,\n                children: child\n              }, key);\n            } else {\n              return child;\n            }\n          });\n        }\n        children = /*#__PURE__*/(0, _jsxRuntime.jsx)(_ScrollViewContext.default.Provider, {\n          value: this.props.horizontal === true ? _ScrollViewContext.HORIZONTAL : _ScrollViewContext.VERTICAL,\n          children: children\n        });\n        var hasStickyHeaders = Array.isArray(stickyHeaderIndices) && stickyHeaderIndices.length > 0;\n\n        // Some ScrollView native component behaviors rely on using the metrics\n        // of mounted views for anchoring. Make sure not to flatten children if\n        // this is the case.\n        var preserveChildren = this.props.maintainVisibleContentPosition != null || _Platform.default.OS === 'android' && this.props.snapToAlignment != null;\n        var contentContainer = /*#__PURE__*/(0, _jsxRuntime.jsx)(NativeDirectionalScrollContentView, Object.assign({}, contentSizeChangeProps, {\n          ref: this._innerView.getForwardingRef(this.props.innerViewRef),\n          style: contentContainerStyle,\n          removeClippedSubviews:\n          // Subview clipping causes issues with sticky headers on Android and\n          // would be hard to fix properly in a performant way.\n          _Platform.default.OS === 'android' && hasStickyHeaders ? false : this.props.removeClippedSubviews,\n          collapsable: false,\n          collapsableChildren: !preserveChildren,\n          children: children\n        }));\n        var alwaysBounceHorizontal = this.props.alwaysBounceHorizontal !== undefined ? this.props.alwaysBounceHorizontal : this.props.horizontal;\n        var alwaysBounceVertical = this.props.alwaysBounceVertical !== undefined ? this.props.alwaysBounceVertical : !this.props.horizontal;\n        var baseStyle = this.props.horizontal === true ? styles.baseHorizontal : styles.baseVertical;\n        var _this$props = this.props,\n          experimental_endDraggingSensitivityMultiplier = _this$props.experimental_endDraggingSensitivityMultiplier,\n          otherProps = (0, _objectWithoutProperties2.default)(_this$props, _excluded);\n        var props = Object.assign({}, otherProps, {\n          alwaysBounceHorizontal: alwaysBounceHorizontal,\n          alwaysBounceVertical: alwaysBounceVertical,\n          style: _StyleSheet.default.compose(baseStyle, this.props.style),\n          // Override the onContentSizeChange from props, since this event can\n          // bubble up from TextInputs\n          onContentSizeChange: null,\n          onLayout: this._handleLayout,\n          onMomentumScrollBegin: this._handleMomentumScrollBegin,\n          onMomentumScrollEnd: this._handleMomentumScrollEnd,\n          onResponderGrant: this._handleResponderGrant,\n          onResponderReject: this._handleResponderReject,\n          onResponderRelease: this._handleResponderRelease,\n          onResponderTerminationRequest: this._handleResponderTerminationRequest,\n          onScrollBeginDrag: this._handleScrollBeginDrag,\n          onScrollEndDrag: this._handleScrollEndDrag,\n          onScrollShouldSetResponder: this._handleScrollShouldSetResponder,\n          onStartShouldSetResponder: this._handleStartShouldSetResponder,\n          onStartShouldSetResponderCapture: this._handleStartShouldSetResponderCapture,\n          onTouchEnd: this._handleTouchEnd,\n          onTouchMove: this._handleTouchMove,\n          onTouchStart: this._handleTouchStart,\n          onTouchCancel: this._handleTouchCancel,\n          onScroll: this._handleScroll,\n          endDraggingSensitivityMultiplier: experimental_endDraggingSensitivityMultiplier,\n          enableSyncOnScroll: this.state.onScrollEmitter ? true : undefined,\n          scrollEventThrottle: hasStickyHeaders ? 1 : this.props.scrollEventThrottle,\n          sendMomentumEvents: this.props.onMomentumScrollBegin || this.props.onMomentumScrollEnd ? true : false,\n          // default to true\n          snapToStart: this.props.snapToStart !== false,\n          // default to true\n          snapToEnd: this.props.snapToEnd !== false,\n          // pagingEnabled is overridden by snapToInterval / snapToOffsets\n          pagingEnabled: _Platform.default.select({\n            // on iOS, pagingEnabled must be set to false to have snapToInterval / snapToOffsets work\n            ios: this.props.pagingEnabled === true && this.props.snapToInterval == null && this.props.snapToOffsets == null,\n            // on Android, pagingEnabled must be set to true to have snapToInterval / snapToOffsets work\n            android: this.props.pagingEnabled === true || this.props.snapToInterval != null || this.props.snapToOffsets != null\n          })\n        });\n        var decelerationRate = this.props.decelerationRate;\n        if (decelerationRate != null) {\n          props.decelerationRate = (0, _processDecelerationRate.default)(decelerationRate);\n        }\n        var refreshControl = this.props.refreshControl;\n        var scrollViewRef = this._scrollView.getForwardingRef(this.props.scrollViewRef);\n        if (refreshControl) {\n          if (_Platform.default.OS === 'ios') {\n            // On iOS the RefreshControl is a child of the ScrollView.\n            return /*#__PURE__*/(0, _jsxRuntime.jsxs)(NativeDirectionalScrollView, Object.assign({}, props, {\n              ref: scrollViewRef,\n              children: [refreshControl, contentContainer]\n            }));\n          } else if (_Platform.default.OS === 'android') {\n            // On Android wrap the ScrollView with a AndroidSwipeRefreshLayout.\n            // Since the ScrollView is wrapped add the style props to the\n            // AndroidSwipeRefreshLayout and use flex: 1 for the ScrollView.\n            // Note: we should split props.style on the inner and outer props\n            // however, the ScrollView still needs the baseStyle to be scrollable\n            // $FlowFixMe[underconstrained-implicit-instantiation]\n            // $FlowFixMe[incompatible-call]\n            var _splitLayoutProps = (0, _splitLayoutProps2.default)((0, _flattenStyle.default)(props.style)),\n              outer = _splitLayoutProps.outer,\n              inner = _splitLayoutProps.inner;\n            return React.cloneElement(refreshControl, {\n              style: _StyleSheet.default.compose(baseStyle, outer)\n            }, /*#__PURE__*/(0, _jsxRuntime.jsx)(NativeDirectionalScrollView, Object.assign({}, props, {\n              style: _StyleSheet.default.compose(baseStyle, inner),\n              ref: scrollViewRef,\n              children: contentContainer\n            })));\n          }\n        }\n        return /*#__PURE__*/(0, _jsxRuntime.jsx)(NativeDirectionalScrollView, Object.assign({}, props, {\n          ref: scrollViewRef,\n          children: contentContainer\n        }));\n      }\n    }]);\n  }(React.Component);\n  ScrollView.Context = _ScrollViewContext.default;\n  var styles = _StyleSheet.default.create({\n    baseVertical: {\n      flexGrow: 1,\n      flexShrink: 1,\n      flexDirection: 'column',\n      overflow: 'scroll'\n    },\n    baseHorizontal: {\n      flexGrow: 1,\n      flexShrink: 1,\n      flexDirection: 'row',\n      overflow: 'scroll'\n    },\n    contentContainerHorizontal: {\n      flexDirection: 'row'\n    }\n  });\n  /**\n   * Helper function that should be replaced with `useCallback` and `useMergeRefs`\n   * once `ScrollView` is reimplemented as a functional component.\n   */\n  function createRefForwarder(mutator) {\n    var state = {\n      getForwardingRef: (0, _memoizeOne.default)(function (forwardedRef) {\n        return function (nativeInstance) {\n          var publicInstance = nativeInstance == null ? null : mutator(nativeInstance);\n          state.nativeInstance = nativeInstance;\n          state.publicInstance = publicInstance;\n          if (forwardedRef != null) {\n            if (typeof forwardedRef === 'function') {\n              forwardedRef(publicInstance);\n            } else {\n              forwardedRef.current = publicInstance;\n            }\n          }\n        };\n      }),\n      nativeInstance: null,\n      publicInstance: null\n    };\n    return state;\n  }\n\n  /* $FlowFixMe[missing-local-annot] The type annotation(s) required by Flow's\n   * LTI update could not be added via codemod */\n  function Wrapper(props, ref) {\n    return /*#__PURE__*/(0, _jsxRuntime.jsx)(ScrollView, Object.assign({}, props, {\n      scrollViewRef: ref\n    }));\n  }\n  Wrapper.displayName = 'ScrollView';\n  // $FlowFixMe[incompatible-call]\n  var ForwardedScrollView = React.forwardRef(Wrapper);\n\n  // $FlowFixMe[prop-missing] Add static context to ForwardedScrollView\n  ForwardedScrollView.Context = _ScrollViewContext.default;\n  ForwardedScrollView.displayName = 'ScrollView';\n  module.exports = ForwardedScrollView;\n});","lineCount":1126,"map":[[10,2,26,0],[10,6,26,0,"_AnimatedImplementation"],[10,29,26,0],[10,32,26,0,"_interopRequireDefault"],[10,54,26,0],[10,55,26,0,"_$$_REQUIRE"],[10,66,26,0],[10,67,26,0,"_dependencyMap"],[10,81,26,0],[11,2,27,0],[11,6,27,0,"_FrameRateLogger"],[11,22,27,0],[11,25,27,0,"_interopRequireDefault"],[11,47,27,0],[11,48,27,0,"_$$_REQUIRE"],[11,59,27,0],[11,60,27,0,"_dependencyMap"],[11,74,27,0],[12,2,29,0],[12,6,29,0,"_UIManager"],[12,16,29,0],[12,19,29,0,"_interopRequireDefault"],[12,41,29,0],[12,42,29,0,"_$$_REQUIRE"],[12,53,29,0],[12,54,29,0,"_dependencyMap"],[12,68,29,0],[13,2,30,0],[13,6,30,0,"_flattenStyle"],[13,19,30,0],[13,22,30,0,"_interopRequireDefault"],[13,44,30,0],[13,45,30,0,"_$$_REQUIRE"],[13,56,30,0],[13,57,30,0,"_dependencyMap"],[13,71,30,0],[14,2,31,0],[14,6,31,0,"_splitLayoutProps2"],[14,24,31,0],[14,27,31,0,"_interopRequireDefault"],[14,49,31,0],[14,50,31,0,"_$$_REQUIRE"],[14,61,31,0],[14,62,31,0,"_dependencyMap"],[14,76,31,0],[15,2,32,0],[15,6,32,0,"_StyleSheet"],[15,17,32,0],[15,20,32,0,"_interopRequireDefault"],[15,42,32,0],[15,43,32,0,"_$$_REQUIRE"],[15,54,32,0],[15,55,32,0,"_dependencyMap"],[15,69,32,0],[16,2,33,0],[16,6,33,0,"_Dimensions"],[16,17,33,0],[16,20,33,0,"_interopRequireDefault"],[16,42,33,0],[16,43,33,0,"_$$_REQUIRE"],[16,54,33,0],[16,55,33,0,"_dependencyMap"],[16,69,33,0],[17,2,34,0],[17,6,34,0,"_dismissKeyboard"],[17,22,34,0],[17,25,34,0,"_interopRequireDefault"],[17,47,34,0],[17,48,34,0,"_$$_REQUIRE"],[17,59,34,0],[17,60,34,0,"_dependencyMap"],[17,74,34,0],[18,2,35,0],[18,6,35,0,"_Platform"],[18,15,35,0],[18,18,35,0,"_interopRequireDefault"],[18,40,35,0],[18,41,35,0,"_$$_REQUIRE"],[18,52,35,0],[18,53,35,0,"_dependencyMap"],[18,67,35,0],[19,2,36,0],[19,6,36,0,"_EventEmitter"],[19,19,36,0],[19,22,36,0,"_interopRequireDefault"],[19,44,36,0],[19,45,36,0,"_$$_REQUIRE"],[19,56,36,0],[19,57,36,0,"_dependencyMap"],[19,71,36,0],[20,2,37,0],[20,6,37,0,"_Keyboard"],[20,15,37,0],[20,18,37,0,"_interopRequireDefault"],[20,40,37,0],[20,41,37,0,"_$$_REQUIRE"],[20,52,37,0],[20,53,37,0,"_dependencyMap"],[20,67,37,0],[21,2,38,0],[21,6,38,0,"_TextInputState"],[21,21,38,0],[21,24,38,0,"_interopRequireDefault"],[21,46,38,0],[21,47,38,0,"_$$_REQUIRE"],[21,58,38,0],[21,59,38,0,"_dependencyMap"],[21,73,38,0],[22,2,39,0],[22,6,39,0,"_View"],[22,11,39,0],[22,14,39,0,"_interopRequireDefault"],[22,36,39,0],[22,37,39,0,"_$$_REQUIRE"],[22,48,39,0],[22,49,39,0,"_dependencyMap"],[22,63,39,0],[23,2,40,0],[23,6,40,0,"_AndroidHorizontalScrollContentViewNativeComponent"],[23,56,40,0],[23,59,40,0,"_interopRequireDefault"],[23,81,40,0],[23,82,40,0,"_$$_REQUIRE"],[23,93,40,0],[23,94,40,0,"_dependencyMap"],[23,108,40,0],[24,2,41,0],[24,6,41,0,"_AndroidHorizontalScrollViewNativeComponent"],[24,49,41,0],[24,52,41,0,"_interopRequireDefault"],[24,74,41,0],[24,75,41,0,"_$$_REQUIRE"],[24,86,41,0],[24,87,41,0,"_dependencyMap"],[24,101,41,0],[25,2,42,0],[25,6,42,0,"_processDecelerationRate"],[25,30,42,0],[25,33,42,0,"_interopRequireDefault"],[25,55,42,0],[25,56,42,0,"_$$_REQUIRE"],[25,67,42,0],[25,68,42,0,"_dependencyMap"],[25,82,42,0],[26,2,43,0],[26,6,43,0,"_ScrollContentViewNativeComponent"],[26,39,43,0],[26,42,43,0,"_interopRequireDefault"],[26,64,43,0],[26,65,43,0,"_$$_REQUIRE"],[26,76,43,0],[26,77,43,0,"_dependencyMap"],[26,91,43,0],[27,2,44,0],[27,6,44,0,"_ScrollViewCommands"],[27,25,44,0],[27,28,44,0,"_interopRequireDefault"],[27,50,44,0],[27,51,44,0,"_$$_REQUIRE"],[27,62,44,0],[27,63,44,0,"_dependencyMap"],[27,77,44,0],[28,2,45,0],[28,6,45,0,"_ScrollViewContext"],[28,24,45,0],[28,27,45,0,"_interopRequireWildcard"],[28,50,45,0],[28,51,45,0,"_$$_REQUIRE"],[28,62,45,0],[28,63,45,0,"_dependencyMap"],[28,77,45,0],[29,2,46,0],[29,6,46,0,"_ScrollViewNativeComponent"],[29,32,46,0],[29,35,46,0,"_interopRequireDefault"],[29,57,46,0],[29,58,46,0,"_$$_REQUIRE"],[29,69,46,0],[29,70,46,0,"_dependencyMap"],[29,84,46,0],[30,2,47,0],[30,6,47,0,"_ScrollViewStickyHeader"],[30,29,47,0],[30,32,47,0,"_interopRequireDefault"],[30,54,47,0],[30,55,47,0,"_$$_REQUIRE"],[30,66,47,0],[30,67,47,0,"_dependencyMap"],[30,81,47,0],[31,2,48,0],[31,6,48,0,"_invariant"],[31,16,48,0],[31,19,48,0,"_interopRequireDefault"],[31,41,48,0],[31,42,48,0,"_$$_REQUIRE"],[31,53,48,0],[31,54,48,0,"_dependencyMap"],[31,68,48,0],[32,2,49,0],[32,6,49,0,"_memoizeOne"],[32,17,49,0],[32,20,49,0,"_interopRequireDefault"],[32,42,49,0],[32,43,49,0,"_$$_REQUIRE"],[32,54,49,0],[32,55,49,0,"_dependencyMap"],[32,69,49,0],[33,2,50,0],[33,6,50,0,"_nullthrows"],[33,17,50,0],[33,20,50,0,"_interopRequireDefault"],[33,42,50,0],[33,43,50,0,"_$$_REQUIRE"],[33,54,50,0],[33,55,50,0,"_dependencyMap"],[33,69,50,0],[34,2,51,0],[34,6,51,0,"React"],[34,11,51,0],[34,14,51,0,"_interopRequireWildcard"],[34,37,51,0],[34,38,51,0,"_$$_REQUIRE"],[34,49,51,0],[34,50,51,0,"_dependencyMap"],[34,64,51,0],[35,2,51,31],[35,6,51,31,"_jsxRuntime"],[35,17,51,31],[35,20,51,31,"_$$_REQUIRE"],[35,31,51,31],[35,32,51,31,"_dependencyMap"],[35,46,51,31],[36,2,51,31],[36,6,51,31,"_excluded"],[36,15,51,31],[37,2,51,31],[37,6,51,31,"_jsxFileName"],[37,18,51,31],[38,2,51,31],[38,11,51,31,"_getRequireWildcardCache"],[38,36,51,31,"e"],[38,37,51,31],[38,66,51,31,"WeakMap"],[38,73,51,31],[38,92,51,31,"r"],[38,93,51,31],[38,100,51,31,"WeakMap"],[38,107,51,31],[38,111,51,31,"t"],[38,112,51,31],[38,119,51,31,"WeakMap"],[38,126,51,31],[38,138,51,31,"_getRequireWildcardCache"],[38,162,51,31],[38,174,51,31,"_getRequireWildcardCache"],[38,199,51,31,"e"],[38,200,51,31],[38,211,51,31,"e"],[38,212,51,31],[38,215,51,31,"t"],[38,216,51,31],[38,219,51,31,"r"],[38,220,51,31],[38,225,51,31,"e"],[38,226,51,31],[39,2,51,31],[39,11,51,31,"_interopRequireWildcard"],[39,35,51,31,"e"],[39,36,51,31],[39,38,51,31,"r"],[39,39,51,31],[39,48,51,31,"r"],[39,49,51,31],[39,53,51,31,"e"],[39,54,51,31],[39,58,51,31,"e"],[39,59,51,31],[39,60,51,31,"__esModule"],[39,70,51,31],[39,79,51,31,"e"],[39,80,51,31],[39,95,51,31,"e"],[39,96,51,31],[39,119,51,31,"e"],[39,120,51,31],[39,145,51,31,"e"],[39,146,51,31],[39,157,51,31,"default"],[39,164,51,31],[39,166,51,31,"e"],[39,167,51,31],[39,175,51,31,"t"],[39,176,51,31],[39,179,51,31,"_getRequireWildcardCache"],[39,203,51,31],[39,204,51,31,"r"],[39,205,51,31],[39,212,51,31,"t"],[39,213,51,31],[39,217,51,31,"t"],[39,218,51,31],[39,219,51,31,"has"],[39,222,51,31],[39,223,51,31,"e"],[39,224,51,31],[39,234,51,31,"t"],[39,235,51,31],[39,236,51,31,"get"],[39,239,51,31],[39,240,51,31,"e"],[39,241,51,31],[39,248,51,31,"n"],[39,249,51,31],[39,254,51,31,"__proto__"],[39,263,51,31],[39,273,51,31,"a"],[39,274,51,31],[39,277,51,31,"Object"],[39,283,51,31],[39,284,51,31,"defineProperty"],[39,298,51,31],[39,302,51,31,"Object"],[39,308,51,31],[39,309,51,31,"getOwnPropertyDescriptor"],[39,333,51,31],[39,344,51,31,"u"],[39,345,51,31],[39,349,51,31,"e"],[39,350,51,31],[39,370,51,31,"u"],[39,371,51,31],[39,378,51,31,"hasOwnProperty"],[39,392,51,31],[39,393,51,31,"call"],[39,397,51,31],[39,398,51,31,"e"],[39,399,51,31],[39,401,51,31,"u"],[39,402,51,31],[39,411,51,31,"i"],[39,412,51,31],[39,415,51,31,"a"],[39,416,51,31],[39,419,51,31,"Object"],[39,425,51,31],[39,426,51,31,"getOwnPropertyDescriptor"],[39,450,51,31],[39,451,51,31,"e"],[39,452,51,31],[39,454,51,31,"u"],[39,455,51,31],[39,465,51,31,"i"],[39,466,51,31],[39,471,51,31,"i"],[39,472,51,31],[39,473,51,31,"get"],[39,476,51,31],[39,480,51,31,"i"],[39,481,51,31],[39,482,51,31,"set"],[39,485,51,31],[39,489,51,31,"Object"],[39,495,51,31],[39,496,51,31,"defineProperty"],[39,510,51,31],[39,511,51,31,"n"],[39,512,51,31],[39,514,51,31,"u"],[39,515,51,31],[39,517,51,31,"i"],[39,518,51,31],[39,522,51,31,"n"],[39,523,51,31],[39,524,51,31,"u"],[39,525,51,31],[39,529,51,31,"e"],[39,530,51,31],[39,531,51,31,"u"],[39,532,51,31],[39,544,51,31,"n"],[39,545,51,31],[39,546,51,31,"default"],[39,553,51,31],[39,556,51,31,"e"],[39,557,51,31],[39,559,51,31,"t"],[39,560,51,31],[39,564,51,31,"t"],[39,565,51,31],[39,566,51,31,"set"],[39,569,51,31],[39,570,51,31,"e"],[39,571,51,31],[39,573,51,31,"n"],[39,574,51,31],[39,577,51,31,"n"],[39,578,51,31],[40,2,51,31],[40,11,51,31,"_callSuper"],[40,22,51,31,"t"],[40,23,51,31],[40,25,51,31,"o"],[40,26,51,31],[40,28,51,31,"e"],[40,29,51,31],[40,40,51,31,"o"],[40,41,51,31],[40,48,51,31,"_getPrototypeOf2"],[40,64,51,31],[40,65,51,31,"default"],[40,72,51,31],[40,74,51,31,"o"],[40,75,51,31],[40,82,51,31,"_possibleConstructorReturn2"],[40,109,51,31],[40,110,51,31,"default"],[40,117,51,31],[40,119,51,31,"t"],[40,120,51,31],[40,122,51,31,"_isNativeReflectConstruct"],[40,147,51,31],[40,152,51,31,"Reflect"],[40,159,51,31],[40,160,51,31,"construct"],[40,169,51,31],[40,170,51,31,"o"],[40,171,51,31],[40,173,51,31,"e"],[40,174,51,31],[40,186,51,31,"_getPrototypeOf2"],[40,202,51,31],[40,203,51,31,"default"],[40,210,51,31],[40,212,51,31,"t"],[40,213,51,31],[40,215,51,31,"constructor"],[40,226,51,31],[40,230,51,31,"o"],[40,231,51,31],[40,232,51,31,"apply"],[40,237,51,31],[40,238,51,31,"t"],[40,239,51,31],[40,241,51,31,"e"],[40,242,51,31],[41,2,51,31],[41,11,51,31,"_isNativeReflectConstruct"],[41,37,51,31],[41,51,51,31,"t"],[41,52,51,31],[41,56,51,31,"Boolean"],[41,63,51,31],[41,64,51,31,"prototype"],[41,73,51,31],[41,74,51,31,"valueOf"],[41,81,51,31],[41,82,51,31,"call"],[41,86,51,31],[41,87,51,31,"Reflect"],[41,94,51,31],[41,95,51,31,"construct"],[41,104,51,31],[41,105,51,31,"Boolean"],[41,112,51,31],[41,145,51,31,"t"],[41,146,51,31],[41,159,51,31,"_isNativeReflectConstruct"],[41,184,51,31],[41,196,51,31,"_isNativeReflectConstruct"],[41,222,51,31],[41,235,51,31,"t"],[41,236,51,31],[41,246,1,0],[42,0,2,0],[43,0,3,0],[44,0,4,0],[45,0,5,0],[46,0,6,0],[47,0,7,0],[48,0,8,0],[49,0,9,0],[50,2,53,0],[50,6,53,4,"Platform"],[50,23,53,12],[50,24,53,13,"OS"],[50,26,53,15],[50,31,53,20],[50,36,53,25],[50,38,53,27],[51,4,54,2,"require"],[51,15,54,9],[51,16,54,9,"_dependencyMap"],[51,30,54,9],[51,70,54,44],[51,71,54,45],[51,72,54,46],[51,73,54,47],[52,2,55,0],[53,2,57,0],[53,6,57,0,"_ref"],[53,10,57,0],[53,13,58,2,"Platform"],[53,30,58,10],[53,31,58,11,"OS"],[53,33,58,13],[53,38,58,18],[53,47,58,27],[53,50,59,6],[54,6,60,8,"NativeHorizontalScrollViewTuple"],[54,37,60,39],[54,39,60,41],[54,40,61,10,"AndroidHorizontalScrollViewNativeComponent"],[54,91,61,52],[54,93,62,10,"AndroidHorizontalScrollContentViewNativeComponent"],[54,151,62,59],[54,152,63,9],[55,6,64,8,"NativeVerticalScrollViewTuple"],[55,35,64,37],[55,37,64,39],[55,38,64,40,"ScrollViewNativeComponent"],[55,72,64,65],[55,74,64,67,"View"],[55,87,64,71],[56,4,65,6],[56,5,65,7],[56,8,66,6],[57,6,67,8,"NativeHorizontalScrollViewTuple"],[57,37,67,39],[57,39,67,41],[57,40,68,10,"ScrollViewNativeComponent"],[57,74,68,35],[57,76,69,10,"ScrollContentViewNativeComponent"],[57,117,69,42],[57,118,70,9],[58,6,71,8,"NativeVerticalScrollViewTuple"],[58,35,71,37],[58,37,71,39],[58,38,72,10,"ScrollViewNativeComponent"],[58,72,72,35],[58,74,73,10,"ScrollContentViewNativeComponent"],[58,115,73,42],[59,4,75,6],[59,5,75,7],[60,4,57,7,"NativeHorizontalScrollViewTuple"],[60,35,57,38],[60,38,57,38,"_ref"],[60,42,57,38],[60,43,57,7,"NativeHorizontalScrollViewTuple"],[60,74,57,38],[61,4,57,40,"NativeVerticalScrollViewTuple"],[61,33,57,69],[61,36,57,69,"_ref"],[61,40,57,69],[61,41,57,40,"NativeVerticalScrollViewTuple"],[61,70,57,69],[63,2,77,0],[64,0,78,0],[65,0,79,0],[66,0,80,0],[67,0,81,0],[68,0,82,0],[69,0,83,0],[70,0,84,0],[71,0,85,0],[72,0,86,0],[73,0,87,0],[74,0,88,0],[75,0,89,0],[76,0,90,0],[77,0,91,0],[78,0,92,0],[79,0,93,0],[80,0,94,0],[81,0,95,0],[82,0,96,0],[83,0,97,0],[84,0,98,0],[85,0,99,0],[86,0,100,0],[87,0,101,0],[88,0,102,0],[89,0,103,0],[90,0,104,0],[91,0,105,0],[92,0,106,0],[93,0,107,0],[94,0,108,0],[95,0,109,0],[96,0,110,0],[97,0,111,0],[98,0,112,0],[99,0,113,0],[100,0,114,0],[101,0,115,0],[102,0,116,0],[103,0,117,0],[104,0,118,0],[105,0,119,0],[106,0,120,0],[107,0,121,0],[108,0,122,0],[109,0,123,0],[110,0,124,0],[111,0,125,0],[112,0,126,0],[113,0,127,0],[114,0,128,0],[115,0,129,0],[116,0,130,0],[117,0,131,0],[118,0,132,0],[119,0,133,0],[120,0,134,0],[121,0,135,0],[122,0,136,0],[123,0,137,0],[124,0,138,0],[125,0,139,0],[126,0,140,0],[127,0,141,0],[128,0,142,0],[129,0,143,0],[130,0,144,0],[131,0,145,0],[132,0,146,0],[133,0,147,0],[134,0,148,0],[136,2,150,0],[138,2,685,0],[138,6,685,6,"IS_ANIMATING_TOUCH_START_THRESHOLD_MS"],[138,43,685,43],[138,46,685,46],[138,48,685,48],[139,2,691,0],[140,0,692,0],[141,0,693,0],[142,0,694,0],[143,0,695,0],[144,0,696,0],[145,0,697,0],[146,0,698,0],[147,0,699,0],[148,0,700,0],[149,0,701,0],[150,0,702,0],[151,0,703,0],[152,0,704,0],[153,0,705,0],[154,0,706,0],[155,0,707,0],[156,0,708,0],[157,0,709,0],[158,0,710,0],[159,0,711,0],[160,0,712,0],[161,0,713,0],[162,0,714,0],[163,0,715,0],[164,0,716,0],[165,0,717,0],[166,0,718,0],[167,0,719,0],[168,0,720,0],[169,0,721,0],[170,0,722,0],[171,0,723,0],[172,0,724,0],[173,0,725,0],[174,2,691,0],[174,6,726,6,"ScrollView"],[174,16,726,16],[174,42,726,16,"_React$Component"],[174,58,726,16],[175,4,729,2],[175,13,729,2,"ScrollView"],[175,24,729,14,"props"],[175,29,729,26],[175,31,729,28],[176,6,729,28],[176,10,729,28,"_this$props$contentOf"],[176,31,729,28],[176,33,729,28,"_this$props$contentOf2"],[176,55,729,28],[176,57,729,28,"_this$props$contentIn"],[176,78,729,28],[176,80,729,28,"_this$props$contentIn2"],[176,102,729,28],[177,6,729,28],[177,10,729,28,"_this"],[177,15,729,28],[178,6,729,28],[178,10,729,28,"_classCallCheck2"],[178,26,729,28],[178,27,729,28,"default"],[178,34,729,28],[178,42,729,28,"ScrollView"],[178,52,729,28],[179,6,730,4,"_this"],[179,11,730,4],[179,14,730,4,"_callSuper"],[179,24,730,4],[179,31,730,4,"ScrollView"],[179,41,730,4],[179,44,730,10,"props"],[179,49,730,15],[180,6,730,17,"_this"],[180,11,730,17],[180,12,739,2,"_scrollAnimatedValueAttachment"],[180,42,739,32],[180,45,739,63],[180,49,739,67],[181,6,739,67,"_this"],[181,11,739,67],[181,12,740,2,"_stickyHeaderRefs"],[181,29,740,19],[181,32,741,4],[181,36,741,8,"Map"],[181,39,741,11],[181,40,741,12],[181,41,741,13],[182,6,741,13,"_this"],[182,11,741,13],[182,12,742,2,"_headerLayoutYs"],[182,27,742,17],[182,30,742,41],[182,34,742,45,"Map"],[182,37,742,48],[182,38,742,49],[182,39,742,50],[183,6,742,50,"_this"],[183,11,742,50],[183,12,744,2,"_keyboardMetrics"],[183,28,744,18],[183,31,744,39],[183,35,744,43],[184,6,744,43,"_this"],[184,11,744,43],[184,12,745,2,"_additionalScrollOffset"],[184,35,745,25],[184,38,745,36],[184,39,745,37],[185,6,745,37,"_this"],[185,11,745,37],[185,12,746,2,"_isTouching"],[185,23,746,13],[185,26,746,25],[185,31,746,30],[186,6,746,30,"_this"],[186,11,746,30],[186,12,747,2,"_lastMomentumScrollBeginTime"],[186,40,747,30],[186,43,747,41],[186,44,747,42],[187,6,747,42,"_this"],[187,11,747,42],[187,12,748,2,"_lastMomentumScrollEndTime"],[187,38,748,28],[187,41,748,39],[187,42,748,40],[188,6,750,2],[189,6,751,2],[190,6,752,2],[191,6,753,2],[192,6,754,2],[193,6,754,2,"_this"],[193,11,754,2],[193,12,755,2,"_observedScrollSinceBecomingResponder"],[193,49,755,39],[193,52,755,51],[193,57,755,56],[194,6,755,56,"_this"],[194,11,755,56],[194,12,756,2,"_becameResponderWhileAnimating"],[194,42,756,32],[194,45,756,44],[194,50,756,49],[195,6,756,49,"_this"],[195,11,756,49],[195,12,757,2,"_preventNegativeScrollOffset"],[195,40,757,30],[195,43,757,43],[195,47,757,47],[196,6,757,47,"_this"],[196,11,757,47],[196,12,759,2,"_animated"],[196,21,759,11],[196,24,759,24],[196,28,759,28],[197,6,759,28,"_this"],[197,11,759,28],[197,12,761,2,"_subscriptionKeyboardWillShow"],[197,41,761,31],[197,44,761,54],[197,48,761,58],[198,6,761,58,"_this"],[198,11,761,58],[198,12,762,2,"_subscriptionKeyboardWillHide"],[198,41,762,31],[198,44,762,54],[198,48,762,58],[199,6,762,58,"_this"],[199,11,762,58],[199,12,763,2,"_subscriptionKeyboardDidShow"],[199,40,763,30],[199,43,763,53],[199,47,763,57],[200,6,763,57,"_this"],[200,11,763,57],[200,12,764,2,"_subscriptionKeyboardDidHide"],[200,40,764,30],[200,43,764,53],[200,47,764,57],[201,6,764,57,"_this"],[201,11,764,57],[201,12,766,2,"state"],[201,17,766,7],[201,20,766,17],[202,8,767,4,"layoutHeight"],[202,20,767,16],[202,22,767,18],[202,26,767,22],[203,8,768,4,"onScrollEmitter"],[203,23,768,19],[203,25,768,21],[204,6,769,2],[204,7,769,3],[205,6,841,2],[206,0,842,0],[207,0,843,0],[208,0,844,0],[209,0,845,0],[210,0,846,0],[211,6,841,2,"_this"],[211,11,841,2],[211,12,847,2,"getScrollResponder"],[211,30,847,20],[211,33,847,50],[211,45,847,56],[212,8,848,4],[213,8,849,4],[213,15,849,4,"_this"],[213,20,849,4],[214,6,850,2],[214,7,850,3],[215,6,850,3,"_this"],[215,11,850,3],[215,12,852,2,"getScrollableNode"],[215,29,852,19],[215,32,852,37],[215,44,852,43],[216,8,853,4],[216,15,853,11],[216,19,853,11,"findNodeHandle"],[216,50,853,11],[216,51,853,11,"findNodeHandle"],[216,100,853,25],[216,102,853,26,"_this"],[216,107,853,26],[216,108,853,31,"_scrollView"],[216,119,853,42],[216,120,853,43,"nativeInstance"],[216,134,853,57],[216,135,853,58],[217,6,854,2],[217,7,854,3],[218,6,854,3,"_this"],[218,11,854,3],[218,12,856,2,"getInnerViewNode"],[218,28,856,18],[218,31,856,36],[218,43,856,42],[219,8,857,4],[219,15,857,11],[219,19,857,11,"findNodeHandle"],[219,50,857,11],[219,51,857,11,"findNodeHandle"],[219,100,857,25],[219,102,857,26,"_this"],[219,107,857,26],[219,108,857,31,"_innerView"],[219,118,857,41],[219,119,857,42,"nativeInstance"],[219,133,857,56],[219,134,857,57],[220,6,858,2],[220,7,858,3],[221,6,858,3,"_this"],[221,11,858,3],[221,12,860,2,"getInnerViewRef"],[221,27,860,17],[221,30,860,52],[221,42,860,58],[222,8,861,4],[222,15,861,11,"_this"],[222,20,861,11],[222,21,861,16,"_innerView"],[222,31,861,26],[222,32,861,27,"nativeInstance"],[222,46,861,41],[223,6,862,2],[223,7,862,3],[224,6,862,3,"_this"],[224,11,862,3],[224,12,864,2,"getNativeScrollRef"],[224,30,864,20],[224,33,864,62],[224,45,864,68],[225,8,865,4],[225,15,865,11,"_this"],[225,20,865,11],[225,21,865,16,"_scrollView"],[225,32,865,27],[225,33,865,28,"nativeInstance"],[225,47,865,42],[226,6,866,2],[226,7,866,3],[227,6,868,2],[228,0,869,0],[229,0,870,0],[230,0,871,0],[231,0,872,0],[232,0,873,0],[233,0,874,0],[234,0,875,0],[235,0,876,0],[236,0,877,0],[237,0,878,0],[238,6,868,2,"_this"],[238,11,868,2],[238,12,879,2,"scrollTo"],[238,20,879,10],[238,23,890,14],[238,33,891,4,"options"],[238,40,898,14],[238,42,899,4,"deprecatedX"],[238,53,899,24],[238,55,900,4,"deprecatedAnimated"],[238,73,900,32],[238,75,901,7],[239,8,902,4],[239,12,902,8,"x"],[239,13,902,9],[239,15,902,11,"y"],[239,16,902,12],[239,18,902,14,"animated"],[239,26,902,22],[240,8,903,4],[240,12,903,8],[240,19,903,15,"options"],[240,26,903,22],[240,31,903,27],[240,39,903,35],[240,41,903,37],[241,10,904,6,"console"],[241,17,904,13],[241,18,904,14,"warn"],[241,22,904,18],[241,23,905,8],[241,94,905,79],[241,97,906,10],[241,125,907,6],[241,126,907,7],[242,10,908,6,"y"],[242,11,908,7],[242,14,908,10,"options"],[242,21,908,17],[243,10,909,6,"x"],[243,11,909,7],[243,14,909,10,"deprecatedX"],[243,25,909,21],[244,10,910,6,"animated"],[244,18,910,14],[244,21,910,17,"deprecatedAnimated"],[244,39,910,35],[245,8,911,4],[245,9,911,5],[245,15,911,11],[245,19,911,15,"options"],[245,26,911,22],[245,28,911,24],[246,10,912,6,"y"],[246,11,912,7],[246,14,912,10,"options"],[246,21,912,17],[246,22,912,18,"y"],[246,23,912,19],[247,10,913,6,"x"],[247,11,913,7],[247,14,913,10,"options"],[247,21,913,17],[247,22,913,18,"x"],[247,23,913,19],[248,10,914,6,"animated"],[248,18,914,14],[248,21,914,17,"options"],[248,28,914,24],[248,29,914,25,"animated"],[248,37,914,33],[249,8,915,4],[250,8,916,4],[250,12,916,8,"_this"],[250,17,916,8],[250,18,916,13,"_scrollView"],[250,29,916,24],[250,30,916,25,"nativeInstance"],[250,44,916,39],[250,48,916,43],[250,52,916,47],[250,54,916,49],[251,10,917,6],[252,8,918,4],[253,8,919,4,"Commands"],[253,35,919,12],[253,36,919,13,"scrollTo"],[253,44,919,21],[253,45,920,6,"_this"],[253,50,920,6],[253,51,920,11,"_scrollView"],[253,62,920,22],[253,63,920,23,"nativeInstance"],[253,77,920,37],[253,79,921,6,"x"],[253,80,921,7],[253,84,921,11],[253,85,921,12],[253,87,922,6,"y"],[253,88,922,7],[253,92,922,11],[253,93,922,12],[253,95,923,6,"animated"],[253,103,923,14],[253,108,923,19],[253,113,924,4],[253,114,924,5],[254,6,925,2],[254,7,925,3],[255,6,927,2],[256,0,928,0],[257,0,929,0],[258,0,930,0],[259,0,931,0],[260,0,932,0],[261,0,933,0],[262,0,934,0],[263,6,927,2,"_this"],[263,11,927,2],[263,12,935,2,"scrollToEnd"],[263,23,935,13],[263,26,935,64],[263,36,936,4,"options"],[263,43,936,40],[263,45,937,7],[264,8,938,4],[265,8,939,4],[265,12,939,10,"animated"],[265,20,939,18],[265,23,939,21],[265,24,939,22,"options"],[265,31,939,29],[265,35,939,33,"options"],[265,42,939,40],[265,43,939,41,"animated"],[265,51,939,49],[265,57,939,55],[265,62,939,60],[266,8,940,4],[266,12,940,8,"_this"],[266,17,940,8],[266,18,940,13,"_scrollView"],[266,29,940,24],[266,30,940,25,"nativeInstance"],[266,44,940,39],[266,48,940,43],[266,52,940,47],[266,54,940,49],[267,10,941,6],[268,8,942,4],[269,8,943,4,"Commands"],[269,35,943,12],[269,36,943,13,"scrollToEnd"],[269,47,943,24],[269,48,943,25,"_this"],[269,53,943,25],[269,54,943,30,"_scrollView"],[269,65,943,41],[269,66,943,42,"nativeInstance"],[269,80,943,56],[269,82,943,58,"animated"],[269,90,943,66],[269,91,943,67],[270,6,944,2],[270,7,944,3],[271,6,946,2],[272,0,947,0],[273,0,948,0],[274,0,949,0],[275,0,950,0],[276,6,946,2,"_this"],[276,11,946,2],[276,12,951,2,"flashScrollIndicators"],[276,33,951,23],[276,36,951,38],[276,48,951,44],[277,8,952,4],[277,12,952,8,"_this"],[277,17,952,8],[277,18,952,13,"_scrollView"],[277,29,952,24],[277,30,952,25,"nativeInstance"],[277,44,952,39],[277,48,952,43],[277,52,952,47],[277,54,952,49],[278,10,953,6],[279,8,954,4],[280,8,955,4,"Commands"],[280,35,955,12],[280,36,955,13,"flashScrollIndicators"],[280,57,955,34],[280,58,955,35,"_this"],[280,63,955,35],[280,64,955,40,"_scrollView"],[280,75,955,51],[280,76,955,52,"nativeInstance"],[280,90,955,66],[280,91,955,67],[281,6,956,2],[281,7,956,3],[282,6,956,3,"_this"],[282,11,956,3],[282,12,958,2,"_subscribeToOnScroll"],[282,32,958,22],[282,35,960,27],[282,45,960,27,"callback"],[282,53,960,35],[282,55,960,39],[283,8,961,4],[284,8,962,4],[285,8,963,4],[285,12,963,8,"subscription"],[285,24,963,40],[286,8,965,4,"_this"],[286,13,965,4],[286,14,965,9,"setState"],[286,22,965,17],[286,23,966,6],[286,33,966,6,"_ref2"],[286,38,966,6],[286,40,966,29],[287,10,966,29],[287,14,966,8,"onScrollEmitter"],[287,29,966,23],[287,32,966,23,"_ref2"],[287,37,966,23],[287,38,966,8,"onScrollEmitter"],[287,53,966,23],[288,10,967,8],[288,14,967,12,"onScrollEmitter"],[288,29,967,27],[288,31,967,29],[289,12,968,10],[289,19,968,17],[289,23,968,21],[290,10,969,8],[290,11,969,9],[290,17,969,15],[291,12,970,10],[291,19,970,17],[292,14,970,18,"onScrollEmitter"],[292,29,970,33],[292,31,970,35],[292,35,970,39,"EventEmitter"],[292,56,970,51],[292,57,970,52],[293,12,970,53],[293,13,970,54],[294,10,971,8],[295,8,972,6],[295,9,972,7],[295,11,973,6],[295,23,973,12],[296,10,974,8],[297,10,975,8],[298,10,976,8],[298,14,976,12,"subscription"],[298,26,976,24],[298,31,976,29],[298,35,976,33],[298,37,976,35],[299,12,977,10,"subscription"],[299,24,977,22],[299,27,977,25],[299,31,977,25,"nullthrows"],[299,50,977,35],[299,52,977,36,"_this"],[299,57,977,36],[299,58,977,41,"state"],[299,63,977,46],[299,64,977,47,"onScrollEmitter"],[299,79,977,62],[299,80,977,63],[299,81,977,64,"addListener"],[299,92,977,75],[299,93,978,12],[299,101,978,20],[299,103,979,12,"callback"],[299,111,980,10],[299,112,980,11],[300,10,981,8],[301,8,982,6],[301,9,983,4],[301,10,983,5],[302,8,985,4],[302,15,985,11],[303,10,986,6,"remove"],[303,16,986,12],[303,27,986,6,"remove"],[303,33,986,12,"remove"],[303,34,986,12],[303,36,986,15],[304,12,986,15],[304,16,986,15,"_subscription"],[304,29,986,15],[305,12,987,8],[306,12,988,8],[306,13,988,8,"_subscription"],[306,26,988,8],[306,29,988,8,"subscription"],[306,41,988,20],[306,54,988,8,"_subscription"],[306,67,988,8],[306,68,988,22,"remove"],[306,74,988,28],[306,75,988,29],[306,76,988,30],[307,12,989,8],[308,12,990,8],[309,12,991,8,"subscription"],[309,24,991,20],[309,27,991,23],[309,31,991,27],[310,10,992,6],[311,8,993,4],[311,9,993,5],[312,6,994,2],[312,7,994,3],[313,6,996,2],[314,0,997,0],[315,0,998,0],[316,0,999,0],[317,0,1000,0],[318,0,1001,0],[319,0,1002,0],[320,0,1003,0],[321,0,1004,0],[322,0,1005,0],[323,6,996,2,"_this"],[323,11,996,2],[323,12,1006,2,"scrollResponderScrollNativeHandleToKeyboard"],[323,55,1006,45],[323,58,1010,14],[323,68,1011,4,"nodeHandle"],[323,78,1011,59],[323,80,1012,4,"additionalOffset"],[323,96,1012,29],[323,98,1013,4,"preventNegativeScrollOffset"],[323,125,1013,41],[323,127,1014,7],[324,8,1015,4,"_this"],[324,13,1015,4],[324,14,1015,9,"_additionalScrollOffset"],[324,37,1015,32],[324,40,1015,35,"additionalOffset"],[324,56,1015,51],[324,60,1015,55],[324,61,1015,56],[325,8,1016,4,"_this"],[325,13,1016,4],[325,14,1016,9,"_preventNegativeScrollOffset"],[325,42,1016,37],[325,45,1016,40],[325,46,1016,41],[325,47,1016,42,"preventNegativeScrollOffset"],[325,74,1016,69],[326,8,1018,4],[326,12,1018,8,"_this"],[326,17,1018,8],[326,18,1018,13,"_innerView"],[326,28,1018,23],[326,29,1018,24,"nativeInstance"],[326,43,1018,38],[326,47,1018,42],[326,51,1018,46],[326,53,1018,48],[327,10,1019,6],[328,8,1020,4],[329,8,1022,4],[329,12,1022,8],[329,19,1022,15,"nodeHandle"],[329,29,1022,25],[329,34,1022,30],[329,42,1022,38],[329,44,1022,40],[330,10,1023,6,"UIManager"],[330,28,1023,15],[330,29,1023,16,"measureLayout"],[330,42,1023,29],[330,43,1024,8,"nodeHandle"],[330,53,1024,18],[330,55,1025,8],[330,59,1025,8,"nullthrows"],[330,78,1025,18],[330,80,1025,19],[330,84,1025,19,"findNodeHandle"],[330,115,1025,19],[330,116,1025,19,"findNodeHandle"],[330,165,1025,33],[330,167,1025,33,"_this"],[330,172,1025,38],[330,173,1025,39],[330,174,1025,40],[331,10,1026,8],[332,10,1027,8,"_this"],[332,15,1027,8],[332,16,1027,13,"_textInputFocusError"],[332,36,1027,33],[332,38,1028,8,"_this"],[332,43,1028,8],[332,44,1028,13,"_inputMeasureAndScrollToKeyboard"],[332,76,1029,6],[332,77,1029,7],[333,8,1030,4],[333,9,1030,5],[333,15,1030,11],[334,10,1031,6,"nodeHandle"],[334,20,1031,16],[334,21,1031,17,"measureLayout"],[334,34,1031,30],[334,35,1032,8,"_this"],[334,40,1032,8],[334,41,1032,13,"_innerView"],[334,51,1032,23],[334,52,1032,24,"nativeInstance"],[334,66,1032,38],[334,68,1033,8,"_this"],[334,73,1033,8],[334,74,1033,13,"_inputMeasureAndScrollToKeyboard"],[334,106,1033,45],[335,10,1034,8],[336,10,1035,8,"_this"],[336,15,1035,8],[336,16,1035,13,"_textInputFocusError"],[336,36,1036,6],[336,37,1036,7],[337,8,1037,4],[338,6,1038,2],[338,7,1038,3],[339,6,1040,2],[340,0,1041,0],[341,0,1042,0],[342,0,1043,0],[343,0,1044,0],[344,0,1045,0],[345,6,1040,2,"_this"],[345,11,1040,2],[345,12,1046,2,"scrollResponderZoomTo"],[345,33,1046,23],[345,36,1055,14],[345,46,1056,4,"rect"],[345,50,1062,6],[345,52,1063,4,"animated"],[345,60,1063,22],[345,61,1063,24],[346,6,1063,24],[346,8,1064,7],[347,8,1065,4],[347,12,1065,4,"invariant"],[347,30,1065,13],[347,32,1065,14,"Platform"],[347,49,1065,22],[347,50,1065,23,"OS"],[347,52,1065,25],[347,57,1065,30],[347,62,1065,35],[347,64,1065,37],[347,95,1065,68],[347,96,1065,69],[348,8,1066,4],[348,12,1066,8],[348,22,1066,18],[348,26,1066,22,"rect"],[348,30,1066,26],[348,32,1066,28],[349,10,1067,6,"_this"],[349,15,1067,6],[349,16,1067,11,"_animated"],[349,25,1067,20],[349,28,1067,23,"rect"],[349,32,1067,27],[349,33,1067,28,"animated"],[349,41,1067,36],[350,10,1068,6],[350,17,1068,13,"rect"],[350,21,1068,17],[350,22,1068,18,"animated"],[350,30,1068,26],[351,8,1069,4],[351,9,1069,5],[351,15,1069,11],[351,19,1069,15],[351,26,1069,22,"animated"],[351,34,1069,30],[351,39,1069,35],[351,50,1069,46],[351,52,1069,48],[352,10,1070,6,"console"],[352,17,1070,13],[352,18,1070,14,"warn"],[352,22,1070,18],[352,23,1071,8],[352,114,1072,6],[352,115,1072,7],[353,8,1073,4],[354,8,1075,4],[354,12,1075,8,"_this"],[354,17,1075,8],[354,18,1075,13,"_scrollView"],[354,29,1075,24],[354,30,1075,25,"nativeInstance"],[354,44,1075,39],[354,48,1075,43],[354,52,1075,47],[354,54,1075,49],[355,10,1076,6],[356,8,1077,4],[357,8,1078,4,"Commands"],[357,35,1078,12],[357,36,1078,13,"zoomToRect"],[357,46,1078,23],[357,47,1079,6,"_this"],[357,52,1079,6],[357,53,1079,11,"_scrollView"],[357,64,1079,22],[357,65,1079,23,"nativeInstance"],[357,79,1079,37],[357,81,1080,6,"rect"],[357,85,1080,10],[357,87,1081,6,"animated"],[357,95,1081,14],[357,100,1081,19],[357,105,1082,4],[357,106,1082,5],[358,6,1083,2],[358,7,1083,3],[359,6,1089,2],[360,0,1090,0],[361,0,1091,0],[362,0,1092,0],[363,0,1093,0],[364,0,1094,0],[365,0,1095,0],[366,0,1096,0],[367,0,1097,0],[368,0,1098,0],[369,6,1089,2,"_this"],[369,11,1089,2],[369,12,1099,2,"_inputMeasureAndScrollToKeyboard"],[369,44,1099,34],[369,47,1104,14],[369,57,1104,15,"left"],[369,61,1104,27],[369,63,1104,29,"top"],[369,66,1104,40],[369,68,1104,42,"width"],[369,73,1104,55],[369,75,1104,57,"height"],[369,81,1104,71],[369,83,1104,76],[370,8,1105,4],[370,12,1105,8,"keyboardScreenY"],[370,27,1105,23],[370,30,1105,26,"Dimensions"],[370,49,1105,36],[370,50,1105,37,"get"],[370,53,1105,40],[370,54,1105,41],[370,62,1105,49],[370,63,1105,50],[370,64,1105,51,"height"],[370,70,1105,57],[371,8,1107,4],[371,12,1107,10,"scrollTextInputIntoVisibleRect"],[371,42,1107,40],[371,45,1107,43],[371,54,1107,10,"scrollTextInputIntoVisibleRect"],[371,84,1107,40,"scrollTextInputIntoVisibleRect"],[371,85,1107,40],[371,87,1107,49],[372,10,1108,6],[372,14,1108,10,"_this"],[372,19,1108,10],[372,20,1108,15,"_keyboardMetrics"],[372,36,1108,31],[372,40,1108,35],[372,44,1108,39],[372,46,1108,41],[373,12,1109,8,"keyboardScreenY"],[373,27,1109,23],[373,30,1109,26,"_this"],[373,35,1109,26],[373,36,1109,31,"_keyboardMetrics"],[373,52,1109,47],[373,53,1109,48,"screenY"],[373,60,1109,55],[374,10,1110,6],[375,10,1111,6],[375,14,1111,10,"scrollOffsetY"],[375,27,1111,23],[375,30,1112,8,"top"],[375,33,1112,11],[375,36,1112,14,"keyboardScreenY"],[375,51,1112,29],[375,54,1112,32,"height"],[375,60,1112,38],[375,63,1112,41,"_this"],[375,68,1112,41],[375,69,1112,46,"_additionalScrollOffset"],[375,92,1112,69],[377,10,1114,6],[378,10,1115,6],[379,10,1116,6],[380,10,1117,6],[381,10,1118,6],[381,14,1118,10,"_this"],[381,19,1118,10],[381,20,1118,15,"_preventNegativeScrollOffset"],[381,48,1118,43],[381,53,1118,48],[381,57,1118,52],[381,59,1118,54],[382,12,1119,8,"scrollOffsetY"],[382,25,1119,21],[382,28,1119,24,"Math"],[382,32,1119,28],[382,33,1119,29,"max"],[382,36,1119,32],[382,37,1119,33],[382,38,1119,34],[382,40,1119,36,"scrollOffsetY"],[382,53,1119,49],[382,54,1119,50],[383,10,1120,6],[384,10,1121,6,"_this"],[384,15,1121,6],[384,16,1121,11,"scrollTo"],[384,24,1121,19],[384,25,1121,20],[385,12,1121,21,"x"],[385,13,1121,22],[385,15,1121,24],[385,16,1121,25],[386,12,1121,27,"y"],[386,13,1121,28],[386,15,1121,30,"scrollOffsetY"],[386,28,1121,43],[387,12,1121,45,"animated"],[387,20,1121,53],[387,22,1121,55],[388,10,1121,59],[388,11,1121,60],[388,12,1121,61],[389,10,1123,6,"_this"],[389,15,1123,6],[389,16,1123,11,"_additionalScrollOffset"],[389,39,1123,34],[389,42,1123,37],[389,43,1123,38],[390,10,1124,6,"_this"],[390,15,1124,6],[390,16,1124,11,"_preventNegativeScrollOffset"],[390,44,1124,39],[390,47,1124,42],[390,52,1124,47],[391,8,1125,4],[391,9,1125,5],[392,8,1127,4],[392,12,1127,8,"_this"],[392,17,1127,8],[392,18,1127,13,"_keyboardMetrics"],[392,34,1127,29],[392,38,1127,33],[392,42,1127,37],[392,44,1127,39],[393,10,1128,6],[394,10,1129,6],[395,10,1130,6],[396,10,1131,6],[397,10,1132,6,"setTimeout"],[397,20,1132,16],[397,21,1132,17],[397,33,1132,23],[398,12,1133,8,"scrollTextInputIntoVisibleRect"],[398,42,1133,38],[398,43,1133,39],[398,44,1133,40],[399,10,1134,6],[399,11,1134,7],[399,13,1134,9],[399,14,1134,10],[399,15,1134,11],[400,8,1135,4],[400,9,1135,5],[400,15,1135,11],[401,10,1136,6,"scrollTextInputIntoVisibleRect"],[401,40,1136,36],[401,41,1136,37],[401,42,1136,38],[402,8,1137,4],[403,6,1138,2],[403,7,1138,3],[404,6,1138,3,"_this"],[404,11,1138,3],[404,12,1199,2,"_handleScroll"],[404,25,1199,15],[404,28,1199,18],[404,38,1199,19,"e"],[404,39,1199,33],[404,41,1199,38],[405,8,1199,38],[405,12,1199,38,"_this$state$onScrollE"],[405,33,1199,38],[406,8,1200,4,"_this"],[406,13,1200,4],[406,14,1200,9,"_observedScrollSinceBecomingResponder"],[406,51,1200,46],[406,54,1200,49],[406,58,1200,53],[407,8,1201,4,"_this"],[407,13,1201,4],[407,14,1201,9,"props"],[407,19,1201,14],[407,20,1201,15,"onScroll"],[407,28,1201,23],[407,32,1201,27,"_this"],[407,37,1201,27],[407,38,1201,32,"props"],[407,43,1201,37],[407,44,1201,38,"onScroll"],[407,52,1201,46],[407,53,1201,47,"e"],[407,54,1201,48],[407,55,1201,49],[408,8,1203,4],[408,9,1203,4,"_this$state$onScrollE"],[408,30,1203,4],[408,33,1203,4,"_this"],[408,38,1203,4],[408,39,1203,9,"state"],[408,44,1203,14],[408,45,1203,15,"onScrollEmitter"],[408,60,1203,30],[408,73,1203,4,"_this$state$onScrollE"],[408,94,1203,4],[408,95,1203,32,"emit"],[408,99,1203,36],[408,100,1203,37],[408,108,1203,45],[408,110,1203,47],[409,10,1204,6,"x"],[409,11,1204,7],[409,13,1204,9,"e"],[409,14,1204,10],[409,15,1204,11,"nativeEvent"],[409,26,1204,22],[409,27,1204,23,"contentOffset"],[409,40,1204,36],[409,41,1204,37,"x"],[409,42,1204,38],[410,10,1205,6,"y"],[410,11,1205,7],[410,13,1205,9,"e"],[410,14,1205,10],[410,15,1205,11,"nativeEvent"],[410,26,1205,22],[410,27,1205,23,"contentOffset"],[410,40,1205,36],[410,41,1205,37,"y"],[411,8,1206,4],[411,9,1206,5],[411,10,1206,6],[412,6,1207,2],[412,7,1207,3],[413,6,1207,3,"_this"],[413,11,1207,3],[413,12,1209,2,"_handleLayout"],[413,25,1209,15],[413,28,1209,18],[413,38,1209,19,"e"],[413,39,1209,33],[413,41,1209,38],[414,8,1210,4],[414,12,1210,8,"_this"],[414,17,1210,8],[414,18,1210,13,"props"],[414,23,1210,18],[414,24,1210,19,"invertStickyHeaders"],[414,43,1210,38],[414,48,1210,43],[414,52,1210,47],[414,54,1210,49],[415,10,1211,6,"_this"],[415,15,1211,6],[415,16,1211,11,"setState"],[415,24,1211,19],[415,25,1211,20],[416,12,1211,21,"layoutHeight"],[416,24,1211,33],[416,26,1211,35,"e"],[416,27,1211,36],[416,28,1211,37,"nativeEvent"],[416,39,1211,48],[416,40,1211,49,"layout"],[416,46,1211,55],[416,47,1211,56,"height"],[417,10,1211,62],[417,11,1211,63],[417,12,1211,64],[418,8,1212,4],[419,8,1213,4],[419,12,1213,8,"_this"],[419,17,1213,8],[419,18,1213,13,"props"],[419,23,1213,18],[419,24,1213,19,"onLayout"],[419,32,1213,27],[419,34,1213,29],[420,10,1214,6,"_this"],[420,15,1214,6],[420,16,1214,11,"props"],[420,21,1214,16],[420,22,1214,17,"onLayout"],[420,30,1214,25],[420,31,1214,26,"e"],[420,32,1214,27],[420,33,1214,28],[421,8,1215,4],[422,6,1216,2],[422,7,1216,3],[423,6,1216,3,"_this"],[423,11,1216,3],[423,12,1218,2,"_handleContentOnLayout"],[423,34,1218,24],[423,37,1218,27],[423,47,1218,28,"e"],[423,48,1218,42],[423,50,1218,47],[424,8,1219,4],[424,12,1219,4,"_e$nativeEvent$layout"],[424,33,1219,4],[424,36,1219,28,"e"],[424,37,1219,29],[424,38,1219,30,"nativeEvent"],[424,49,1219,41],[424,50,1219,42,"layout"],[424,56,1219,48],[425,10,1219,11,"width"],[425,15,1219,16],[425,18,1219,16,"_e$nativeEvent$layout"],[425,39,1219,16],[425,40,1219,11,"width"],[425,45,1219,16],[426,10,1219,18,"height"],[426,16,1219,24],[426,19,1219,24,"_e$nativeEvent$layout"],[426,40,1219,24],[426,41,1219,18,"height"],[426,47,1219,24],[427,8,1220,4,"_this"],[427,13,1220,4],[427,14,1220,9,"props"],[427,19,1220,14],[427,20,1220,15,"onContentSizeChange"],[427,39,1220,34],[427,43,1221,6,"_this"],[427,48,1221,6],[427,49,1221,11,"props"],[427,54,1221,16],[427,55,1221,17,"onContentSizeChange"],[427,74,1221,36],[427,75,1221,37,"width"],[427,80,1221,42],[427,82,1221,44,"height"],[427,88,1221,50],[427,89,1221,51],[428,6,1222,2],[428,7,1222,3],[429,6,1222,3,"_this"],[429,11,1222,3],[429,12,1224,2,"_innerView"],[429,22,1224,12],[429,25,1225,4,"createRefForwarder"],[429,43,1225,22],[429,44,1226,6],[429,54,1226,7,"instance"],[429,62,1226,34],[430,8,1226,34],[430,15,1226,58,"instance"],[430,23,1226,66],[431,6,1226,66],[431,7,1227,4],[431,8,1227,5],[432,6,1227,5,"_this"],[432,11,1227,5],[432,12,1229,2,"_scrollView"],[432,23,1229,13],[432,26,1232,6,"createRefForwarder"],[432,44,1232,24],[432,45,1233,4],[432,55,1233,5,"nativeInstance"],[432,69,1233,45],[432,71,1233,76],[433,8,1234,6],[434,8,1235,6],[435,8,1236,6],[436,8,1237,6],[437,8,1238,6],[438,8,1239,6],[439,8,1240,6],[441,8,1242,6],[442,8,1243,6],[442,12,1243,12,"publicInstance"],[442,26,1243,52],[442,29,1243,55,"Object"],[442,35,1243,61],[442,36,1243,62,"assign"],[442,42,1243,68],[442,43,1244,8,"nativeInstance"],[442,57,1244,22],[442,59,1245,8],[443,10,1246,10,"getScrollResponder"],[443,28,1246,28],[443,30,1246,30,"_this"],[443,35,1246,30],[443,36,1246,35,"getScrollResponder"],[443,54,1246,53],[444,10,1247,10,"getScrollableNode"],[444,27,1247,27],[444,29,1247,29,"_this"],[444,34,1247,29],[444,35,1247,34,"getScrollableNode"],[444,52,1247,51],[445,10,1248,10,"getInnerViewNode"],[445,26,1248,26],[445,28,1248,28,"_this"],[445,33,1248,28],[445,34,1248,33,"getInnerViewNode"],[445,50,1248,49],[446,10,1249,10,"getInnerViewRef"],[446,25,1249,25],[446,27,1249,27,"_this"],[446,32,1249,27],[446,33,1249,32,"getInnerViewRef"],[446,48,1249,47],[447,10,1250,10,"getNativeScrollRef"],[447,28,1250,28],[447,30,1250,30,"_this"],[447,35,1250,30],[447,36,1250,35,"getNativeScrollRef"],[447,54,1250,53],[448,10,1251,10,"scrollTo"],[448,18,1251,18],[448,20,1251,20,"_this"],[448,25,1251,20],[448,26,1251,25,"scrollTo"],[448,34,1251,33],[449,10,1252,10,"scrollToEnd"],[449,21,1252,21],[449,23,1252,23,"_this"],[449,28,1252,23],[449,29,1252,28,"scrollToEnd"],[449,40,1252,39],[450,10,1253,10,"flashScrollIndicators"],[450,31,1253,31],[450,33,1253,33,"_this"],[450,38,1253,33],[450,39,1253,38,"flashScrollIndicators"],[450,60,1253,59],[451,10,1254,10,"scrollResponderZoomTo"],[451,31,1254,31],[451,33,1254,33,"_this"],[451,38,1254,33],[451,39,1254,38,"scrollResponderZoomTo"],[451,60,1254,59],[452,10,1255,10],[453,10,1256,10,"unstable_subscribeToOnScroll"],[453,38,1256,38],[453,40,1256,40,"_this"],[453,45,1256,40],[453,46,1256,45,"_subscribeToOnScroll"],[453,66,1256,65],[454,10,1257,10,"scrollResponderScrollNativeHandleToKeyboard"],[454,53,1257,53],[454,55,1258,12,"_this"],[454,60,1258,12],[454,61,1258,17,"scrollResponderScrollNativeHandleToKeyboard"],[455,8,1259,8],[455,9,1260,6],[455,10,1260,7],[456,8,1262,6],[456,15,1262,13,"publicInstance"],[456,29,1262,27],[457,6,1263,4],[457,7,1264,2],[457,8,1264,3],[458,6,1266,2],[459,0,1267,0],[460,0,1268,0],[461,0,1269,0],[462,0,1270,0],[463,0,1271,0],[464,0,1272,0],[465,0,1273,0],[466,0,1274,0],[467,0,1275,0],[468,0,1276,0],[469,0,1277,0],[470,0,1278,0],[471,0,1279,0],[472,0,1280,0],[473,0,1281,0],[474,0,1282,0],[475,0,1283,0],[476,0,1284,0],[477,0,1285,0],[478,0,1286,0],[479,0,1287,0],[480,0,1288,0],[481,0,1289,0],[482,0,1290,0],[483,0,1291,0],[484,0,1292,0],[485,0,1293,0],[486,6,1266,2,"_this"],[486,11,1266,2],[486,12,1295,2,"scrollResponderKeyboardWillShow"],[486,43,1295,33],[486,46,1295,64],[486,56,1296,4,"e"],[486,57,1296,20],[486,59,1297,7],[487,8,1298,4,"_this"],[487,13,1298,4],[487,14,1298,9,"_keyboardMetrics"],[487,30,1298,25],[487,33,1298,28,"e"],[487,34,1298,29],[487,35,1298,30,"endCoordinates"],[487,49,1298,44],[488,8,1299,4,"_this"],[488,13,1299,4],[488,14,1299,9,"props"],[488,19,1299,14],[488,20,1299,15,"onKeyboardWillShow"],[488,38,1299,33],[488,42,1299,37,"_this"],[488,47,1299,37],[488,48,1299,42,"props"],[488,53,1299,47],[488,54,1299,48,"onKeyboardWillShow"],[488,72,1299,66],[488,73,1299,67,"e"],[488,74,1299,68],[488,75,1299,69],[489,6,1300,2],[489,7,1300,3],[490,6,1300,3,"_this"],[490,11,1300,3],[490,12,1302,2,"scrollResponderKeyboardWillHide"],[490,43,1302,33],[490,46,1302,64],[490,56,1303,4,"e"],[490,57,1303,20],[490,59,1304,7],[491,8,1305,4,"_this"],[491,13,1305,4],[491,14,1305,9,"_keyboardMetrics"],[491,30,1305,25],[491,33,1305,28],[491,37,1305,32],[492,8,1306,4,"_this"],[492,13,1306,4],[492,14,1306,9,"props"],[492,19,1306,14],[492,20,1306,15,"onKeyboardWillHide"],[492,38,1306,33],[492,42,1306,37,"_this"],[492,47,1306,37],[492,48,1306,42,"props"],[492,53,1306,47],[492,54,1306,48,"onKeyboardWillHide"],[492,72,1306,66],[492,73,1306,67,"e"],[492,74,1306,68],[492,75,1306,69],[493,6,1307,2],[493,7,1307,3],[494,6,1307,3,"_this"],[494,11,1307,3],[494,12,1309,2,"scrollResponderKeyboardDidShow"],[494,42,1309,32],[494,45,1309,63],[494,55,1310,4,"e"],[494,56,1310,20],[494,58,1311,7],[495,8,1312,4,"_this"],[495,13,1312,4],[495,14,1312,9,"_keyboardMetrics"],[495,30,1312,25],[495,33,1312,28,"e"],[495,34,1312,29],[495,35,1312,30,"endCoordinates"],[495,49,1312,44],[496,8,1313,4,"_this"],[496,13,1313,4],[496,14,1313,9,"props"],[496,19,1313,14],[496,20,1313,15,"onKeyboardDidShow"],[496,37,1313,32],[496,41,1313,36,"_this"],[496,46,1313,36],[496,47,1313,41,"props"],[496,52,1313,46],[496,53,1313,47,"onKeyboardDidShow"],[496,70,1313,64],[496,71,1313,65,"e"],[496,72,1313,66],[496,73,1313,67],[497,6,1314,2],[497,7,1314,3],[498,6,1314,3,"_this"],[498,11,1314,3],[498,12,1316,2,"scrollResponderKeyboardDidHide"],[498,42,1316,32],[498,45,1316,63],[498,55,1317,4,"e"],[498,56,1317,20],[498,58,1318,7],[499,8,1319,4,"_this"],[499,13,1319,4],[499,14,1319,9,"_keyboardMetrics"],[499,30,1319,25],[499,33,1319,28],[499,37,1319,32],[500,8,1320,4,"_this"],[500,13,1320,4],[500,14,1320,9,"props"],[500,19,1320,14],[500,20,1320,15,"onKeyboardDidHide"],[500,37,1320,32],[500,41,1320,36,"_this"],[500,46,1320,36],[500,47,1320,41,"props"],[500,52,1320,46],[500,53,1320,47,"onKeyboardDidHide"],[500,70,1320,64],[500,71,1320,65,"e"],[500,72,1320,66],[500,73,1320,67],[501,6,1321,2],[501,7,1321,3],[502,6,1323,2],[503,0,1324,0],[504,0,1325,0],[505,6,1323,2,"_this"],[505,11,1323,2],[505,12,1326,2,"_handleMomentumScrollBegin"],[505,38,1326,28],[505,41,1326,57],[505,51,1326,58,"e"],[505,52,1326,72],[505,54,1326,77],[506,8,1327,4,"_this"],[506,13,1327,4],[506,14,1327,9,"_lastMomentumScrollBeginTime"],[506,42,1327,37],[506,45,1327,40,"global"],[506,51,1327,46],[506,52,1327,47,"performance"],[506,63,1327,58],[506,64,1327,59,"now"],[506,67,1327,62],[506,68,1327,63],[506,69,1327,64],[507,8,1328,4,"_this"],[507,13,1328,4],[507,14,1328,9,"props"],[507,19,1328,14],[507,20,1328,15,"onMomentumScrollBegin"],[507,41,1328,36],[507,45,1328,40,"_this"],[507,50,1328,40],[507,51,1328,45,"props"],[507,56,1328,50],[507,57,1328,51,"onMomentumScrollBegin"],[507,78,1328,72],[507,79,1328,73,"e"],[507,80,1328,74],[507,81,1328,75],[508,6,1329,2],[508,7,1329,3],[509,6,1331,2],[510,0,1332,0],[511,0,1333,0],[512,6,1331,2,"_this"],[512,11,1331,2],[512,12,1334,2,"_handleMomentumScrollEnd"],[512,36,1334,26],[512,39,1334,55],[512,49,1334,56,"e"],[512,50,1334,70],[512,52,1334,75],[513,8,1335,4,"FrameRateLogger"],[513,32,1335,19],[513,33,1335,20,"endScroll"],[513,42,1335,29],[513,43,1335,30],[513,44,1335,31],[514,8,1336,4,"_this"],[514,13,1336,4],[514,14,1336,9,"_lastMomentumScrollEndTime"],[514,40,1336,35],[514,43,1336,38,"global"],[514,49,1336,44],[514,50,1336,45,"performance"],[514,61,1336,56],[514,62,1336,57,"now"],[514,65,1336,60],[514,66,1336,61],[514,67,1336,62],[515,8,1337,4,"_this"],[515,13,1337,4],[515,14,1337,9,"props"],[515,19,1337,14],[515,20,1337,15,"onMomentumScrollEnd"],[515,39,1337,34],[515,43,1337,38,"_this"],[515,48,1337,38],[515,49,1337,43,"props"],[515,54,1337,48],[515,55,1337,49,"onMomentumScrollEnd"],[515,74,1337,68],[515,75,1337,69,"e"],[515,76,1337,70],[515,77,1337,71],[516,6,1338,2],[516,7,1338,3],[517,6,1340,2],[518,0,1341,0],[519,0,1342,0],[520,0,1343,0],[521,0,1344,0],[522,0,1345,0],[523,0,1346,0],[524,6,1340,2,"_this"],[524,11,1340,2],[524,12,1347,2,"_handleScrollBeginDrag"],[524,34,1347,24],[524,37,1347,53],[524,47,1347,54,"e"],[524,48,1347,68],[524,50,1347,73],[525,8,1348,4,"FrameRateLogger"],[525,32,1348,19],[525,33,1348,20,"beginScroll"],[525,44,1348,31],[525,45,1348,32],[525,46,1348,33],[525,47,1348,34],[525,48,1348,35],[527,8,1350,4],[527,12,1351,6,"Platform"],[527,29,1351,14],[527,30,1351,15,"OS"],[527,32,1351,17],[527,37,1351,22],[527,46,1351,31],[527,50,1352,6,"_this"],[527,55,1352,6],[527,56,1352,11,"props"],[527,61,1352,16],[527,62,1352,17,"keyboardDismissMode"],[527,81,1352,36],[527,86,1352,41],[527,95,1352,50],[527,97,1353,6],[528,10,1354,6],[528,14,1354,6,"dismissKeyboard"],[528,38,1354,21],[528,40,1354,22],[528,41,1354,23],[529,8,1355,4],[530,8,1357,4,"_this"],[530,13,1357,4],[530,14,1357,9,"props"],[530,19,1357,14],[530,20,1357,15,"onScrollBeginDrag"],[530,37,1357,32],[530,41,1357,36,"_this"],[530,46,1357,36],[530,47,1357,41,"props"],[530,52,1357,46],[530,53,1357,47,"onScrollBeginDrag"],[530,70,1357,64],[530,71,1357,65,"e"],[530,72,1357,66],[530,73,1357,67],[531,6,1358,2],[531,7,1358,3],[532,6,1360,2],[533,0,1361,0],[534,0,1362,0],[535,6,1360,2,"_this"],[535,11,1360,2],[535,12,1363,2,"_handleScrollEndDrag"],[535,32,1363,22],[535,35,1363,51],[535,45,1363,52,"e"],[535,46,1363,66],[535,48,1363,71],[536,8,1364,4],[536,12,1364,11,"velocity"],[536,20,1364,19],[536,23,1364,23,"e"],[536,24,1364,24],[536,25,1364,25,"nativeEvent"],[536,36,1364,36],[536,37,1364,11,"velocity"],[536,45,1364,19],[537,8,1365,4],[538,8,1366,4],[539,8,1367,4],[540,8,1368,4],[541,8,1369,4],[542,8,1370,4],[542,12,1371,6],[542,13,1371,7,"_this"],[542,18,1371,7],[542,19,1371,12,"_isAnimating"],[542,31,1371,24],[542,32,1371,25],[542,33,1371,26],[542,38,1372,7],[542,39,1372,8,"velocity"],[542,47,1372,16],[542,51,1372,21,"velocity"],[542,59,1372,29],[542,60,1372,30,"x"],[542,61,1372,31],[542,66,1372,36],[542,67,1372,37],[542,71,1372,41,"velocity"],[542,79,1372,49],[542,80,1372,50,"y"],[542,81,1372,51],[542,86,1372,56],[542,87,1372,58],[542,88,1372,59],[542,90,1373,6],[543,10,1374,6,"FrameRateLogger"],[543,34,1374,21],[543,35,1374,22,"endScroll"],[543,44,1374,31],[543,45,1374,32],[543,46,1374,33],[544,8,1375,4],[545,8,1376,4,"_this"],[545,13,1376,4],[545,14,1376,9,"props"],[545,19,1376,14],[545,20,1376,15,"onScrollEndDrag"],[545,35,1376,30],[545,39,1376,34,"_this"],[545,44,1376,34],[545,45,1376,39,"props"],[545,50,1376,44],[545,51,1376,45,"onScrollEndDrag"],[545,66,1376,60],[545,67,1376,61,"e"],[545,68,1376,62],[545,69,1376,63],[546,6,1377,2],[546,7,1377,3],[547,6,1379,2],[548,0,1380,0],[549,0,1381,0],[550,0,1382,0],[551,0,1383,0],[552,6,1379,2,"_this"],[552,11,1379,2],[552,12,1384,2,"_isAnimating"],[552,24,1384,14],[552,27,1384,32],[552,39,1384,38],[553,8,1385,4],[553,12,1385,10,"now"],[553,15,1385,13],[553,18,1385,16,"global"],[553,24,1385,22],[553,25,1385,23,"performance"],[553,36,1385,34],[553,37,1385,35,"now"],[553,40,1385,38],[553,41,1385,39],[553,42,1385,40],[554,8,1386,4],[554,12,1386,10,"timeSinceLastMomentumScrollEnd"],[554,42,1386,40],[554,45,1387,6,"now"],[554,48,1387,9],[554,51,1387,12,"_this"],[554,56,1387,12],[554,57,1387,17,"_lastMomentumScrollEndTime"],[554,83,1387,43],[555,8,1388,4],[555,12,1388,10,"isAnimating"],[555,23,1388,21],[555,26,1389,6,"timeSinceLastMomentumScrollEnd"],[555,56,1389,36],[555,59,1389,39,"IS_ANIMATING_TOUCH_START_THRESHOLD_MS"],[555,96,1389,76],[555,100,1390,6,"_this"],[555,105,1390,6],[555,106,1390,11,"_lastMomentumScrollEndTime"],[555,132,1390,37],[555,135,1390,40,"_this"],[555,140,1390,40],[555,141,1390,45,"_lastMomentumScrollBeginTime"],[555,169,1390,73],[556,8,1391,4],[556,15,1391,11,"isAnimating"],[556,26,1391,22],[557,6,1392,2],[557,7,1392,3],[558,6,1394,2],[559,0,1395,0],[560,0,1396,0],[561,6,1394,2,"_this"],[561,11,1394,2],[561,12,1397,2,"_handleResponderGrant"],[561,33,1397,23],[561,36,1397,51],[561,46,1397,52,"e"],[561,47,1397,65],[561,49,1397,70],[562,8,1398,4,"_this"],[562,13,1398,4],[562,14,1398,9,"_observedScrollSinceBecomingResponder"],[562,51,1398,46],[562,54,1398,49],[562,59,1398,54],[563,8,1399,4,"_this"],[563,13,1399,4],[563,14,1399,9,"props"],[563,19,1399,14],[563,20,1399,15,"onResponderGrant"],[563,36,1399,31],[563,40,1399,35,"_this"],[563,45,1399,35],[563,46,1399,40,"props"],[563,51,1399,45],[563,52,1399,46,"onResponderGrant"],[563,68,1399,62],[563,69,1399,63,"e"],[563,70,1399,64],[563,71,1399,65],[564,8,1400,4,"_this"],[564,13,1400,4],[564,14,1400,9,"_becameResponderWhileAnimating"],[564,44,1400,39],[564,47,1400,42,"_this"],[564,52,1400,42],[564,53,1400,47,"_isAnimating"],[564,65,1400,59],[564,66,1400,60],[564,67,1400,61],[565,6,1401,2],[565,7,1401,3],[566,6,1403,2],[567,0,1404,0],[568,0,1405,0],[569,0,1406,0],[570,0,1407,0],[571,0,1408,0],[572,0,1409,0],[573,0,1410,0],[574,0,1411,0],[575,0,1412,0],[576,6,1403,2,"_this"],[576,11,1403,2],[576,12,1413,2,"_handleResponderReject"],[576,34,1413,24],[576,37,1413,39],[576,49,1413,45],[576,50,1413,46],[576,51,1413,47],[577,6,1415,2],[578,0,1416,0],[579,0,1417,0],[580,6,1415,2,"_this"],[580,11,1415,2],[580,12,1418,2,"_handleResponderRelease"],[580,35,1418,25],[580,38,1418,53],[580,48,1418,54,"e"],[580,49,1418,67],[580,51,1418,72],[581,8,1419,4,"_this"],[581,13,1419,4],[581,14,1419,9,"_isTouching"],[581,25,1419,20],[581,28,1419,23,"e"],[581,29,1419,24],[581,30,1419,25,"nativeEvent"],[581,41,1419,36],[581,42,1419,37,"touches"],[581,49,1419,44],[581,50,1419,45,"length"],[581,56,1419,51],[581,61,1419,56],[581,62,1419,57],[582,8,1420,4,"_this"],[582,13,1420,4],[582,14,1420,9,"props"],[582,19,1420,14],[582,20,1420,15,"onResponderRelease"],[582,38,1420,33],[582,42,1420,37,"_this"],[582,47,1420,37],[582,48,1420,42,"props"],[582,53,1420,47],[582,54,1420,48,"onResponderRelease"],[582,72,1420,66],[582,73,1420,67,"e"],[582,74,1420,68],[582,75,1420,69],[583,8,1422,4],[583,12,1422,8],[583,19,1422,15,"e"],[583,20,1422,16],[583,21,1422,17,"target"],[583,27,1422,23],[583,32,1422,28],[583,40,1422,36],[583,42,1422,38],[584,10,1423,6],[584,14,1423,10,"__DEV__"],[584,21,1423,17],[584,23,1423,19],[585,12,1424,8,"console"],[585,19,1424,15],[585,20,1424,16,"error"],[585,25,1424,21],[585,26,1425,10],[585,107,1426,8],[585,108,1426,9],[586,10,1427,6],[587,10,1429,6],[588,8,1430,4],[590,8,1432,4],[591,8,1433,4],[592,8,1434,4],[592,12,1434,10,"currentlyFocusedTextInput"],[592,37,1434,35],[592,40,1434,38,"TextInputState"],[592,63,1434,52],[592,64,1434,53,"currentlyFocusedInput"],[592,85,1434,74],[592,86,1434,75],[592,87,1434,76],[593,8,1435,4],[593,12,1436,6,"currentlyFocusedTextInput"],[593,37,1436,31],[593,41,1436,35],[593,45,1436,39],[593,49,1437,6,"_this"],[593,54,1437,6],[593,55,1437,11,"props"],[593,60,1437,16],[593,61,1437,17,"keyboardShouldPersistTaps"],[593,86,1437,42],[593,91,1437,47],[593,95,1437,51],[593,99,1438,6,"_this"],[593,104,1438,6],[593,105,1438,11,"props"],[593,110,1438,16],[593,111,1438,17,"keyboardShouldPersistTaps"],[593,136,1438,42],[593,141,1438,47],[593,149,1438,55],[593,153,1439,6,"_this"],[593,158,1439,6],[593,159,1439,11,"_keyboardIsDismissible"],[593,181,1439,33],[593,182,1439,34],[593,183,1439,35],[593,187,1440,6,"e"],[593,188,1440,7],[593,189,1440,8,"target"],[593,195,1440,14],[593,200,1440,19,"currentlyFocusedTextInput"],[593,225,1440,44],[593,229,1441,6],[593,230,1441,7,"_this"],[593,235,1441,7],[593,236,1441,12,"_observedScrollSinceBecomingResponder"],[593,273,1441,49],[593,277,1442,6],[593,278,1442,7,"_this"],[593,283,1442,7],[593,284,1442,12,"_becameResponderWhileAnimating"],[593,314,1442,42],[593,316,1443,6],[594,10,1444,6,"TextInputState"],[594,33,1444,20],[594,34,1444,21,"blurTextInput"],[594,47,1444,34],[594,48,1444,35,"currentlyFocusedTextInput"],[594,73,1444,60],[594,74,1444,61],[595,8,1445,4],[596,6,1446,2],[596,7,1446,3],[597,6,1448,2],[598,0,1449,0],[599,0,1450,0],[600,0,1451,0],[601,0,1452,0],[602,0,1453,0],[603,0,1454,0],[604,0,1455,0],[605,0,1456,0],[606,0,1457,0],[607,0,1458,0],[608,0,1459,0],[609,0,1460,0],[610,0,1461,0],[611,0,1462,0],[612,6,1448,2,"_this"],[612,11,1448,2],[612,12,1463,2,"_handleResponderTerminationRequest"],[612,46,1463,36],[612,49,1463,54],[612,61,1463,60],[613,8,1464,4],[613,15,1464,11],[613,16,1464,12,"_this"],[613,21,1464,12],[613,22,1464,17,"_observedScrollSinceBecomingResponder"],[613,59,1464,54],[614,6,1465,2],[614,7,1465,3],[615,6,1467,2],[616,0,1468,0],[617,0,1469,0],[618,6,1467,2,"_this"],[618,11,1467,2],[618,12,1470,2,"_handleScrollShouldSetResponder"],[618,43,1470,33],[618,46,1470,51],[618,58,1470,57],[619,8,1471,4],[620,8,1472,4],[620,12,1472,8,"_this"],[620,17,1472,8],[620,18,1472,13,"props"],[620,23,1472,18],[620,24,1472,19,"disableScrollViewPanResponder"],[620,53,1472,48],[620,58,1472,53],[620,62,1472,57],[620,64,1472,59],[621,10,1473,6],[621,17,1473,13],[621,22,1473,18],[622,8,1474,4],[623,8,1475,4],[623,15,1475,11,"_this"],[623,20,1475,11],[623,21,1475,16,"_isTouching"],[623,32,1475,27],[624,6,1476,2],[624,7,1476,3],[625,6,1478,2],[626,0,1479,0],[627,0,1480,0],[628,0,1481,0],[629,0,1482,0],[630,0,1483,0],[631,0,1484,0],[632,0,1485,0],[633,0,1486,0],[634,0,1487,0],[635,0,1488,0],[636,0,1489,0],[637,0,1490,0],[638,0,1491,0],[639,0,1492,0],[640,0,1493,0],[641,0,1494,0],[642,0,1495,0],[643,0,1496,0],[644,0,1497,0],[645,0,1498,0],[646,0,1499,0],[647,0,1500,0],[648,0,1501,0],[649,0,1502,0],[650,6,1478,2,"_this"],[650,11,1478,2],[650,12,1503,2,"_handleStartShouldSetResponder"],[650,42,1503,32],[650,45,1503,63],[650,55,1504,4,"e"],[650,56,1504,17],[650,58,1505,7],[651,8,1506,4],[652,8,1507,4],[652,12,1507,8,"_this"],[652,17,1507,8],[652,18,1507,13,"props"],[652,23,1507,18],[652,24,1507,19,"disableScrollViewPanResponder"],[652,53,1507,48],[652,58,1507,53],[652,62,1507,57],[652,64,1507,59],[653,10,1508,6],[653,17,1508,13],[653,22,1508,18],[654,8,1509,4],[655,8,1511,4],[655,12,1511,10,"currentlyFocusedInput"],[655,33,1511,31],[655,36,1511,34,"TextInputState"],[655,59,1511,48],[655,60,1511,49,"currentlyFocusedInput"],[655,81,1511,70],[655,82,1511,71],[655,83,1511,72],[656,8,1512,4],[656,12,1513,6,"_this"],[656,17,1513,6],[656,18,1513,11,"props"],[656,23,1513,16],[656,24,1513,17,"keyboardShouldPersistTaps"],[656,49,1513,42],[656,54,1513,47],[656,63,1513,56],[656,67,1514,6,"_this"],[656,72,1514,6],[656,73,1514,11,"_keyboardIsDismissible"],[656,95,1514,33],[656,96,1514,34],[656,97,1514,35],[656,101,1515,6,"e"],[656,102,1515,7],[656,103,1515,8,"target"],[656,109,1515,14],[656,114,1515,19,"currentlyFocusedInput"],[656,135,1515,40],[656,137,1516,6],[657,10,1517,6],[657,17,1517,13],[657,21,1517,17],[658,8,1518,4],[659,8,1519,4],[659,15,1519,11],[659,20,1519,16],[660,6,1520,2],[660,7,1520,3],[661,6,1522,2],[662,0,1523,0],[663,0,1524,0],[664,0,1525,0],[665,0,1526,0],[666,0,1527,0],[667,0,1528,0],[668,0,1529,0],[669,0,1530,0],[670,0,1531,0],[671,0,1532,0],[672,6,1522,2,"_this"],[672,11,1522,2],[672,12,1533,2,"_handleStartShouldSetResponderCapture"],[672,49,1533,39],[672,52,1533,70],[672,62,1534,4,"e"],[672,63,1534,17],[672,65,1535,7],[673,8,1536,4],[674,8,1537,4],[675,8,1538,4],[675,12,1538,8,"_this"],[675,17,1538,8],[675,18,1538,13,"_isAnimating"],[675,30,1538,25],[675,31,1538,26],[675,32,1538,27],[675,34,1538,29],[676,10,1539,6],[676,17,1539,13],[676,21,1539,17],[677,8,1540,4],[679,8,1542,4],[680,8,1543,4],[680,12,1543,8,"_this"],[680,17,1543,8],[680,18,1543,13,"props"],[680,23,1543,18],[680,24,1543,19,"disableScrollViewPanResponder"],[680,53,1543,48],[680,58,1543,53],[680,62,1543,57],[680,64,1543,59],[681,10,1544,6],[681,17,1544,13],[681,22,1544,18],[682,8,1545,4],[684,8,1547,4],[685,8,1548,4],[686,8,1549,4],[687,8,1550,4],[688,8,1551,4],[688,12,1551,11,"keyboardShouldPersistTaps"],[688,37,1551,36],[688,40,1551,40,"_this"],[688,45,1551,40],[688,46,1551,45,"props"],[688,51,1551,50],[688,52,1551,11,"keyboardShouldPersistTaps"],[688,77,1551,36],[689,8,1552,4],[689,12,1552,10,"keyboardNeverPersistTaps"],[689,36,1552,34],[689,39,1553,6],[689,40,1553,7,"keyboardShouldPersistTaps"],[689,65,1553,32],[689,69,1553,36,"keyboardShouldPersistTaps"],[689,94,1553,61],[689,99,1553,66],[689,106,1553,73],[690,8,1555,4],[690,12,1555,8],[690,19,1555,15,"e"],[690,20,1555,16],[690,21,1555,17,"target"],[690,27,1555,23],[690,32,1555,28],[690,40,1555,36],[690,42,1555,38],[691,10,1556,6],[691,14,1556,10,"__DEV__"],[691,21,1556,17],[691,23,1556,19],[692,12,1557,8,"console"],[692,19,1557,15],[692,20,1557,16,"error"],[692,25,1557,21],[692,26,1558,10],[692,107,1559,8],[692,108,1559,9],[693,10,1560,6],[694,10,1562,6],[694,17,1562,13],[694,22,1562,18],[695,8,1563,4],[697,8,1565,4],[698,8,1566,4],[698,12,1566,8,"_this"],[698,17,1566,8],[698,18,1566,13,"_softKeyboardIsDetached"],[698,41,1566,36],[698,42,1566,37],[698,43,1566,38],[698,45,1566,40],[699,10,1567,6],[699,17,1567,13],[699,22,1567,18],[700,8,1568,4],[701,8,1570,4],[701,12,1571,6,"keyboardNeverPersistTaps"],[701,36,1571,30],[701,40,1572,6,"_this"],[701,45,1572,6],[701,46,1572,11,"_keyboardIsDismissible"],[701,68,1572,33],[701,69,1572,34],[701,70,1572,35],[701,74,1573,6,"e"],[701,75,1573,7],[701,76,1573,8,"target"],[701,82,1573,14],[701,86,1573,18],[701,90,1573,22],[702,8,1574,6],[703,8,1575,6],[703,9,1575,7,"TextInputState"],[703,32,1575,21],[703,33,1575,22,"isTextInput"],[703,44,1575,33],[703,45,1575,34,"e"],[703,46,1575,35],[703,47,1575,36,"target"],[703,53,1575,42],[703,54,1575,43],[703,56,1576,6],[704,10,1577,6],[704,17,1577,13],[704,21,1577,17],[705,8,1578,4],[706,8,1580,4],[706,15,1580,11],[706,20,1580,16],[707,6,1581,2],[707,7,1581,3],[708,6,1583,2],[709,0,1584,0],[710,0,1585,0],[711,6,1583,2,"_this"],[711,11,1583,2],[711,12,1586,2,"_keyboardIsDismissible"],[711,34,1586,24],[711,37,1586,42],[711,49,1586,48],[712,8,1587,4],[712,12,1587,10,"currentlyFocusedInput"],[712,33,1587,31],[712,36,1587,34,"TextInputState"],[712,59,1587,48],[712,60,1587,49,"currentlyFocusedInput"],[712,81,1587,70],[712,82,1587,71],[712,83,1587,72],[714,8,1589,4],[715,8,1590,4],[716,8,1591,4],[717,8,1592,4],[718,8,1593,4],[719,8,1594,4],[719,12,1594,10,"hasFocusedTextInput"],[719,31,1594,29],[719,34,1595,6,"currentlyFocusedInput"],[719,55,1595,27],[719,59,1595,31],[719,63,1595,35],[719,67,1596,6,"TextInputState"],[719,90,1596,20],[719,91,1596,21,"isTextInput"],[719,102,1596,32],[719,103,1596,33,"currentlyFocusedInput"],[719,124,1596,54],[719,125,1596,55],[721,8,1598,4],[722,8,1599,4],[723,8,1600,4],[724,8,1601,4],[724,12,1601,10,"softKeyboardMayBeOpen"],[724,33,1601,31],[724,36,1602,6,"_this"],[724,41,1602,6],[724,42,1602,11,"_keyboardMetrics"],[724,58,1602,27],[724,62,1602,31],[724,66,1602,35],[724,70,1602,39,"_this"],[724,75,1602,39],[724,76,1602,44,"_keyboardEventsAreUnreliable"],[724,104,1602,72],[724,105,1602,73],[724,106,1602,74],[725,8,1604,4],[725,15,1604,11,"hasFocusedTextInput"],[725,34,1604,30],[725,38,1604,34,"softKeyboardMayBeOpen"],[725,59,1604,55],[726,6,1605,2],[726,7,1605,3],[727,6,1607,2],[728,0,1608,0],[729,0,1609,0],[730,0,1610,0],[731,0,1611,0],[732,6,1607,2,"_this"],[732,11,1607,2],[732,12,1612,2,"_softKeyboardIsDetached"],[732,35,1612,25],[732,38,1612,43],[732,50,1612,49],[733,8,1613,4],[733,15,1613,11,"_this"],[733,20,1613,11],[733,21,1613,16,"_keyboardMetrics"],[733,37,1613,32],[733,41,1613,36],[733,45,1613,40],[733,49,1613,44,"_this"],[733,54,1613,44],[733,55,1613,49,"_keyboardMetrics"],[733,71,1613,65],[733,72,1613,66,"height"],[733,78,1613,72],[733,83,1613,77],[733,84,1613,78],[734,6,1614,2],[734,7,1614,3],[735,6,1614,3,"_this"],[735,11,1614,3],[735,12,1616,2,"_keyboardEventsAreUnreliable"],[735,40,1616,30],[735,43,1616,48],[735,55,1616,54],[736,8,1617,4],[737,8,1618,4],[738,8,1619,4],[738,15,1619,11,"Platform"],[738,32,1619,19],[738,33,1619,20,"OS"],[738,35,1619,22],[738,40,1619,27],[738,49,1619,36],[738,53,1619,40,"Platform"],[738,70,1619,48],[738,71,1619,49,"Version"],[738,78,1619,56],[738,81,1619,59],[738,83,1619,61],[739,6,1620,2],[739,7,1620,3],[740,6,1622,2],[741,0,1623,0],[742,0,1624,0],[743,0,1625,0],[744,0,1626,0],[745,6,1622,2,"_this"],[745,11,1622,2],[745,12,1627,2,"_handleTouchEnd"],[745,27,1627,17],[745,30,1627,45],[745,40,1627,46,"e"],[745,41,1627,59],[745,43,1627,64],[746,8,1628,4],[746,12,1628,10,"nativeEvent"],[746,23,1628,21],[746,26,1628,24,"e"],[746,27,1628,25],[746,28,1628,26,"nativeEvent"],[746,39,1628,37],[747,8,1629,4,"_this"],[747,13,1629,4],[747,14,1629,9,"_isTouching"],[747,25,1629,20],[747,28,1629,23,"nativeEvent"],[747,39,1629,34],[747,40,1629,35,"touches"],[747,47,1629,42],[747,48,1629,43,"length"],[747,54,1629,49],[747,59,1629,54],[747,60,1629,55],[748,8,1631,4],[748,12,1631,11,"keyboardShouldPersistTaps"],[748,37,1631,36],[748,40,1631,40,"_this"],[748,45,1631,40],[748,46,1631,45,"props"],[748,51,1631,50],[748,52,1631,11,"keyboardShouldPersistTaps"],[748,77,1631,36],[749,8,1632,4],[749,12,1632,10,"keyboardNeverPersistsTaps"],[749,37,1632,35],[749,40,1633,6],[749,41,1633,7,"keyboardShouldPersistTaps"],[749,66,1633,32],[749,70,1633,36,"keyboardShouldPersistTaps"],[749,95,1633,61],[749,100,1633,66],[749,107,1633,73],[751,8,1635,4],[752,8,1636,4],[753,8,1637,4],[754,8,1638,4],[754,12,1638,10,"currentlyFocusedTextInput"],[754,37,1638,35],[754,40,1638,38,"TextInputState"],[754,63,1638,52],[754,64,1638,53,"currentlyFocusedInput"],[754,85,1638,74],[754,86,1638,75],[754,87,1638,76],[755,8,1639,4],[755,12,1640,6,"currentlyFocusedTextInput"],[755,37,1640,31],[755,41,1640,35],[755,45,1640,39],[755,49,1641,6,"e"],[755,50,1641,7],[755,51,1641,8,"target"],[755,57,1641,14],[755,62,1641,19,"currentlyFocusedTextInput"],[755,87,1641,44],[755,91,1642,6,"_this"],[755,96,1642,6],[755,97,1642,11,"_softKeyboardIsDetached"],[755,120,1642,34],[755,121,1642,35],[755,122,1642,36],[755,126,1643,6,"_this"],[755,131,1643,6],[755,132,1643,11,"_keyboardIsDismissible"],[755,154,1643,33],[755,155,1643,34],[755,156,1643,35],[755,160,1644,6,"keyboardNeverPersistsTaps"],[755,185,1644,31],[755,187,1645,6],[756,10,1646,6,"TextInputState"],[756,33,1646,20],[756,34,1646,21,"blurTextInput"],[756,47,1646,34],[756,48,1646,35,"currentlyFocusedTextInput"],[756,73,1646,60],[756,74,1646,61],[757,8,1647,4],[758,8,1649,4,"_this"],[758,13,1649,4],[758,14,1649,9,"props"],[758,19,1649,14],[758,20,1649,15,"onTouchEnd"],[758,30,1649,25],[758,34,1649,29,"_this"],[758,39,1649,29],[758,40,1649,34,"props"],[758,45,1649,39],[758,46,1649,40,"onTouchEnd"],[758,56,1649,50],[758,57,1649,51,"e"],[758,58,1649,52],[758,59,1649,53],[759,6,1650,2],[759,7,1650,3],[760,6,1652,2],[761,0,1653,0],[762,0,1654,0],[763,0,1655,0],[764,0,1656,0],[765,6,1652,2,"_this"],[765,11,1652,2],[765,12,1657,2,"_handleTouchCancel"],[765,30,1657,20],[765,33,1657,48],[765,43,1657,49,"e"],[765,44,1657,62],[765,46,1657,67],[766,8,1658,4,"_this"],[766,13,1658,4],[766,14,1658,9,"_isTouching"],[766,25,1658,20],[766,28,1658,23],[766,33,1658,28],[767,8,1659,4,"_this"],[767,13,1659,4],[767,14,1659,9,"props"],[767,19,1659,14],[767,20,1659,15,"onTouchCancel"],[767,33,1659,28],[767,37,1659,32,"_this"],[767,42,1659,32],[767,43,1659,37,"props"],[767,48,1659,42],[767,49,1659,43,"onTouchCancel"],[767,62,1659,56],[767,63,1659,57,"e"],[767,64,1659,58],[767,65,1659,59],[768,6,1660,2],[768,7,1660,3],[769,6,1662,2],[770,0,1663,0],[771,0,1664,0],[772,0,1665,0],[773,0,1666,0],[774,0,1667,0],[775,0,1668,0],[776,0,1669,0],[777,0,1670,0],[778,0,1671,0],[779,0,1672,0],[780,6,1662,2,"_this"],[780,11,1662,2],[780,12,1673,2,"_handleTouchStart"],[780,29,1673,19],[780,32,1673,47],[780,42,1673,48,"e"],[780,43,1673,61],[780,45,1673,66],[781,8,1674,4,"_this"],[781,13,1674,4],[781,14,1674,9,"_isTouching"],[781,25,1674,20],[781,28,1674,23],[781,32,1674,27],[782,8,1675,4,"_this"],[782,13,1675,4],[782,14,1675,9,"props"],[782,19,1675,14],[782,20,1675,15,"onTouchStart"],[782,32,1675,27],[782,36,1675,31,"_this"],[782,41,1675,31],[782,42,1675,36,"props"],[782,47,1675,41],[782,48,1675,42,"onTouchStart"],[782,60,1675,54],[782,61,1675,55,"e"],[782,62,1675,56],[782,63,1675,57],[783,6,1676,2],[783,7,1676,3],[784,6,1678,2],[785,0,1679,0],[786,0,1680,0],[787,0,1681,0],[788,0,1682,0],[789,0,1683,0],[790,0,1684,0],[791,0,1685,0],[792,0,1686,0],[793,0,1687,0],[794,0,1688,0],[795,6,1678,2,"_this"],[795,11,1678,2],[795,12,1689,2,"_handleTouchMove"],[795,28,1689,18],[795,31,1689,46],[795,41,1689,47,"e"],[795,42,1689,60],[795,44,1689,65],[796,8,1690,4,"_this"],[796,13,1690,4],[796,14,1690,9,"props"],[796,19,1690,14],[796,20,1690,15,"onTouchMove"],[796,31,1690,26],[796,35,1690,30,"_this"],[796,40,1690,30],[796,41,1690,35,"props"],[796,46,1690,40],[796,47,1690,41,"onTouchMove"],[796,58,1690,52],[796,59,1690,53,"e"],[796,60,1690,54],[796,61,1690,55],[797,6,1691,2],[797,7,1691,3],[798,6,732,4,"_this"],[798,11,732,4],[798,12,732,9,"_scrollAnimatedValue"],[798,32,732,29],[798,35,732,32],[798,39,732,36,"AnimatedImplementation"],[798,70,732,58],[798,71,732,59,"Value"],[798,76,732,64],[798,78,732,64,"_this$props$contentOf"],[798,99,732,64],[798,103,732,64,"_this$props$contentOf2"],[798,125,732,64],[798,128,733,6,"_this"],[798,133,733,6],[798,134,733,11,"props"],[798,139,733,16],[798,140,733,17,"contentOffset"],[798,153,733,30],[798,174,733,6,"_this$props$contentOf2"],[798,196,733,6],[798,197,733,32,"y"],[798,198,733,33],[798,210,733,33,"_this$props$contentOf"],[798,231,733,33],[798,234,733,37],[798,235,734,4],[798,236,734,5],[799,6,735,4,"_this"],[799,11,735,4],[799,12,735,9,"_scrollAnimatedValue"],[799,32,735,29],[799,33,735,30,"setOffset"],[799,42,735,39],[799,44,735,39,"_this$props$contentIn"],[799,65,735,39],[799,69,735,39,"_this$props$contentIn2"],[799,91,735,39],[799,94,735,40,"_this"],[799,99,735,40],[799,100,735,45,"props"],[799,105,735,50],[799,106,735,51,"contentInset"],[799,118,735,63],[799,139,735,40,"_this$props$contentIn2"],[799,161,735,40],[799,162,735,65,"top"],[799,165,735,68],[799,177,735,68,"_this$props$contentIn"],[799,198,735,68],[799,201,735,72],[799,202,735,73],[799,203,735,74],[800,6,735,75],[800,13,735,75,"_this"],[800,18,735,75],[801,4,736,2],[802,4,736,3],[802,8,736,3,"_inherits2"],[802,18,736,3],[802,19,736,3,"default"],[802,26,736,3],[802,28,736,3,"ScrollView"],[802,38,736,3],[802,40,736,3,"_React$Component"],[802,56,736,3],[803,4,736,3],[803,15,736,3,"_createClass2"],[803,28,736,3],[803,29,736,3,"default"],[803,36,736,3],[803,38,736,3,"ScrollView"],[803,48,736,3],[804,6,736,3,"key"],[804,9,736,3],[805,6,736,3,"value"],[805,11,736,3],[805,13,771,2],[805,22,771,2,"componentDidMount"],[805,39,771,19,"componentDidMount"],[805,40,771,19],[805,42,771,22],[806,8,772,4],[806,12,772,8],[806,19,772,15],[806,23,772,19],[806,24,772,20,"props"],[806,29,772,25],[806,30,772,26,"keyboardShouldPersistTaps"],[806,55,772,51],[806,60,772,56],[806,69,772,65],[806,71,772,67],[807,10,773,6,"console"],[807,17,773,13],[807,18,773,14,"warn"],[807,22,773,18],[807,23,774,8],[807,54,775,10],[807,58,775,14],[807,59,775,15,"props"],[807,64,775,20],[807,65,775,21,"keyboardShouldPersistTaps"],[807,90,775,46],[807,95,775,51],[807,99,775,55],[807,102,775,58],[807,108,775,64],[807,111,775,67],[807,118,775,74],[807,138,776,28],[807,141,777,10],[807,176,778,12],[807,180,778,16],[807,181,778,17,"props"],[807,186,778,22],[807,187,778,23,"keyboardShouldPersistTaps"],[807,212,778,48],[807,215,778,51],[807,223,778,59],[807,226,778,62],[807,233,778,69],[807,245,780,6],[807,246,780,7],[808,8,781,4],[809,8,783,4],[809,12,783,8],[809,13,783,9,"_keyboardMetrics"],[809,29,783,25],[809,32,783,28,"Keyboard"],[809,49,783,36],[809,50,783,37,"metrics"],[809,57,783,44],[809,58,783,45],[809,59,783,46],[810,8,784,4],[810,12,784,8],[810,13,784,9,"_additionalScrollOffset"],[810,36,784,32],[810,39,784,35],[810,40,784,36],[811,8,786,4],[811,12,786,8],[811,13,786,9,"_subscriptionKeyboardWillShow"],[811,42,786,38],[811,45,786,41,"Keyboard"],[811,62,786,49],[811,63,786,50,"addListener"],[811,74,786,61],[811,75,787,6],[811,93,787,24],[811,95,788,6],[811,99,788,10],[811,100,788,11,"scrollResponderKeyboardWillShow"],[811,131,789,4],[811,132,789,5],[812,8,790,4],[812,12,790,8],[812,13,790,9,"_subscriptionKeyboardWillHide"],[812,42,790,38],[812,45,790,41,"Keyboard"],[812,62,790,49],[812,63,790,50,"addListener"],[812,74,790,61],[812,75,791,6],[812,93,791,24],[812,95,792,6],[812,99,792,10],[812,100,792,11,"scrollResponderKeyboardWillHide"],[812,131,793,4],[812,132,793,5],[813,8,794,4],[813,12,794,8],[813,13,794,9,"_subscriptionKeyboardDidShow"],[813,41,794,37],[813,44,794,40,"Keyboard"],[813,61,794,48],[813,62,794,49,"addListener"],[813,73,794,60],[813,74,795,6],[813,91,795,23],[813,93,796,6],[813,97,796,10],[813,98,796,11,"scrollResponderKeyboardDidShow"],[813,128,797,4],[813,129,797,5],[814,8,798,4],[814,12,798,8],[814,13,798,9,"_subscriptionKeyboardDidHide"],[814,41,798,37],[814,44,798,40,"Keyboard"],[814,61,798,48],[814,62,798,49,"addListener"],[814,73,798,60],[814,74,799,6],[814,91,799,23],[814,93,800,6],[814,97,800,10],[814,98,800,11,"scrollResponderKeyboardDidHide"],[814,128,801,4],[814,129,801,5],[815,8,803,4],[815,12,803,8],[815,13,803,9,"_updateAnimatedNodeAttachment"],[815,42,803,38],[815,43,803,39],[815,44,803,40],[816,6,804,2],[817,4,804,3],[818,6,804,3,"key"],[818,9,804,3],[819,6,804,3,"value"],[819,11,804,3],[819,13,806,2],[819,22,806,2,"componentDidUpdate"],[819,40,806,20,"componentDidUpdate"],[819,41,806,21,"prevProps"],[819,50,806,37],[819,52,806,39],[820,8,807,4],[820,12,807,10,"prevContentInsetTop"],[820,31,807,29],[820,34,807,32,"prevProps"],[820,43,807,41],[820,44,807,42,"contentInset"],[820,56,807,54],[820,59,808,8,"prevProps"],[820,68,808,17],[820,69,808,18,"contentInset"],[820,81,808,30],[820,82,808,31,"top"],[820,85,808,34],[820,88,809,8],[820,89,809,9],[821,8,810,4],[821,12,810,10,"newContentInsetTop"],[821,30,810,28],[821,33,810,31],[821,37,810,35],[821,38,810,36,"props"],[821,43,810,41],[821,44,810,42,"contentInset"],[821,56,810,54],[821,59,811,8],[821,63,811,12],[821,64,811,13,"props"],[821,69,811,18],[821,70,811,19,"contentInset"],[821,82,811,31],[821,83,811,32,"top"],[821,86,811,35],[821,89,812,8],[821,90,812,9],[822,8,813,4],[822,12,813,8,"prevContentInsetTop"],[822,31,813,27],[822,36,813,32,"newContentInsetTop"],[822,54,813,50],[822,56,813,52],[823,10,814,6],[823,14,814,10],[823,15,814,11,"_scrollAnimatedValue"],[823,35,814,31],[823,36,814,32,"setOffset"],[823,45,814,41],[823,46,814,42,"newContentInsetTop"],[823,64,814,60],[823,68,814,64],[823,69,814,65],[823,70,814,66],[824,8,815,4],[825,8,817,4],[825,12,817,8],[825,13,817,9,"_updateAnimatedNodeAttachment"],[825,42,817,38],[825,43,817,39],[825,44,817,40],[826,6,818,2],[827,4,818,3],[828,6,818,3,"key"],[828,9,818,3],[829,6,818,3,"value"],[829,11,818,3],[829,13,820,2],[829,22,820,2,"componentWillUnmount"],[829,42,820,22,"componentWillUnmount"],[829,43,820,22],[829,45,820,25],[830,8,820,25],[830,12,820,25,"_this$state$onScrollE2"],[830,34,820,25],[831,8,821,4],[831,12,821,8],[831,16,821,12],[831,17,821,13,"_subscriptionKeyboardWillShow"],[831,46,821,42],[831,50,821,46],[831,54,821,50],[831,56,821,52],[832,10,822,6],[832,14,822,10],[832,15,822,11,"_subscriptionKeyboardWillShow"],[832,44,822,40],[832,45,822,41,"remove"],[832,51,822,47],[832,52,822,48],[832,53,822,49],[833,8,823,4],[834,8,824,4],[834,12,824,8],[834,16,824,12],[834,17,824,13,"_subscriptionKeyboardWillHide"],[834,46,824,42],[834,50,824,46],[834,54,824,50],[834,56,824,52],[835,10,825,6],[835,14,825,10],[835,15,825,11,"_subscriptionKeyboardWillHide"],[835,44,825,40],[835,45,825,41,"remove"],[835,51,825,47],[835,52,825,48],[835,53,825,49],[836,8,826,4],[837,8,827,4],[837,12,827,8],[837,16,827,12],[837,17,827,13,"_subscriptionKeyboardDidShow"],[837,45,827,41],[837,49,827,45],[837,53,827,49],[837,55,827,51],[838,10,828,6],[838,14,828,10],[838,15,828,11,"_subscriptionKeyboardDidShow"],[838,43,828,39],[838,44,828,40,"remove"],[838,50,828,46],[838,51,828,47],[838,52,828,48],[839,8,829,4],[840,8,830,4],[840,12,830,8],[840,16,830,12],[840,17,830,13,"_subscriptionKeyboardDidHide"],[840,45,830,41],[840,49,830,45],[840,53,830,49],[840,55,830,51],[841,10,831,6],[841,14,831,10],[841,15,831,11,"_subscriptionKeyboardDidHide"],[841,43,831,39],[841,44,831,40,"remove"],[841,50,831,46],[841,51,831,47],[841,52,831,48],[842,8,832,4],[843,8,834,4],[843,12,834,8],[843,16,834,12],[843,17,834,13,"_scrollAnimatedValueAttachment"],[843,47,834,43],[843,49,834,45],[844,10,835,6],[844,14,835,10],[844,15,835,11,"_scrollAnimatedValueAttachment"],[844,45,835,41],[844,46,835,42,"detach"],[844,52,835,48],[844,53,835,49],[844,54,835,50],[845,8,836,4],[846,8,838,4],[846,9,838,4,"_this$state$onScrollE2"],[846,31,838,4],[846,38,838,8],[846,39,838,9,"state"],[846,44,838,14],[846,45,838,15,"onScrollEmitter"],[846,60,838,30],[846,73,838,4,"_this$state$onScrollE2"],[846,95,838,4],[846,96,838,32,"removeAllListeners"],[846,114,838,50],[846,115,838,51],[846,116,838,52],[847,6,839,2],[848,4,839,3],[849,6,839,3,"key"],[849,9,839,3],[850,6,839,3,"value"],[850,11,839,3],[850,13,1085,2],[850,22,1085,2,"_textInputFocusError"],[850,42,1085,22,"_textInputFocusError"],[850,43,1085,22],[850,45,1085,25],[851,8,1086,4,"console"],[851,15,1086,11],[851,16,1086,12,"warn"],[851,20,1086,16],[851,21,1086,17],[851,50,1086,46],[851,51,1086,47],[852,6,1087,2],[853,4,1087,3],[854,6,1087,3,"key"],[854,9,1087,3],[855,6,1087,3,"value"],[855,11,1087,3],[855,13,1140,2],[855,22,1140,2,"_getKeyForIndex"],[855,37,1140,17,"_getKeyForIndex"],[855,38,1140,18,"index"],[855,43,1140,35],[855,45,1140,37,"childArray"],[855,55,1140,59],[855,57,1140,73],[856,8,1141,4],[856,12,1141,10,"child"],[856,17,1141,15],[856,20,1141,18,"childArray"],[856,30,1141,28],[856,31,1141,29,"index"],[856,36,1141,34],[856,37,1141,35],[857,8,1142,4],[857,15,1142,11,"child"],[857,20,1142,16],[857,24,1142,20,"child"],[857,29,1142,25],[857,30,1142,26,"key"],[857,33,1142,29],[858,6,1143,2],[859,4,1143,3],[860,6,1143,3,"key"],[860,9,1143,3],[861,6,1143,3,"value"],[861,11,1143,3],[861,13,1145,2],[861,22,1145,2,"_updateAnimatedNodeAttachment"],[861,51,1145,31,"_updateAnimatedNodeAttachment"],[861,52,1145,31],[861,54,1145,34],[862,8,1146,4],[862,12,1146,8],[862,16,1146,12],[862,17,1146,13,"_scrollAnimatedValueAttachment"],[862,47,1146,43],[862,49,1146,45],[863,10,1147,6],[863,14,1147,10],[863,15,1147,11,"_scrollAnimatedValueAttachment"],[863,45,1147,41],[863,46,1147,42,"detach"],[863,52,1147,48],[863,53,1147,49],[863,54,1147,50],[864,8,1148,4],[865,8,1149,4],[865,12,1150,6],[865,16,1150,10],[865,17,1150,11,"props"],[865,22,1150,16],[865,23,1150,17,"stickyHeaderIndices"],[865,42,1150,36],[865,46,1151,6],[865,50,1151,10],[865,51,1151,11,"props"],[865,56,1151,16],[865,57,1151,17,"stickyHeaderIndices"],[865,76,1151,36],[865,77,1151,37,"length"],[865,83,1151,43],[865,86,1151,46],[865,87,1151,47],[865,89,1152,6],[866,10,1153,6],[866,14,1153,10],[866,15,1153,11,"_scrollAnimatedValueAttachment"],[866,45,1153,41],[866,48,1154,8,"AnimatedImplementation"],[866,79,1154,30],[866,80,1154,31,"attachNativeEvent"],[866,97,1154,48],[866,98,1155,10],[866,102,1155,14],[866,103,1155,15,"_scrollView"],[866,114,1155,26],[866,115,1155,27,"nativeInstance"],[866,129,1155,41],[866,131,1156,10],[866,141,1156,20],[866,143,1157,10],[866,144,1157,11],[867,12,1157,12,"nativeEvent"],[867,23,1157,23],[867,25,1157,25],[868,14,1157,26,"contentOffset"],[868,27,1157,39],[868,29,1157,41],[869,16,1157,42,"y"],[869,17,1157,43],[869,19,1157,45],[869,23,1157,49],[869,24,1157,50,"_scrollAnimatedValue"],[870,14,1157,70],[871,12,1157,71],[872,10,1157,72],[872,11,1157,73],[872,12,1158,8],[872,13,1158,9],[873,8,1159,4],[874,6,1160,2],[875,4,1160,3],[876,6,1160,3,"key"],[876,9,1160,3],[877,6,1160,3,"value"],[877,11,1160,3],[877,13,1162,2],[877,22,1162,2,"_setStickyHeaderRef"],[877,41,1162,21,"_setStickyHeaderRef"],[877,42,1163,4,"key"],[877,45,1163,15],[877,47,1164,4,"ref"],[877,50,1164,53],[877,52,1165,4],[878,8,1166,4],[878,12,1166,8,"ref"],[878,15,1166,11],[878,17,1166,13],[879,10,1167,6],[879,14,1167,10],[879,15,1167,11,"_stickyHeaderRefs"],[879,32,1167,28],[879,33,1167,29,"set"],[879,36,1167,32],[879,37,1167,33,"key"],[879,40,1167,36],[879,42,1167,38,"ref"],[879,45,1167,41],[879,46,1167,42],[880,8,1168,4],[880,9,1168,5],[880,15,1168,11],[881,10,1169,6],[881,14,1169,10],[881,15,1169,11,"_stickyHeaderRefs"],[881,32,1169,28],[881,33,1169,29,"delete"],[881,39,1169,35],[881,40,1169,36,"key"],[881,43,1169,39],[881,44,1169,40],[882,8,1170,4],[883,6,1171,2],[884,4,1171,3],[885,6,1171,3,"key"],[885,9,1171,3],[886,6,1171,3,"value"],[886,11,1171,3],[886,13,1173,2],[886,22,1173,2,"_onStickyHeaderLayout"],[886,43,1173,23,"_onStickyHeaderLayout"],[886,44,1173,24,"index"],[886,49,1173,41],[886,51,1173,43,"event"],[886,56,1173,60],[886,58,1173,62,"key"],[886,61,1173,77],[886,63,1173,79],[887,8,1174,4],[887,12,1174,11,"stickyHeaderIndices"],[887,31,1174,30],[887,34,1174,34],[887,38,1174,38],[887,39,1174,39,"props"],[887,44,1174,44],[887,45,1174,11,"stickyHeaderIndices"],[887,64,1174,30],[888,8,1175,4],[888,12,1175,8],[888,13,1175,9,"stickyHeaderIndices"],[888,32,1175,28],[888,34,1175,30],[889,10,1176,6],[890,8,1177,4],[891,8,1178,4],[891,12,1178,10,"childArray"],[891,22,1178,20],[891,25,1178,23,"React"],[891,30,1178,28],[891,31,1178,29,"Children"],[891,39,1178,37],[891,40,1178,38,"toArray"],[891,47,1178,45],[891,48,1178,58],[891,52,1178,62],[891,53,1178,63,"props"],[891,58,1178,68],[891,59,1178,69,"children"],[891,67,1178,77],[891,68,1178,78],[892,8,1179,4],[892,12,1179,8,"key"],[892,15,1179,11],[892,20,1179,16],[892,24,1179,20],[892,25,1179,21,"_getKeyForIndex"],[892,40,1179,36],[892,41,1179,37,"index"],[892,46,1179,42],[892,48,1179,44,"childArray"],[892,58,1179,54],[892,59,1179,55],[892,61,1179,57],[893,10,1180,6],[894,10,1181,6],[895,8,1182,4],[896,8,1184,4],[896,12,1184,10,"layoutY"],[896,19,1184,17],[896,22,1184,20,"event"],[896,27,1184,25],[896,28,1184,26,"nativeEvent"],[896,39,1184,37],[896,40,1184,38,"layout"],[896,46,1184,44],[896,47,1184,45,"y"],[896,48,1184,46],[897,8,1185,4],[897,12,1185,8],[897,13,1185,9,"_headerLayoutYs"],[897,28,1185,24],[897,29,1185,25,"set"],[897,32,1185,28],[897,33,1185,29,"key"],[897,36,1185,32],[897,38,1185,34,"layoutY"],[897,45,1185,41],[897,46,1185,42],[898,8,1187,4],[898,12,1187,10,"indexOfIndex"],[898,24,1187,22],[898,27,1187,25,"stickyHeaderIndices"],[898,46,1187,44],[898,47,1187,45,"indexOf"],[898,54,1187,52],[898,55,1187,53,"index"],[898,60,1187,58],[898,61,1187,59],[899,8,1188,4],[899,12,1188,10,"previousHeaderIndex"],[899,31,1188,29],[899,34,1188,32,"stickyHeaderIndices"],[899,53,1188,51],[899,54,1188,52,"indexOfIndex"],[899,66,1188,64],[899,69,1188,67],[899,70,1188,68],[899,71,1188,69],[900,8,1189,4],[900,12,1189,8,"previousHeaderIndex"],[900,31,1189,27],[900,35,1189,31],[900,39,1189,35],[900,41,1189,37],[901,10,1190,6],[901,14,1190,12,"previousHeader"],[901,28,1190,26],[901,31,1190,29],[901,35,1190,33],[901,36,1190,34,"_stickyHeaderRefs"],[901,53,1190,51],[901,54,1190,52,"get"],[901,57,1190,55],[901,58,1191,8],[901,62,1191,12],[901,63,1191,13,"_getKeyForIndex"],[901,78,1191,28],[901,79,1191,29,"previousHeaderIndex"],[901,98,1191,48],[901,100,1191,50,"childArray"],[901,110,1191,60],[901,111,1192,6],[901,112,1192,7],[902,10,1193,6,"previousHeader"],[902,24,1193,20],[902,28,1194,8,"previousHeader"],[902,42,1194,22],[902,43,1194,23,"setNextHeaderY"],[902,57,1194,37],[902,61,1195,8,"previousHeader"],[902,75,1195,22],[902,76,1195,23,"setNextHeaderY"],[902,90,1195,37],[902,91,1195,38,"layoutY"],[902,98,1195,45],[902,99,1195,46],[903,8,1196,4],[904,6,1197,2],[905,4,1197,3],[906,6,1197,3,"key"],[906,9,1197,3],[907,6,1197,3,"value"],[907,11,1197,3],[907,13,1693,2],[907,22,1693,2,"render"],[907,28,1693,8,"render"],[907,29,1693,8],[907,31,1693,47],[908,8,1693,47],[908,12,1693,47,"_this2"],[908,18,1693,47],[909,8,1694,4],[909,12,1694,4,"_ref3"],[909,17,1694,4],[909,20,1695,6],[909,24,1695,10],[909,25,1695,11,"props"],[909,30,1695,16],[909,31,1695,17,"horizontal"],[909,41,1695,27],[909,46,1695,32],[909,50,1695,36],[909,53,1696,10,"NativeHorizontalScrollViewTuple"],[909,84,1696,41],[909,87,1697,10,"NativeVerticalScrollViewTuple"],[909,116,1697,39],[910,10,1697,39,"_ref4"],[910,15,1697,39],[910,22,1697,39,"_slicedToArray2"],[910,37,1697,39],[910,38,1697,39,"default"],[910,45,1697,39],[910,47,1697,39,"_ref3"],[910,52,1697,39],[911,10,1694,11,"NativeDirectionalScrollView"],[911,37,1694,38],[911,40,1694,38,"_ref4"],[911,45,1694,38],[912,10,1694,40,"NativeDirectionalScrollContentView"],[912,44,1694,74],[912,47,1694,74,"_ref4"],[912,52,1694,74],[913,8,1699,4],[913,12,1699,10,"contentContainerStyle"],[913,33,1699,31],[913,36,1699,34],[913,37,1700,6],[913,41,1700,10],[913,42,1700,11,"props"],[913,47,1700,16],[913,48,1700,17,"horizontal"],[913,58,1700,27],[913,63,1700,32],[913,67,1700,36],[913,71,1700,40,"styles"],[913,77,1700,46],[913,78,1700,47,"contentContainerHorizontal"],[913,104,1700,73],[913,106,1701,6],[913,110,1701,10],[913,111,1701,11,"props"],[913,116,1701,16],[913,117,1701,17,"contentContainerStyle"],[913,138,1701,38],[913,139,1702,5],[914,8,1703,4],[914,12,1703,8,"__DEV__"],[914,19,1703,15],[914,23,1703,19],[914,27,1703,23],[914,28,1703,24,"props"],[914,33,1703,29],[914,34,1703,30,"style"],[914,39,1703,35],[914,44,1703,40,"undefined"],[914,53,1703,49],[914,55,1703,51],[915,10,1704,6],[916,10,1705,6],[916,14,1705,12,"style"],[916,19,1705,17],[916,22,1705,20],[916,26,1705,20,"flattenStyle"],[916,47,1705,32],[916,49,1705,33],[916,53,1705,37],[916,54,1705,38,"props"],[916,59,1705,43],[916,60,1705,44,"style"],[916,65,1705,49],[916,66,1705,50],[917,10,1706,6],[917,14,1706,12,"childLayoutProps"],[917,30,1706,28],[917,33,1706,31],[917,34,1706,32],[917,46,1706,44],[917,48,1706,46],[917,64,1706,62],[917,65,1706,63],[917,66,1706,64,"filter"],[917,72,1706,70],[918,10,1707,8],[919,10,1708,8],[919,20,1708,8,"prop"],[919,24,1708,12],[920,12,1708,12],[920,19,1708,16,"style"],[920,24,1708,21],[920,28,1708,25,"style"],[920,33,1708,30],[920,34,1708,31,"prop"],[920,38,1708,35],[920,39,1708,36],[920,44,1708,41,"undefined"],[920,53,1708,50],[921,10,1708,50],[921,11,1709,6],[921,12,1709,7],[922,10,1710,6],[922,14,1710,6,"invariant"],[922,32,1710,15],[922,34,1711,8,"childLayoutProps"],[922,50,1711,24],[922,51,1711,25,"length"],[922,57,1711,31],[922,62,1711,36],[922,63,1711,37],[922,65,1712,8],[922,92,1712,35],[922,95,1713,10,"JSON"],[922,99,1713,14],[922,100,1713,15,"stringify"],[922,109,1713,24],[922,110,1713,25,"childLayoutProps"],[922,126,1713,41],[922,127,1713,42],[922,130,1714,10],[922,189,1715,6],[922,190,1715,7],[923,8,1716,4],[924,8,1718,4],[924,12,1718,10,"contentSizeChangeProps"],[924,34,1718,32],[924,37,1719,6],[924,41,1719,10],[924,42,1719,11,"props"],[924,47,1719,16],[924,48,1719,17,"onContentSizeChange"],[924,67,1719,36],[924,71,1719,40],[924,75,1719,44],[924,78,1720,10],[924,82,1720,14],[924,85,1721,10],[925,10,1722,12,"onLayout"],[925,18,1722,20],[925,20,1722,22],[925,24,1722,26],[925,25,1722,27,"_handleContentOnLayout"],[926,8,1723,10],[926,9,1723,11],[927,8,1725,4],[927,12,1725,11,"stickyHeaderIndices"],[927,31,1725,30],[927,34,1725,34],[927,38,1725,38],[927,39,1725,39,"props"],[927,44,1725,44],[927,45,1725,11,"stickyHeaderIndices"],[927,64,1725,30],[928,8,1726,4],[928,12,1726,8,"children"],[928,20,1726,16],[928,23,1726,19],[928,27,1726,23],[928,28,1726,24,"props"],[928,33,1726,29],[928,34,1726,30,"children"],[928,42,1726,38],[929,8,1727,4],[930,0,1728,0],[931,0,1729,0],[932,0,1730,0],[933,8,1731,4,"children"],[933,16,1731,12],[933,19,1731,15,"React"],[933,24,1731,20],[933,25,1731,21,"Children"],[933,33,1731,29],[933,34,1731,30,"toArray"],[933,41,1731,37],[933,42,1731,50,"children"],[933,50,1731,58],[933,51,1731,59],[934,8,1733,4],[934,12,1733,8,"stickyHeaderIndices"],[934,31,1733,27],[934,35,1733,31],[934,39,1733,35],[934,43,1733,39,"stickyHeaderIndices"],[934,62,1733,58],[934,63,1733,59,"length"],[934,69,1733,65],[934,72,1733,68],[934,73,1733,69],[934,75,1733,71],[935,10,1734,6,"children"],[935,18,1734,14],[935,21,1734,17,"children"],[935,29,1734,25],[935,30,1734,26,"map"],[935,33,1734,29],[935,34,1734,30],[935,44,1734,31,"child"],[935,49,1734,36],[935,51,1734,38,"index"],[935,56,1734,43],[935,58,1734,48],[936,12,1735,8],[936,16,1735,14,"indexOfIndex"],[936,28,1735,26],[936,31,1735,29,"child"],[936,36,1735,34],[936,39,1735,37,"stickyHeaderIndices"],[936,58,1735,56],[936,59,1735,57,"indexOf"],[936,66,1735,64],[936,67,1735,65,"index"],[936,72,1735,70],[936,73,1735,71],[936,76,1735,74],[936,77,1735,75],[936,78,1735,76],[937,12,1736,8],[937,16,1736,12,"indexOfIndex"],[937,28,1736,24],[937,31,1736,27],[937,32,1736,28],[937,33,1736,29],[937,35,1736,31],[938,14,1737,10],[938,18,1737,16,"key"],[938,21,1737,19],[938,24,1737,22,"child"],[938,29,1737,27],[938,30,1737,28,"key"],[938,33,1737,31],[939,14,1738,10],[939,18,1738,16,"nextIndex"],[939,27,1738,25],[939,30,1738,28,"stickyHeaderIndices"],[939,49,1738,47],[939,50,1738,48,"indexOfIndex"],[939,62,1738,60],[939,65,1738,63],[939,66,1738,64],[939,67,1738,65],[940,14,1739,10],[940,18,1739,16,"StickyHeaderComponent"],[940,39,1739,37],[940,42,1740,12,"_this2"],[940,48,1740,16],[940,49,1740,17,"props"],[940,54,1740,22],[940,55,1740,23,"StickyHeaderComponent"],[940,76,1740,44],[940,80,1740,48,"ScrollViewStickyHeader"],[940,111,1740,70],[941,14,1741,10],[941,34,1742,12],[941,38,1742,12,"_jsxRuntime"],[941,49,1742,12],[941,50,1742,12,"jsx"],[941,53,1742,12],[941,55,1742,13,"StickyHeaderComponent"],[941,76,1742,34],[942,16,1744,14,"ref"],[942,19,1744,17],[942,21,1744,19],[942,30,1744,14,"ref"],[942,33,1744,17,"ref"],[942,34,1744,19,"ref"],[942,39,1744,22],[943,18,1744,22],[943,25,1744,26,"_this2"],[943,31,1744,30],[943,32,1744,31,"_setStickyHeaderRef"],[943,51,1744,50],[943,52,1744,51,"key"],[943,55,1744,54],[943,57,1744,56,"ref"],[943,62,1744,59],[943,63,1744,60],[944,16,1744,60],[944,17,1744,61],[945,16,1745,14,"nextHeaderLayoutY"],[945,33,1745,31],[945,35,1745,33,"_this2"],[945,41,1745,37],[945,42,1745,38,"_headerLayoutYs"],[945,57,1745,53],[945,58,1745,54,"get"],[945,61,1745,57],[945,62,1746,16,"_this2"],[945,68,1746,20],[945,69,1746,21,"_getKeyForIndex"],[945,84,1746,36],[945,85,1746,37,"nextIndex"],[945,94,1746,46],[945,96,1746,48,"children"],[945,104,1746,56],[945,105,1747,14],[945,106,1747,16],[946,16,1748,14,"onLayout"],[946,24,1748,22],[946,26,1748,24],[946,35,1748,14,"onLayout"],[946,43,1748,22,"onLayout"],[946,44,1748,24,"event"],[946,49,1748,29],[947,18,1748,29],[947,25,1748,33,"_this2"],[947,31,1748,37],[947,32,1748,38,"_onStickyHeaderLayout"],[947,53,1748,59],[947,54,1748,60,"index"],[947,59,1748,65],[947,61,1748,67,"event"],[947,66,1748,72],[947,68,1748,74,"key"],[947,71,1748,77],[947,72,1748,78],[948,16,1748,78],[948,17,1748,79],[949,16,1749,14,"scrollAnimatedValue"],[949,35,1749,33],[949,37,1749,35,"_this2"],[949,43,1749,39],[949,44,1749,40,"_scrollAnimatedValue"],[949,64,1749,61],[950,16,1750,14,"inverted"],[950,24,1750,22],[950,26,1750,24,"_this2"],[950,32,1750,28],[950,33,1750,29,"props"],[950,38,1750,34],[950,39,1750,35,"invertStickyHeaders"],[950,58,1750,55],[951,16,1751,14,"hiddenOnScroll"],[951,30,1751,28],[951,32,1751,30,"_this2"],[951,38,1751,34],[951,39,1751,35,"props"],[951,44,1751,40],[951,45,1751,41,"stickyHeaderHiddenOnScroll"],[951,71,1751,68],[952,16,1752,14,"scrollViewHeight"],[952,32,1752,30],[952,34,1752,32,"_this2"],[952,40,1752,36],[952,41,1752,37,"state"],[952,46,1752,42],[952,47,1752,43,"layoutHeight"],[952,59,1752,56],[953,16,1752,56,"children"],[953,24,1752,56],[953,26,1753,15,"child"],[954,14,1753,20],[954,17,1743,19,"key"],[954,20,1754,35],[954,21,1754,36],[955,12,1756,8],[955,13,1756,9],[955,19,1756,15],[956,14,1757,10],[956,21,1757,17,"child"],[956,26,1757,22],[957,12,1758,8],[958,10,1759,6],[958,11,1759,7],[958,12,1759,8],[959,8,1760,4],[960,8,1761,4,"children"],[960,16,1761,12],[960,32,1762,6],[960,36,1762,6,"_jsxRuntime"],[960,47,1762,6],[960,48,1762,6,"jsx"],[960,51,1762,6],[960,53,1762,7,"_ScrollViewContext"],[960,71,1762,7],[960,72,1762,7,"default"],[960,79,1762,24],[960,80,1762,25,"Provider"],[960,88,1762,33],[961,10,1763,8,"value"],[961,15,1763,13],[961,17,1763,15],[961,21,1763,19],[961,22,1763,20,"props"],[961,27,1763,25],[961,28,1763,26,"horizontal"],[961,38,1763,36],[961,43,1763,41],[961,47,1763,45],[961,50,1763,48,"HORIZONTAL"],[961,79,1763,58],[961,82,1763,61,"VERTICAL"],[961,109,1763,70],[962,10,1763,70,"children"],[962,18,1763,70],[962,20,1764,9,"children"],[963,8,1764,17],[963,9,1765,34],[963,10,1766,5],[964,8,1768,4],[964,12,1768,10,"hasStickyHeaders"],[964,28,1768,26],[964,31,1769,6,"Array"],[964,36,1769,11],[964,37,1769,12,"isArray"],[964,44,1769,19],[964,45,1769,20,"stickyHeaderIndices"],[964,64,1769,39],[964,65,1769,40],[964,69,1769,44,"stickyHeaderIndices"],[964,88,1769,63],[964,89,1769,64,"length"],[964,95,1769,70],[964,98,1769,73],[964,99,1769,74],[966,8,1771,4],[967,8,1772,4],[968,8,1773,4],[969,8,1774,4],[969,12,1774,10,"preserveChildren"],[969,28,1774,26],[969,31,1775,6],[969,35,1775,10],[969,36,1775,11,"props"],[969,41,1775,16],[969,42,1775,17,"maintainVisibleContentPosition"],[969,72,1775,47],[969,76,1775,51],[969,80,1775,55],[969,84,1776,7,"Platform"],[969,101,1776,15],[969,102,1776,16,"OS"],[969,104,1776,18],[969,109,1776,23],[969,118,1776,32],[969,122,1776,36],[969,126,1776,40],[969,127,1776,41,"props"],[969,132,1776,46],[969,133,1776,47,"snapToAlignment"],[969,148,1776,62],[969,152,1776,66],[969,156,1776,71],[970,8,1778,4],[970,12,1778,10,"contentContainer"],[970,28,1778,26],[970,44,1779,6],[970,48,1779,6,"_jsxRuntime"],[970,59,1779,6],[970,60,1779,6,"jsx"],[970,63,1779,6],[970,65,1779,7,"NativeDirectionalScrollContentView"],[970,99,1779,41],[970,101,1779,41,"Object"],[970,107,1779,41],[970,108,1779,41,"assign"],[970,114,1779,41],[970,119,1780,12,"contentSizeChangeProps"],[970,141,1780,34],[971,10,1781,8,"ref"],[971,13,1781,11],[971,15,1781,13],[971,19,1781,17],[971,20,1781,18,"_innerView"],[971,30,1781,28],[971,31,1781,29,"getForwardingRef"],[971,47,1781,45],[971,48,1781,46],[971,52,1781,50],[971,53,1781,51,"props"],[971,58,1781,56],[971,59,1781,57,"innerViewRef"],[971,71,1781,69],[971,72,1781,71],[972,10,1782,8,"style"],[972,15,1782,13],[972,17,1782,15,"contentContainerStyle"],[972,38,1782,37],[973,10,1783,8,"removeClippedSubviews"],[973,31,1783,29],[974,10,1784,10],[975,10,1785,10],[976,10,1786,10,"Platform"],[976,27,1786,18],[976,28,1786,19,"OS"],[976,30,1786,21],[976,35,1786,26],[976,44,1786,35],[976,48,1786,39,"hasStickyHeaders"],[976,64,1786,55],[976,67,1787,14],[976,72,1787,19],[976,75,1788,14],[976,79,1788,18],[976,80,1788,19,"props"],[976,85,1788,24],[976,86,1788,25,"removeClippedSubviews"],[976,107,1789,9],[977,10,1790,8,"collapsable"],[977,21,1790,19],[977,23,1790,21],[977,28,1790,27],[978,10,1791,8,"collapsableChildren"],[978,29,1791,27],[978,31,1791,29],[978,32,1791,30,"preserveChildren"],[978,48,1791,47],[979,10,1791,47,"children"],[979,18,1791,47],[979,20,1792,9,"children"],[980,8,1792,17],[980,10,1793,42],[980,11,1794,5],[981,8,1796,4],[981,12,1796,10,"alwaysBounceHorizontal"],[981,34,1796,32],[981,37,1797,6],[981,41,1797,10],[981,42,1797,11,"props"],[981,47,1797,16],[981,48,1797,17,"alwaysBounceHorizontal"],[981,70,1797,39],[981,75,1797,44,"undefined"],[981,84,1797,53],[981,87,1798,10],[981,91,1798,14],[981,92,1798,15,"props"],[981,97,1798,20],[981,98,1798,21,"alwaysBounceHorizontal"],[981,120,1798,43],[981,123,1799,10],[981,127,1799,14],[981,128,1799,15,"props"],[981,133,1799,20],[981,134,1799,21,"horizontal"],[981,144,1799,31],[982,8,1801,4],[982,12,1801,10,"alwaysBounceVertical"],[982,32,1801,30],[982,35,1802,6],[982,39,1802,10],[982,40,1802,11,"props"],[982,45,1802,16],[982,46,1802,17,"alwaysBounceVertical"],[982,66,1802,37],[982,71,1802,42,"undefined"],[982,80,1802,51],[982,83,1803,10],[982,87,1803,14],[982,88,1803,15,"props"],[982,93,1803,20],[982,94,1803,21,"alwaysBounceVertical"],[982,114,1803,41],[982,117,1804,10],[982,118,1804,11],[982,122,1804,15],[982,123,1804,16,"props"],[982,128,1804,21],[982,129,1804,22,"horizontal"],[982,139,1804,32],[983,8,1806,4],[983,12,1806,10,"baseStyle"],[983,21,1806,19],[983,24,1807,6],[983,28,1807,10],[983,29,1807,11,"props"],[983,34,1807,16],[983,35,1807,17,"horizontal"],[983,45,1807,27],[983,50,1807,32],[983,54,1807,36],[983,57,1808,10,"styles"],[983,63,1808,16],[983,64,1808,17,"baseHorizontal"],[983,78,1808,31],[983,81,1809,10,"styles"],[983,87,1809,16],[983,88,1809,17,"baseVertical"],[983,100,1809,29],[984,8,1811,4],[984,12,1811,4,"_this$props"],[984,23,1811,4],[984,26,1812,6],[984,30,1812,10],[984,31,1812,11,"props"],[984,36,1812,16],[985,10,1811,11,"experimental_endDraggingSensitivityMultiplier"],[985,55,1811,56],[985,58,1811,56,"_this$props"],[985,69,1811,56],[985,70,1811,11,"experimental_endDraggingSensitivityMultiplier"],[985,115,1811,56],[986,10,1811,61,"otherProps"],[986,20,1811,71],[986,27,1811,71,"_objectWithoutProperties2"],[986,52,1811,71],[986,53,1811,71,"default"],[986,60,1811,71],[986,62,1811,71,"_this$props"],[986,73,1811,71],[986,75,1811,71,"_excluded"],[986,84,1811,71],[987,8,1813,4],[987,12,1813,10,"props"],[987,17,1813,15],[987,20,1813,15,"Object"],[987,26,1813,15],[987,27,1813,15,"assign"],[987,33,1813,15],[987,38,1814,9,"otherProps"],[987,48,1814,19],[988,10,1815,6,"alwaysBounceHorizontal"],[988,32,1815,28],[988,34,1815,6,"alwaysBounceHorizontal"],[988,56,1815,28],[989,10,1816,6,"alwaysBounceVertical"],[989,30,1816,26],[989,32,1816,6,"alwaysBounceVertical"],[989,52,1816,26],[990,10,1817,6,"style"],[990,15,1817,11],[990,17,1817,13,"StyleSheet"],[990,36,1817,23],[990,37,1817,24,"compose"],[990,44,1817,31],[990,45,1817,32,"baseStyle"],[990,54,1817,41],[990,56,1817,43],[990,60,1817,47],[990,61,1817,48,"props"],[990,66,1817,53],[990,67,1817,54,"style"],[990,72,1817,59],[990,73,1817,60],[991,10,1818,6],[992,10,1819,6],[993,10,1820,6,"onContentSizeChange"],[993,29,1820,25],[993,31,1820,27],[993,35,1820,31],[994,10,1821,6,"onLayout"],[994,18,1821,14],[994,20,1821,16],[994,24,1821,20],[994,25,1821,21,"_handleLayout"],[994,38,1821,34],[995,10,1822,6,"onMomentumScrollBegin"],[995,31,1822,27],[995,33,1822,29],[995,37,1822,33],[995,38,1822,34,"_handleMomentumScrollBegin"],[995,64,1822,60],[996,10,1823,6,"onMomentumScrollEnd"],[996,29,1823,25],[996,31,1823,27],[996,35,1823,31],[996,36,1823,32,"_handleMomentumScrollEnd"],[996,60,1823,56],[997,10,1824,6,"onResponderGrant"],[997,26,1824,22],[997,28,1824,24],[997,32,1824,28],[997,33,1824,29,"_handleResponderGrant"],[997,54,1824,50],[998,10,1825,6,"onResponderReject"],[998,27,1825,23],[998,29,1825,25],[998,33,1825,29],[998,34,1825,30,"_handleResponderReject"],[998,56,1825,52],[999,10,1826,6,"onResponderRelease"],[999,28,1826,24],[999,30,1826,26],[999,34,1826,30],[999,35,1826,31,"_handleResponderRelease"],[999,58,1826,54],[1000,10,1827,6,"onResponderTerminationRequest"],[1000,39,1827,35],[1000,41,1827,37],[1000,45,1827,41],[1000,46,1827,42,"_handleResponderTerminationRequest"],[1000,80,1827,76],[1001,10,1828,6,"onScrollBeginDrag"],[1001,27,1828,23],[1001,29,1828,25],[1001,33,1828,29],[1001,34,1828,30,"_handleScrollBeginDrag"],[1001,56,1828,52],[1002,10,1829,6,"onScrollEndDrag"],[1002,25,1829,21],[1002,27,1829,23],[1002,31,1829,27],[1002,32,1829,28,"_handleScrollEndDrag"],[1002,52,1829,48],[1003,10,1830,6,"onScrollShouldSetResponder"],[1003,36,1830,32],[1003,38,1830,34],[1003,42,1830,38],[1003,43,1830,39,"_handleScrollShouldSetResponder"],[1003,74,1830,70],[1004,10,1831,6,"onStartShouldSetResponder"],[1004,35,1831,31],[1004,37,1831,33],[1004,41,1831,37],[1004,42,1831,38,"_handleStartShouldSetResponder"],[1004,72,1831,68],[1005,10,1832,6,"onStartShouldSetResponderCapture"],[1005,42,1832,38],[1005,44,1833,8],[1005,48,1833,12],[1005,49,1833,13,"_handleStartShouldSetResponderCapture"],[1005,86,1833,50],[1006,10,1834,6,"onTouchEnd"],[1006,20,1834,16],[1006,22,1834,18],[1006,26,1834,22],[1006,27,1834,23,"_handleTouchEnd"],[1006,42,1834,38],[1007,10,1835,6,"onTouchMove"],[1007,21,1835,17],[1007,23,1835,19],[1007,27,1835,23],[1007,28,1835,24,"_handleTouchMove"],[1007,44,1835,40],[1008,10,1836,6,"onTouchStart"],[1008,22,1836,18],[1008,24,1836,20],[1008,28,1836,24],[1008,29,1836,25,"_handleTouchStart"],[1008,46,1836,42],[1009,10,1837,6,"onTouchCancel"],[1009,23,1837,19],[1009,25,1837,21],[1009,29,1837,25],[1009,30,1837,26,"_handleTouchCancel"],[1009,48,1837,44],[1010,10,1838,6,"onScroll"],[1010,18,1838,14],[1010,20,1838,16],[1010,24,1838,20],[1010,25,1838,21,"_handleScroll"],[1010,38,1838,34],[1011,10,1839,6,"endDraggingSensitivityMultiplier"],[1011,42,1839,38],[1011,44,1840,8,"experimental_endDraggingSensitivityMultiplier"],[1011,89,1840,53],[1012,10,1841,6,"enableSyncOnScroll"],[1012,28,1841,24],[1012,30,1841,26],[1012,34,1841,30],[1012,35,1841,31,"state"],[1012,40,1841,36],[1012,41,1841,37,"onScrollEmitter"],[1012,56,1841,52],[1012,59,1841,55],[1012,63,1841,59],[1012,66,1841,62,"undefined"],[1012,75,1841,71],[1013,10,1842,6,"scrollEventThrottle"],[1013,29,1842,25],[1013,31,1842,27,"hasStickyHeaders"],[1013,47,1842,43],[1013,50,1843,10],[1013,51,1843,11],[1013,54,1844,10],[1013,58,1844,14],[1013,59,1844,15,"props"],[1013,64,1844,20],[1013,65,1844,21,"scrollEventThrottle"],[1013,84,1844,40],[1014,10,1845,6,"sendMomentumEvents"],[1014,28,1845,24],[1014,30,1846,8],[1014,34,1846,12],[1014,35,1846,13,"props"],[1014,40,1846,18],[1014,41,1846,19,"onMomentumScrollBegin"],[1014,62,1846,40],[1014,66,1846,44],[1014,70,1846,48],[1014,71,1846,49,"props"],[1014,76,1846,54],[1014,77,1846,55,"onMomentumScrollEnd"],[1014,96,1846,74],[1014,99,1847,12],[1014,103,1847,16],[1014,106,1848,12],[1014,111,1848,17],[1015,10,1849,6],[1016,10,1850,6,"snapToStart"],[1016,21,1850,17],[1016,23,1850,19],[1016,27,1850,23],[1016,28,1850,24,"props"],[1016,33,1850,29],[1016,34,1850,30,"snapToStart"],[1016,45,1850,41],[1016,50,1850,46],[1016,55,1850,51],[1017,10,1851,6],[1018,10,1852,6,"snapToEnd"],[1018,19,1852,15],[1018,21,1852,17],[1018,25,1852,21],[1018,26,1852,22,"props"],[1018,31,1852,27],[1018,32,1852,28,"snapToEnd"],[1018,41,1852,37],[1018,46,1852,42],[1018,51,1852,47],[1019,10,1853,6],[1020,10,1854,6,"pagingEnabled"],[1020,23,1854,19],[1020,25,1854,21,"Platform"],[1020,42,1854,29],[1020,43,1854,30,"select"],[1020,49,1854,36],[1020,50,1854,37],[1021,12,1855,8],[1022,12,1856,8,"ios"],[1022,15,1856,11],[1022,17,1857,10],[1022,21,1857,14],[1022,22,1857,15,"props"],[1022,27,1857,20],[1022,28,1857,21,"pagingEnabled"],[1022,41,1857,34],[1022,46,1857,39],[1022,50,1857,43],[1022,54,1858,10],[1022,58,1858,14],[1022,59,1858,15,"props"],[1022,64,1858,20],[1022,65,1858,21,"snapToInterval"],[1022,79,1858,35],[1022,83,1858,39],[1022,87,1858,43],[1022,91,1859,10],[1022,95,1859,14],[1022,96,1859,15,"props"],[1022,101,1859,20],[1022,102,1859,21,"snapToOffsets"],[1022,115,1859,34],[1022,119,1859,38],[1022,123,1859,42],[1023,12,1860,8],[1024,12,1861,8,"android"],[1024,19,1861,15],[1024,21,1862,10],[1024,25,1862,14],[1024,26,1862,15,"props"],[1024,31,1862,20],[1024,32,1862,21,"pagingEnabled"],[1024,45,1862,34],[1024,50,1862,39],[1024,54,1862,43],[1024,58,1863,10],[1024,62,1863,14],[1024,63,1863,15,"props"],[1024,68,1863,20],[1024,69,1863,21,"snapToInterval"],[1024,83,1863,35],[1024,87,1863,39],[1024,91,1863,43],[1024,95,1864,10],[1024,99,1864,14],[1024,100,1864,15,"props"],[1024,105,1864,20],[1024,106,1864,21,"snapToOffsets"],[1024,119,1864,34],[1024,123,1864,38],[1025,10,1865,6],[1025,11,1865,7],[1026,8,1865,8],[1026,10,1866,5],[1027,8,1868,4],[1027,12,1868,11,"decelerationRate"],[1027,28,1868,27],[1027,31,1868,31],[1027,35,1868,35],[1027,36,1868,36,"props"],[1027,41,1868,41],[1027,42,1868,11,"decelerationRate"],[1027,58,1868,27],[1028,8,1869,4],[1028,12,1869,8,"decelerationRate"],[1028,28,1869,24],[1028,32,1869,28],[1028,36,1869,32],[1028,38,1869,34],[1029,10,1870,6,"props"],[1029,15,1870,11],[1029,16,1870,12,"decelerationRate"],[1029,32,1870,28],[1029,35,1870,31],[1029,39,1870,31,"processDecelerationRate"],[1029,71,1870,54],[1029,73,1870,55,"decelerationRate"],[1029,89,1870,71],[1029,90,1870,72],[1030,8,1871,4],[1031,8,1873,4],[1031,12,1873,10,"refreshControl"],[1031,26,1873,24],[1031,29,1873,27],[1031,33,1873,31],[1031,34,1873,32,"props"],[1031,39,1873,37],[1031,40,1873,38,"refreshControl"],[1031,54,1873,52],[1032,8,1874,4],[1032,12,1874,10,"scrollViewRef"],[1032,25,1874,23],[1032,28,1874,26],[1032,32,1874,30],[1032,33,1874,31,"_scrollView"],[1032,44,1874,42],[1032,45,1874,43,"getForwardingRef"],[1032,61,1874,59],[1032,62,1875,6],[1032,66,1875,10],[1032,67,1875,11,"props"],[1032,72,1875,16],[1032,73,1875,17,"scrollViewRef"],[1032,86,1876,4],[1032,87,1876,5],[1033,8,1878,4],[1033,12,1878,8,"refreshControl"],[1033,26,1878,22],[1033,28,1878,24],[1034,10,1879,6],[1034,14,1879,10,"Platform"],[1034,31,1879,18],[1034,32,1879,19,"OS"],[1034,34,1879,21],[1034,39,1879,26],[1034,44,1879,31],[1034,46,1879,33],[1035,12,1880,8],[1036,12,1881,8],[1036,32,1882,10],[1036,36,1882,10,"_jsxRuntime"],[1036,47,1882,10],[1036,48,1882,10,"jsxs"],[1036,52,1882,10],[1036,54,1882,11,"NativeDirectionalScrollView"],[1036,81,1882,38],[1036,83,1882,38,"Object"],[1036,89,1882,38],[1036,90,1882,38,"assign"],[1036,96,1882,38],[1036,101,1882,43,"props"],[1036,106,1882,48],[1037,14,1882,50,"ref"],[1037,17,1882,53],[1037,19,1882,55,"scrollViewRef"],[1037,32,1882,69],[1038,14,1882,69,"children"],[1038,22,1882,69],[1038,25,1883,13,"refreshControl"],[1038,39,1883,27],[1038,41,1884,13,"contentContainer"],[1038,57,1884,29],[1039,12,1884,29],[1039,14,1885,39],[1039,15,1885,40],[1040,10,1887,6],[1040,11,1887,7],[1040,17,1887,13],[1040,21,1887,17,"Platform"],[1040,38,1887,25],[1040,39,1887,26,"OS"],[1040,41,1887,28],[1040,46,1887,33],[1040,55,1887,42],[1040,57,1887,44],[1041,12,1888,8],[1042,12,1889,8],[1043,12,1890,8],[1044,12,1891,8],[1045,12,1892,8],[1046,12,1893,8],[1047,12,1894,8],[1048,12,1895,8],[1048,16,1895,8,"_splitLayoutProps"],[1048,33,1895,8],[1048,36,1895,31],[1048,40,1895,31,"splitLayoutProps"],[1048,66,1895,47],[1048,68,1895,48],[1048,72,1895,48,"flattenStyle"],[1048,93,1895,60],[1048,95,1895,61,"props"],[1048,100,1895,66],[1048,101,1895,67,"style"],[1048,106,1895,72],[1048,107,1895,73],[1048,108,1895,74],[1049,14,1895,15,"outer"],[1049,19,1895,20],[1049,22,1895,20,"_splitLayoutProps"],[1049,39,1895,20],[1049,40,1895,15,"outer"],[1049,45,1895,20],[1050,14,1895,22,"inner"],[1050,19,1895,27],[1050,22,1895,27,"_splitLayoutProps"],[1050,39,1895,27],[1050,40,1895,22,"inner"],[1050,45,1895,27],[1051,12,1896,8],[1051,19,1896,15,"React"],[1051,24,1896,20],[1051,25,1896,21,"cloneElement"],[1051,37,1896,33],[1051,38,1897,10,"refreshControl"],[1051,52,1897,24],[1051,54,1898,10],[1052,14,1898,11,"style"],[1052,19,1898,16],[1052,21,1898,18,"StyleSheet"],[1052,40,1898,28],[1052,41,1898,29,"compose"],[1052,48,1898,36],[1052,49,1898,37,"baseStyle"],[1052,58,1898,46],[1052,60,1898,48,"outer"],[1052,65,1898,53],[1053,12,1898,54],[1053,13,1898,55],[1053,28,1899,10],[1053,32,1899,10,"_jsxRuntime"],[1053,43,1899,10],[1053,44,1899,10,"jsx"],[1053,47,1899,10],[1053,49,1899,11,"NativeDirectionalScrollView"],[1053,76,1899,38],[1053,78,1899,38,"Object"],[1053,84,1899,38],[1053,85,1899,38,"assign"],[1053,91,1899,38],[1053,96,1900,16,"props"],[1053,101,1900,21],[1054,14,1901,12,"style"],[1054,19,1901,17],[1054,21,1901,19,"StyleSheet"],[1054,40,1901,29],[1054,41,1901,30,"compose"],[1054,48,1901,37],[1054,49,1901,38,"baseStyle"],[1054,58,1901,47],[1054,60,1901,49,"inner"],[1054,65,1901,54],[1054,66,1901,56],[1055,14,1902,12,"ref"],[1055,17,1902,15],[1055,19,1902,17,"scrollViewRef"],[1055,32,1902,31],[1056,14,1902,31,"children"],[1056,22,1902,31],[1056,24,1903,13,"contentContainer"],[1057,12,1903,29],[1057,14,1904,39],[1057,15,1905,8],[1057,16,1905,9],[1058,10,1906,6],[1059,8,1907,4],[1060,8,1908,4],[1060,28,1909,6],[1060,32,1909,6,"_jsxRuntime"],[1060,43,1909,6],[1060,44,1909,6,"jsx"],[1060,47,1909,6],[1060,49,1909,7,"NativeDirectionalScrollView"],[1060,76,1909,34],[1060,78,1909,34,"Object"],[1060,84,1909,34],[1060,85,1909,34,"assign"],[1060,91,1909,34],[1060,96,1909,39,"props"],[1060,101,1909,44],[1061,10,1909,46,"ref"],[1061,13,1909,49],[1061,15,1909,51,"scrollViewRef"],[1061,28,1909,65],[1062,10,1909,65,"children"],[1062,18,1909,65],[1062,20,1910,9,"contentContainer"],[1063,8,1910,25],[1063,10,1911,35],[1063,11,1911,36],[1064,6,1913,2],[1065,4,1913,3],[1066,2,1913,3],[1066,4,726,25,"React"],[1066,9,726,30],[1066,10,726,31,"Component"],[1066,19,726,40],[1067,2,726,6,"ScrollView"],[1067,12,726,16],[1067,13,727,9,"Context"],[1067,20,727,16],[1067,23,727,45,"ScrollViewContext"],[1067,49,727,62],[1068,2,1916,0],[1068,6,1916,6,"styles"],[1068,12,1916,12],[1068,15,1916,15,"StyleSheet"],[1068,34,1916,25],[1068,35,1916,26,"create"],[1068,41,1916,32],[1068,42,1916,33],[1069,4,1917,2,"baseVertical"],[1069,16,1917,14],[1069,18,1917,16],[1070,6,1918,4,"flexGrow"],[1070,14,1918,12],[1070,16,1918,14],[1070,17,1918,15],[1071,6,1919,4,"flexShrink"],[1071,16,1919,14],[1071,18,1919,16],[1071,19,1919,17],[1072,6,1920,4,"flexDirection"],[1072,19,1920,17],[1072,21,1920,19],[1072,29,1920,27],[1073,6,1921,4,"overflow"],[1073,14,1921,12],[1073,16,1921,14],[1074,4,1922,2],[1074,5,1922,3],[1075,4,1923,2,"baseHorizontal"],[1075,18,1923,16],[1075,20,1923,18],[1076,6,1924,4,"flexGrow"],[1076,14,1924,12],[1076,16,1924,14],[1076,17,1924,15],[1077,6,1925,4,"flexShrink"],[1077,16,1925,14],[1077,18,1925,16],[1077,19,1925,17],[1078,6,1926,4,"flexDirection"],[1078,19,1926,17],[1078,21,1926,19],[1078,26,1926,24],[1079,6,1927,4,"overflow"],[1079,14,1927,12],[1079,16,1927,14],[1080,4,1928,2],[1080,5,1928,3],[1081,4,1929,2,"contentContainerHorizontal"],[1081,30,1929,28],[1081,32,1929,30],[1082,6,1930,4,"flexDirection"],[1082,19,1930,17],[1082,21,1930,19],[1083,4,1931,2],[1084,2,1932,0],[1084,3,1932,1],[1084,4,1932,2],[1085,2,1944,0],[1086,0,1945,0],[1087,0,1946,0],[1088,0,1947,0],[1089,2,1948,0],[1089,11,1948,9,"createRefForwarder"],[1089,29,1948,27,"createRefForwarder"],[1089,30,1949,2,"mutator"],[1089,37,1949,45],[1089,39,1950,50],[1090,4,1951,2],[1090,8,1951,8,"state"],[1090,13,1951,61],[1090,16,1951,64],[1091,6,1952,4,"getForwardingRef"],[1091,22,1952,20],[1091,24,1952,22],[1091,28,1952,22,"memoize"],[1091,47,1952,29],[1091,49,1952,30],[1091,59,1952,30,"forwardedRef"],[1091,71,1952,42],[1091,73,1952,46],[1092,8,1953,6],[1092,15,1953,13],[1092,25,1953,14,"nativeInstance"],[1092,39,1953,52],[1092,41,1953,63],[1093,10,1954,8],[1093,14,1954,14,"publicInstance"],[1093,28,1954,28],[1093,31,1955,10,"nativeInstance"],[1093,45,1955,24],[1093,49,1955,28],[1093,53,1955,32],[1093,56,1955,35],[1093,60,1955,39],[1093,63,1955,42,"mutator"],[1093,70,1955,49],[1093,71,1955,50,"nativeInstance"],[1093,85,1955,64],[1093,86,1955,65],[1094,10,1957,8,"state"],[1094,15,1957,13],[1094,16,1957,14,"nativeInstance"],[1094,30,1957,28],[1094,33,1957,31,"nativeInstance"],[1094,47,1957,45],[1095,10,1958,8,"state"],[1095,15,1958,13],[1095,16,1958,14,"publicInstance"],[1095,30,1958,28],[1095,33,1958,31,"publicInstance"],[1095,47,1958,45],[1096,10,1960,8],[1096,14,1960,12,"forwardedRef"],[1096,26,1960,24],[1096,30,1960,28],[1096,34,1960,32],[1096,36,1960,34],[1097,12,1961,10],[1097,16,1961,14],[1097,23,1961,21,"forwardedRef"],[1097,35,1961,33],[1097,40,1961,38],[1097,50,1961,48],[1097,52,1961,50],[1098,14,1962,12,"forwardedRef"],[1098,26,1962,24],[1098,27,1962,25,"publicInstance"],[1098,41,1962,39],[1098,42,1962,40],[1099,12,1963,10],[1099,13,1963,11],[1099,19,1963,17],[1100,14,1964,12,"forwardedRef"],[1100,26,1964,24],[1100,27,1964,25,"current"],[1100,34,1964,32],[1100,37,1964,35,"publicInstance"],[1100,51,1964,49],[1101,12,1965,10],[1102,10,1966,8],[1103,8,1967,6],[1103,9,1967,7],[1104,6,1968,4],[1104,7,1968,5],[1104,8,1968,6],[1105,6,1969,4,"nativeInstance"],[1105,20,1969,18],[1105,22,1969,20],[1105,26,1969,24],[1106,6,1970,4,"publicInstance"],[1106,20,1970,18],[1106,22,1970,20],[1107,4,1971,2],[1107,5,1971,3],[1108,4,1973,2],[1108,11,1973,9,"state"],[1108,16,1973,14],[1109,2,1974,0],[1111,2,1976,0],[1112,0,1977,0],[1113,2,1978,0],[1113,11,1978,9,"Wrapper"],[1113,18,1978,16,"Wrapper"],[1113,19,1978,17,"props"],[1113,24,1978,22],[1113,26,1978,24,"ref"],[1113,29,1978,69],[1113,31,1978,71],[1114,4,1979,2],[1114,24,1979,9],[1114,28,1979,9,"_jsxRuntime"],[1114,39,1979,9],[1114,40,1979,9,"jsx"],[1114,43,1979,9],[1114,45,1979,10,"ScrollView"],[1114,55,1979,20],[1114,57,1979,20,"Object"],[1114,63,1979,20],[1114,64,1979,20,"assign"],[1114,70,1979,20],[1114,75,1979,25,"props"],[1114,80,1979,30],[1115,6,1979,32,"scrollViewRef"],[1115,19,1979,45],[1115,21,1979,47,"ref"],[1116,4,1979,51],[1116,6,1979,53],[1116,7,1979,54],[1117,2,1980,0],[1118,2,1981,0,"Wrapper"],[1118,9,1981,7],[1118,10,1981,8,"displayName"],[1118,21,1981,19],[1118,24,1981,22],[1118,36,1981,34],[1119,2,1982,0],[1120,2,1983,0],[1120,6,1983,6,"ForwardedScrollView"],[1120,25,1983,25],[1120,28,1983,28,"React"],[1120,33,1983,33],[1120,34,1983,34,"forwardRef"],[1120,44,1983,44],[1120,45,1983,45,"Wrapper"],[1120,52,1983,52],[1120,53,1983,53],[1122,2,1985,0],[1123,2,1986,0,"ForwardedScrollView"],[1123,21,1986,19],[1123,22,1986,20,"Context"],[1123,29,1986,27],[1123,32,1986,30,"ScrollViewContext"],[1123,58,1986,47],[1124,2,1988,0,"ForwardedScrollView"],[1124,21,1988,19],[1124,22,1988,20,"displayName"],[1124,33,1988,31],[1124,36,1988,34],[1124,48,1988,46],[1125,2,1990,0,"module"],[1125,8,1990,6],[1125,9,1990,7,"exports"],[1125,16,1990,14],[1125,19,1990,19,"ForwardedScrollView"],[1125,38,1994,29],[1126,0,1994,30],[1126,3]],"functionMap":{"names":["<global>","ScrollView","constructor","componentDidMount","componentDidUpdate","componentWillUnmount","getScrollResponder","getScrollableNode","getInnerViewNode","getInnerViewRef","getNativeScrollRef","scrollTo","scrollToEnd","flashScrollIndicators","_subscribeToOnScroll","setState$argument_0","setState$argument_1","remove","scrollResponderScrollNativeHandleToKeyboard","scrollResponderZoomTo","_textInputFocusError","_inputMeasureAndScrollToKeyboard","scrollTextInputIntoVisibleRect","setTimeout$argument_0","_getKeyForIndex","_updateAnimatedNodeAttachment","_setStickyHeaderRef","_onStickyHeaderLayout","_handleScroll","_handleLayout","_handleContentOnLayout","createRefForwarder$argument_0","scrollResponderKeyboardWillShow","scrollResponderKeyboardWillHide","scrollResponderKeyboardDidShow","scrollResponderKeyboardDidHide","_handleMomentumScrollBegin","_handleMomentumScrollEnd","_handleScrollBeginDrag","_handleScrollEndDrag","_isAnimating","_handleResponderGrant","_handleResponderReject","_handleResponderRelease","_handleResponderTerminationRequest","_handleScrollShouldSetResponder","_handleStartShouldSetResponder","_handleStartShouldSetResponderCapture","_keyboardIsDismissible","_softKeyboardIsDetached","_keyboardEventsAreUnreliable","_handleTouchEnd","_handleTouchCancel","_handleTouchStart","_handleTouchMove","render","filter$argument_0","children.map$argument_0","StickyHeaderComponent.props.ref","StickyHeaderComponent.props.onLayout","createRefForwarder","memoize$argument_0","<anonymous>","Wrapper"],"mappings":"AAA;ACqtB;ECG;GDO;EEmC;GFiC;EGE;GHY;EIE;GJmB;kDKQ;GLG;qCME;GNE;oCOE;GPE;oDQE;GRE;8DSE;GTE;cUwB;GVmC;gEWU;GXS;sCYO;GZK;2BaI;MCM;ODM;MEC;OFS;MGI;OHM;GbE;ciBgB;GjB4B;ckBiB;GlB4B;EmBE;GnBE;coBiB;2CCG;KDkB;iBEO;OFE;GpBI;EuBE;GvBG;EwBE;GxBe;EyBE;GzBS;E0BE;G1BwB;kB2BE;G3BQ;kB4BE;G5BO;2B6BE;G7BI;M8BI,4D9B;I8BO;K9B8B;gE+BgC;G/BK;gEgCE;GhCK;+DiCE;GjCK;+DkCE;GlCK;yDmCK;GnCG;uDoCK;GpCI;qDqCS;GrCW;mDsCK;GtCc;gCuCO;GvCQ;mDwCK;GxCI;uCyCY,QzC;qD0CK;G1C4B;sD2CiB;G3CE;mD4CK;G5CM;+D6C2B;G7CiB;sE8Ca;G9CgD;0C+CK;G/CmB;2CgDO;GhDE;gDiDE;GjDI;6CkDO;GlDuB;gDmDO;GnDG;+CoDa;GpDG;8CqDa;GrDE;EsDE;QCe,0CD;8BE0B;mBCU,yCD;wBEI,sDF;OFW;GtD0J;CDC;A4DkC;8BCI;aCC;ODc;KDC;C5DM;A+DI;C/DE"}},"type":"js/module"}]}