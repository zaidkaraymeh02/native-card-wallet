{"dependencies":[{"name":"../Utilities/PolyfillFunctions","data":{"asyncType":null,"locs":[{"start":{"line":16,"column":0,"index":469},"end":{"line":16,"column":67,"index":536}},{"start":{"line":16,"column":0,"index":469},"end":{"line":16,"column":67,"index":536}},{"start":{"line":16,"column":0,"index":469},"end":{"line":16,"column":67,"index":536}},{"start":{"line":16,"column":0,"index":469},"end":{"line":16,"column":67,"index":536}},{"start":{"line":16,"column":0,"index":469},"end":{"line":16,"column":67,"index":536}},{"start":{"line":16,"column":0,"index":469},"end":{"line":16,"column":67,"index":536}},{"start":{"line":16,"column":0,"index":469},"end":{"line":16,"column":67,"index":536}},{"start":{"line":16,"column":0,"index":469},"end":{"line":16,"column":67,"index":536}},{"start":{"line":16,"column":0,"index":469},"end":{"line":16,"column":67,"index":536}}],"key":"bSgRQQ9QDEdIjWyT7jUaxVhiO2E="}},{"name":"./Timers/JSTimers","data":{"asyncType":null,"locs":[{"start":{"line":41,"column":31,"index":1327},"end":{"line":41,"column":59,"index":1355}},{"start":{"line":115,"column":12,"index":3960},"end":{"line":115,"column":40,"index":3988}},{"start":{"line":119,"column":12,"index":4079},"end":{"line":119,"column":40,"index":4107}}],"key":"a0GoTmqg1bAg640TeEIna+fZ03o="}},{"name":"../../src/private/featureflags/specs/NativeReactNativeFeatureFlags","data":{"asyncType":null,"locs":[{"start":{"line":15,"column":2,"index":382},"end":{"line":15,"column":87,"index":467}},{"start":{"line":15,"column":2,"index":382},"end":{"line":15,"column":87,"index":467}}],"key":"TyXJZEr6SkTH4D7XrCGdLeoGolk="}},{"name":"../../src/private/featureflags/ReactNativeFeatureFlags","data":{"asyncType":null,"locs":[{"start":{"line":13,"column":32,"index":275},"end":{"line":13,"column":97,"index":340}},{"start":{"line":13,"column":32,"index":275},"end":{"line":13,"column":97,"index":340}}],"key":"On9He5TjYQGJzGlPyyzDdz1kZUA="}},{"name":"../../src/private/webapis/idlecallbacks/specs/NativeIdleCallbacks","data":{"asyncType":null,"locs":[{"start":{"line":60,"column":6,"index":2026},"end":{"line":60,"column":82,"index":2102}},{"start":{"line":67,"column":6,"index":2207},"end":{"line":67,"column":82,"index":2283}}],"key":"TpinSbG1RtybWPMCs8UJX1VCh0k="}},{"name":"../../src/private/webapis/microtasks/specs/NativeMicrotasks","data":{"asyncType":null,"locs":[{"start":{"line":88,"column":6,"index":3030},"end":{"line":88,"column":76,"index":3100}}],"key":"j5W2TVS4QeJAlRApFSJBMfgGdUI="}},{"name":"./Timers/immediateShim","data":{"asyncType":null,"locs":[{"start":{"line":96,"column":10,"index":3286},"end":{"line":96,"column":43,"index":3319}},{"start":{"line":100,"column":10,"index":3389},"end":{"line":100,"column":43,"index":3422}}],"key":"infNW9HnCA6t8g5WDfTdVb5aqnI="}},{"name":"./Timers/queueMicrotask.js","data":{"asyncType":null,"locs":[{"start":{"line":106,"column":10,"index":3583},"end":{"line":106,"column":47,"index":3620}}],"key":"40FeuJu+ZlwI8O7+B7D+Aw1HoaU="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * \n   * @format\n   */\n\n  'use strict';\n\n  if (__DEV__) {\n    if (typeof global.Promise !== 'function') {\n      console.error('Promise should exist before setting up timers.');\n    }\n  }\n\n  // In bridgeless mode, timers are host functions installed from cpp.\n  if (global.RN$Bridgeless !== true) {\n    /**\n     * Set up timers.\n     * You can use this module directly, or just require InitializeCore.\n     */\n    var defineLazyTimer = function defineLazyTimer(name) {\n      _$$_REQUIRE(_dependencyMap[0], \"../Utilities/PolyfillFunctions\").polyfillGlobal(name, function () {\n        return _$$_REQUIRE(_dependencyMap[1], \"./Timers/JSTimers\")[name];\n      });\n    };\n    defineLazyTimer('setTimeout');\n    defineLazyTimer('clearTimeout');\n    defineLazyTimer('setInterval');\n    defineLazyTimer('clearInterval');\n    defineLazyTimer('requestAnimationFrame');\n    defineLazyTimer('cancelAnimationFrame');\n    defineLazyTimer('requestIdleCallback');\n    defineLazyTimer('cancelIdleCallback');\n  } else if (\n  // TODO remove this condition when bridgeless == modern scheduler everywhere.\n  _$$_REQUIRE(_dependencyMap[2], \"../../src/private/featureflags/specs/NativeReactNativeFeatureFlags\").default != null &&\n  // eslint-disable-next-line react-hooks/rules-of-hooks -- false positive due to `use` prefix\n  _$$_REQUIRE(_dependencyMap[3], \"../../src/private/featureflags/ReactNativeFeatureFlags\").useModernRuntimeScheduler()) {\n    _$$_REQUIRE(_dependencyMap[0], \"../Utilities/PolyfillFunctions\").polyfillGlobal('requestIdleCallback', function () {\n      return _$$_REQUIRE(_dependencyMap[4], \"../../src/private/webapis/idlecallbacks/specs/NativeIdleCallbacks\").default.requestIdleCallback;\n    });\n    _$$_REQUIRE(_dependencyMap[0], \"../Utilities/PolyfillFunctions\").polyfillGlobal('cancelIdleCallback', function () {\n      return _$$_REQUIRE(_dependencyMap[4], \"../../src/private/webapis/idlecallbacks/specs/NativeIdleCallbacks\").default.cancelIdleCallback;\n    });\n  }\n\n  // We need to check if the native module is available before accessing the\n  // feature flag, because otherwise the API would throw an error in the legacy\n  // architecture in OSS, where the native module isn't available.\n  if (_$$_REQUIRE(_dependencyMap[2], \"../../src/private/featureflags/specs/NativeReactNativeFeatureFlags\").default != null && _$$_REQUIRE(_dependencyMap[3], \"../../src/private/featureflags/ReactNativeFeatureFlags\").enableMicrotasks()) {\n    // This is the flag that tells React to use `queueMicrotask` to batch state\n    // updates, instead of using the scheduler to schedule a regular task.\n    // We use a global variable because we don't currently have any other\n    // mechanism to pass feature flags from RN to React in OSS.\n    global.RN$enableMicrotasksInReact = true;\n    _$$_REQUIRE(_dependencyMap[0], \"../Utilities/PolyfillFunctions\").polyfillGlobal('queueMicrotask', function () {\n      return _$$_REQUIRE(_dependencyMap[5], \"../../src/private/webapis/microtasks/specs/NativeMicrotasks\").default.queueMicrotask;\n    });\n\n    // We shim the immediate APIs via `queueMicrotask` to maintain the backward\n    // compatibility.\n    _$$_REQUIRE(_dependencyMap[0], \"../Utilities/PolyfillFunctions\").polyfillGlobal('setImmediate', function () {\n      return _$$_REQUIRE(_dependencyMap[6], \"./Timers/immediateShim\").setImmediate;\n    });\n    _$$_REQUIRE(_dependencyMap[0], \"../Utilities/PolyfillFunctions\").polyfillGlobal('clearImmediate', function () {\n      return _$$_REQUIRE(_dependencyMap[6], \"./Timers/immediateShim\").clearImmediate;\n    });\n  } else {\n    // Polyfill it with promise (regardless it's polyfilled or native) otherwise.\n    _$$_REQUIRE(_dependencyMap[0], \"../Utilities/PolyfillFunctions\").polyfillGlobal('queueMicrotask', function () {\n      return _$$_REQUIRE(_dependencyMap[7], \"./Timers/queueMicrotask.js\").default;\n    });\n\n    // When promise was polyfilled hence is queued to the RN microtask queue,\n    // we polyfill the immediate APIs as aliases to the ReactNativeMicrotask APIs.\n    // Note that in bridgeless mode, immediate APIs are installed from cpp.\n    if (global.RN$Bridgeless !== true) {\n      _$$_REQUIRE(_dependencyMap[0], \"../Utilities/PolyfillFunctions\").polyfillGlobal('setImmediate', function () {\n        return _$$_REQUIRE(_dependencyMap[1], \"./Timers/JSTimers\").queueReactNativeMicrotask;\n      });\n      _$$_REQUIRE(_dependencyMap[0], \"../Utilities/PolyfillFunctions\").polyfillGlobal('clearImmediate', function () {\n        return _$$_REQUIRE(_dependencyMap[1], \"./Timers/JSTimers\").clearReactNativeMicrotask;\n      });\n    }\n  }\n});","lineCount":91,"map":[[2,2,1,0],[3,0,2,0],[4,0,3,0],[5,0,4,0],[6,0,5,0],[7,0,6,0],[8,0,7,0],[9,0,8,0],[10,0,9,0],[12,2,11,0],[12,14,11,12],[14,2,18,0],[14,6,18,4,"__DEV__"],[14,13,18,11],[14,15,18,13],[15,4,19,2],[15,8,19,6],[15,15,19,13,"global"],[15,21,19,19],[15,22,19,20,"Promise"],[15,29,19,27],[15,34,19,32],[15,44,19,42],[15,46,19,44],[16,6,20,4,"console"],[16,13,20,11],[16,14,20,12,"error"],[16,19,20,17],[16,20,20,18],[16,68,20,66],[16,69,20,67],[17,4,21,2],[18,2,22,0],[20,2,24,0],[21,2,25,0],[21,6,25,4,"global"],[21,12,25,10],[21,13,25,11,"RN$Bridgeless"],[21,26,25,24],[21,31,25,29],[21,35,25,33],[21,37,25,35],[22,4,26,2],[23,0,27,0],[24,0,28,0],[25,0,29,0],[26,4,30,2],[26,8,30,8,"defineLazyTimer"],[26,23,30,23],[26,26,30,26],[26,35,30,8,"defineLazyTimer"],[26,50,30,23,"defineLazyTimer"],[26,51,31,4,"name"],[26,55,39,39],[26,57,40,7],[27,6,41,4,"_$$_REQUIRE"],[27,17,41,4],[27,18,41,4,"_dependencyMap"],[27,32,41,4],[27,71,41,4,"polyfillGlobal"],[27,85,41,4],[27,86,41,19,"name"],[27,90,41,23],[27,92,41,25],[28,8,41,25],[28,15,41,31,"require"],[28,26,41,38],[28,27,41,38,"_dependencyMap"],[28,41,41,38],[28,65,41,58],[28,66,41,59],[28,67,41,60,"name"],[28,71,41,64],[28,72,41,65],[29,6,41,65],[29,8,41,66],[30,4,42,2],[30,5,42,3],[31,4,43,2,"defineLazyTimer"],[31,19,43,17],[31,20,43,18],[31,32,43,30],[31,33,43,31],[32,4,44,2,"defineLazyTimer"],[32,19,44,17],[32,20,44,18],[32,34,44,32],[32,35,44,33],[33,4,45,2,"defineLazyTimer"],[33,19,45,17],[33,20,45,18],[33,33,45,31],[33,34,45,32],[34,4,46,2,"defineLazyTimer"],[34,19,46,17],[34,20,46,18],[34,35,46,33],[34,36,46,34],[35,4,47,2,"defineLazyTimer"],[35,19,47,17],[35,20,47,18],[35,43,47,41],[35,44,47,42],[36,4,48,2,"defineLazyTimer"],[36,19,48,17],[36,20,48,18],[36,42,48,40],[36,43,48,41],[37,4,49,2,"defineLazyTimer"],[37,19,49,17],[37,20,49,18],[37,41,49,39],[37,42,49,40],[38,4,50,2,"defineLazyTimer"],[38,19,50,17],[38,20,50,18],[38,40,50,38],[38,41,50,39],[39,2,51,0],[39,3,51,1],[39,9,51,7],[40,2,52,2],[41,2,53,2,"_$$_REQUIRE"],[41,13,53,2],[41,14,53,2,"_dependencyMap"],[41,28,53,2],[41,103,53,2,"default"],[41,110,53,2],[41,114,53,35],[41,118,53,39],[42,2,54,2],[43,2,55,2,"_$$_REQUIRE"],[43,13,55,2],[43,14,55,2,"_dependencyMap"],[43,28,55,2],[43,91,55,26,"useModernRuntimeScheduler"],[43,116,55,51],[43,117,55,52],[43,118,55,53],[43,120,56,2],[44,4,57,2,"_$$_REQUIRE"],[44,15,57,2],[44,16,57,2,"_dependencyMap"],[44,30,57,2],[44,69,57,2,"polyfillGlobal"],[44,83,57,2],[44,84,58,4],[44,105,58,25],[44,107,59,4],[45,6,59,4],[45,13,60,6,"require"],[45,24,60,13],[45,25,60,13,"_dependencyMap"],[45,39,60,13],[45,111,60,81],[45,112,60,82],[45,113,61,9,"default"],[45,120,61,16],[45,121,61,17,"requestIdleCallback"],[45,140,61,36],[46,4,61,36],[46,5,62,2],[46,6,62,3],[47,4,64,2,"_$$_REQUIRE"],[47,15,64,2],[47,16,64,2,"_dependencyMap"],[47,30,64,2],[47,69,64,2,"polyfillGlobal"],[47,83,64,2],[47,84,65,4],[47,104,65,24],[47,106,66,4],[48,6,66,4],[48,13,67,6,"require"],[48,24,67,13],[48,25,67,13,"_dependencyMap"],[48,39,67,13],[48,111,67,81],[48,112,67,82],[48,113,68,9,"default"],[48,120,68,16],[48,121,68,17,"cancelIdleCallback"],[48,139,68,35],[49,4,68,35],[49,5,69,2],[49,6,69,3],[50,2,70,0],[52,2,72,0],[53,2,73,0],[54,2,74,0],[55,2,75,0],[55,6,76,2,"_$$_REQUIRE"],[55,17,76,2],[55,18,76,2,"_dependencyMap"],[55,32,76,2],[55,107,76,2,"default"],[55,114,76,2],[55,118,76,35],[55,122,76,39],[55,126,77,2,"_$$_REQUIRE"],[55,137,77,2],[55,138,77,2,"_dependencyMap"],[55,152,77,2],[55,215,77,26,"enableMicrotasks"],[55,231,77,42],[55,232,77,43],[55,233,77,44],[55,235,78,2],[56,4,79,2],[57,4,80,2],[58,4,81,2],[59,4,82,2],[60,4,83,2,"global"],[60,10,83,8],[60,11,83,9,"RN$enableMicrotasksInReact"],[60,37,83,35],[60,40,83,38],[60,44,83,42],[61,4,85,2,"_$$_REQUIRE"],[61,15,85,2],[61,16,85,2,"_dependencyMap"],[61,30,85,2],[61,69,85,2,"polyfillGlobal"],[61,83,85,2],[61,84,86,4],[61,100,86,20],[61,102,87,4],[62,6,87,4],[62,13,88,6,"require"],[62,24,88,13],[62,25,88,13,"_dependencyMap"],[62,39,88,13],[62,105,88,75],[62,106,88,76],[62,107,89,9,"default"],[62,114,89,16],[62,115,89,17,"queueMicrotask"],[62,129,89,31],[63,4,89,31],[63,5,90,2],[63,6,90,3],[65,4,92,2],[66,4,93,2],[67,4,94,2,"_$$_REQUIRE"],[67,15,94,2],[67,16,94,2,"_dependencyMap"],[67,30,94,2],[67,69,94,2,"polyfillGlobal"],[67,83,94,2],[67,84,95,4],[67,98,95,18],[67,100,96,4],[68,6,96,4],[68,13,96,10,"require"],[68,24,96,17],[68,25,96,17,"_dependencyMap"],[68,39,96,17],[68,68,96,42],[68,69,96,43],[68,70,96,44,"setImmediate"],[68,82,96,56],[69,4,96,56],[69,5,97,2],[69,6,97,3],[70,4,98,2,"_$$_REQUIRE"],[70,15,98,2],[70,16,98,2,"_dependencyMap"],[70,30,98,2],[70,69,98,2,"polyfillGlobal"],[70,83,98,2],[70,84,99,4],[70,100,99,20],[70,102,100,4],[71,6,100,4],[71,13,100,10,"require"],[71,24,100,17],[71,25,100,17,"_dependencyMap"],[71,39,100,17],[71,68,100,42],[71,69,100,43],[71,70,100,44,"clearImmediate"],[71,84,100,58],[72,4,100,58],[72,5,101,2],[72,6,101,3],[73,2,102,0],[73,3,102,1],[73,9,102,7],[74,4,103,2],[75,4,104,2,"_$$_REQUIRE"],[75,15,104,2],[75,16,104,2,"_dependencyMap"],[75,30,104,2],[75,69,104,2,"polyfillGlobal"],[75,83,104,2],[75,84,105,4],[75,100,105,20],[75,102,106,4],[76,6,106,4],[76,13,106,10,"require"],[76,24,106,17],[76,25,106,17,"_dependencyMap"],[76,39,106,17],[76,72,106,46],[76,73,106,47],[76,74,106,48,"default"],[76,81,106,55],[77,4,106,55],[77,5,107,2],[77,6,107,3],[79,4,109,2],[80,4,110,2],[81,4,111,2],[82,4,112,2],[82,8,112,6,"global"],[82,14,112,12],[82,15,112,13,"RN$Bridgeless"],[82,28,112,26],[82,33,112,31],[82,37,112,35],[82,39,112,37],[83,6,113,4,"_$$_REQUIRE"],[83,17,113,4],[83,18,113,4,"_dependencyMap"],[83,32,113,4],[83,71,113,4,"polyfillGlobal"],[83,85,113,4],[83,86,114,6],[83,100,114,20],[83,102,115,6],[84,8,115,6],[84,15,115,12,"require"],[84,26,115,19],[84,27,115,19,"_dependencyMap"],[84,41,115,19],[84,65,115,39],[84,66,115,40],[84,67,115,41,"queueReactNativeMicrotask"],[84,92,115,66],[85,6,115,66],[85,7,116,4],[85,8,116,5],[86,6,117,4,"_$$_REQUIRE"],[86,17,117,4],[86,18,117,4,"_dependencyMap"],[86,32,117,4],[86,71,117,4,"polyfillGlobal"],[86,85,117,4],[86,86,118,6],[86,102,118,22],[86,104,119,6],[87,8,119,6],[87,15,119,12,"require"],[87,26,119,19],[87,27,119,19,"_dependencyMap"],[87,41,119,19],[87,65,119,39],[87,66,119,40],[87,67,119,41,"clearReactNativeMicrotask"],[87,92,119,66],[88,6,119,66],[88,7,120,4],[88,8,120,5],[89,4,121,2],[90,2,122,0],[91,0,122,1],[91,3]],"functionMap":{"names":["<global>","defineLazyTimer","polyfillGlobal$argument_1"],"mappings":"AAA;0BC6B;yBCW,wCD;GDC;IEiB;oCFE;IEK;mCFE;IEmB;+BFE;IEO,oDF;IEI,sDF;IEM,mDF;MES,4DF;MEI,4DF"}},"type":"js/module"}]}