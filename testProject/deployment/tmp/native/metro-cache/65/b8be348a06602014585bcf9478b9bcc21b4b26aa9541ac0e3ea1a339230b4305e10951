{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":298,"column":0,"index":8369}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":298,"column":0,"index":8369}}],"key":"XnmB3YjhLQUu4Gtg+kalDAx6bCo="}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":298,"column":0,"index":8369}}],"key":"EU+qeBIKi4KcIzPeK4PbkLqFqVY="}},{"name":"query-string","data":{"asyncType":null,"locs":[{"start":{"line":6,"column":0,"index":94},"end":{"line":6,"column":44,"index":138}}],"key":"GFSDDT7dIJnvWSebFhtcKgwXBCQ="}},{"name":"./fromEntries","data":{"asyncType":null,"locs":[{"start":{"line":8,"column":0,"index":140},"end":{"line":8,"column":40,"index":180}}],"key":"d+ic4Sb74EHMEZTFDxW8pFJcVt0="}},{"name":"./validatePathConfig","data":{"asyncType":null,"locs":[{"start":{"line":10,"column":0,"index":239},"end":{"line":10,"column":54,"index":293}}],"key":"cg7LCOlFjZ3IP0CYIpbP6C+VR6g="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = getPathFromState;\n  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/toConsumableArray\"));\n  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/slicedToArray\"));\n  var queryString = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[3], \"query-string\"));\n  var _fromEntries = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"./fromEntries\"));\n  var _validatePathConfig = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"./validatePathConfig\"));\n  function _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\n  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\n  var _getActiveRoute = function getActiveRoute(state) {\n    var route = typeof state.index === 'number' ? state.routes[state.index] : state.routes[state.routes.length - 1];\n    if (route.state) {\n      return _getActiveRoute(route.state);\n    }\n    return route;\n  };\n\n  /**\n   * Utility to serialize a navigation state object to a path string.\n   *\n   * @example\n   * ```js\n   * getPathFromState(\n   *   {\n   *     routes: [\n   *       {\n   *         name: 'Chat',\n   *         params: { author: 'Jane', id: 42 },\n   *       },\n   *     ],\n   *   },\n   *   {\n   *     screens: {\n   *       Chat: {\n   *         path: 'chat/:author/:id',\n   *         stringify: { author: author => author.toLowerCase() }\n   *       }\n   *     }\n   *   }\n   * )\n   * ```\n   *\n   * @param state Navigation state to serialize.\n   * @param options Extra options to fine-tune how to serialize the path.\n   * @returns Path representing the state, e.g. /foo/bar?count=42.\n   */\n  function getPathFromState(state, options) {\n    if (state == null) {\n      throw Error(\"Got 'undefined' for the navigation state. You must pass a valid state object.\");\n    }\n    if (options) {\n      (0, _validatePathConfig.default)(options);\n    }\n\n    // Create a normalized configs object which will be easier to use\n    var configs = options != null && options.screens ? createNormalizedConfigs(options == null ? void 0 : options.screens) : {};\n    var path = '/';\n    var current = state;\n    var allParams = {};\n    var _loop = function _loop() {\n      var index = typeof current.index === 'number' ? current.index : 0;\n      var route = current.routes[index];\n      var pattern;\n      var focusedParams;\n      var focusedRoute = _getActiveRoute(state);\n      var currentOptions = configs;\n\n      // Keep all the route names that appeared during going deeper in config in case the pattern is resolved to undefined\n      var nestedRouteNames = [];\n      var hasNext = true;\n      var _loop2 = function _loop2() {\n        pattern = currentOptions[route.name].pattern;\n        nestedRouteNames.push(route.name);\n        if (route.params) {\n          var _currentOptions$route;\n          var stringify = (_currentOptions$route = currentOptions[route.name]) == null ? void 0 : _currentOptions$route.stringify;\n          var currentParams = (0, _fromEntries.default)(Object.entries(route.params).map(function (_ref) {\n            var _ref2 = (0, _slicedToArray2.default)(_ref, 2),\n              key = _ref2[0],\n              value = _ref2[1];\n            return [key, stringify != null && stringify[key] ? stringify[key](value) : String(value)];\n          }));\n          if (pattern) {\n            Object.assign(allParams, currentParams);\n          }\n          if (focusedRoute === route) {\n            var _pattern;\n            // If this is the focused route, keep the params for later use\n            // We save it here since it's been stringified already\n            focusedParams = Object.assign({}, currentParams);\n            (_pattern = pattern) == null || _pattern.split('/').filter(function (p) {\n              return p.startsWith(':');\n            })\n            // eslint-disable-next-line no-loop-func\n            .forEach(function (p) {\n              var name = getParamName(p);\n\n              // Remove the params present in the pattern since we'll only use the rest for query string\n              if (focusedParams) {\n                // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n                delete focusedParams[name];\n              }\n            });\n          }\n        }\n\n        // If there is no `screens` property or no nested state, we return pattern\n        if (!currentOptions[route.name].screens || route.state === undefined) {\n          hasNext = false;\n        } else {\n          index = typeof route.state.index === 'number' ? route.state.index : route.state.routes.length - 1;\n          var nextRoute = route.state.routes[index];\n          var nestedConfig = currentOptions[route.name].screens;\n\n          // if there is config for next route name, we go deeper\n          if (nestedConfig && nextRoute.name in nestedConfig) {\n            route = nextRoute;\n            currentOptions = nestedConfig;\n          } else {\n            // If not, there is no sense in going deeper in config\n            hasNext = false;\n          }\n        }\n      };\n      while (route.name in currentOptions && hasNext) {\n        _loop2();\n      }\n      if (pattern === undefined) {\n        pattern = nestedRouteNames.join('/');\n      }\n      if (currentOptions[route.name] !== undefined) {\n        path += pattern.split('/').map(function (p) {\n          var name = getParamName(p);\n\n          // We don't know what to show for wildcard patterns\n          // Showing the route name seems ok, though whatever we show here will be incorrect\n          // Since the page doesn't actually exist\n          if (p === '*') {\n            return route.name;\n          }\n\n          // If the path has a pattern for a param, put the param in the path\n          if (p.startsWith(':')) {\n            var _value = allParams[name];\n            if (_value === undefined && p.endsWith('?')) {\n              // Optional params without value assigned in route.params should be ignored\n              return '';\n            }\n            return encodeURIComponent(_value);\n          }\n          return encodeURIComponent(p);\n        }).join('/');\n      } else {\n        path += encodeURIComponent(route.name);\n      }\n      if (!focusedParams) {\n        focusedParams = focusedRoute.params;\n      }\n      if (route.state) {\n        path += '/';\n      } else if (focusedParams) {\n        for (var param in focusedParams) {\n          if (focusedParams[param] === 'undefined') {\n            // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n            delete focusedParams[param];\n          }\n        }\n        var query = queryString.stringify(focusedParams, {\n          sort: false\n        });\n        if (query) {\n          path += `?${query}`;\n        }\n      }\n      current = route.state;\n    };\n    while (current) {\n      _loop();\n    }\n\n    // Remove multiple as well as trailing slashes\n    path = path.replace(/\\/+/g, '/');\n    path = path.length > 1 ? path.replace(/\\/$/, '') : path;\n    return path;\n  }\n  var getParamName = function getParamName(pattern) {\n    return pattern.replace(/^:/, '').replace(/\\?$/, '');\n  };\n  var joinPaths = function joinPaths() {\n    var _ref3;\n    for (var _len = arguments.length, paths = new Array(_len), _key = 0; _key < _len; _key++) {\n      paths[_key] = arguments[_key];\n    }\n    return (_ref3 = []).concat.apply(_ref3, (0, _toConsumableArray2.default)(paths.map(function (p) {\n      return p.split('/');\n    }))).filter(Boolean).join('/');\n  };\n  var createConfigItem = function createConfigItem(config, parentPattern) {\n    var _pattern3;\n    if (typeof config === 'string') {\n      // If a string is specified as the value of the key(e.g. Foo: '/path'), use it as the pattern\n      var _pattern2 = parentPattern ? joinPaths(parentPattern, config) : config;\n      return {\n        pattern: _pattern2\n      };\n    }\n\n    // If an object is specified as the value (e.g. Foo: { ... }),\n    // It can have `path` property and `screens` prop which has nested configs\n    var pattern;\n    if (config.exact && config.path === undefined) {\n      throw new Error(\"A 'path' needs to be specified when specifying 'exact: true'. If you don't want this screen in the URL, specify it as empty string, e.g. `path: ''`.\");\n    }\n    pattern = config.exact !== true ? joinPaths(parentPattern || '', config.path || '') : config.path || '';\n    var screens = config.screens ? createNormalizedConfigs(config.screens, pattern) : undefined;\n    return {\n      // Normalize pattern to remove any leading, trailing slashes, duplicate slashes etc.\n      pattern: (_pattern3 = pattern) == null ? void 0 : _pattern3.split('/').filter(Boolean).join('/'),\n      stringify: config.stringify,\n      screens: screens\n    };\n  };\n  var createNormalizedConfigs = function createNormalizedConfigs(options, pattern) {\n    return (0, _fromEntries.default)(Object.entries(options).map(function (_ref4) {\n      var _ref5 = (0, _slicedToArray2.default)(_ref4, 2),\n        name = _ref5[0],\n        c = _ref5[1];\n      var result = createConfigItem(c, pattern);\n      return [name, result];\n    }));\n  };\n});","lineCount":236,"map":[[9,2,6,0],[9,6,6,0,"queryString"],[9,17,6,0],[9,20,6,0,"_interopRequireWildcard"],[9,43,6,0],[9,44,6,0,"_$$_REQUIRE"],[9,55,6,0],[9,56,6,0,"_dependencyMap"],[9,70,6,0],[10,2,8,0],[10,6,8,0,"_fromEntries"],[10,18,8,0],[10,21,8,0,"_interopRequireDefault"],[10,43,8,0],[10,44,8,0,"_$$_REQUIRE"],[10,55,8,0],[10,56,8,0,"_dependencyMap"],[10,70,8,0],[11,2,10,0],[11,6,10,0,"_validatePathConfig"],[11,25,10,0],[11,28,10,0,"_interopRequireDefault"],[11,50,10,0],[11,51,10,0,"_$$_REQUIRE"],[11,62,10,0],[11,63,10,0,"_dependencyMap"],[11,77,10,0],[12,2,10,54],[12,11,10,54,"_getRequireWildcardCache"],[12,36,10,54,"e"],[12,37,10,54],[12,66,10,54,"WeakMap"],[12,73,10,54],[12,92,10,54,"r"],[12,93,10,54],[12,100,10,54,"WeakMap"],[12,107,10,54],[12,111,10,54,"t"],[12,112,10,54],[12,119,10,54,"WeakMap"],[12,126,10,54],[12,138,10,54,"_getRequireWildcardCache"],[12,162,10,54],[12,174,10,54,"_getRequireWildcardCache"],[12,199,10,54,"e"],[12,200,10,54],[12,211,10,54,"e"],[12,212,10,54],[12,215,10,54,"t"],[12,216,10,54],[12,219,10,54,"r"],[12,220,10,54],[12,225,10,54,"e"],[12,226,10,54],[13,2,10,54],[13,11,10,54,"_interopRequireWildcard"],[13,35,10,54,"e"],[13,36,10,54],[13,38,10,54,"r"],[13,39,10,54],[13,48,10,54,"r"],[13,49,10,54],[13,53,10,54,"e"],[13,54,10,54],[13,58,10,54,"e"],[13,59,10,54],[13,60,10,54,"__esModule"],[13,70,10,54],[13,79,10,54,"e"],[13,80,10,54],[13,95,10,54,"e"],[13,96,10,54],[13,119,10,54,"e"],[13,120,10,54],[13,145,10,54,"e"],[13,146,10,54],[13,157,10,54,"default"],[13,164,10,54],[13,166,10,54,"e"],[13,167,10,54],[13,175,10,54,"t"],[13,176,10,54],[13,179,10,54,"_getRequireWildcardCache"],[13,203,10,54],[13,204,10,54,"r"],[13,205,10,54],[13,212,10,54,"t"],[13,213,10,54],[13,217,10,54,"t"],[13,218,10,54],[13,219,10,54,"has"],[13,222,10,54],[13,223,10,54,"e"],[13,224,10,54],[13,234,10,54,"t"],[13,235,10,54],[13,236,10,54,"get"],[13,239,10,54],[13,240,10,54,"e"],[13,241,10,54],[13,248,10,54,"n"],[13,249,10,54],[13,254,10,54,"__proto__"],[13,263,10,54],[13,273,10,54,"a"],[13,274,10,54],[13,277,10,54,"Object"],[13,283,10,54],[13,284,10,54,"defineProperty"],[13,298,10,54],[13,302,10,54,"Object"],[13,308,10,54],[13,309,10,54,"getOwnPropertyDescriptor"],[13,333,10,54],[13,344,10,54,"u"],[13,345,10,54],[13,349,10,54,"e"],[13,350,10,54],[13,370,10,54,"u"],[13,371,10,54],[13,378,10,54,"hasOwnProperty"],[13,392,10,54],[13,393,10,54,"call"],[13,397,10,54],[13,398,10,54,"e"],[13,399,10,54],[13,401,10,54,"u"],[13,402,10,54],[13,411,10,54,"i"],[13,412,10,54],[13,415,10,54,"a"],[13,416,10,54],[13,419,10,54,"Object"],[13,425,10,54],[13,426,10,54,"getOwnPropertyDescriptor"],[13,450,10,54],[13,451,10,54,"e"],[13,452,10,54],[13,454,10,54,"u"],[13,455,10,54],[13,465,10,54,"i"],[13,466,10,54],[13,471,10,54,"i"],[13,472,10,54],[13,473,10,54,"get"],[13,476,10,54],[13,480,10,54,"i"],[13,481,10,54],[13,482,10,54,"set"],[13,485,10,54],[13,489,10,54,"Object"],[13,495,10,54],[13,496,10,54,"defineProperty"],[13,510,10,54],[13,511,10,54,"n"],[13,512,10,54],[13,514,10,54,"u"],[13,515,10,54],[13,517,10,54,"i"],[13,518,10,54],[13,522,10,54,"n"],[13,523,10,54],[13,524,10,54,"u"],[13,525,10,54],[13,529,10,54,"e"],[13,530,10,54],[13,531,10,54,"u"],[13,532,10,54],[13,544,10,54,"n"],[13,545,10,54],[13,546,10,54,"default"],[13,553,10,54],[13,556,10,54,"e"],[13,557,10,54],[13,559,10,54,"t"],[13,560,10,54],[13,564,10,54,"t"],[13,565,10,54],[13,566,10,54,"set"],[13,569,10,54],[13,570,10,54,"e"],[13,571,10,54],[13,573,10,54,"n"],[13,574,10,54],[13,577,10,54,"n"],[13,578,10,54],[14,2,27,0],[14,6,27,6,"getActiveRoute"],[14,21,27,20],[14,24,27,23],[14,33,27,6,"getActiveRoute"],[14,47,27,20,"getActiveRoute"],[14,48,27,24,"state"],[14,53,27,36],[14,55,27,76],[15,4,28,2],[15,8,28,8,"route"],[15,13,28,13],[15,16,29,4],[15,23,29,11,"state"],[15,28,29,16],[15,29,29,17,"index"],[15,34,29,22],[15,39,29,27],[15,47,29,35],[15,50,30,8,"state"],[15,55,30,13],[15,56,30,14,"routes"],[15,62,30,20],[15,63,30,21,"state"],[15,68,30,26],[15,69,30,27,"index"],[15,74,30,32],[15,75,30,33],[15,78,31,8,"state"],[15,83,31,13],[15,84,31,14,"routes"],[15,90,31,20],[15,91,31,21,"state"],[15,96,31,26],[15,97,31,27,"routes"],[15,103,31,33],[15,104,31,34,"length"],[15,110,31,40],[15,113,31,43],[15,114,31,44],[15,115,31,45],[16,4,33,2],[16,8,33,6,"route"],[16,13,33,11],[16,14,33,12,"state"],[16,19,33,17],[16,21,33,19],[17,6,34,4],[17,13,34,11,"getActiveRoute"],[17,28,34,25],[17,29,34,26,"route"],[17,34,34,31],[17,35,34,32,"state"],[17,40,34,37],[17,41,34,38],[18,4,35,2],[19,4,37,2],[19,11,37,9,"route"],[19,16,37,14],[20,2,38,0],[20,3,38,1],[22,2,40,0],[23,0,41,0],[24,0,42,0],[25,0,43,0],[26,0,44,0],[27,0,45,0],[28,0,46,0],[29,0,47,0],[30,0,48,0],[31,0,49,0],[32,0,50,0],[33,0,51,0],[34,0,52,0],[35,0,53,0],[36,0,54,0],[37,0,55,0],[38,0,56,0],[39,0,57,0],[40,0,58,0],[41,0,59,0],[42,0,60,0],[43,0,61,0],[44,0,62,0],[45,0,63,0],[46,0,64,0],[47,0,65,0],[48,0,66,0],[49,0,67,0],[50,0,68,0],[51,2,69,15],[51,11,69,24,"getPathFromState"],[51,27,69,40,"getPathFromState"],[51,28,70,2,"state"],[51,33,70,14],[51,35,71,2,"options"],[51,42,71,30],[51,44,72,10],[52,4,73,2],[52,8,73,6,"state"],[52,13,73,11],[52,17,73,15],[52,21,73,19],[52,23,73,21],[53,6,74,4],[53,12,74,10,"Error"],[53,17,74,15],[53,18,75,6],[53,97,76,4],[53,98,76,5],[54,4,77,2],[55,4,79,2],[55,8,79,6,"options"],[55,15,79,13],[55,17,79,15],[56,6,80,4],[56,10,80,4,"validatePathConfig"],[56,37,80,22],[56,39,80,23,"options"],[56,46,80,30],[56,47,80,31],[57,4,81,2],[59,4,83,2],[60,4,84,2],[60,8,84,8,"configs"],[60,15,84,43],[60,18,84,46,"options"],[60,25,84,53],[60,37,84,46,"options"],[60,44,84,53],[60,45,84,55,"screens"],[60,52,84,62],[60,55,85,6,"createNormalizedConfigs"],[60,78,85,29],[60,79,85,30,"options"],[60,86,85,37],[60,106,85,30,"options"],[60,113,85,37],[60,114,85,39,"screens"],[60,121,85,46],[60,122,85,47],[60,125,86,6],[60,126,86,7],[60,127,86,8],[61,4,88,2],[61,8,88,6,"path"],[61,12,88,10],[61,15,88,13],[61,18,88,16],[62,4,89,2],[62,8,89,6,"current"],[62,15,89,32],[62,18,89,35,"state"],[62,23,89,40],[63,4,91,2],[63,8,91,8,"allParams"],[63,17,91,38],[63,20,91,41],[63,21,91,42],[63,22,91,43],[64,4,91,44],[64,8,91,44,"_loop"],[64,13,91,44],[64,25,91,44,"_loop"],[64,31,91,44],[64,33,93,18],[65,6,94,4],[65,10,94,8,"index"],[65,15,94,13],[65,18,94,16],[65,25,94,23,"current"],[65,32,94,30],[65,33,94,31,"index"],[65,38,94,36],[65,43,94,41],[65,51,94,49],[65,54,94,52,"current"],[65,61,94,59],[65,62,94,60,"index"],[65,67,94,65],[65,70,94,68],[65,71,94,69],[66,6,95,4],[66,10,95,8,"route"],[66,15,95,13],[66,18,95,16,"current"],[66,25,95,23],[66,26,95,24,"routes"],[66,32,95,30],[66,33,95,31,"index"],[66,38,95,36],[66,39,97,5],[67,6,99,4],[67,10,99,8,"pattern"],[67,17,99,35],[68,6,101,4],[68,10,101,8,"focusedParams"],[68,23,101,54],[69,6,102,4],[69,10,102,8,"focusedRoute"],[69,22,102,20],[69,25,102,23,"getActiveRoute"],[69,40,102,37],[69,41,102,38,"state"],[69,46,102,43],[69,47,102,44],[70,6,103,4],[70,10,103,8,"currentOptions"],[70,24,103,22],[70,27,103,25,"configs"],[70,34,103,32],[72,6,105,4],[73,6,106,4],[73,10,106,8,"nestedRouteNames"],[73,26,106,24],[73,29,106,27],[73,31,106,29],[74,6,108,4],[74,10,108,8,"hasNext"],[74,17,108,15],[74,20,108,18],[74,24,108,22],[75,6,108,23],[75,10,108,23,"_loop2"],[75,16,108,23],[75,28,108,23,"_loop2"],[75,35,108,23],[75,37,110,52],[76,8,111,6,"pattern"],[76,15,111,13],[76,18,111,16,"currentOptions"],[76,32,111,30],[76,33,111,31,"route"],[76,38,111,36],[76,39,111,37,"name"],[76,43,111,41],[76,44,111,42],[76,45,111,43,"pattern"],[76,52,111,50],[77,8,113,6,"nestedRouteNames"],[77,24,113,22],[77,25,113,23,"push"],[77,29,113,27],[77,30,113,28,"route"],[77,35,113,33],[77,36,113,34,"name"],[77,40,113,38],[77,41,113,39],[78,8,115,6],[78,12,115,10,"route"],[78,17,115,15],[78,18,115,16,"params"],[78,24,115,22],[78,26,115,24],[79,10,115,24],[79,14,115,24,"_currentOptions$route"],[79,35,115,24],[80,10,116,8],[80,14,116,14,"stringify"],[80,23,116,23],[80,27,116,23,"_currentOptions$route"],[80,48,116,23],[80,51,116,26,"currentOptions"],[80,65,116,40],[80,66,116,41,"route"],[80,71,116,46],[80,72,116,47,"name"],[80,76,116,51],[80,77,116,52],[80,98,116,26,"_currentOptions$route"],[80,119,116,26],[80,120,116,54,"stringify"],[80,129,116,63],[81,10,118,8],[81,14,118,14,"currentParams"],[81,27,118,27],[81,30,118,30],[81,34,118,30,"fromEntries"],[81,54,118,41],[81,56,119,10,"Object"],[81,62,119,16],[81,63,119,17,"entries"],[81,70,119,24],[81,71,119,25,"route"],[81,76,119,30],[81,77,119,31,"params"],[81,83,119,37],[81,84,119,38],[81,85,119,39,"map"],[81,88,119,42],[81,89,119,43],[81,99,119,43,"_ref"],[81,103,119,43],[82,12,119,43],[82,16,119,43,"_ref2"],[82,21,119,43],[82,28,119,43,"_slicedToArray2"],[82,43,119,43],[82,44,119,43,"default"],[82,51,119,43],[82,53,119,43,"_ref"],[82,57,119,43],[83,14,119,45,"key"],[83,17,119,48],[83,20,119,48,"_ref2"],[83,25,119,48],[84,14,119,50,"value"],[84,19,119,55],[84,22,119,55,"_ref2"],[84,27,119,55],[85,12,119,55],[85,19,119,61],[85,20,120,12,"key"],[85,23,120,15],[85,25,121,12,"stringify"],[85,34,121,21],[85,46,121,12,"stringify"],[85,55,121,21],[85,56,121,24,"key"],[85,59,121,27],[85,60,121,28],[85,63,121,31,"stringify"],[85,72,121,40],[85,73,121,41,"key"],[85,76,121,44],[85,77,121,45],[85,78,121,46,"value"],[85,83,121,51],[85,84,121,52],[85,87,121,55,"String"],[85,93,121,61],[85,94,121,62,"value"],[85,99,121,67],[85,100,121,68],[85,101,122,11],[86,10,122,11],[86,12,123,8],[86,13,123,9],[87,10,125,8],[87,14,125,12,"pattern"],[87,21,125,19],[87,23,125,21],[88,12,126,10,"Object"],[88,18,126,16],[88,19,126,17,"assign"],[88,25,126,23],[88,26,126,24,"allParams"],[88,35,126,33],[88,37,126,35,"currentParams"],[88,50,126,48],[88,51,126,49],[89,10,127,8],[90,10,129,8],[90,14,129,12,"focusedRoute"],[90,26,129,24],[90,31,129,29,"route"],[90,36,129,34],[90,38,129,36],[91,12,129,36],[91,16,129,36,"_pattern"],[91,24,129,36],[92,12,130,10],[93,12,131,10],[94,12,132,10,"focusedParams"],[94,25,132,23],[94,28,132,23,"Object"],[94,34,132,23],[94,35,132,23,"assign"],[94,41,132,23],[94,46,132,31,"currentParams"],[94,59,132,44],[94,60,132,46],[95,12,134,10],[95,13,134,10,"_pattern"],[95,21,134,10],[95,24,134,10,"pattern"],[95,31,134,17],[95,44,134,10,"_pattern"],[95,52,134,10],[95,53,135,14,"split"],[95,58,135,19],[95,59,135,20],[95,62,135,23],[95,63,135,24],[95,64,136,13,"filter"],[95,70,136,19],[95,71,136,20],[95,81,136,21,"p"],[95,82,136,22],[96,14,136,22],[96,21,136,27,"p"],[96,22,136,28],[96,23,136,29,"startsWith"],[96,33,136,39],[96,34,136,40],[96,37,136,43],[96,38,136,44],[97,12,136,44],[98,12,137,12],[99,12,137,12],[99,13,138,13,"forEach"],[99,20,138,20],[99,21,138,21],[99,31,138,22,"p"],[99,32,138,23],[99,34,138,28],[100,14,139,14],[100,18,139,20,"name"],[100,22,139,24],[100,25,139,27,"getParamName"],[100,37,139,39],[100,38,139,40,"p"],[100,39,139,41],[100,40,139,42],[102,14,141,14],[103,14,142,14],[103,18,142,18,"focusedParams"],[103,31,142,31],[103,33,142,33],[104,16,143,16],[105,16,144,16],[105,23,144,23,"focusedParams"],[105,36,144,36],[105,37,144,37,"name"],[105,41,144,41],[105,42,144,42],[106,14,145,14],[107,12,146,12],[107,13,146,13],[107,14,146,14],[108,10,147,8],[109,8,148,6],[111,8,150,6],[112,8,151,6],[112,12,151,10],[112,13,151,11,"currentOptions"],[112,27,151,25],[112,28,151,26,"route"],[112,33,151,31],[112,34,151,32,"name"],[112,38,151,36],[112,39,151,37],[112,40,151,38,"screens"],[112,47,151,45],[112,51,151,49,"route"],[112,56,151,54],[112,57,151,55,"state"],[112,62,151,60],[112,67,151,65,"undefined"],[112,76,151,74],[112,78,151,76],[113,10,152,8,"hasNext"],[113,17,152,15],[113,20,152,18],[113,25,152,23],[114,8,153,6],[114,9,153,7],[114,15,153,13],[115,10,154,8,"index"],[115,15,154,13],[115,18,155,10],[115,25,155,17,"route"],[115,30,155,22],[115,31,155,23,"state"],[115,36,155,28],[115,37,155,29,"index"],[115,42,155,34],[115,47,155,39],[115,55,155,47],[115,58,156,14,"route"],[115,63,156,19],[115,64,156,20,"state"],[115,69,156,25],[115,70,156,26,"index"],[115,75,156,31],[115,78,157,14,"route"],[115,83,157,19],[115,84,157,20,"state"],[115,89,157,25],[115,90,157,26,"routes"],[115,96,157,32],[115,97,157,33,"length"],[115,103,157,39],[115,106,157,42],[115,107,157,43],[116,10,159,8],[116,14,159,14,"nextRoute"],[116,23,159,23],[116,26,159,26,"route"],[116,31,159,31],[116,32,159,32,"state"],[116,37,159,37],[116,38,159,38,"routes"],[116,44,159,44],[116,45,159,45,"index"],[116,50,159,50],[116,51,159,51],[117,10,160,8],[117,14,160,14,"nestedConfig"],[117,26,160,26],[117,29,160,29,"currentOptions"],[117,43,160,43],[117,44,160,44,"route"],[117,49,160,49],[117,50,160,50,"name"],[117,54,160,54],[117,55,160,55],[117,56,160,56,"screens"],[117,63,160,63],[119,10,162,8],[120,10,163,8],[120,14,163,12,"nestedConfig"],[120,26,163,24],[120,30,163,28,"nextRoute"],[120,39,163,37],[120,40,163,38,"name"],[120,44,163,42],[120,48,163,46,"nestedConfig"],[120,60,163,58],[120,62,163,60],[121,12,164,10,"route"],[121,17,164,15],[121,20,164,18,"nextRoute"],[121,29,164,64],[122,12,165,10,"currentOptions"],[122,26,165,24],[122,29,165,27,"nestedConfig"],[122,41,165,39],[123,10,166,8],[123,11,166,9],[123,17,166,15],[124,12,167,10],[125,12,168,10,"hasNext"],[125,19,168,17],[125,22,168,20],[125,27,168,25],[126,10,169,8],[127,8,170,6],[128,6,171,4],[128,7,171,5],[129,6,110,4],[129,13,110,11,"route"],[129,18,110,16],[129,19,110,17,"name"],[129,23,110,21],[129,27,110,25,"currentOptions"],[129,41,110,39],[129,45,110,43,"hasNext"],[129,52,110,50],[130,8,110,50,"_loop2"],[130,14,110,50],[131,6,110,50],[132,6,173,4],[132,10,173,8,"pattern"],[132,17,173,15],[132,22,173,20,"undefined"],[132,31,173,29],[132,33,173,31],[133,8,174,6,"pattern"],[133,15,174,13],[133,18,174,16,"nestedRouteNames"],[133,34,174,32],[133,35,174,33,"join"],[133,39,174,37],[133,40,174,38],[133,43,174,41],[133,44,174,42],[134,6,175,4],[135,6,177,4],[135,10,177,8,"currentOptions"],[135,24,177,22],[135,25,177,23,"route"],[135,30,177,28],[135,31,177,29,"name"],[135,35,177,33],[135,36,177,34],[135,41,177,39,"undefined"],[135,50,177,48],[135,52,177,50],[136,8,178,6,"path"],[136,12,178,10],[136,16,178,14,"pattern"],[136,23,178,21],[136,24,179,9,"split"],[136,29,179,14],[136,30,179,15],[136,33,179,18],[136,34,179,19],[136,35,180,9,"map"],[136,38,180,12],[136,39,180,13],[136,49,180,14,"p"],[136,50,180,15],[136,52,180,20],[137,10,181,10],[137,14,181,16,"name"],[137,18,181,20],[137,21,181,23,"getParamName"],[137,33,181,35],[137,34,181,36,"p"],[137,35,181,37],[137,36,181,38],[139,10,183,10],[140,10,184,10],[141,10,185,10],[142,10,186,10],[142,14,186,14,"p"],[142,15,186,15],[142,20,186,20],[142,23,186,23],[142,25,186,25],[143,12,187,12],[143,19,187,19,"route"],[143,24,187,24],[143,25,187,25,"name"],[143,29,187,29],[144,10,188,10],[146,10,190,10],[147,10,191,10],[147,14,191,14,"p"],[147,15,191,15],[147,16,191,16,"startsWith"],[147,26,191,26],[147,27,191,27],[147,30,191,30],[147,31,191,31],[147,33,191,33],[148,12,192,12],[148,16,192,18,"value"],[148,22,192,23],[148,25,192,26,"allParams"],[148,34,192,35],[148,35,192,36,"name"],[148,39,192,40],[148,40,192,41],[149,12,194,12],[149,16,194,16,"value"],[149,22,194,21],[149,27,194,26,"undefined"],[149,36,194,35],[149,40,194,39,"p"],[149,41,194,40],[149,42,194,41,"endsWith"],[149,50,194,49],[149,51,194,50],[149,54,194,53],[149,55,194,54],[149,57,194,56],[150,14,195,14],[151,14,196,14],[151,21,196,21],[151,23,196,23],[152,12,197,12],[153,12,199,12],[153,19,199,19,"encodeURIComponent"],[153,37,199,37],[153,38,199,38,"value"],[153,44,199,43],[153,45,199,44],[154,10,200,10],[155,10,202,10],[155,17,202,17,"encodeURIComponent"],[155,35,202,35],[155,36,202,36,"p"],[155,37,202,37],[155,38,202,38],[156,8,203,8],[156,9,203,9],[156,10,203,10],[156,11,204,9,"join"],[156,15,204,13],[156,16,204,14],[156,19,204,17],[156,20,204,18],[157,6,205,4],[157,7,205,5],[157,13,205,11],[158,8,206,6,"path"],[158,12,206,10],[158,16,206,14,"encodeURIComponent"],[158,34,206,32],[158,35,206,33,"route"],[158,40,206,38],[158,41,206,39,"name"],[158,45,206,43],[158,46,206,44],[159,6,207,4],[160,6,209,4],[160,10,209,8],[160,11,209,9,"focusedParams"],[160,24,209,22],[160,26,209,24],[161,8,210,6,"focusedParams"],[161,21,210,19],[161,24,210,22,"focusedRoute"],[161,36,210,34],[161,37,210,35,"params"],[161,43,210,41],[162,6,211,4],[163,6,213,4],[163,10,213,8,"route"],[163,15,213,13],[163,16,213,14,"state"],[163,21,213,19],[163,23,213,21],[164,8,214,6,"path"],[164,12,214,10],[164,16,214,14],[164,19,214,17],[165,6,215,4],[165,7,215,5],[165,13,215,11],[165,17,215,15,"focusedParams"],[165,30,215,28],[165,32,215,30],[166,8,216,6],[166,13,216,11],[166,17,216,15,"param"],[166,22,216,20],[166,26,216,24,"focusedParams"],[166,39,216,37],[166,41,216,39],[167,10,217,8],[167,14,217,12,"focusedParams"],[167,27,217,25],[167,28,217,26,"param"],[167,33,217,31],[167,34,217,32],[167,39,217,37],[167,50,217,48],[167,52,217,50],[168,12,218,10],[169,12,219,10],[169,19,219,17,"focusedParams"],[169,32,219,30],[169,33,219,31,"param"],[169,38,219,36],[169,39,219,37],[170,10,220,8],[171,8,221,6],[172,8,223,6],[172,12,223,12,"query"],[172,17,223,17],[172,20,223,20,"queryString"],[172,31,223,31],[172,32,223,32,"stringify"],[172,41,223,41],[172,42,223,42,"focusedParams"],[172,55,223,55],[172,57,223,57],[173,10,223,59,"sort"],[173,14,223,63],[173,16,223,65],[174,8,223,71],[174,9,223,72],[174,10,223,73],[175,8,225,6],[175,12,225,10,"query"],[175,17,225,15],[175,19,225,17],[176,10,226,8,"path"],[176,14,226,12],[176,18,226,16],[176,22,226,20,"query"],[176,27,226,25],[176,29,226,27],[177,8,227,6],[178,6,228,4],[179,6,230,4,"current"],[179,13,230,11],[179,16,230,14,"route"],[179,21,230,19],[179,22,230,20,"state"],[179,27,230,25],[180,4,231,2],[180,5,231,3],[181,4,93,2],[181,11,93,9,"current"],[181,18,93,16],[182,6,93,16,"_loop"],[182,11,93,16],[183,4,93,16],[185,4,233,2],[186,4,234,2,"path"],[186,8,234,6],[186,11,234,9,"path"],[186,15,234,13],[186,16,234,14,"replace"],[186,23,234,21],[186,24,234,22],[186,30,234,28],[186,32,234,30],[186,35,234,33],[186,36,234,34],[187,4,235,2,"path"],[187,8,235,6],[187,11,235,9,"path"],[187,15,235,13],[187,16,235,14,"length"],[187,22,235,20],[187,25,235,23],[187,26,235,24],[187,29,235,27,"path"],[187,33,235,31],[187,34,235,32,"replace"],[187,41,235,39],[187,42,235,40],[187,47,235,45],[187,49,235,47],[187,51,235,49],[187,52,235,50],[187,55,235,53,"path"],[187,59,235,57],[188,4,237,2],[188,11,237,9,"path"],[188,15,237,13],[189,2,238,0],[190,2,240,0],[190,6,240,6,"getParamName"],[190,18,240,18],[190,21,240,21],[190,30,240,6,"getParamName"],[190,42,240,18,"getParamName"],[190,43,240,22,"pattern"],[190,50,240,37],[191,4,240,37],[191,11,241,2,"pattern"],[191,18,241,9],[191,19,241,10,"replace"],[191,26,241,17],[191,27,241,18],[191,31,241,22],[191,33,241,24],[191,35,241,26],[191,36,241,27],[191,37,241,28,"replace"],[191,44,241,35],[191,45,241,36],[191,50,241,41],[191,52,241,43],[191,54,241,45],[191,55,241,46],[192,2,241,46],[193,2,243,0],[193,6,243,6,"joinPaths"],[193,15,243,15],[193,18,243,18],[193,27,243,6,"joinPaths"],[193,36,243,15,"joinPaths"],[193,37,243,15],[194,4,243,15],[194,8,243,15,"_ref3"],[194,13,243,15],[195,4,243,15],[195,13,243,15,"_len"],[195,17,243,15],[195,20,243,15,"arguments"],[195,29,243,15],[195,30,243,15,"length"],[195,36,243,15],[195,38,243,22,"paths"],[195,43,243,27],[195,50,243,27,"Array"],[195,55,243,27],[195,56,243,27,"_len"],[195,60,243,27],[195,63,243,27,"_key"],[195,67,243,27],[195,73,243,27,"_key"],[195,77,243,27],[195,80,243,27,"_len"],[195,84,243,27],[195,86,243,27,"_key"],[195,90,243,27],[196,6,243,22,"paths"],[196,11,243,27],[196,12,243,27,"_key"],[196,16,243,27],[196,20,243,27,"arguments"],[196,29,243,27],[196,30,243,27,"_key"],[196,34,243,27],[197,4,243,27],[198,4,243,27],[198,11,244,2],[198,12,244,2,"_ref3"],[198,17,244,2],[198,20,244,3],[198,22,244,5],[198,24,245,5,"concat"],[198,30,245,11],[198,31,245,11,"apply"],[198,36,245,11],[198,37,245,11,"_ref3"],[198,42,245,11],[198,48,245,11,"_toConsumableArray2"],[198,67,245,11],[198,68,245,11,"default"],[198,75,245,11],[198,77,245,15,"paths"],[198,82,245,20],[198,83,245,21,"map"],[198,86,245,24],[198,87,245,25],[198,97,245,26,"p"],[198,98,245,27],[199,6,245,27],[199,13,245,32,"p"],[199,14,245,33],[199,15,245,34,"split"],[199,20,245,39],[199,21,245,40],[199,24,245,43],[199,25,245,44],[200,4,245,44],[200,6,245,45],[200,8,245,46],[200,9,246,5,"filter"],[200,15,246,11],[200,16,246,12,"Boolean"],[200,23,246,19],[200,24,246,20],[200,25,247,5,"join"],[200,29,247,9],[200,30,247,10],[200,33,247,13],[200,34,247,14],[201,2,247,14],[202,2,249,0],[202,6,249,6,"createConfigItem"],[202,22,249,22],[202,25,249,25],[202,34,249,6,"createConfigItem"],[202,50,249,22,"createConfigItem"],[202,51,250,2,"config"],[202,57,250,37],[202,59,251,2,"parentPattern"],[202,72,251,24],[202,74,252,17],[203,4,252,17],[203,8,252,17,"_pattern3"],[203,17,252,17],[204,4,253,2],[204,8,253,6],[204,15,253,13,"config"],[204,21,253,19],[204,26,253,24],[204,34,253,32],[204,36,253,34],[205,6,254,4],[206,6,255,4],[206,10,255,10,"pattern"],[206,19,255,17],[206,22,255,20,"parentPattern"],[206,35,255,33],[206,38,255,36,"joinPaths"],[206,47,255,45],[206,48,255,46,"parentPattern"],[206,61,255,59],[206,63,255,61,"config"],[206,69,255,67],[206,70,255,68],[206,73,255,71,"config"],[206,79,255,77],[207,6,257,4],[207,13,257,11],[208,8,257,13,"pattern"],[208,15,257,20],[208,17,257,13,"pattern"],[209,6,257,21],[209,7,257,22],[210,4,258,2],[212,4,260,2],[213,4,261,2],[214,4,262,2],[214,8,262,6,"pattern"],[214,15,262,33],[215,4,264,2],[215,8,264,6,"config"],[215,14,264,12],[215,15,264,13,"exact"],[215,20,264,18],[215,24,264,22,"config"],[215,30,264,28],[215,31,264,29,"path"],[215,35,264,33],[215,40,264,38,"undefined"],[215,49,264,47],[215,51,264,49],[216,6,265,4],[216,12,265,10],[216,16,265,14,"Error"],[216,21,265,19],[216,22,266,6],[216,172,267,4],[216,173,267,5],[217,4,268,2],[218,4,270,2,"pattern"],[218,11,270,9],[218,14,271,4,"config"],[218,20,271,10],[218,21,271,11,"exact"],[218,26,271,16],[218,31,271,21],[218,35,271,25],[218,38,272,8,"joinPaths"],[218,47,272,17],[218,48,272,18,"parentPattern"],[218,61,272,31],[218,65,272,35],[218,67,272,37],[218,69,272,39,"config"],[218,75,272,45],[218,76,272,46,"path"],[218,80,272,50],[218,84,272,54],[218,86,272,56],[218,87,272,57],[218,90,273,8,"config"],[218,96,273,14],[218,97,273,15,"path"],[218,101,273,19],[218,105,273,23],[218,107,273,25],[219,4,275,2],[219,8,275,8,"screens"],[219,15,275,15],[219,18,275,18,"config"],[219,24,275,24],[219,25,275,25,"screens"],[219,32,275,32],[219,35,276,6,"createNormalizedConfigs"],[219,58,276,29],[219,59,276,30,"config"],[219,65,276,36],[219,66,276,37,"screens"],[219,73,276,44],[219,75,276,46,"pattern"],[219,82,276,53],[219,83,276,54],[219,86,277,6,"undefined"],[219,95,277,15],[220,4,279,2],[220,11,279,9],[221,6,280,4],[222,6,281,4,"pattern"],[222,13,281,11],[222,16,281,11,"_pattern3"],[222,25,281,11],[222,28,281,13,"pattern"],[222,35,281,20],[222,56,281,13,"_pattern3"],[222,65,281,13],[222,66,281,22,"split"],[222,71,281,27],[222,72,281,28],[222,75,281,31],[222,76,281,32],[222,77,281,33,"filter"],[222,83,281,39],[222,84,281,40,"Boolean"],[222,91,281,47],[222,92,281,48],[222,93,281,49,"join"],[222,97,281,53],[222,98,281,54],[222,101,281,57],[222,102,281,58],[223,6,282,4,"stringify"],[223,15,282,13],[223,17,282,15,"config"],[223,23,282,21],[223,24,282,22,"stringify"],[223,33,282,31],[224,6,283,4,"screens"],[224,13,283,11],[224,15,283,4,"screens"],[225,4,284,2],[225,5,284,3],[226,2,285,0],[226,3,285,1],[227,2,287,0],[227,6,287,6,"createNormalizedConfigs"],[227,29,287,29],[227,32,287,32],[227,41,287,6,"createNormalizedConfigs"],[227,64,287,29,"createNormalizedConfigs"],[227,65,288,2,"options"],[227,72,288,32],[227,74,289,2,"pattern"],[227,81,289,18],[228,4,289,18],[228,11,291,2],[228,15,291,2,"fromEntries"],[228,35,291,13],[228,37,292,4,"Object"],[228,43,292,10],[228,44,292,11,"entries"],[228,51,292,18],[228,52,292,19,"options"],[228,59,292,26],[228,60,292,27],[228,61,292,28,"map"],[228,64,292,31],[228,65,292,32],[228,75,292,32,"_ref4"],[228,80,292,32],[228,82,292,47],[229,6,292,47],[229,10,292,47,"_ref5"],[229,15,292,47],[229,22,292,47,"_slicedToArray2"],[229,37,292,47],[229,38,292,47,"default"],[229,45,292,47],[229,47,292,47,"_ref4"],[229,52,292,47],[230,8,292,34,"name"],[230,12,292,38],[230,15,292,38,"_ref5"],[230,20,292,38],[231,8,292,40,"c"],[231,9,292,41],[231,12,292,41,"_ref5"],[231,17,292,41],[232,6,293,6],[232,10,293,12,"result"],[232,16,293,18],[232,19,293,21,"createConfigItem"],[232,35,293,37],[232,36,293,38,"c"],[232,37,293,39],[232,39,293,41,"pattern"],[232,46,293,48],[232,47,293,49],[233,6,295,6],[233,13,295,13],[233,14,295,14,"name"],[233,18,295,18],[233,20,295,20,"result"],[233,26,295,26],[233,27,295,27],[234,4,296,4],[234,5,296,5],[234,6,297,2],[234,7,297,3],[235,2,297,3],[236,0,297,4],[236,3]],"functionMap":{"names":["<global>","getActiveRoute","getPathFromState","Object.entries.map$argument_0","pattern.split.filter$argument_0","pattern.split.filter.forEach$argument_0","pattern.split.map$argument_0","getParamName","joinPaths","paths.map$argument_0","createConfigItem","createNormalizedConfigs"],"mappings":"AAA;uBC0B;CDW;eE+B;2CCkD;WDG;oBEc,wBF;qBGE;aHQ;aIkC;SJuB;CFmC;qBOE;8CPC;kBQE;yBCE,mBD;cRE;yBUE;CVoC;gCWE;gCRK;KQI;GXC"}},"type":"js/module"}]}