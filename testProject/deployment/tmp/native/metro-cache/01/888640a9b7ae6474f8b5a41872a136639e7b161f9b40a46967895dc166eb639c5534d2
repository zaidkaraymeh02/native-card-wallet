{"dependencies":[],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * @format\n   * \n   */\n\n  /**\n   * The particular require runtime that we are using looks for a global\n   * `ErrorUtils` object and if it exists, then it requires modules with the\n   * error handler specified via ErrorUtils.setGlobalHandler by calling the\n   * require function with applyWithGuard. Since the require module is loaded\n   * before any of the modules, this ErrorUtils must be defined (and the handler\n   * set) globally before requiring anything.\n   *\n   * However, we still want to treat ErrorUtils as a module so that other modules\n   * that use it aren't just using a global variable, so simply export the global\n   * variable here. ErrorUtils is originally defined in a file named error-guard.js.\n   */\n  module.exports = global.ErrorUtils;\n});","lineCount":25,"map":[[2,2,1,0],[3,0,2,0],[4,0,3,0],[5,0,4,0],[6,0,5,0],[7,0,6,0],[8,0,7,0],[9,0,8,0],[10,0,9,0],[12,2,13,0],[13,0,14,0],[14,0,15,0],[15,0,16,0],[16,0,17,0],[17,0,18,0],[18,0,19,0],[19,0,20,0],[20,0,21,0],[21,0,22,0],[22,0,23,0],[23,0,24,0],[24,2,25,0,"module"],[24,8,25,6],[24,9,25,7,"exports"],[24,16,25,14],[24,19,25,18,"global"],[24,25,25,24],[24,26,25,25,"ErrorUtils"],[24,36,25,49],[25,0,25,50],[25,3]],"functionMap":{"names":["<global>"],"mappings":"AAA"}},"type":"js/module"}]}