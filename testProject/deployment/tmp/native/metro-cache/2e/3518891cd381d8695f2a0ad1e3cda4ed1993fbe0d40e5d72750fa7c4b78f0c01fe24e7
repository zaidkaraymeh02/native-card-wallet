{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1753,"column":0,"index":50048}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1753,"column":0,"index":50048}}],"key":"EU+qeBIKi4KcIzPeK4PbkLqFqVY="}},{"name":"@babel/runtime/helpers/objectWithoutProperties","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1753,"column":0,"index":50048}}],"key":"l9ek7s8G7hY7pJY4P1vxwsk0NPM="}},{"name":"../../Pressability/usePressability","data":{"asyncType":null,"locs":[{"start":{"line":20,"column":0,"index":508},"end":{"line":20,"column":65,"index":573}}],"key":"8sknIYuMeQussHe8K4bG4Mrv+fY="}},{"name":"../../StyleSheet/flattenStyle","data":{"asyncType":null,"locs":[{"start":{"line":21,"column":0,"index":574},"end":{"line":21,"column":57,"index":631}}],"key":"g+sqej+kEmJ8JPA0E/+1AP6zIz0="}},{"name":"../../StyleSheet/StyleSheet","data":{"asyncType":null,"locs":[{"start":{"line":22,"column":0,"index":632},"end":{"line":26,"column":37,"index":753}}],"key":"8T7QAUV0eNWHjP7T5GM/rp2jyUM="}},{"name":"../../Text/Text","data":{"asyncType":null,"locs":[{"start":{"line":27,"column":0,"index":754},"end":{"line":27,"column":35,"index":789}}],"key":"o6+4JG6aRTkaznUOsv3oFDPa4t0="}},{"name":"../../Text/TextAncestor","data":{"asyncType":null,"locs":[{"start":{"line":28,"column":0,"index":790},"end":{"line":28,"column":51,"index":841}}],"key":"nN+Mxb49FJB9p6SkiBlgCRiq+K0="}},{"name":"../../Utilities/Platform","data":{"asyncType":null,"locs":[{"start":{"line":29,"column":0,"index":842},"end":{"line":29,"column":48,"index":890}}],"key":"u8HkMskTipFtyna6raQCNa0ZU48="}},{"name":"../../Utilities/useMergeRefs","data":{"asyncType":null,"locs":[{"start":{"line":30,"column":0,"index":891},"end":{"line":30,"column":56,"index":947}}],"key":"c/QQVhxNH5PZowSfvwPFRHxK/ak="}},{"name":"./TextInputState","data":{"asyncType":null,"locs":[{"start":{"line":31,"column":0,"index":948},"end":{"line":31,"column":46,"index":994}}],"key":"GlU9M4KNJcd1nPVrGoJ4X0kybYA="}},{"name":"./TextInputEventEmitter","data":{"asyncType":null,"locs":[{"start":{"line":32,"column":0,"index":995},"end":{"line":32,"column":60,"index":1055}}],"key":"uwh/tt0LEG0z6DTnq/exEDOC6mY="}},{"name":"invariant","data":{"asyncType":null,"locs":[{"start":{"line":33,"column":0,"index":1056},"end":{"line":33,"column":34,"index":1090}}],"key":"Fzi/BpZws2YooIGJ9b6u0HJtuks="}},{"name":"nullthrows","data":{"asyncType":null,"locs":[{"start":{"line":34,"column":0,"index":1091},"end":{"line":34,"column":36,"index":1127}}],"key":"3yYZ/IFwZXE7GnlKPSAzr74cRoo="}},{"name":"react","data":{"asyncType":null,"locs":[{"start":{"line":35,"column":0,"index":1128},"end":{"line":35,"column":31,"index":1159}}],"key":"a4EMkKqamYWCMMPV7UeQlqGQ+ks="}},{"name":"react/jsx-runtime","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1753,"column":0,"index":50048}}],"key":"5dCMGbjkz1QWCPjOwzvy5ZBkuK8="}},{"name":"./AndroidTextInputNativeComponent","data":{"asyncType":null,"locs":[{"start":{"line":54,"column":21,"index":1806},"end":{"line":54,"column":65,"index":1850}},{"start":{"line":56,"column":4,"index":1893},"end":{"line":56,"column":48,"index":1937}}],"key":"mY63ThbZxS7IbBVDsNq0h9Tyt8Q="}},{"name":"./RCTSingelineTextInputNativeComponent","data":{"asyncType":null,"locs":[{"start":{"line":59,"column":4,"index":2019},"end":{"line":59,"column":53,"index":2068}},{"start":{"line":61,"column":4,"index":2123},"end":{"line":61,"column":53,"index":2172}}],"key":"vlFPMyV0tg3xGAJnJ26LH3n7uKU="}},{"name":"./RCTMultilineTextInputNativeComponent","data":{"asyncType":null,"locs":[{"start":{"line":63,"column":4,"index":2217},"end":{"line":63,"column":53,"index":2266}},{"start":{"line":65,"column":4,"index":2320},"end":{"line":65,"column":53,"index":2369}}],"key":"dVy8ay5uPfLolr6wqgDT2nwKJbk="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\"));\n  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/objectWithoutProperties\"));\n  var _usePressability = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"../../Pressability/usePressability\"));\n  var _flattenStyle = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"../../StyleSheet/flattenStyle\"));\n  var _StyleSheet = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"../../StyleSheet/StyleSheet\"));\n  var _Text = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"../../Text/Text\"));\n  var _TextAncestor = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"../../Text/TextAncestor\"));\n  var _Platform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"../../Utilities/Platform\"));\n  var _useMergeRefs = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9], \"../../Utilities/useMergeRefs\"));\n  var _TextInputState = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10], \"./TextInputState\"));\n  var _TextInputEventEmitter = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11], \"./TextInputEventEmitter\"));\n  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12], \"invariant\"));\n  var _nullthrows = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13], \"nullthrows\"));\n  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[14], \"react\"));\n  var React = _react;\n  var _jsxRuntime = _$$_REQUIRE(_dependencyMap[15], \"react/jsx-runtime\");\n  var _jsxFileName = \"C:\\\\Program Files\\\\Mendix\\\\10.18.1.55792\\\\modeler\\\\tools\\\\node\\\\node_modules\\\\react-native\\\\Libraries\\\\Components\\\\TextInput\\\\TextInput.js\";\n  var _excluded = [\"aria-busy\", \"aria-checked\", \"aria-disabled\", \"aria-expanded\", \"aria-selected\", \"accessibilityState\", \"id\", \"tabIndex\", \"selection\", \"selectionColor\", \"selectionHandleColor\", \"cursorColor\"],\n    _excluded2 = [\"onBlur\", \"onFocus\"],\n    _excluded3 = [\"allowFontScaling\", \"rejectResponderTermination\", \"underlineColorAndroid\", \"autoComplete\", \"textContentType\", \"readOnly\", \"editable\", \"enterKeyHint\", \"returnKeyType\", \"inputMode\", \"showSoftInputOnFocus\", \"keyboardType\"];\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * \n   * @format\n   */\n  function _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\n  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\n  var AndroidTextInput;\n  var AndroidTextInputCommands;\n  var RCTSinglelineTextInputView;\n  var RCTSinglelineTextInputNativeCommands;\n  var RCTMultilineTextInputView;\n  var RCTMultilineTextInputNativeCommands;\n  if (_Platform.default.OS === 'android') {\n    AndroidTextInput = _$$_REQUIRE(_dependencyMap[16], \"./AndroidTextInputNativeComponent\").default;\n    AndroidTextInputCommands = _$$_REQUIRE(_dependencyMap[16], \"./AndroidTextInputNativeComponent\").Commands;\n  } else if (_Platform.default.OS === 'ios') {\n    RCTSinglelineTextInputView = _$$_REQUIRE(_dependencyMap[17], \"./RCTSingelineTextInputNativeComponent\").default;\n    RCTSinglelineTextInputNativeCommands = _$$_REQUIRE(_dependencyMap[17], \"./RCTSingelineTextInputNativeComponent\").Commands;\n    RCTMultilineTextInputView = _$$_REQUIRE(_dependencyMap[18], \"./RCTMultilineTextInputNativeComponent\").default;\n    RCTMultilineTextInputNativeCommands = _$$_REQUIRE(_dependencyMap[18], \"./RCTMultilineTextInputNativeComponent\").Commands;\n  }\n  var emptyFunctionThatReturnsTrue = function emptyFunctionThatReturnsTrue() {\n    return true;\n  };\n\n  /**\n   * A foundational component for inputting text into the app via a\n   * keyboard. Props provide configurability for several features, such as\n   * auto-correction, auto-capitalization, placeholder text, and different keyboard\n   * types, such as a numeric keypad.\n   *\n   * The simplest use case is to plop down a `TextInput` and subscribe to the\n   * `onChangeText` events to read the user input. There are also other events,\n   * such as `onSubmitEditing` and `onFocus` that can be subscribed to. A simple\n   * example:\n   *\n   * ```ReactNativeWebPlayer\n   * import React, { Component } from 'react';\n   * import { AppRegistry, TextInput } from 'react-native';\n   *\n   * export default class UselessTextInput extends Component {\n   *   constructor(props) {\n   *     super(props);\n   *     this.state = { text: 'Useless Placeholder' };\n   *   }\n   *\n   *   render() {\n   *     return (\n   *       <TextInput\n   *         style={{height: 40, borderColor: 'gray', borderWidth: 1}}\n   *         onChangeText={(text) => this.setState({text})}\n   *         value={this.state.text}\n   *       />\n   *     );\n   *   }\n   * }\n   *\n   * // skip this line if using Create React Native App\n   * AppRegistry.registerComponent('AwesomeProject', () => UselessTextInput);\n   * ```\n   *\n   * Two methods exposed via the native element are .focus() and .blur() that\n   * will focus or blur the TextInput programmatically.\n   *\n   * Note that some props are only available with `multiline={true/false}`.\n   * Additionally, border styles that apply to only one side of the element\n   * (e.g., `borderBottomColor`, `borderLeftWidth`, etc.) will not be applied if\n   * `multiline=false`. To achieve the same effect, you can wrap your `TextInput`\n   * in a `View`:\n   *\n   * ```ReactNativeWebPlayer\n   * import React, { Component } from 'react';\n   * import { AppRegistry, View, TextInput } from 'react-native';\n   *\n   * class UselessTextInput extends Component {\n   *   render() {\n   *     return (\n   *       <TextInput\n   *         {...this.props} // Inherit any props passed to it; e.g., multiline, numberOfLines below\n   *         editable={true}\n   *         maxLength={40}\n   *       />\n   *     );\n   *   }\n   * }\n   *\n   * export default class UselessTextInputMultiline extends Component {\n   *   constructor(props) {\n   *     super(props);\n   *     this.state = {\n   *       text: 'Useless Multiline Placeholder',\n   *     };\n   *   }\n   *\n   *   // If you type something in the text box that is a color, the background will change to that\n   *   // color.\n   *   render() {\n   *     return (\n   *      <View style={{\n   *        backgroundColor: this.state.text,\n   *        borderBottomColor: '#000000',\n   *        borderBottomWidth: 1 }}\n   *      >\n   *        <UselessTextInput\n   *          multiline={true}\n   *          numberOfLines={4}\n   *          onChangeText={(text) => this.setState({text})}\n   *          value={this.state.text}\n   *        />\n   *      </View>\n   *     );\n   *   }\n   * }\n   *\n   * // skip these lines if using Create React Native App\n   * AppRegistry.registerComponent(\n   *  'AwesomeProject',\n   *  () => UselessTextInputMultiline\n   * );\n   * ```\n   *\n   * `TextInput` has by default a border at the bottom of its view. This border\n   * has its padding set by the background image provided by the system, and it\n   * cannot be changed. Solutions to avoid this is to either not set height\n   * explicitly, case in which the system will take care of displaying the border\n   * in the correct position, or to not display the border by setting\n   * `underlineColorAndroid` to transparent.\n   *\n   * Note that on Android performing text selection in input can change\n   * app's activity `windowSoftInputMode` param to `adjustResize`.\n   * This may cause issues with components that have position: 'absolute'\n   * while keyboard is active. To avoid this behavior either specify `windowSoftInputMode`\n   * in AndroidManifest.xml ( https://developer.android.com/guide/topics/manifest/activity-element.html )\n   * or control this param programmatically with native code.\n   *\n   */\n  function InternalTextInput(props) {\n    var _propsSelection$end, _props$multiline;\n    var ariaBusy = props['aria-busy'],\n      ariaChecked = props['aria-checked'],\n      ariaDisabled = props['aria-disabled'],\n      ariaExpanded = props['aria-expanded'],\n      ariaSelected = props['aria-selected'],\n      accessibilityState = props.accessibilityState,\n      id = props.id,\n      tabIndex = props.tabIndex,\n      propsSelection = props.selection,\n      selectionColor = props.selectionColor,\n      selectionHandleColor = props.selectionHandleColor,\n      cursorColor = props.cursorColor,\n      otherProps = (0, _objectWithoutProperties2.default)(props, _excluded);\n    var inputRef = (0, _react.useRef)(null);\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    var selection = propsSelection == null ? null : {\n      start: propsSelection.start,\n      end: (_propsSelection$end = propsSelection.end) != null ? _propsSelection$end : propsSelection.start\n    };\n    var _useState = (0, _react.useState)(0),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      mostRecentEventCount = _useState2[0],\n      setMostRecentEventCount = _useState2[1];\n    var _useState3 = (0, _react.useState)(props.value),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      lastNativeText = _useState4[0],\n      setLastNativeText = _useState4[1];\n    var _useState5 = (0, _react.useState)({\n        selection: {\n          start: -1,\n          end: -1\n        },\n        mostRecentEventCount: mostRecentEventCount\n      }),\n      _useState6 = (0, _slicedToArray2.default)(_useState5, 2),\n      lastNativeSelectionState = _useState6[0],\n      setLastNativeSelection = _useState6[1];\n    var lastNativeSelection = lastNativeSelectionState.selection;\n    var viewCommands;\n    if (AndroidTextInputCommands) {\n      viewCommands = AndroidTextInputCommands;\n    } else {\n      viewCommands = props.multiline === true ? RCTMultilineTextInputNativeCommands : RCTSinglelineTextInputNativeCommands;\n    }\n    var text = typeof props.value === 'string' ? props.value : typeof props.defaultValue === 'string' ? props.defaultValue : '';\n\n    // This is necessary in case native updates the text and JS decides\n    // that the update should be ignored and we should stick with the value\n    // that we have in JS.\n    (0, _react.useLayoutEffect)(function () {\n      var nativeUpdate = {};\n      if (lastNativeText !== props.value && typeof props.value === 'string') {\n        nativeUpdate.text = props.value;\n        setLastNativeText(props.value);\n      }\n      if (selection && lastNativeSelection && (lastNativeSelection.start !== selection.start || lastNativeSelection.end !== selection.end)) {\n        nativeUpdate.selection = selection;\n        setLastNativeSelection({\n          selection: selection,\n          mostRecentEventCount: mostRecentEventCount\n        });\n      }\n      if (Object.keys(nativeUpdate).length === 0) {\n        return;\n      }\n      if (inputRef.current != null) {\n        var _selection$start, _selection$end;\n        viewCommands.setTextAndSelection(inputRef.current, mostRecentEventCount, text, (_selection$start = selection == null ? void 0 : selection.start) != null ? _selection$start : -1, (_selection$end = selection == null ? void 0 : selection.end) != null ? _selection$end : -1);\n      }\n    }, [mostRecentEventCount, inputRef, props.value, props.defaultValue, lastNativeText, selection, lastNativeSelection, text, viewCommands]);\n    (0, _react.useLayoutEffect)(function () {\n      var inputRefValue = inputRef.current;\n      if (inputRefValue != null) {\n        _TextInputState.default.registerInput(inputRefValue);\n        _TextInputEventEmitter.default.on('tapOutside', _onTapOutside);\n        return function () {\n          _TextInputState.default.unregisterInput(inputRefValue);\n          _TextInputEventEmitter.default.removeListener('tapOutside', _onTapOutside);\n          if (_TextInputState.default.currentlyFocusedInput() === inputRefValue) {\n            (0, _nullthrows.default)(inputRefValue).blur();\n          }\n        };\n      }\n    }, [inputRef]);\n    var setLocalRef = (0, _react.useCallback)(function (instance) {\n      inputRef.current = instance;\n\n      /*\n      Hi reader from the future. I'm sorry for this.\n       This is a hack. Ideally we would forwardRef to the underlying\n      host component. However, since TextInput has it's own methods that can be\n      called as well, if we used the standard forwardRef then these\n      methods wouldn't be accessible and thus be a breaking change.\n       We have a couple of options of how to handle this:\n      - Return a new ref with everything we methods from both. This is problematic\n        because we need React to also know it is a host component which requires\n        internals of the class implementation of the ref.\n      - Break the API and have some other way to call one set of the methods or\n        the other. This is our long term approach as we want to eventually\n        get the methods on host components off the ref. So instead of calling\n        ref.measure() you might call ReactNative.measure(ref). This would hopefully\n        let the ref for TextInput then have the methods like `.clear`. Or we do it\n        the other way and make it TextInput.clear(textInputRef) which would be fine\n        too. Either way though is a breaking change that is longer term.\n      - Mutate this ref. :( Gross, but accomplishes what we need in the meantime\n        before we can get to the long term breaking change.\n      */\n      if (instance != null) {\n        // $FlowFixMe[incompatible-use] - See the explanation above.\n        Object.assign(instance, {\n          clear: function clear() {\n            if (inputRef.current != null) {\n              viewCommands.setTextAndSelection(inputRef.current, mostRecentEventCount, '', 0, 0);\n            }\n          },\n          // TODO: Fix this returning true on null === null, when no input is focused\n          isFocused: function isFocused() {\n            return _TextInputState.default.currentlyFocusedInput() === inputRef.current;\n          },\n          getNativeRef: function getNativeRef() {\n            return inputRef.current;\n          },\n          setSelection: function setSelection(start, end) {\n            if (inputRef.current != null) {\n              viewCommands.setTextAndSelection(inputRef.current, mostRecentEventCount, null, start, end);\n            }\n          }\n        });\n      }\n    }, [mostRecentEventCount, viewCommands]);\n    var ref = (0, _useMergeRefs.default)(setLocalRef, props.forwardedRef);\n    var _onChange = function _onChange(event) {\n      var currentText = event.nativeEvent.text;\n      props.onChange && props.onChange(event);\n      props.onChangeText && props.onChangeText(currentText);\n      if (inputRef.current == null) {\n        // calling `props.onChange` or `props.onChangeText`\n        // may clean up the input itself. Exits here.\n        return;\n      }\n      setLastNativeText(currentText);\n      // This must happen last, after we call setLastNativeText.\n      // Different ordering can cause bugs when editing AndroidTextInputs\n      // with multiple Fragments.\n      // We must update this so that controlled input updates work.\n      setMostRecentEventCount(event.nativeEvent.eventCount);\n    };\n    var _onSelectionChange = function _onSelectionChange(event) {\n      props.onSelectionChange && props.onSelectionChange(event);\n      if (inputRef.current == null) {\n        // calling `props.onSelectionChange`\n        // may clean up the input itself. Exits here.\n        return;\n      }\n      setLastNativeSelection({\n        selection: event.nativeEvent.selection,\n        mostRecentEventCount: mostRecentEventCount\n      });\n    };\n    var _onFocus = function _onFocus(event) {\n      _TextInputState.default.focusInput(inputRef.current);\n      if (props.onFocus) {\n        props.onFocus(event);\n      }\n    };\n    var _onBlur = function _onBlur(event) {\n      _TextInputState.default.blurInput(inputRef.current);\n      if (props.onBlur) {\n        // The native event object will have `type: undefined`.\n        // We fix this to be able to detect whether `onBlur` was called during a standard case of losing focus\n        // or because there was a tap outside of the input field. In the latter case we'll have `type: 'tapOutside'`.\n        event.type = 'blur';\n        props.onBlur(event);\n      }\n    };\n    var _onTapOutside = function _onTapOutside() {\n      var isFocused = _TextInputState.default.currentlyFocusedInput() === inputRef.current;\n      if (isFocused && props.onBlur) {\n        _TextInputState.default.blurTextInput(inputRef.current);\n      }\n    };\n    var _onScroll = function _onScroll(event) {\n      props.onScroll && props.onScroll(event);\n    };\n    var textInput = null;\n    var multiline = (_props$multiline = props.multiline) != null ? _props$multiline : false;\n    var submitBehavior;\n    if (props.submitBehavior != null) {\n      // `submitBehavior` is set explicitly\n      if (!multiline && props.submitBehavior === 'newline') {\n        // For single line text inputs, `'newline'` is not a valid option\n        submitBehavior = 'blurAndSubmit';\n      } else {\n        submitBehavior = props.submitBehavior;\n      }\n    } else if (multiline) {\n      if (props.blurOnSubmit === true) {\n        submitBehavior = 'blurAndSubmit';\n      } else {\n        submitBehavior = 'newline';\n      }\n    } else {\n      // Single line\n      if (props.blurOnSubmit !== false) {\n        submitBehavior = 'blurAndSubmit';\n      } else {\n        submitBehavior = 'submit';\n      }\n    }\n    var accessible = props.accessible !== false;\n    var focusable = props.focusable !== false;\n    var editable = props.editable,\n      hitSlop = props.hitSlop,\n      _onPress = props.onPress,\n      onPressIn = props.onPressIn,\n      onPressOut = props.onPressOut,\n      rejectResponderTermination = props.rejectResponderTermination;\n    var config = React.useMemo(function () {\n      return {\n        hitSlop: hitSlop,\n        onPress: function onPress(event) {\n          _onPress == null || _onPress(event);\n          if (editable !== false) {\n            if (inputRef.current != null) {\n              inputRef.current.focus();\n            }\n          }\n        },\n        onPressIn: onPressIn,\n        onPressOut: onPressOut,\n        cancelable: _Platform.default.OS === 'ios' ? !rejectResponderTermination : null\n      };\n    }, [editable, hitSlop, _onPress, onPressIn, onPressOut, rejectResponderTermination]);\n\n    // Hide caret during test runs due to a flashing caret\n    // makes screenshot tests flakey\n    var caretHidden = props.caretHidden;\n    if (_Platform.default.isTesting) {\n      caretHidden = true;\n    }\n\n    // TextInput handles onBlur and onFocus events\n    // so omitting onBlur and onFocus pressability handlers here.\n    var _ref = (0, _usePressability.default)(config) || {},\n      onBlur = _ref.onBlur,\n      onFocus = _ref.onFocus,\n      eventHandlers = (0, _objectWithoutProperties2.default)(_ref, _excluded2);\n    var _accessibilityState;\n    if (accessibilityState != null || ariaBusy != null || ariaChecked != null || ariaDisabled != null || ariaExpanded != null || ariaSelected != null) {\n      _accessibilityState = {\n        busy: ariaBusy != null ? ariaBusy : accessibilityState == null ? void 0 : accessibilityState.busy,\n        checked: ariaChecked != null ? ariaChecked : accessibilityState == null ? void 0 : accessibilityState.checked,\n        disabled: ariaDisabled != null ? ariaDisabled : accessibilityState == null ? void 0 : accessibilityState.disabled,\n        expanded: ariaExpanded != null ? ariaExpanded : accessibilityState == null ? void 0 : accessibilityState.expanded,\n        selected: ariaSelected != null ? ariaSelected : accessibilityState == null ? void 0 : accessibilityState.selected\n      };\n    }\n    var style = (0, _flattenStyle.default)(props.style);\n    if (typeof (style == null ? void 0 : style.fontWeight) === 'number') {\n      // $FlowFixMe[prop-missing]\n      // $FlowFixMe[cannot-write]\n      style.fontWeight = style == null ? void 0 : style.fontWeight.toString();\n    }\n    if (_Platform.default.OS === 'ios') {\n      var RCTTextInputView = props.multiline === true ? RCTMultilineTextInputView : RCTSinglelineTextInputView;\n      var useMultilineDefaultStyle = props.multiline === true && (style == null || style.padding == null && style.paddingVertical == null && style.paddingTop == null);\n      textInput = /*#__PURE__*/(0, _jsxRuntime.jsx)(RCTTextInputView\n      // $FlowFixMe[incompatible-type] - Figure out imperative + forward refs.\n      , Object.assign({\n        ref: ref\n      }, otherProps, eventHandlers, {\n        accessibilityState: _accessibilityState,\n        accessible: accessible,\n        submitBehavior: submitBehavior,\n        caretHidden: caretHidden,\n        dataDetectorTypes: props.dataDetectorTypes,\n        focusable: tabIndex !== undefined ? !tabIndex : focusable,\n        mostRecentEventCount: mostRecentEventCount,\n        nativeID: id != null ? id : props.nativeID,\n        onBlur: _onBlur,\n        onChange: _onChange,\n        onContentSizeChange: props.onContentSizeChange,\n        onFocus: _onFocus,\n        onScroll: _onScroll,\n        onSelectionChange: _onSelectionChange,\n        onSelectionChangeShouldSetResponder: emptyFunctionThatReturnsTrue,\n        selection: selection,\n        selectionColor: selectionColor,\n        style: _StyleSheet.default.compose(useMultilineDefaultStyle ? styles.multilineDefault : null, style),\n        text: text\n      }));\n    } else if (_Platform.default.OS === 'android') {\n      var _props$ariaLabelledb, _props$placeholder, _props$rows;\n      var autoCapitalize = props.autoCapitalize || 'sentences';\n      var _accessibilityLabelledBy = (_props$ariaLabelledb = props == null ? void 0 : props['aria-labelledby']) != null ? _props$ariaLabelledb : props == null ? void 0 : props.accessibilityLabelledBy;\n      var placeholder = (_props$placeholder = props.placeholder) != null ? _props$placeholder : '';\n      var children = props.children;\n      var childCount = React.Children.count(children);\n      (0, _invariant.default)(!(props.value != null && childCount), 'Cannot specify both value and children.');\n      if (childCount > 1) {\n        children = /*#__PURE__*/(0, _jsxRuntime.jsx)(_Text.default, {\n          children: children\n        });\n      }\n      // For consistency with iOS set cursor/selectionHandle color as selectionColor\n      var colorProps = {\n        selectionColor: selectionColor,\n        selectionHandleColor: selectionHandleColor === undefined ? selectionColor : selectionHandleColor,\n        cursorColor: cursorColor === undefined ? selectionColor : cursorColor\n      };\n      textInput =\n      /*#__PURE__*/\n      /* $FlowFixMe[prop-missing] the types for AndroidTextInput don't match up\n       * exactly with the props for TextInput. This will need to get fixed */\n      /* $FlowFixMe[incompatible-type] the types for AndroidTextInput don't\n       * match up exactly with the props for TextInput. This will need to get\n       * fixed */\n      /* $FlowFixMe[incompatible-type-arg] the types for AndroidTextInput don't\n       * match up exactly with the props for TextInput. This will need to get\n       * fixed */\n      (0, _jsxRuntime.jsx)(AndroidTextInput\n      // $FlowFixMe[incompatible-type] - Figure out imperative + forward refs.\n      , Object.assign({\n        ref: ref\n      }, otherProps, colorProps, eventHandlers, {\n        accessibilityState: _accessibilityState,\n        accessibilityLabelledBy: _accessibilityLabelledBy,\n        accessible: accessible,\n        autoCapitalize: autoCapitalize,\n        submitBehavior: submitBehavior,\n        caretHidden: caretHidden,\n        children: children,\n        disableFullscreenUI: props.disableFullscreenUI,\n        focusable: tabIndex !== undefined ? !tabIndex : focusable,\n        mostRecentEventCount: mostRecentEventCount,\n        nativeID: id != null ? id : props.nativeID,\n        numberOfLines: (_props$rows = props.rows) != null ? _props$rows : props.numberOfLines,\n        onBlur: _onBlur,\n        onChange: _onChange,\n        onFocus: _onFocus\n        /* $FlowFixMe[prop-missing] the types for AndroidTextInput don't match\n         * up exactly with the props for TextInput. This will need to get fixed\n         */\n        /* $FlowFixMe[incompatible-type-arg] the types for AndroidTextInput\n         * don't match up exactly with the props for TextInput. This will need\n         * to get fixed */,\n        onScroll: _onScroll,\n        onSelectionChange: _onSelectionChange,\n        placeholder: placeholder,\n        style: style,\n        text: text,\n        textBreakStrategy: props.textBreakStrategy\n      }));\n    }\n    return /*#__PURE__*/(0, _jsxRuntime.jsx)(_TextAncestor.default.Provider, {\n      value: true,\n      children: textInput\n    });\n  }\n  var enterKeyHintToReturnTypeMap = {\n    enter: 'default',\n    done: 'done',\n    go: 'go',\n    next: 'next',\n    previous: 'previous',\n    search: 'search',\n    send: 'send'\n  };\n  var inputModeToKeyboardTypeMap = {\n    none: 'default',\n    text: 'default',\n    decimal: 'decimal-pad',\n    numeric: 'number-pad',\n    tel: 'phone-pad',\n    search: _Platform.default.OS === 'ios' ? 'web-search' : 'default',\n    email: 'email-address',\n    url: 'url'\n  };\n\n  // Map HTML autocomplete values to Android autoComplete values\n  var autoCompleteWebToAutoCompleteAndroidMap = {\n    'address-line1': 'postal-address-region',\n    'address-line2': 'postal-address-locality',\n    bday: 'birthdate-full',\n    'bday-day': 'birthdate-day',\n    'bday-month': 'birthdate-month',\n    'bday-year': 'birthdate-year',\n    'cc-csc': 'cc-csc',\n    'cc-exp': 'cc-exp',\n    'cc-exp-month': 'cc-exp-month',\n    'cc-exp-year': 'cc-exp-year',\n    'cc-number': 'cc-number',\n    country: 'postal-address-country',\n    'current-password': 'password',\n    email: 'email',\n    'honorific-prefix': 'name-prefix',\n    'honorific-suffix': 'name-suffix',\n    name: 'name',\n    'additional-name': 'name-middle',\n    'family-name': 'name-family',\n    'given-name': 'name-given',\n    'new-password': 'password-new',\n    off: 'off',\n    'one-time-code': 'sms-otp',\n    'postal-code': 'postal-code',\n    sex: 'gender',\n    'street-address': 'street-address',\n    tel: 'tel',\n    'tel-country-code': 'tel-country-code',\n    'tel-national': 'tel-national',\n    username: 'username'\n  };\n\n  // Map HTML autocomplete values to iOS textContentType values\n  var autoCompleteWebToTextContentTypeMap = {\n    'address-line1': 'streetAddressLine1',\n    'address-line2': 'streetAddressLine2',\n    bday: 'birthdate',\n    'bday-day': 'birthdateDay',\n    'bday-month': 'birthdateMonth',\n    'bday-year': 'birthdateYear',\n    'cc-csc': 'creditCardSecurityCode',\n    'cc-exp-month': 'creditCardExpirationMonth',\n    'cc-exp-year': 'creditCardExpirationYear',\n    'cc-exp': 'creditCardExpiration',\n    'cc-given-name': 'creditCardGivenName',\n    'cc-additional-name': 'creditCardMiddleName',\n    'cc-family-name': 'creditCardFamilyName',\n    'cc-name': 'creditCardName',\n    'cc-number': 'creditCardNumber',\n    'cc-type': 'creditCardType',\n    'current-password': 'password',\n    country: 'countryName',\n    email: 'emailAddress',\n    name: 'name',\n    'additional-name': 'middleName',\n    'family-name': 'familyName',\n    'given-name': 'givenName',\n    nickname: 'nickname',\n    'honorific-prefix': 'namePrefix',\n    'honorific-suffix': 'nameSuffix',\n    'new-password': 'newPassword',\n    off: 'none',\n    'one-time-code': 'oneTimeCode',\n    organization: 'organizationName',\n    'organization-title': 'jobTitle',\n    'postal-code': 'postalCode',\n    'street-address': 'fullStreetAddress',\n    tel: 'telephoneNumber',\n    url: 'URL',\n    username: 'username'\n  };\n  var ExportedForwardRef = React.forwardRef(function TextInput(_ref2, forwardedRef) {\n    var _autoCompleteWebToAut;\n    var _ref2$allowFontScalin = _ref2.allowFontScaling,\n      allowFontScaling = _ref2$allowFontScalin === void 0 ? true : _ref2$allowFontScalin,\n      _ref2$rejectResponder = _ref2.rejectResponderTermination,\n      rejectResponderTermination = _ref2$rejectResponder === void 0 ? true : _ref2$rejectResponder,\n      _ref2$underlineColorA = _ref2.underlineColorAndroid,\n      underlineColorAndroid = _ref2$underlineColorA === void 0 ? 'transparent' : _ref2$underlineColorA,\n      autoComplete = _ref2.autoComplete,\n      textContentType = _ref2.textContentType,\n      readOnly = _ref2.readOnly,\n      editable = _ref2.editable,\n      enterKeyHint = _ref2.enterKeyHint,\n      returnKeyType = _ref2.returnKeyType,\n      inputMode = _ref2.inputMode,\n      showSoftInputOnFocus = _ref2.showSoftInputOnFocus,\n      keyboardType = _ref2.keyboardType,\n      restProps = (0, _objectWithoutProperties2.default)(_ref2, _excluded3);\n    // $FlowFixMe[underconstrained-implicit-instantiation]\n    var style = (0, _flattenStyle.default)(restProps.style);\n    if ((style == null ? void 0 : style.verticalAlign) != null) {\n      // $FlowFixMe[prop-missing]\n      // $FlowFixMe[cannot-write]\n      style.textAlignVertical =\n      // $FlowFixMe[invalid-computed-prop]\n      verticalAlignToTextAlignVerticalMap[style.verticalAlign];\n      // $FlowFixMe[prop-missing]\n      // $FlowFixMe[cannot-write]\n      delete style.verticalAlign;\n    }\n    return /*#__PURE__*/(0, _jsxRuntime.jsx)(InternalTextInput, Object.assign({\n      allowFontScaling: allowFontScaling,\n      rejectResponderTermination: rejectResponderTermination,\n      underlineColorAndroid: underlineColorAndroid,\n      editable: readOnly !== undefined ? !readOnly : editable,\n      returnKeyType: enterKeyHint ? enterKeyHintToReturnTypeMap[enterKeyHint] : returnKeyType,\n      keyboardType: inputMode ? inputModeToKeyboardTypeMap[inputMode] : keyboardType,\n      showSoftInputOnFocus: inputMode == null ? showSoftInputOnFocus : inputMode !== 'none',\n      autoComplete: _Platform.default.OS === 'android' ? // $FlowFixMe[invalid-computed-prop]\n      // $FlowFixMe[prop-missing]\n      (_autoCompleteWebToAut = autoCompleteWebToAutoCompleteAndroidMap[autoComplete]) != null ? _autoCompleteWebToAut : autoComplete : undefined,\n      textContentType: textContentType != null ? textContentType : _Platform.default.OS === 'ios' && autoComplete && autoComplete in autoCompleteWebToTextContentTypeMap ?\n      // $FlowFixMe[invalid-computed-prop]\n      // $FlowFixMe[prop-missing]\n      autoCompleteWebToTextContentTypeMap[autoComplete] : textContentType\n    }, restProps, {\n      forwardedRef: forwardedRef,\n      style: style\n    }));\n  });\n  ExportedForwardRef.displayName = 'TextInput';\n\n  // $FlowFixMe[prop-missing]\n  ExportedForwardRef.State = {\n    currentlyFocusedInput: _TextInputState.default.currentlyFocusedInput,\n    currentlyFocusedField: _TextInputState.default.currentlyFocusedField,\n    focusTextInput: _TextInputState.default.focusTextInput,\n    blurTextInput: _TextInputState.default.blurTextInput\n  };\n  var styles = _StyleSheet.default.create({\n    multilineDefault: {\n      // This default top inset makes RCTMultilineTextInputView seem as close as possible\n      // to single-line RCTSinglelineTextInputView defaults, using the system defaults\n      // of font size 17 and a height of 31 points.\n      paddingTop: 5\n    }\n  });\n  var verticalAlignToTextAlignVerticalMap = {\n    auto: 'auto',\n    top: 'top',\n    bottom: 'bottom',\n    middle: 'center'\n  };\n\n  // $FlowFixMe[unclear-type] Unclear type. Using `any` type is not safe.\n  module.exports = ExportedForwardRef;\n});","lineCount":695,"map":[[5,2,20,0],[5,6,20,0,"_usePressability"],[5,22,20,0],[5,25,20,0,"_interopRequireDefault"],[5,47,20,0],[5,48,20,0,"_$$_REQUIRE"],[5,59,20,0],[5,60,20,0,"_dependencyMap"],[5,74,20,0],[6,2,21,0],[6,6,21,0,"_flattenStyle"],[6,19,21,0],[6,22,21,0,"_interopRequireDefault"],[6,44,21,0],[6,45,21,0,"_$$_REQUIRE"],[6,56,21,0],[6,57,21,0,"_dependencyMap"],[6,71,21,0],[7,2,22,0],[7,6,22,0,"_StyleSheet"],[7,17,22,0],[7,20,22,0,"_interopRequireDefault"],[7,42,22,0],[7,43,22,0,"_$$_REQUIRE"],[7,54,22,0],[7,55,22,0,"_dependencyMap"],[7,69,22,0],[8,2,27,0],[8,6,27,0,"_Text"],[8,11,27,0],[8,14,27,0,"_interopRequireDefault"],[8,36,27,0],[8,37,27,0,"_$$_REQUIRE"],[8,48,27,0],[8,49,27,0,"_dependencyMap"],[8,63,27,0],[9,2,28,0],[9,6,28,0,"_TextAncestor"],[9,19,28,0],[9,22,28,0,"_interopRequireDefault"],[9,44,28,0],[9,45,28,0,"_$$_REQUIRE"],[9,56,28,0],[9,57,28,0,"_dependencyMap"],[9,71,28,0],[10,2,29,0],[10,6,29,0,"_Platform"],[10,15,29,0],[10,18,29,0,"_interopRequireDefault"],[10,40,29,0],[10,41,29,0,"_$$_REQUIRE"],[10,52,29,0],[10,53,29,0,"_dependencyMap"],[10,67,29,0],[11,2,30,0],[11,6,30,0,"_useMergeRefs"],[11,19,30,0],[11,22,30,0,"_interopRequireDefault"],[11,44,30,0],[11,45,30,0,"_$$_REQUIRE"],[11,56,30,0],[11,57,30,0,"_dependencyMap"],[11,71,30,0],[12,2,31,0],[12,6,31,0,"_TextInputState"],[12,21,31,0],[12,24,31,0,"_interopRequireDefault"],[12,46,31,0],[12,47,31,0,"_$$_REQUIRE"],[12,58,31,0],[12,59,31,0,"_dependencyMap"],[12,73,31,0],[13,2,32,0],[13,6,32,0,"_TextInputEventEmitter"],[13,28,32,0],[13,31,32,0,"_interopRequireDefault"],[13,53,32,0],[13,54,32,0,"_$$_REQUIRE"],[13,65,32,0],[13,66,32,0,"_dependencyMap"],[13,80,32,0],[14,2,33,0],[14,6,33,0,"_invariant"],[14,16,33,0],[14,19,33,0,"_interopRequireDefault"],[14,41,33,0],[14,42,33,0,"_$$_REQUIRE"],[14,53,33,0],[14,54,33,0,"_dependencyMap"],[14,68,33,0],[15,2,34,0],[15,6,34,0,"_nullthrows"],[15,17,34,0],[15,20,34,0,"_interopRequireDefault"],[15,42,34,0],[15,43,34,0,"_$$_REQUIRE"],[15,54,34,0],[15,55,34,0,"_dependencyMap"],[15,69,34,0],[16,2,35,0],[16,6,35,0,"_react"],[16,12,35,0],[16,15,35,0,"_interopRequireWildcard"],[16,38,35,0],[16,39,35,0,"_$$_REQUIRE"],[16,50,35,0],[16,51,35,0,"_dependencyMap"],[16,65,35,0],[17,2,35,31],[17,6,35,31,"React"],[17,11,35,31],[17,14,35,31,"_react"],[17,20,35,31],[18,2,35,31],[18,6,35,31,"_jsxRuntime"],[18,17,35,31],[18,20,35,31,"_$$_REQUIRE"],[18,31,35,31],[18,32,35,31,"_dependencyMap"],[18,46,35,31],[19,2,35,31],[19,6,35,31,"_jsxFileName"],[19,18,35,31],[20,2,35,31],[20,6,35,31,"_excluded"],[20,15,35,31],[21,4,35,31,"_excluded2"],[21,14,35,31],[22,4,35,31,"_excluded3"],[22,14,35,31],[23,2,1,0],[24,0,2,0],[25,0,3,0],[26,0,4,0],[27,0,5,0],[28,0,6,0],[29,0,7,0],[30,0,8,0],[31,0,9,0],[32,2,1,0],[32,11,1,0,"_getRequireWildcardCache"],[32,36,1,0,"e"],[32,37,1,0],[32,66,1,0,"WeakMap"],[32,73,1,0],[32,92,1,0,"r"],[32,93,1,0],[32,100,1,0,"WeakMap"],[32,107,1,0],[32,111,1,0,"t"],[32,112,1,0],[32,119,1,0,"WeakMap"],[32,126,1,0],[32,138,1,0,"_getRequireWildcardCache"],[32,162,1,0],[32,174,1,0,"_getRequireWildcardCache"],[32,199,1,0,"e"],[32,200,1,0],[32,211,1,0,"e"],[32,212,1,0],[32,215,1,0,"t"],[32,216,1,0],[32,219,1,0,"r"],[32,220,1,0],[32,225,1,0,"e"],[32,226,1,0],[33,2,1,0],[33,11,1,0,"_interopRequireWildcard"],[33,35,1,0,"e"],[33,36,1,0],[33,38,1,0,"r"],[33,39,1,0],[33,48,1,0,"r"],[33,49,1,0],[33,53,1,0,"e"],[33,54,1,0],[33,58,1,0,"e"],[33,59,1,0],[33,60,1,0,"__esModule"],[33,70,1,0],[33,79,1,0,"e"],[33,80,1,0],[33,95,1,0,"e"],[33,96,1,0],[33,119,1,0,"e"],[33,120,1,0],[33,145,1,0,"e"],[33,146,1,0],[33,157,1,0,"default"],[33,164,1,0],[33,166,1,0,"e"],[33,167,1,0],[33,175,1,0,"t"],[33,176,1,0],[33,179,1,0,"_getRequireWildcardCache"],[33,203,1,0],[33,204,1,0,"r"],[33,205,1,0],[33,212,1,0,"t"],[33,213,1,0],[33,217,1,0,"t"],[33,218,1,0],[33,219,1,0,"has"],[33,222,1,0],[33,223,1,0,"e"],[33,224,1,0],[33,234,1,0,"t"],[33,235,1,0],[33,236,1,0,"get"],[33,239,1,0],[33,240,1,0,"e"],[33,241,1,0],[33,248,1,0,"n"],[33,249,1,0],[33,254,1,0,"__proto__"],[33,263,1,0],[33,273,1,0,"a"],[33,274,1,0],[33,277,1,0,"Object"],[33,283,1,0],[33,284,1,0,"defineProperty"],[33,298,1,0],[33,302,1,0,"Object"],[33,308,1,0],[33,309,1,0,"getOwnPropertyDescriptor"],[33,333,1,0],[33,344,1,0,"u"],[33,345,1,0],[33,349,1,0,"e"],[33,350,1,0],[33,370,1,0,"u"],[33,371,1,0],[33,378,1,0,"hasOwnProperty"],[33,392,1,0],[33,393,1,0,"call"],[33,397,1,0],[33,398,1,0,"e"],[33,399,1,0],[33,401,1,0,"u"],[33,402,1,0],[33,411,1,0,"i"],[33,412,1,0],[33,415,1,0,"a"],[33,416,1,0],[33,419,1,0,"Object"],[33,425,1,0],[33,426,1,0,"getOwnPropertyDescriptor"],[33,450,1,0],[33,451,1,0,"e"],[33,452,1,0],[33,454,1,0,"u"],[33,455,1,0],[33,465,1,0,"i"],[33,466,1,0],[33,471,1,0,"i"],[33,472,1,0],[33,473,1,0,"get"],[33,476,1,0],[33,480,1,0,"i"],[33,481,1,0],[33,482,1,0,"set"],[33,485,1,0],[33,489,1,0,"Object"],[33,495,1,0],[33,496,1,0,"defineProperty"],[33,510,1,0],[33,511,1,0,"n"],[33,512,1,0],[33,514,1,0,"u"],[33,515,1,0],[33,517,1,0,"i"],[33,518,1,0],[33,522,1,0,"n"],[33,523,1,0],[33,524,1,0,"u"],[33,525,1,0],[33,529,1,0,"e"],[33,530,1,0],[33,531,1,0,"u"],[33,532,1,0],[33,544,1,0,"n"],[33,545,1,0],[33,546,1,0,"default"],[33,553,1,0],[33,556,1,0,"e"],[33,557,1,0],[33,559,1,0,"t"],[33,560,1,0],[33,564,1,0,"t"],[33,565,1,0],[33,566,1,0,"set"],[33,569,1,0],[33,570,1,0,"e"],[33,571,1,0],[33,573,1,0,"n"],[33,574,1,0],[33,577,1,0,"n"],[33,578,1,0],[34,2,46,0],[34,6,46,4,"AndroidTextInput"],[34,22,46,20],[35,2,47,0],[35,6,47,4,"AndroidTextInputCommands"],[35,30,47,28],[36,2,48,0],[36,6,48,4,"RCTSinglelineTextInputView"],[36,32,48,30],[37,2,49,0],[37,6,49,4,"RCTSinglelineTextInputNativeCommands"],[37,42,49,40],[38,2,50,0],[38,6,50,4,"RCTMultilineTextInputView"],[38,31,50,29],[39,2,51,0],[39,6,51,4,"RCTMultilineTextInputNativeCommands"],[39,41,51,39],[40,2,53,0],[40,6,53,4,"Platform"],[40,23,53,12],[40,24,53,13,"OS"],[40,26,53,15],[40,31,53,20],[40,40,53,29],[40,42,53,31],[41,4,54,2,"AndroidTextInput"],[41,20,54,18],[41,23,54,21,"require"],[41,34,54,28],[41,35,54,28,"_dependencyMap"],[41,49,54,28],[41,90,54,64],[41,91,54,65],[41,92,54,66,"default"],[41,99,54,73],[42,4,55,2,"AndroidTextInputCommands"],[42,28,55,26],[42,31,56,4,"require"],[42,42,56,11],[42,43,56,11,"_dependencyMap"],[42,57,56,11],[42,98,56,47],[42,99,56,48],[42,100,56,49,"Commands"],[42,108,56,57],[43,2,57,0],[43,3,57,1],[43,9,57,7],[43,13,57,11,"Platform"],[43,30,57,19],[43,31,57,20,"OS"],[43,33,57,22],[43,38,57,27],[43,43,57,32],[43,45,57,34],[44,4,58,2,"RCTSinglelineTextInputView"],[44,30,58,28],[44,33,59,4,"require"],[44,44,59,11],[44,45,59,11,"_dependencyMap"],[44,59,59,11],[44,105,59,52],[44,106,59,53],[44,107,59,54,"default"],[44,114,59,61],[45,4,60,2,"RCTSinglelineTextInputNativeCommands"],[45,40,60,38],[45,43,61,4,"require"],[45,54,61,11],[45,55,61,11,"_dependencyMap"],[45,69,61,11],[45,115,61,52],[45,116,61,53],[45,117,61,54,"Commands"],[45,125,61,62],[46,4,62,2,"RCTMultilineTextInputView"],[46,29,62,27],[46,32,63,4,"require"],[46,43,63,11],[46,44,63,11,"_dependencyMap"],[46,58,63,11],[46,104,63,52],[46,105,63,53],[46,106,63,54,"default"],[46,113,63,61],[47,4,64,2,"RCTMultilineTextInputNativeCommands"],[47,39,64,37],[47,42,65,4,"require"],[47,53,65,11],[47,54,65,11,"_dependencyMap"],[47,68,65,11],[47,114,65,52],[47,115,65,53],[47,116,65,54,"Commands"],[47,124,65,62],[48,2,66,0],[49,2,961,0],[49,6,961,6,"emptyFunctionThatReturnsTrue"],[49,34,961,34],[49,37,961,37],[49,46,961,6,"emptyFunctionThatReturnsTrue"],[49,74,961,34,"emptyFunctionThatReturnsTrue"],[49,75,961,34],[50,4,961,34],[50,11,961,43],[50,15,961,47],[51,2,961,47],[53,2,963,0],[54,0,964,0],[55,0,965,0],[56,0,966,0],[57,0,967,0],[58,0,968,0],[59,0,969,0],[60,0,970,0],[61,0,971,0],[62,0,972,0],[63,0,973,0],[64,0,974,0],[65,0,975,0],[66,0,976,0],[67,0,977,0],[68,0,978,0],[69,0,979,0],[70,0,980,0],[71,0,981,0],[72,0,982,0],[73,0,983,0],[74,0,984,0],[75,0,985,0],[76,0,986,0],[77,0,987,0],[78,0,988,0],[79,0,989,0],[80,0,990,0],[81,0,991,0],[82,0,992,0],[83,0,993,0],[84,0,994,0],[85,0,995,0],[86,0,996,0],[87,0,997,0],[88,0,998,0],[89,0,999,0],[90,0,1000,0],[91,0,1001,0],[92,0,1002,0],[93,0,1003,0],[94,0,1004,0],[95,0,1005,0],[96,0,1006,0],[97,0,1007,0],[98,0,1008,0],[99,0,1009,0],[100,0,1010,0],[101,0,1011,0],[102,0,1012,0],[103,0,1013,0],[104,0,1014,0],[105,0,1015,0],[106,0,1016,0],[107,0,1017,0],[108,0,1018,0],[109,0,1019,0],[110,0,1020,0],[111,0,1021,0],[112,0,1022,0],[113,0,1023,0],[114,0,1024,0],[115,0,1025,0],[116,0,1026,0],[117,0,1027,0],[118,0,1028,0],[119,0,1029,0],[120,0,1030,0],[121,0,1031,0],[122,0,1032,0],[123,0,1033,0],[124,0,1034,0],[125,0,1035,0],[126,0,1036,0],[127,0,1037,0],[128,0,1038,0],[129,0,1039,0],[130,0,1040,0],[131,0,1041,0],[132,0,1042,0],[133,0,1043,0],[134,0,1044,0],[135,0,1045,0],[136,0,1046,0],[137,0,1047,0],[138,0,1048,0],[139,0,1049,0],[140,0,1050,0],[141,0,1051,0],[142,0,1052,0],[143,0,1053,0],[144,0,1054,0],[145,0,1055,0],[146,0,1056,0],[147,0,1057,0],[148,0,1058,0],[149,0,1059,0],[150,0,1060,0],[151,0,1061,0],[152,0,1062,0],[153,0,1063,0],[154,0,1064,0],[155,0,1065,0],[156,0,1066,0],[157,0,1067,0],[158,0,1068,0],[159,0,1069,0],[160,0,1070,0],[161,0,1071,0],[162,0,1072,0],[163,0,1073,0],[164,2,1074,0],[164,11,1074,9,"InternalTextInput"],[164,28,1074,26,"InternalTextInput"],[164,29,1074,27,"props"],[164,34,1074,39],[164,36,1074,53],[165,4,1074,53],[165,8,1074,53,"_propsSelection$end"],[165,27,1074,53],[165,29,1074,53,"_props$multiline"],[165,45,1074,53],[166,4,1075,2],[166,8,1076,17,"ariaBusy"],[166,16,1076,25],[166,19,1089,6,"props"],[166,24,1089,11],[166,25,1076,4],[166,36,1076,15],[167,6,1077,20,"ariaChecked"],[167,17,1077,31],[167,20,1089,6,"props"],[167,25,1089,11],[167,26,1077,4],[167,40,1077,18],[168,6,1078,21,"ariaDisabled"],[168,18,1078,33],[168,21,1089,6,"props"],[168,26,1089,11],[168,27,1078,4],[168,42,1078,19],[169,6,1079,21,"ariaExpanded"],[169,18,1079,33],[169,21,1089,6,"props"],[169,26,1089,11],[169,27,1079,4],[169,42,1079,19],[170,6,1080,21,"ariaSelected"],[170,18,1080,33],[170,21,1089,6,"props"],[170,26,1089,11],[170,27,1080,4],[170,42,1080,19],[171,6,1081,4,"accessibilityState"],[171,24,1081,22],[171,27,1089,6,"props"],[171,32,1089,11],[171,33,1081,4,"accessibilityState"],[171,51,1081,22],[172,6,1082,4,"id"],[172,8,1082,6],[172,11,1089,6,"props"],[172,16,1089,11],[172,17,1082,4,"id"],[172,19,1082,6],[173,6,1083,4,"tabIndex"],[173,14,1083,12],[173,17,1089,6,"props"],[173,22,1089,11],[173,23,1083,4,"tabIndex"],[173,31,1083,12],[174,6,1084,15,"propsSelection"],[174,20,1084,29],[174,23,1089,6,"props"],[174,28,1089,11],[174,29,1084,4,"selection"],[174,38,1084,13],[175,6,1085,4,"selectionColor"],[175,20,1085,18],[175,23,1089,6,"props"],[175,28,1089,11],[175,29,1085,4,"selectionColor"],[175,43,1085,18],[176,6,1086,4,"selectionHandleColor"],[176,26,1086,24],[176,29,1089,6,"props"],[176,34,1089,11],[176,35,1086,4,"selectionHandleColor"],[176,55,1086,24],[177,6,1087,4,"cursorColor"],[177,17,1087,15],[177,20,1089,6,"props"],[177,25,1089,11],[177,26,1087,4,"cursorColor"],[177,37,1087,15],[178,6,1088,7,"otherProps"],[178,16,1088,17],[178,23,1088,17,"_objectWithoutProperties2"],[178,48,1088,17],[178,49,1088,17,"default"],[178,56,1088,17],[178,58,1089,6,"props"],[178,63,1089,11],[178,65,1089,11,"_excluded"],[178,74,1089,11],[179,4,1091,2],[179,8,1091,8,"inputRef"],[179,16,1091,16],[179,19,1091,19],[179,23,1091,19,"useRef"],[179,36,1091,25],[179,38,1091,73],[179,42,1091,77],[179,43,1091,78],[181,4,1093,2],[182,4,1094,2],[182,8,1094,8,"selection"],[182,17,1094,29],[182,20,1095,4,"propsSelection"],[182,34,1095,18],[182,38,1095,22],[182,42,1095,26],[182,45,1096,8],[182,49,1096,12],[182,52,1097,8],[183,6,1098,10,"start"],[183,11,1098,15],[183,13,1098,17,"propsSelection"],[183,27,1098,31],[183,28,1098,32,"start"],[183,33,1098,37],[184,6,1099,10,"end"],[184,9,1099,13],[184,12,1099,13,"_propsSelection$end"],[184,31,1099,13],[184,34,1099,15,"propsSelection"],[184,48,1099,29],[184,49,1099,30,"end"],[184,52,1099,33],[184,64,1099,33,"_propsSelection$end"],[184,83,1099,33],[184,86,1099,37,"propsSelection"],[184,100,1099,51],[184,101,1099,52,"start"],[185,4,1100,8],[185,5,1100,9],[186,4,1102,2],[186,8,1102,2,"_useState"],[186,17,1102,2],[186,20,1102,58],[186,24,1102,58,"useState"],[186,39,1102,66],[186,41,1102,75],[186,42,1102,76],[186,43,1102,77],[187,6,1102,77,"_useState2"],[187,16,1102,77],[187,23,1102,77,"_slicedToArray2"],[187,38,1102,77],[187,39,1102,77,"default"],[187,46,1102,77],[187,48,1102,77,"_useState"],[187,57,1102,77],[188,6,1102,9,"mostRecentEventCount"],[188,26,1102,29],[188,29,1102,29,"_useState2"],[188,39,1102,29],[189,6,1102,31,"setMostRecentEventCount"],[189,29,1102,54],[189,32,1102,54,"_useState2"],[189,42,1102,54],[190,4,1103,2],[190,8,1103,2,"_useState3"],[190,18,1103,2],[190,21,1103,46],[190,25,1103,46,"useState"],[190,40,1103,54],[190,42,1103,67,"props"],[190,47,1103,72],[190,48,1103,73,"value"],[190,53,1103,78],[190,54,1103,79],[191,6,1103,79,"_useState4"],[191,16,1103,79],[191,23,1103,79,"_slicedToArray2"],[191,38,1103,79],[191,39,1103,79,"default"],[191,46,1103,79],[191,48,1103,79,"_useState3"],[191,58,1103,79],[192,6,1103,9,"lastNativeText"],[192,20,1103,23],[192,23,1103,23,"_useState4"],[192,33,1103,23],[193,6,1103,25,"setLastNativeText"],[193,23,1103,42],[193,26,1103,42,"_useState4"],[193,36,1103,42],[194,4,1104,2],[194,8,1104,2,"_useState5"],[194,18,1104,2],[194,21,1104,61],[194,25,1104,61,"useState"],[194,40,1104,69],[194,42,1107,6],[195,8,1108,4,"selection"],[195,17,1108,13],[195,19,1108,15],[196,10,1108,16,"start"],[196,15,1108,21],[196,17,1108,23],[196,18,1108,24],[196,19,1108,25],[197,10,1108,27,"end"],[197,13,1108,30],[197,15,1108,32],[197,16,1108,33],[198,8,1108,34],[198,9,1108,35],[199,8,1109,4,"mostRecentEventCount"],[199,28,1109,24],[199,30,1109,26,"mostRecentEventCount"],[200,6,1110,2],[200,7,1110,3],[200,8,1110,4],[201,6,1110,4,"_useState6"],[201,16,1110,4],[201,23,1110,4,"_slicedToArray2"],[201,38,1110,4],[201,39,1110,4,"default"],[201,46,1110,4],[201,48,1110,4,"_useState5"],[201,58,1110,4],[202,6,1104,9,"lastNativeSelectionState"],[202,30,1104,33],[202,33,1104,33,"_useState6"],[202,43,1104,33],[203,6,1104,35,"setLastNativeSelection"],[203,28,1104,57],[203,31,1104,57,"_useState6"],[203,41,1104,57],[204,4,1112,2],[204,8,1112,8,"lastNativeSelection"],[204,27,1112,27],[204,30,1112,30,"lastNativeSelectionState"],[204,54,1112,54],[204,55,1112,55,"selection"],[204,64,1112,64],[205,4,1114,2],[205,8,1114,6,"viewCommands"],[205,20,1114,18],[206,4,1115,2],[206,8,1115,6,"AndroidTextInputCommands"],[206,32,1115,30],[206,34,1115,32],[207,6,1116,4,"viewCommands"],[207,18,1116,16],[207,21,1116,19,"AndroidTextInputCommands"],[207,45,1116,43],[208,4,1117,2],[208,5,1117,3],[208,11,1117,9],[209,6,1118,4,"viewCommands"],[209,18,1118,16],[209,21,1119,6,"props"],[209,26,1119,11],[209,27,1119,12,"multiline"],[209,36,1119,21],[209,41,1119,26],[209,45,1119,30],[209,48,1120,10,"RCTMultilineTextInputNativeCommands"],[209,83,1120,45],[209,86,1121,10,"RCTSinglelineTextInputNativeCommands"],[209,122,1121,46],[210,4,1122,2],[211,4,1124,2],[211,8,1124,8,"text"],[211,12,1124,12],[211,15,1125,4],[211,22,1125,11,"props"],[211,27,1125,16],[211,28,1125,17,"value"],[211,33,1125,22],[211,38,1125,27],[211,46,1125,35],[211,49,1126,8,"props"],[211,54,1126,13],[211,55,1126,14,"value"],[211,60,1126,19],[211,63,1127,8],[211,70,1127,15,"props"],[211,75,1127,20],[211,76,1127,21,"defaultValue"],[211,88,1127,33],[211,93,1127,38],[211,101,1127,46],[211,104,1128,10,"props"],[211,109,1128,15],[211,110,1128,16,"defaultValue"],[211,122,1128,28],[211,125,1129,10],[211,127,1129,12],[213,4,1131,2],[214,4,1132,2],[215,4,1133,2],[216,4,1134,2],[216,8,1134,2,"useLayoutEffect"],[216,30,1134,17],[216,32,1134,18],[216,44,1134,24],[217,6,1135,4],[217,10,1135,10,"nativeUpdate"],[217,22,1135,62],[217,25,1135,65],[217,26,1135,66],[217,27,1135,67],[218,6,1137,4],[218,10,1137,8,"lastNativeText"],[218,24,1137,22],[218,29,1137,27,"props"],[218,34,1137,32],[218,35,1137,33,"value"],[218,40,1137,38],[218,44,1137,42],[218,51,1137,49,"props"],[218,56,1137,54],[218,57,1137,55,"value"],[218,62,1137,60],[218,67,1137,65],[218,75,1137,73],[218,77,1137,75],[219,8,1138,6,"nativeUpdate"],[219,20,1138,18],[219,21,1138,19,"text"],[219,25,1138,23],[219,28,1138,26,"props"],[219,33,1138,31],[219,34,1138,32,"value"],[219,39,1138,37],[220,8,1139,6,"setLastNativeText"],[220,25,1139,23],[220,26,1139,24,"props"],[220,31,1139,29],[220,32,1139,30,"value"],[220,37,1139,35],[220,38,1139,36],[221,6,1140,4],[222,6,1142,4],[222,10,1143,6,"selection"],[222,19,1143,15],[222,23,1144,6,"lastNativeSelection"],[222,42,1144,25],[222,47,1145,7,"lastNativeSelection"],[222,66,1145,26],[222,67,1145,27,"start"],[222,72,1145,32],[222,77,1145,37,"selection"],[222,86,1145,46],[222,87,1145,47,"start"],[222,92,1145,52],[222,96,1146,8,"lastNativeSelection"],[222,115,1146,27],[222,116,1146,28,"end"],[222,119,1146,31],[222,124,1146,36,"selection"],[222,133,1146,45],[222,134,1146,46,"end"],[222,137,1146,49],[222,138,1146,50],[222,140,1147,6],[223,8,1148,6,"nativeUpdate"],[223,20,1148,18],[223,21,1148,19,"selection"],[223,30,1148,28],[223,33,1148,31,"selection"],[223,42,1148,40],[224,8,1149,6,"setLastNativeSelection"],[224,30,1149,28],[224,31,1149,29],[225,10,1149,30,"selection"],[225,19,1149,39],[225,21,1149,30,"selection"],[225,30,1149,39],[226,10,1149,41,"mostRecentEventCount"],[226,30,1149,61],[226,32,1149,41,"mostRecentEventCount"],[227,8,1149,61],[227,9,1149,62],[227,10,1149,63],[228,6,1150,4],[229,6,1152,4],[229,10,1152,8,"Object"],[229,16,1152,14],[229,17,1152,15,"keys"],[229,21,1152,19],[229,22,1152,20,"nativeUpdate"],[229,34,1152,32],[229,35,1152,33],[229,36,1152,34,"length"],[229,42,1152,40],[229,47,1152,45],[229,48,1152,46],[229,50,1152,48],[230,8,1153,6],[231,6,1154,4],[232,6,1156,4],[232,10,1156,8,"inputRef"],[232,18,1156,16],[232,19,1156,17,"current"],[232,26,1156,24],[232,30,1156,28],[232,34,1156,32],[232,36,1156,34],[233,8,1156,34],[233,12,1156,34,"_selection$start"],[233,28,1156,34],[233,30,1156,34,"_selection$end"],[233,44,1156,34],[234,8,1157,6,"viewCommands"],[234,20,1157,18],[234,21,1157,19,"setTextAndSelection"],[234,40,1157,38],[234,41,1158,8,"inputRef"],[234,49,1158,16],[234,50,1158,17,"current"],[234,57,1158,24],[234,59,1159,8,"mostRecentEventCount"],[234,79,1159,28],[234,81,1160,8,"text"],[234,85,1160,12],[234,88,1160,12,"_selection$start"],[234,104,1160,12],[234,107,1161,8,"selection"],[234,116,1161,17],[234,136,1161,8,"selection"],[234,145,1161,17],[234,146,1161,19,"start"],[234,151,1161,24],[234,163,1161,24,"_selection$start"],[234,179,1161,24],[234,182,1161,28],[234,183,1161,29],[234,184,1161,30],[234,187,1161,30,"_selection$end"],[234,201,1161,30],[234,204,1162,8,"selection"],[234,213,1162,17],[234,233,1162,8,"selection"],[234,242,1162,17],[234,243,1162,19,"end"],[234,246,1162,22],[234,258,1162,22,"_selection$end"],[234,272,1162,22],[234,275,1162,26],[234,276,1162,27],[234,277,1163,6],[234,278,1163,7],[235,6,1164,4],[236,4,1165,2],[236,5,1165,3],[236,7,1165,5],[236,8,1166,4,"mostRecentEventCount"],[236,28,1166,24],[236,30,1167,4,"inputRef"],[236,38,1167,12],[236,40,1168,4,"props"],[236,45,1168,9],[236,46,1168,10,"value"],[236,51,1168,15],[236,53,1169,4,"props"],[236,58,1169,9],[236,59,1169,10,"defaultValue"],[236,71,1169,22],[236,73,1170,4,"lastNativeText"],[236,87,1170,18],[236,89,1171,4,"selection"],[236,98,1171,13],[236,100,1172,4,"lastNativeSelection"],[236,119,1172,23],[236,121,1173,4,"text"],[236,125,1173,8],[236,127,1174,4,"viewCommands"],[236,139,1174,16],[236,140,1175,3],[236,141,1175,4],[237,4,1177,2],[237,8,1177,2,"useLayoutEffect"],[237,30,1177,17],[237,32,1177,18],[237,44,1177,24],[238,6,1178,4],[238,10,1178,10,"inputRefValue"],[238,23,1178,23],[238,26,1178,26,"inputRef"],[238,34,1178,34],[238,35,1178,35,"current"],[238,42,1178,42],[239,6,1180,4],[239,10,1180,8,"inputRefValue"],[239,23,1180,21],[239,27,1180,25],[239,31,1180,29],[239,33,1180,31],[240,8,1181,6,"TextInputState"],[240,31,1181,20],[240,32,1181,21,"registerInput"],[240,45,1181,34],[240,46,1181,35,"inputRefValue"],[240,59,1181,48],[240,60,1181,49],[241,8,1182,6,"TextInputEventEmitter"],[241,38,1182,27],[241,39,1182,28,"on"],[241,41,1182,30],[241,42,1182,31],[241,54,1182,43],[241,56,1182,45,"_onTapOutside"],[241,69,1182,58],[241,70,1182,59],[242,8,1184,6],[242,15,1184,13],[242,27,1184,19],[243,10,1185,8,"TextInputState"],[243,33,1185,22],[243,34,1185,23,"unregisterInput"],[243,49,1185,38],[243,50,1185,39,"inputRefValue"],[243,63,1185,52],[243,64,1185,53],[244,10,1186,8,"TextInputEventEmitter"],[244,40,1186,29],[244,41,1186,30,"removeListener"],[244,55,1186,44],[244,56,1186,45],[244,68,1186,57],[244,70,1186,59,"_onTapOutside"],[244,83,1186,72],[244,84,1186,73],[245,10,1188,8],[245,14,1188,12,"TextInputState"],[245,37,1188,26],[245,38,1188,27,"currentlyFocusedInput"],[245,59,1188,48],[245,60,1188,49],[245,61,1188,50],[245,66,1188,55,"inputRefValue"],[245,79,1188,68],[245,81,1188,70],[246,12,1189,10],[246,16,1189,10,"nullthrows"],[246,35,1189,20],[246,37,1189,21,"inputRefValue"],[246,50,1189,34],[246,51,1189,35],[246,52,1189,36,"blur"],[246,56,1189,40],[246,57,1189,41],[246,58,1189,42],[247,10,1190,8],[248,8,1191,6],[248,9,1191,7],[249,6,1192,4],[250,4,1193,2],[250,5,1193,3],[250,7,1193,5],[250,8,1193,6,"inputRef"],[250,16,1193,14],[250,17,1193,15],[250,18,1193,16],[251,4,1195,2],[251,8,1195,8,"setLocalRef"],[251,19,1195,19],[251,22,1195,22],[251,26,1195,22,"useCallback"],[251,44,1195,33],[251,46,1196,4],[251,56,1196,5,"instance"],[251,64,1196,39],[251,66,1196,44],[252,6,1197,6,"inputRef"],[252,14,1197,14],[252,15,1197,15,"current"],[252,22,1197,22],[252,25,1197,25,"instance"],[252,33,1197,33],[254,6,1199,6],[255,0,1200,0],[256,0,1201,0],[257,0,1202,0],[258,0,1203,0],[259,0,1204,0],[260,0,1205,0],[261,0,1206,0],[262,0,1207,0],[263,0,1208,0],[264,0,1209,0],[265,0,1210,0],[266,0,1211,0],[267,0,1212,0],[268,0,1213,0],[269,0,1214,0],[270,0,1215,0],[271,0,1216,0],[272,0,1217,0],[273,0,1218,0],[274,6,1221,6],[274,10,1221,10,"instance"],[274,18,1221,18],[274,22,1221,22],[274,26,1221,26],[274,28,1221,28],[275,8,1222,8],[276,8,1223,8,"Object"],[276,14,1223,14],[276,15,1223,15,"assign"],[276,21,1223,21],[276,22,1223,22,"instance"],[276,30,1223,30],[276,32,1223,32],[277,10,1224,10,"clear"],[277,15,1224,15],[277,26,1224,10,"clear"],[277,31,1224,15,"clear"],[277,32,1224,15],[277,34,1224,24],[278,12,1225,12],[278,16,1225,16,"inputRef"],[278,24,1225,24],[278,25,1225,25,"current"],[278,32,1225,32],[278,36,1225,36],[278,40,1225,40],[278,42,1225,42],[279,14,1226,14,"viewCommands"],[279,26,1226,26],[279,27,1226,27,"setTextAndSelection"],[279,46,1226,46],[279,47,1227,16,"inputRef"],[279,55,1227,24],[279,56,1227,25,"current"],[279,63,1227,32],[279,65,1228,16,"mostRecentEventCount"],[279,85,1228,36],[279,87,1229,16],[279,89,1229,18],[279,91,1230,16],[279,92,1230,17],[279,94,1231,16],[279,95,1232,14],[279,96,1232,15],[280,12,1233,12],[281,10,1234,10],[281,11,1234,11],[282,10,1235,10],[283,10,1236,10,"isFocused"],[283,19,1236,19],[283,30,1236,10,"isFocused"],[283,39,1236,19,"isFocused"],[283,40,1236,19],[283,42,1236,31],[284,12,1237,12],[284,19,1237,19,"TextInputState"],[284,42,1237,33],[284,43,1237,34,"currentlyFocusedInput"],[284,64,1237,55],[284,65,1237,56],[284,66,1237,57],[284,71,1237,62,"inputRef"],[284,79,1237,70],[284,80,1237,71,"current"],[284,87,1237,78],[285,10,1238,10],[285,11,1238,11],[286,10,1239,10,"getNativeRef"],[286,22,1239,22],[286,33,1239,10,"getNativeRef"],[286,45,1239,22,"getNativeRef"],[286,46,1239,22],[286,48,1239,66],[287,12,1240,12],[287,19,1240,19,"inputRef"],[287,27,1240,27],[287,28,1240,28,"current"],[287,35,1240,35],[288,10,1241,10],[288,11,1241,11],[289,10,1242,10,"setSelection"],[289,22,1242,22],[289,33,1242,10,"setSelection"],[289,45,1242,22,"setSelection"],[289,46,1242,23,"start"],[289,51,1242,36],[289,53,1242,38,"end"],[289,56,1242,49],[289,58,1242,57],[290,12,1243,12],[290,16,1243,16,"inputRef"],[290,24,1243,24],[290,25,1243,25,"current"],[290,32,1243,32],[290,36,1243,36],[290,40,1243,40],[290,42,1243,42],[291,14,1244,14,"viewCommands"],[291,26,1244,26],[291,27,1244,27,"setTextAndSelection"],[291,46,1244,46],[291,47,1245,16,"inputRef"],[291,55,1245,24],[291,56,1245,25,"current"],[291,63,1245,32],[291,65,1246,16,"mostRecentEventCount"],[291,85,1246,36],[291,87,1247,16],[291,91,1247,20],[291,93,1248,16,"start"],[291,98,1248,21],[291,100,1249,16,"end"],[291,103,1250,14],[291,104,1250,15],[292,12,1251,12],[293,10,1252,10],[294,8,1253,8],[294,9,1253,9],[294,10,1253,10],[295,6,1254,6],[296,4,1255,4],[296,5,1255,5],[296,7,1256,4],[296,8,1256,5,"mostRecentEventCount"],[296,28,1256,25],[296,30,1256,27,"viewCommands"],[296,42,1256,39],[296,43,1257,2],[296,44,1257,3],[297,4,1259,2],[297,8,1259,8,"ref"],[297,11,1259,11],[297,14,1259,14],[297,18,1259,14,"useMergeRefs"],[297,39,1259,26],[297,41,1259,46,"setLocalRef"],[297,52,1259,57],[297,54,1259,59,"props"],[297,59,1259,64],[297,60,1259,65,"forwardedRef"],[297,72,1259,77],[297,73,1259,78],[298,4,1261,2],[298,8,1261,8,"_onChange"],[298,17,1261,17],[298,20,1261,20],[298,29,1261,8,"_onChange"],[298,38,1261,17,"_onChange"],[298,39,1261,21,"event"],[298,44,1261,39],[298,46,1261,44],[299,6,1262,4],[299,10,1262,10,"currentText"],[299,21,1262,21],[299,24,1262,24,"event"],[299,29,1262,29],[299,30,1262,30,"nativeEvent"],[299,41,1262,41],[299,42,1262,42,"text"],[299,46,1262,46],[300,6,1263,4,"props"],[300,11,1263,9],[300,12,1263,10,"onChange"],[300,20,1263,18],[300,24,1263,22,"props"],[300,29,1263,27],[300,30,1263,28,"onChange"],[300,38,1263,36],[300,39,1263,37,"event"],[300,44,1263,42],[300,45,1263,43],[301,6,1264,4,"props"],[301,11,1264,9],[301,12,1264,10,"onChangeText"],[301,24,1264,22],[301,28,1264,26,"props"],[301,33,1264,31],[301,34,1264,32,"onChangeText"],[301,46,1264,44],[301,47,1264,45,"currentText"],[301,58,1264,56],[301,59,1264,57],[302,6,1266,4],[302,10,1266,8,"inputRef"],[302,18,1266,16],[302,19,1266,17,"current"],[302,26,1266,24],[302,30,1266,28],[302,34,1266,32],[302,36,1266,34],[303,8,1267,6],[304,8,1268,6],[305,8,1269,6],[306,6,1270,4],[307,6,1272,4,"setLastNativeText"],[307,23,1272,21],[307,24,1272,22,"currentText"],[307,35,1272,33],[307,36,1272,34],[308,6,1273,4],[309,6,1274,4],[310,6,1275,4],[311,6,1276,4],[312,6,1277,4,"setMostRecentEventCount"],[312,29,1277,27],[312,30,1277,28,"event"],[312,35,1277,33],[312,36,1277,34,"nativeEvent"],[312,47,1277,45],[312,48,1277,46,"eventCount"],[312,58,1277,56],[312,59,1277,57],[313,4,1278,2],[313,5,1278,3],[314,4,1280,2],[314,8,1280,8,"_onSelectionChange"],[314,26,1280,26],[314,29,1280,29],[314,38,1280,8,"_onSelectionChange"],[314,56,1280,26,"_onSelectionChange"],[314,57,1280,30,"event"],[314,62,1280,57],[314,64,1280,62],[315,6,1281,4,"props"],[315,11,1281,9],[315,12,1281,10,"onSelectionChange"],[315,29,1281,27],[315,33,1281,31,"props"],[315,38,1281,36],[315,39,1281,37,"onSelectionChange"],[315,56,1281,54],[315,57,1281,55,"event"],[315,62,1281,60],[315,63,1281,61],[316,6,1283,4],[316,10,1283,8,"inputRef"],[316,18,1283,16],[316,19,1283,17,"current"],[316,26,1283,24],[316,30,1283,28],[316,34,1283,32],[316,36,1283,34],[317,8,1284,6],[318,8,1285,6],[319,8,1286,6],[320,6,1287,4],[321,6,1289,4,"setLastNativeSelection"],[321,28,1289,26],[321,29,1289,27],[322,8,1290,6,"selection"],[322,17,1290,15],[322,19,1290,17,"event"],[322,24,1290,22],[322,25,1290,23,"nativeEvent"],[322,36,1290,34],[322,37,1290,35,"selection"],[322,46,1290,44],[323,8,1291,6,"mostRecentEventCount"],[323,28,1291,26],[323,30,1291,6,"mostRecentEventCount"],[324,6,1292,4],[324,7,1292,5],[324,8,1292,6],[325,4,1293,2],[325,5,1293,3],[326,4,1295,2],[326,8,1295,8,"_onFocus"],[326,16,1295,16],[326,19,1295,19],[326,28,1295,8,"_onFocus"],[326,36,1295,16,"_onFocus"],[326,37,1295,20,"event"],[326,42,1295,37],[326,44,1295,42],[327,6,1296,4,"TextInputState"],[327,29,1296,18],[327,30,1296,19,"focusInput"],[327,40,1296,29],[327,41,1296,30,"inputRef"],[327,49,1296,38],[327,50,1296,39,"current"],[327,57,1296,46],[327,58,1296,47],[328,6,1297,4],[328,10,1297,8,"props"],[328,15,1297,13],[328,16,1297,14,"onFocus"],[328,23,1297,21],[328,25,1297,23],[329,8,1298,6,"props"],[329,13,1298,11],[329,14,1298,12,"onFocus"],[329,21,1298,19],[329,22,1298,20,"event"],[329,27,1298,25],[329,28,1298,26],[330,6,1299,4],[331,4,1300,2],[331,5,1300,3],[332,4,1302,2],[332,8,1302,8,"_onBlur"],[332,15,1302,15],[332,18,1302,18],[332,27,1302,8,"_onBlur"],[332,34,1302,15,"_onBlur"],[332,35,1302,19,"event"],[332,40,1302,35],[332,42,1302,40],[333,6,1303,4,"TextInputState"],[333,29,1303,18],[333,30,1303,19,"blurInput"],[333,39,1303,28],[333,40,1303,29,"inputRef"],[333,48,1303,37],[333,49,1303,38,"current"],[333,56,1303,45],[333,57,1303,46],[334,6,1304,4],[334,10,1304,8,"props"],[334,15,1304,13],[334,16,1304,14,"onBlur"],[334,22,1304,20],[334,24,1304,22],[335,8,1305,6],[336,8,1306,6],[337,8,1307,6],[338,8,1308,6,"event"],[338,13,1308,11],[338,14,1308,12,"type"],[338,18,1308,16],[338,21,1308,19],[338,27,1308,25],[339,8,1309,6,"props"],[339,13,1309,11],[339,14,1309,12,"onBlur"],[339,20,1309,18],[339,21,1309,19,"event"],[339,26,1309,24],[339,27,1309,25],[340,6,1310,4],[341,4,1311,2],[341,5,1311,3],[342,4,1314,2],[342,8,1314,8,"_onTapOutside"],[342,21,1314,21],[342,24,1314,24],[342,33,1314,8,"_onTapOutside"],[342,46,1314,21,"_onTapOutside"],[342,47,1314,21],[342,49,1314,30],[343,6,1315,4],[343,10,1315,10,"isFocused"],[343,19,1315,19],[343,22,1315,22,"TextInputState"],[343,45,1315,36],[343,46,1315,37,"currentlyFocusedInput"],[343,67,1315,58],[343,68,1315,59],[343,69,1315,60],[343,74,1315,65,"inputRef"],[343,82,1315,73],[343,83,1315,74,"current"],[343,90,1315,81],[344,6,1316,4],[344,10,1316,8,"isFocused"],[344,19,1316,17],[344,23,1316,21,"props"],[344,28,1316,26],[344,29,1316,27,"onBlur"],[344,35,1316,33],[344,37,1316,35],[345,8,1317,6,"TextInputState"],[345,31,1317,20],[345,32,1317,21,"blurTextInput"],[345,45,1317,34],[345,46,1317,35,"inputRef"],[345,54,1317,43],[345,55,1317,44,"current"],[345,62,1317,51],[345,63,1317,52],[346,6,1318,4],[347,4,1319,2],[347,5,1319,3],[348,4,1321,2],[348,8,1321,8,"_onScroll"],[348,17,1321,17],[348,20,1321,20],[348,29,1321,8,"_onScroll"],[348,38,1321,17,"_onScroll"],[348,39,1321,21,"event"],[348,44,1321,39],[348,46,1321,44],[349,6,1322,4,"props"],[349,11,1322,9],[349,12,1322,10,"onScroll"],[349,20,1322,18],[349,24,1322,22,"props"],[349,29,1322,27],[349,30,1322,28,"onScroll"],[349,38,1322,36],[349,39,1322,37,"event"],[349,44,1322,42],[349,45,1322,43],[350,4,1323,2],[350,5,1323,3],[351,4,1325,2],[351,8,1325,6,"textInput"],[351,17,1325,15],[351,20,1325,18],[351,24,1325,22],[352,4,1327,2],[352,8,1327,8,"multiline"],[352,17,1327,17],[352,21,1327,17,"_props$multiline"],[352,37,1327,17],[352,40,1327,20,"props"],[352,45,1327,25],[352,46,1327,26,"multiline"],[352,55,1327,35],[352,67,1327,35,"_props$multiline"],[352,83,1327,35],[352,86,1327,39],[352,91,1327,44],[353,4,1329,2],[353,8,1329,6,"submitBehavior"],[353,22,1329,36],[354,4,1330,2],[354,8,1330,6,"props"],[354,13,1330,11],[354,14,1330,12,"submitBehavior"],[354,28,1330,26],[354,32,1330,30],[354,36,1330,34],[354,38,1330,36],[355,6,1331,4],[356,6,1332,4],[356,10,1332,8],[356,11,1332,9,"multiline"],[356,20,1332,18],[356,24,1332,22,"props"],[356,29,1332,27],[356,30,1332,28,"submitBehavior"],[356,44,1332,42],[356,49,1332,47],[356,58,1332,56],[356,60,1332,58],[357,8,1333,6],[358,8,1334,6,"submitBehavior"],[358,22,1334,20],[358,25,1334,23],[358,40,1334,38],[359,6,1335,4],[359,7,1335,5],[359,13,1335,11],[360,8,1336,6,"submitBehavior"],[360,22,1336,20],[360,25,1336,23,"props"],[360,30,1336,28],[360,31,1336,29,"submitBehavior"],[360,45,1336,43],[361,6,1337,4],[362,4,1338,2],[362,5,1338,3],[362,11,1338,9],[362,15,1338,13,"multiline"],[362,24,1338,22],[362,26,1338,24],[363,6,1339,4],[363,10,1339,8,"props"],[363,15,1339,13],[363,16,1339,14,"blurOnSubmit"],[363,28,1339,26],[363,33,1339,31],[363,37,1339,35],[363,39,1339,37],[364,8,1340,6,"submitBehavior"],[364,22,1340,20],[364,25,1340,23],[364,40,1340,38],[365,6,1341,4],[365,7,1341,5],[365,13,1341,11],[366,8,1342,6,"submitBehavior"],[366,22,1342,20],[366,25,1342,23],[366,34,1342,32],[367,6,1343,4],[368,4,1344,2],[368,5,1344,3],[368,11,1344,9],[369,6,1345,4],[370,6,1346,4],[370,10,1346,8,"props"],[370,15,1346,13],[370,16,1346,14,"blurOnSubmit"],[370,28,1346,26],[370,33,1346,31],[370,38,1346,36],[370,40,1346,38],[371,8,1347,6,"submitBehavior"],[371,22,1347,20],[371,25,1347,23],[371,40,1347,38],[372,6,1348,4],[372,7,1348,5],[372,13,1348,11],[373,8,1349,6,"submitBehavior"],[373,22,1349,20],[373,25,1349,23],[373,33,1349,31],[374,6,1350,4],[375,4,1351,2],[376,4,1353,2],[376,8,1353,8,"accessible"],[376,18,1353,18],[376,21,1353,21,"props"],[376,26,1353,26],[376,27,1353,27,"accessible"],[376,37,1353,37],[376,42,1353,42],[376,47,1353,47],[377,4,1354,2],[377,8,1354,8,"focusable"],[377,17,1354,17],[377,20,1354,20,"props"],[377,25,1354,25],[377,26,1354,26,"focusable"],[377,35,1354,35],[377,40,1354,40],[377,45,1354,45],[378,4,1356,2],[378,8,1357,4,"editable"],[378,16,1357,12],[378,19,1363,6,"props"],[378,24,1363,11],[378,25,1357,4,"editable"],[378,33,1357,12],[379,6,1358,4,"hitSlop"],[379,13,1358,11],[379,16,1363,6,"props"],[379,21,1363,11],[379,22,1358,4,"hitSlop"],[379,29,1358,11],[380,6,1359,4,"onPress"],[380,14,1359,11],[380,17,1363,6,"props"],[380,22,1363,11],[380,23,1359,4,"onPress"],[380,30,1359,11],[381,6,1360,4,"onPressIn"],[381,15,1360,13],[381,18,1363,6,"props"],[381,23,1363,11],[381,24,1360,4,"onPressIn"],[381,33,1360,13],[382,6,1361,4,"onPressOut"],[382,16,1361,14],[382,19,1363,6,"props"],[382,24,1363,11],[382,25,1361,4,"onPressOut"],[382,35,1361,14],[383,6,1362,4,"rejectResponderTermination"],[383,32,1362,30],[383,35,1363,6,"props"],[383,40,1363,11],[383,41,1362,4,"rejectResponderTermination"],[383,67,1362,30],[384,4,1365,2],[384,8,1365,8,"config"],[384,14,1365,14],[384,17,1365,17,"React"],[384,22,1365,22],[384,23,1365,23,"useMemo"],[384,30,1365,30],[384,31,1366,4],[385,6,1366,4],[385,13,1366,11],[386,8,1367,6,"hitSlop"],[386,15,1367,13],[386,17,1367,6,"hitSlop"],[386,24,1367,13],[387,8,1368,6,"onPress"],[387,15,1368,13],[387,17,1368,15],[387,26,1368,6,"onPress"],[387,33,1368,13,"onPress"],[387,34,1368,16,"event"],[387,39,1368,33],[387,41,1368,38],[388,10,1369,8,"onPress"],[388,18,1369,15],[388,30,1369,8,"onPress"],[388,38,1369,15],[388,39,1369,18,"event"],[388,44,1369,23],[388,45,1369,24],[389,10,1370,8],[389,14,1370,12,"editable"],[389,22,1370,20],[389,27,1370,25],[389,32,1370,30],[389,34,1370,32],[390,12,1371,10],[390,16,1371,14,"inputRef"],[390,24,1371,22],[390,25,1371,23,"current"],[390,32,1371,30],[390,36,1371,34],[390,40,1371,38],[390,42,1371,40],[391,14,1372,12,"inputRef"],[391,22,1372,20],[391,23,1372,21,"current"],[391,30,1372,28],[391,31,1372,29,"focus"],[391,36,1372,34],[391,37,1372,35],[391,38,1372,36],[392,12,1373,10],[393,10,1374,8],[394,8,1375,6],[394,9,1375,7],[395,8,1376,6,"onPressIn"],[395,17,1376,15],[395,19,1376,17,"onPressIn"],[395,28,1376,26],[396,8,1377,6,"onPressOut"],[396,18,1377,16],[396,20,1377,18,"onPressOut"],[396,30,1377,28],[397,8,1378,6,"cancelable"],[397,18,1378,16],[397,20,1378,18,"Platform"],[397,37,1378,26],[397,38,1378,27,"OS"],[397,40,1378,29],[397,45,1378,34],[397,50,1378,39],[397,53,1378,42],[397,54,1378,43,"rejectResponderTermination"],[397,80,1378,69],[397,83,1378,72],[398,6,1379,4],[398,7,1379,5],[399,4,1379,5],[399,5,1379,6],[399,7,1380,4],[399,8,1381,6,"editable"],[399,16,1381,14],[399,18,1382,6,"hitSlop"],[399,25,1382,13],[399,27,1383,6,"onPress"],[399,35,1383,13],[399,37,1384,6,"onPressIn"],[399,46,1384,15],[399,48,1385,6,"onPressOut"],[399,58,1385,16],[399,60,1386,6,"rejectResponderTermination"],[399,86,1386,32],[399,87,1388,2],[399,88,1388,3],[401,4,1390,2],[402,4,1391,2],[403,4,1392,2],[403,8,1392,6,"caretHidden"],[403,19,1392,17],[403,22,1392,20,"props"],[403,27,1392,25],[403,28,1392,26,"caretHidden"],[403,39,1392,37],[404,4,1393,2],[404,8,1393,6,"Platform"],[404,25,1393,14],[404,26,1393,15,"isTesting"],[404,35,1393,24],[404,37,1393,26],[405,6,1394,4,"caretHidden"],[405,17,1394,15],[405,20,1394,18],[405,24,1394,22],[406,4,1395,2],[408,4,1397,2],[409,4,1398,2],[410,4,1399,2],[410,8,1399,2,"_ref"],[410,12,1399,2],[410,15,1399,46],[410,19,1399,46,"usePressability"],[410,43,1399,61],[410,45,1399,62,"config"],[410,51,1399,68],[410,52,1399,69],[410,56,1399,73],[410,57,1399,74],[410,58,1399,75],[411,6,1399,9,"onBlur"],[411,12,1399,15],[411,15,1399,15,"_ref"],[411,19,1399,15],[411,20,1399,9,"onBlur"],[411,26,1399,15],[412,6,1399,17,"onFocus"],[412,13,1399,24],[412,16,1399,24,"_ref"],[412,20,1399,24],[412,21,1399,17,"onFocus"],[412,28,1399,24],[413,6,1399,29,"eventHandlers"],[413,19,1399,42],[413,26,1399,42,"_objectWithoutProperties2"],[413,51,1399,42],[413,52,1399,42,"default"],[413,59,1399,42],[413,61,1399,42,"_ref"],[413,65,1399,42],[413,67,1399,42,"_excluded2"],[413,77,1399,42],[414,4,1401,2],[414,8,1401,6,"_accessibilityState"],[414,27,1401,25],[415,4,1402,2],[415,8,1403,4,"accessibilityState"],[415,26,1403,22],[415,30,1403,26],[415,34,1403,30],[415,38,1404,4,"ariaBusy"],[415,46,1404,12],[415,50,1404,16],[415,54,1404,20],[415,58,1405,4,"ariaChecked"],[415,69,1405,15],[415,73,1405,19],[415,77,1405,23],[415,81,1406,4,"ariaDisabled"],[415,93,1406,16],[415,97,1406,20],[415,101,1406,24],[415,105,1407,4,"ariaExpanded"],[415,117,1407,16],[415,121,1407,20],[415,125,1407,24],[415,129,1408,4,"ariaSelected"],[415,141,1408,16],[415,145,1408,20],[415,149,1408,24],[415,151,1409,4],[416,6,1410,4,"_accessibilityState"],[416,25,1410,23],[416,28,1410,26],[417,8,1411,6,"busy"],[417,12,1411,10],[417,14,1411,12,"ariaBusy"],[417,22,1411,20],[417,33,1411,12,"ariaBusy"],[417,41,1411,20],[417,44,1411,24,"accessibilityState"],[417,62,1411,42],[417,82,1411,24,"accessibilityState"],[417,100,1411,42],[417,101,1411,44,"busy"],[417,105,1411,48],[418,8,1412,6,"checked"],[418,15,1412,13],[418,17,1412,15,"ariaChecked"],[418,28,1412,26],[418,39,1412,15,"ariaChecked"],[418,50,1412,26],[418,53,1412,30,"accessibilityState"],[418,71,1412,48],[418,91,1412,30,"accessibilityState"],[418,109,1412,48],[418,110,1412,50,"checked"],[418,117,1412,57],[419,8,1413,6,"disabled"],[419,16,1413,14],[419,18,1413,16,"ariaDisabled"],[419,30,1413,28],[419,41,1413,16,"ariaDisabled"],[419,53,1413,28],[419,56,1413,32,"accessibilityState"],[419,74,1413,50],[419,94,1413,32,"accessibilityState"],[419,112,1413,50],[419,113,1413,52,"disabled"],[419,121,1413,60],[420,8,1414,6,"expanded"],[420,16,1414,14],[420,18,1414,16,"ariaExpanded"],[420,30,1414,28],[420,41,1414,16,"ariaExpanded"],[420,53,1414,28],[420,56,1414,32,"accessibilityState"],[420,74,1414,50],[420,94,1414,32,"accessibilityState"],[420,112,1414,50],[420,113,1414,52,"expanded"],[420,121,1414,60],[421,8,1415,6,"selected"],[421,16,1415,14],[421,18,1415,16,"ariaSelected"],[421,30,1415,28],[421,41,1415,16,"ariaSelected"],[421,53,1415,28],[421,56,1415,32,"accessibilityState"],[421,74,1415,50],[421,94,1415,32,"accessibilityState"],[421,112,1415,50],[421,113,1415,52,"selected"],[422,6,1416,4],[422,7,1416,5],[423,4,1417,2],[424,4,1419,2],[424,8,1419,8,"style"],[424,13,1419,13],[424,16,1419,16],[424,20,1419,16,"flattenStyle"],[424,41,1419,28],[424,43,1419,44,"props"],[424,48,1419,49],[424,49,1419,50,"style"],[424,54,1419,55],[424,55,1419,56],[425,4,1421,2],[425,8,1421,6],[425,16,1421,13,"style"],[425,21,1421,18],[425,41,1421,13,"style"],[425,46,1421,18],[425,47,1421,20,"fontWeight"],[425,57,1421,30],[425,63,1421,35],[425,71,1421,43],[425,73,1421,45],[426,6,1422,4],[427,6,1423,4],[428,6,1424,4,"style"],[428,11,1424,9],[428,12,1424,10,"fontWeight"],[428,22,1424,20],[428,25,1424,23,"style"],[428,30,1424,28],[428,50,1424,23,"style"],[428,55,1424,28],[428,56,1424,30,"fontWeight"],[428,66,1424,40],[428,67,1424,41,"toString"],[428,75,1424,49],[428,76,1424,50],[428,77,1424,51],[429,4,1425,2],[430,4,1427,2],[430,8,1427,6,"Platform"],[430,25,1427,14],[430,26,1427,15,"OS"],[430,28,1427,17],[430,33,1427,22],[430,38,1427,27],[430,40,1427,29],[431,6,1428,4],[431,10,1428,10,"RCTTextInputView"],[431,26,1428,26],[431,29,1429,6,"props"],[431,34,1429,11],[431,35,1429,12,"multiline"],[431,44,1429,21],[431,49,1429,26],[431,53,1429,30],[431,56,1430,10,"RCTMultilineTextInputView"],[431,81,1430,35],[431,84,1431,10,"RCTSinglelineTextInputView"],[431,110,1431,36],[432,6,1433,4],[432,10,1433,10,"useMultilineDefaultStyle"],[432,34,1433,34],[432,37,1434,6,"props"],[432,42,1434,11],[432,43,1434,12,"multiline"],[432,52,1434,21],[432,57,1434,26],[432,61,1434,30],[432,66,1435,7,"style"],[432,71,1435,12],[432,75,1435,16],[432,79,1435,20],[432,83,1436,9,"style"],[432,88,1436,14],[432,89,1436,15,"padding"],[432,96,1436,22],[432,100,1436,26],[432,104,1436,30],[432,108,1437,10,"style"],[432,113,1437,15],[432,114,1437,16,"paddingVertical"],[432,129,1437,31],[432,133,1437,35],[432,137,1437,39],[432,141,1438,10,"style"],[432,146,1438,15],[432,147,1438,16,"paddingTop"],[432,157,1438,26],[432,161,1438,30],[432,165,1438,35],[432,166,1438,36],[433,6,1440,4,"textInput"],[433,15,1440,13],[433,31,1441,6],[433,35,1441,6,"_jsxRuntime"],[433,46,1441,6],[433,47,1441,6,"jsx"],[433,50,1441,6],[433,52,1441,7,"RCTTextInputView"],[434,6,1442,8],[435,6,1442,8],[435,8,1442,8,"Object"],[435,14,1442,8],[435,15,1442,8,"assign"],[435,21,1442,8],[436,8,1443,8,"ref"],[436,11,1443,11],[436,13,1443,13,"ref"],[437,6,1443,17],[437,9,1444,12,"otherProps"],[437,19,1444,22],[437,21,1445,12,"eventHandlers"],[437,34,1445,25],[438,8,1446,8,"accessibilityState"],[438,26,1446,26],[438,28,1446,28,"_accessibilityState"],[438,47,1446,48],[439,8,1447,8,"accessible"],[439,18,1447,18],[439,20,1447,20,"accessible"],[439,30,1447,31],[440,8,1448,8,"submitBehavior"],[440,22,1448,22],[440,24,1448,24,"submitBehavior"],[440,38,1448,39],[441,8,1449,8,"caretHidden"],[441,19,1449,19],[441,21,1449,21,"caretHidden"],[441,32,1449,33],[442,8,1450,8,"dataDetectorTypes"],[442,25,1450,25],[442,27,1450,27,"props"],[442,32,1450,32],[442,33,1450,33,"dataDetectorTypes"],[442,50,1450,51],[443,8,1451,8,"focusable"],[443,17,1451,17],[443,19,1451,19,"tabIndex"],[443,27,1451,27],[443,32,1451,32,"undefined"],[443,41,1451,41],[443,44,1451,44],[443,45,1451,45,"tabIndex"],[443,53,1451,53],[443,56,1451,56,"focusable"],[443,65,1451,66],[444,8,1452,8,"mostRecentEventCount"],[444,28,1452,28],[444,30,1452,30,"mostRecentEventCount"],[444,50,1452,51],[445,8,1453,8,"nativeID"],[445,16,1453,16],[445,18,1453,18,"id"],[445,20,1453,20],[445,31,1453,18,"id"],[445,33,1453,20],[445,36,1453,24,"props"],[445,41,1453,29],[445,42,1453,30,"nativeID"],[445,50,1453,39],[446,8,1454,8,"onBlur"],[446,14,1454,14],[446,16,1454,16,"_onBlur"],[446,23,1454,24],[447,8,1455,8,"onChange"],[447,16,1455,16],[447,18,1455,18,"_onChange"],[447,27,1455,28],[448,8,1456,8,"onContentSizeChange"],[448,27,1456,27],[448,29,1456,29,"props"],[448,34,1456,34],[448,35,1456,35,"onContentSizeChange"],[448,54,1456,55],[449,8,1457,8,"onFocus"],[449,15,1457,15],[449,17,1457,17,"_onFocus"],[449,25,1457,26],[450,8,1458,8,"onScroll"],[450,16,1458,16],[450,18,1458,18,"_onScroll"],[450,27,1458,28],[451,8,1459,8,"onSelectionChange"],[451,25,1459,25],[451,27,1459,27,"_onSelectionChange"],[451,45,1459,46],[452,8,1460,8,"onSelectionChangeShouldSetResponder"],[452,43,1460,43],[452,45,1460,45,"emptyFunctionThatReturnsTrue"],[452,73,1460,74],[453,8,1461,8,"selection"],[453,17,1461,17],[453,19,1461,19,"selection"],[453,28,1461,29],[454,8,1462,8,"selectionColor"],[454,22,1462,22],[454,24,1462,24,"selectionColor"],[454,38,1462,39],[455,8,1463,8,"style"],[455,13,1463,13],[455,15,1463,15,"StyleSheet"],[455,34,1463,25],[455,35,1463,26,"compose"],[455,42,1463,33],[455,43,1464,10,"useMultilineDefaultStyle"],[455,67,1464,34],[455,70,1464,37,"styles"],[455,76,1464,43],[455,77,1464,44,"multilineDefault"],[455,93,1464,60],[455,96,1464,63],[455,100,1464,67],[455,102,1465,10,"style"],[455,107,1466,8],[455,108,1466,10],[456,8,1467,8,"text"],[456,12,1467,12],[456,14,1467,14,"text"],[457,6,1467,19],[457,8,1468,7],[457,9,1469,5],[458,4,1470,2],[458,5,1470,3],[458,11,1470,9],[458,15,1470,13,"Platform"],[458,32,1470,21],[458,33,1470,22,"OS"],[458,35,1470,24],[458,40,1470,29],[458,49,1470,38],[458,51,1470,40],[459,6,1470,40],[459,10,1470,40,"_props$ariaLabelledb"],[459,30,1470,40],[459,32,1470,40,"_props$placeholder"],[459,50,1470,40],[459,52,1470,40,"_props$rows"],[459,63,1470,40],[460,6,1471,4],[460,10,1471,10,"autoCapitalize"],[460,24,1471,24],[460,27,1471,27,"props"],[460,32,1471,32],[460,33,1471,33,"autoCapitalize"],[460,47,1471,47],[460,51,1471,51],[460,62,1471,62],[461,6,1472,4],[461,10,1472,10,"_accessibilityLabelledBy"],[461,34,1472,34],[461,38,1472,34,"_props$ariaLabelledb"],[461,58,1472,34],[461,61,1473,6,"props"],[461,66,1473,11],[461,86,1473,6,"props"],[461,91,1473,11],[461,92,1473,14],[461,109,1473,31],[461,110,1473,32],[461,122,1473,32,"_props$ariaLabelledb"],[461,142,1473,32],[461,145,1473,36,"props"],[461,150,1473,41],[461,170,1473,36,"props"],[461,175,1473,41],[461,176,1473,43,"accessibilityLabelledBy"],[461,199,1473,66],[462,6,1474,4],[462,10,1474,10,"placeholder"],[462,21,1474,21],[462,25,1474,21,"_props$placeholder"],[462,43,1474,21],[462,46,1474,24,"props"],[462,51,1474,29],[462,52,1474,30,"placeholder"],[462,63,1474,41],[462,75,1474,41,"_props$placeholder"],[462,93,1474,41],[462,96,1474,45],[462,98,1474,47],[463,6,1475,4],[463,10,1475,8,"children"],[463,18,1475,16],[463,21,1475,19,"props"],[463,26,1475,24],[463,27,1475,25,"children"],[463,35,1475,33],[464,6,1476,4],[464,10,1476,10,"childCount"],[464,20,1476,20],[464,23,1476,23,"React"],[464,28,1476,28],[464,29,1476,29,"Children"],[464,37,1476,37],[464,38,1476,38,"count"],[464,43,1476,43],[464,44,1476,44,"children"],[464,52,1476,52],[464,53,1476,53],[465,6,1477,4],[465,10,1477,4,"invariant"],[465,28,1477,13],[465,30,1478,6],[465,32,1478,8,"props"],[465,37,1478,13],[465,38,1478,14,"value"],[465,43,1478,19],[465,47,1478,23],[465,51,1478,27],[465,55,1478,31,"childCount"],[465,65,1478,41],[465,66,1478,42],[465,68,1479,6],[465,109,1480,4],[465,110,1480,5],[466,6,1481,4],[466,10,1481,8,"childCount"],[466,20,1481,18],[466,23,1481,21],[466,24,1481,22],[466,26,1481,24],[467,8,1482,6,"children"],[467,16,1482,14],[467,32,1482,17],[467,36,1482,17,"_jsxRuntime"],[467,47,1482,17],[467,48,1482,17,"jsx"],[467,51,1482,17],[467,53,1482,18,"_Text"],[467,58,1482,18],[467,59,1482,18,"default"],[467,66,1482,22],[468,10,1482,22,"children"],[468,18,1482,22],[468,20,1482,24,"children"],[469,8,1482,32],[469,9,1482,39],[469,10,1482,40],[470,6,1483,4],[471,6,1484,4],[472,6,1485,4],[472,10,1485,10,"colorProps"],[472,20,1485,20],[472,23,1485,23],[473,8,1486,6,"selectionColor"],[473,22,1486,20],[473,24,1486,6,"selectionColor"],[473,38,1486,20],[474,8,1487,6,"selectionHandleColor"],[474,28,1487,26],[474,30,1488,8,"selectionHandleColor"],[474,50,1488,28],[474,55,1488,33,"undefined"],[474,64,1488,42],[474,67,1489,12,"selectionColor"],[474,81,1489,26],[474,84,1490,12,"selectionHandleColor"],[474,104,1490,32],[475,8,1491,6,"cursorColor"],[475,19,1491,17],[475,21,1491,19,"cursorColor"],[475,32,1491,30],[475,37,1491,35,"undefined"],[475,46,1491,44],[475,49,1491,47,"selectionColor"],[475,63,1491,61],[475,66,1491,64,"cursorColor"],[476,6,1492,4],[476,7,1492,5],[477,6,1493,4,"textInput"],[477,15,1493,13],[478,6,1493,13],[479,6,1494,6],[480,0,1495,0],[481,6,1496,6],[482,0,1497,0],[483,0,1498,0],[484,6,1499,6],[485,0,1500,0],[486,0,1501,0],[487,6,1502,6],[487,10,1502,6,"_jsxRuntime"],[487,21,1502,6],[487,22,1502,6,"jsx"],[487,25,1502,6],[487,27,1502,7,"AndroidTextInput"],[488,6,1503,8],[489,6,1503,8],[489,8,1503,8,"Object"],[489,14,1503,8],[489,15,1503,8,"assign"],[489,21,1503,8],[490,8,1504,8,"ref"],[490,11,1504,11],[490,13,1504,13,"ref"],[491,6,1504,17],[491,9,1505,12,"otherProps"],[491,19,1505,22],[491,21,1506,12,"colorProps"],[491,31,1506,22],[491,33,1507,12,"eventHandlers"],[491,46,1507,25],[492,8,1508,8,"accessibilityState"],[492,26,1508,26],[492,28,1508,28,"_accessibilityState"],[492,47,1508,48],[493,8,1509,8,"accessibilityLabelledBy"],[493,31,1509,31],[493,33,1509,33,"_accessibilityLabelledBy"],[493,57,1509,58],[494,8,1510,8,"accessible"],[494,18,1510,18],[494,20,1510,20,"accessible"],[494,30,1510,31],[495,8,1511,8,"autoCapitalize"],[495,22,1511,22],[495,24,1511,24,"autoCapitalize"],[495,38,1511,39],[496,8,1512,8,"submitBehavior"],[496,22,1512,22],[496,24,1512,24,"submitBehavior"],[496,38,1512,39],[497,8,1513,8,"caretHidden"],[497,19,1513,19],[497,21,1513,21,"caretHidden"],[497,32,1513,33],[498,8,1514,8,"children"],[498,16,1514,16],[498,18,1514,18,"children"],[498,26,1514,27],[499,8,1515,8,"disableFullscreenUI"],[499,27,1515,27],[499,29,1515,29,"props"],[499,34,1515,34],[499,35,1515,35,"disableFullscreenUI"],[499,54,1515,55],[500,8,1516,8,"focusable"],[500,17,1516,17],[500,19,1516,19,"tabIndex"],[500,27,1516,27],[500,32,1516,32,"undefined"],[500,41,1516,41],[500,44,1516,44],[500,45,1516,45,"tabIndex"],[500,53,1516,53],[500,56,1516,56,"focusable"],[500,65,1516,66],[501,8,1517,8,"mostRecentEventCount"],[501,28,1517,28],[501,30,1517,30,"mostRecentEventCount"],[501,50,1517,51],[502,8,1518,8,"nativeID"],[502,16,1518,16],[502,18,1518,18,"id"],[502,20,1518,20],[502,31,1518,18,"id"],[502,33,1518,20],[502,36,1518,24,"props"],[502,41,1518,29],[502,42,1518,30,"nativeID"],[502,50,1518,39],[503,8,1519,8,"numberOfLines"],[503,21,1519,21],[503,24,1519,21,"_props$rows"],[503,35,1519,21],[503,38,1519,23,"props"],[503,43,1519,28],[503,44,1519,29,"rows"],[503,48,1519,33],[503,60,1519,33,"_props$rows"],[503,71,1519,33],[503,74,1519,37,"props"],[503,79,1519,42],[503,80,1519,43,"numberOfLines"],[503,93,1519,57],[504,8,1520,8,"onBlur"],[504,14,1520,14],[504,16,1520,16,"_onBlur"],[504,23,1520,24],[505,8,1521,8,"onChange"],[505,16,1521,16],[505,18,1521,18,"_onChange"],[505,27,1521,28],[506,8,1522,8,"onFocus"],[506,15,1522,15],[506,17,1522,17,"_onFocus"],[507,8,1523,8],[508,0,1524,0],[509,0,1525,0],[510,8,1526,8],[511,0,1527,0],[512,0,1528,0],[512,26,1526,8],[513,8,1529,8,"onScroll"],[513,16,1529,16],[513,18,1529,18,"_onScroll"],[513,27,1529,28],[514,8,1530,8,"onSelectionChange"],[514,25,1530,25],[514,27,1530,27,"_onSelectionChange"],[514,45,1530,46],[515,8,1531,8,"placeholder"],[515,19,1531,19],[515,21,1531,21,"placeholder"],[515,32,1531,33],[516,8,1532,8,"style"],[516,13,1532,13],[516,15,1532,15,"style"],[516,20,1532,21],[517,8,1533,8,"text"],[517,12,1533,12],[517,14,1533,14,"text"],[517,18,1533,19],[518,8,1534,8,"textBreakStrategy"],[518,25,1534,25],[518,27,1534,27,"props"],[518,32,1534,32],[518,33,1534,33,"textBreakStrategy"],[519,6,1534,51],[519,8,1535,7],[519,9,1536,5],[520,4,1537,2],[521,4,1538,2],[521,24,1539,4],[521,28,1539,4,"_jsxRuntime"],[521,39,1539,4],[521,40,1539,4,"jsx"],[521,43,1539,4],[521,45,1539,5,"_TextAncestor"],[521,58,1539,5],[521,59,1539,5,"default"],[521,66,1539,17],[521,67,1539,18,"Provider"],[521,75,1539,26],[522,6,1539,27,"value"],[522,11,1539,32],[522,13,1539,34],[522,17,1539,39],[523,6,1539,39,"children"],[523,14,1539,39],[523,16,1539,41,"textInput"],[524,4,1539,50],[524,5,1539,74],[524,6,1539,75],[525,2,1541,0],[526,2,1543,0],[526,6,1543,6,"enterKeyHintToReturnTypeMap"],[526,33,1543,33],[526,36,1543,36],[527,4,1544,2,"enter"],[527,9,1544,7],[527,11,1544,9],[527,20,1544,18],[528,4,1545,2,"done"],[528,8,1545,6],[528,10,1545,8],[528,16,1545,14],[529,4,1546,2,"go"],[529,6,1546,4],[529,8,1546,6],[529,12,1546,10],[530,4,1547,2,"next"],[530,8,1547,6],[530,10,1547,8],[530,16,1547,14],[531,4,1548,2,"previous"],[531,12,1548,10],[531,14,1548,12],[531,24,1548,22],[532,4,1549,2,"search"],[532,10,1549,8],[532,12,1549,10],[532,20,1549,18],[533,4,1550,2,"send"],[533,8,1550,6],[533,10,1550,8],[534,2,1551,0],[534,3,1551,1],[535,2,1553,0],[535,6,1553,6,"inputModeToKeyboardTypeMap"],[535,32,1553,32],[535,35,1553,35],[536,4,1554,2,"none"],[536,8,1554,6],[536,10,1554,8],[536,19,1554,17],[537,4,1555,2,"text"],[537,8,1555,6],[537,10,1555,8],[537,19,1555,17],[538,4,1556,2,"decimal"],[538,11,1556,9],[538,13,1556,11],[538,26,1556,24],[539,4,1557,2,"numeric"],[539,11,1557,9],[539,13,1557,11],[539,25,1557,23],[540,4,1558,2,"tel"],[540,7,1558,5],[540,9,1558,7],[540,20,1558,18],[541,4,1559,2,"search"],[541,10,1559,8],[541,12,1559,10,"Platform"],[541,29,1559,18],[541,30,1559,19,"OS"],[541,32,1559,21],[541,37,1559,26],[541,42,1559,31],[541,45,1559,34],[541,57,1559,46],[541,60,1559,49],[541,69,1559,58],[542,4,1560,2,"email"],[542,9,1560,7],[542,11,1560,9],[542,26,1560,24],[543,4,1561,2,"url"],[543,7,1561,5],[543,9,1561,7],[544,2,1562,0],[544,3,1562,1],[546,2,1564,0],[547,2,1565,0],[547,6,1565,6,"autoCompleteWebToAutoCompleteAndroidMap"],[547,45,1565,45],[547,48,1565,48],[548,4,1566,2],[548,19,1566,17],[548,21,1566,19],[548,44,1566,42],[549,4,1567,2],[549,19,1567,17],[549,21,1567,19],[549,46,1567,44],[550,4,1568,2,"bday"],[550,8,1568,6],[550,10,1568,8],[550,26,1568,24],[551,4,1569,2],[551,14,1569,12],[551,16,1569,14],[551,31,1569,29],[552,4,1570,2],[552,16,1570,14],[552,18,1570,16],[552,35,1570,33],[553,4,1571,2],[553,15,1571,13],[553,17,1571,15],[553,33,1571,31],[554,4,1572,2],[554,12,1572,10],[554,14,1572,12],[554,22,1572,20],[555,4,1573,2],[555,12,1573,10],[555,14,1573,12],[555,22,1573,20],[556,4,1574,2],[556,18,1574,16],[556,20,1574,18],[556,34,1574,32],[557,4,1575,2],[557,17,1575,15],[557,19,1575,17],[557,32,1575,30],[558,4,1576,2],[558,15,1576,13],[558,17,1576,15],[558,28,1576,26],[559,4,1577,2,"country"],[559,11,1577,9],[559,13,1577,11],[559,37,1577,35],[560,4,1578,2],[560,22,1578,20],[560,24,1578,22],[560,34,1578,32],[561,4,1579,2,"email"],[561,9,1579,7],[561,11,1579,9],[561,18,1579,16],[562,4,1580,2],[562,22,1580,20],[562,24,1580,22],[562,37,1580,35],[563,4,1581,2],[563,22,1581,20],[563,24,1581,22],[563,37,1581,35],[564,4,1582,2,"name"],[564,8,1582,6],[564,10,1582,8],[564,16,1582,14],[565,4,1583,2],[565,21,1583,19],[565,23,1583,21],[565,36,1583,34],[566,4,1584,2],[566,17,1584,15],[566,19,1584,17],[566,32,1584,30],[567,4,1585,2],[567,16,1585,14],[567,18,1585,16],[567,30,1585,28],[568,4,1586,2],[568,18,1586,16],[568,20,1586,18],[568,34,1586,32],[569,4,1587,2,"off"],[569,7,1587,5],[569,9,1587,7],[569,14,1587,12],[570,4,1588,2],[570,19,1588,17],[570,21,1588,19],[570,30,1588,28],[571,4,1589,2],[571,17,1589,15],[571,19,1589,17],[571,32,1589,30],[572,4,1590,2,"sex"],[572,7,1590,5],[572,9,1590,7],[572,17,1590,15],[573,4,1591,2],[573,20,1591,18],[573,22,1591,20],[573,38,1591,36],[574,4,1592,2,"tel"],[574,7,1592,5],[574,9,1592,7],[574,14,1592,12],[575,4,1593,2],[575,22,1593,20],[575,24,1593,22],[575,42,1593,40],[576,4,1594,2],[576,18,1594,16],[576,20,1594,18],[576,34,1594,32],[577,4,1595,2,"username"],[577,12,1595,10],[577,14,1595,12],[578,2,1596,0],[578,3,1596,1],[580,2,1598,0],[581,2,1599,0],[581,6,1599,6,"autoCompleteWebToTextContentTypeMap"],[581,41,1599,41],[581,44,1599,44],[582,4,1600,2],[582,19,1600,17],[582,21,1600,19],[582,41,1600,39],[583,4,1601,2],[583,19,1601,17],[583,21,1601,19],[583,41,1601,39],[584,4,1602,2,"bday"],[584,8,1602,6],[584,10,1602,8],[584,21,1602,19],[585,4,1603,2],[585,14,1603,12],[585,16,1603,14],[585,30,1603,28],[586,4,1604,2],[586,16,1604,14],[586,18,1604,16],[586,34,1604,32],[587,4,1605,2],[587,15,1605,13],[587,17,1605,15],[587,32,1605,30],[588,4,1606,2],[588,12,1606,10],[588,14,1606,12],[588,38,1606,36],[589,4,1607,2],[589,18,1607,16],[589,20,1607,18],[589,47,1607,45],[590,4,1608,2],[590,17,1608,15],[590,19,1608,17],[590,45,1608,43],[591,4,1609,2],[591,12,1609,10],[591,14,1609,12],[591,36,1609,34],[592,4,1610,2],[592,19,1610,17],[592,21,1610,19],[592,42,1610,40],[593,4,1611,2],[593,24,1611,22],[593,26,1611,24],[593,48,1611,46],[594,4,1612,2],[594,20,1612,18],[594,22,1612,20],[594,44,1612,42],[595,4,1613,2],[595,13,1613,11],[595,15,1613,13],[595,31,1613,29],[596,4,1614,2],[596,15,1614,13],[596,17,1614,15],[596,35,1614,33],[597,4,1615,2],[597,13,1615,11],[597,15,1615,13],[597,31,1615,29],[598,4,1616,2],[598,22,1616,20],[598,24,1616,22],[598,34,1616,32],[599,4,1617,2,"country"],[599,11,1617,9],[599,13,1617,11],[599,26,1617,24],[600,4,1618,2,"email"],[600,9,1618,7],[600,11,1618,9],[600,25,1618,23],[601,4,1619,2,"name"],[601,8,1619,6],[601,10,1619,8],[601,16,1619,14],[602,4,1620,2],[602,21,1620,19],[602,23,1620,21],[602,35,1620,33],[603,4,1621,2],[603,17,1621,15],[603,19,1621,17],[603,31,1621,29],[604,4,1622,2],[604,16,1622,14],[604,18,1622,16],[604,29,1622,27],[605,4,1623,2,"nickname"],[605,12,1623,10],[605,14,1623,12],[605,24,1623,22],[606,4,1624,2],[606,22,1624,20],[606,24,1624,22],[606,36,1624,34],[607,4,1625,2],[607,22,1625,20],[607,24,1625,22],[607,36,1625,34],[608,4,1626,2],[608,18,1626,16],[608,20,1626,18],[608,33,1626,31],[609,4,1627,2,"off"],[609,7,1627,5],[609,9,1627,7],[609,15,1627,13],[610,4,1628,2],[610,19,1628,17],[610,21,1628,19],[610,34,1628,32],[611,4,1629,2,"organization"],[611,16,1629,14],[611,18,1629,16],[611,36,1629,34],[612,4,1630,2],[612,24,1630,22],[612,26,1630,24],[612,36,1630,34],[613,4,1631,2],[613,17,1631,15],[613,19,1631,17],[613,31,1631,29],[614,4,1632,2],[614,20,1632,18],[614,22,1632,20],[614,41,1632,39],[615,4,1633,2,"tel"],[615,7,1633,5],[615,9,1633,7],[615,26,1633,24],[616,4,1634,2,"url"],[616,7,1634,5],[616,9,1634,7],[616,14,1634,12],[617,4,1635,2,"username"],[617,12,1635,10],[617,14,1635,12],[618,2,1636,0],[618,3,1636,1],[619,2,1638,0],[619,6,1638,6,"ExportedForwardRef"],[619,24,1642,1],[619,27,1642,4,"React"],[619,32,1642,9],[619,33,1642,10,"forwardRef"],[619,43,1642,20],[619,44,1642,21],[619,53,1642,30,"TextInput"],[619,62,1642,39,"TextInput"],[619,63,1642,39,"_ref2"],[619,68,1642,39],[619,70,1658,2,"forwardedRef"],[619,82,1658,49],[619,84,1659,2],[620,4,1659,2],[620,8,1659,2,"_autoCompleteWebToAut"],[620,29,1659,2],[621,4,1659,2],[621,8,1659,2,"_ref2$allowFontScalin"],[621,29,1659,2],[621,32,1659,2,"_ref2"],[621,37,1659,2],[621,38,1644,4,"allowFontScaling"],[621,54,1644,20],[622,6,1644,4,"allowFontScaling"],[622,22,1644,20],[622,25,1644,20,"_ref2$allowFontScalin"],[622,46,1644,20],[622,60,1644,23],[622,64,1644,27],[622,67,1644,27,"_ref2$allowFontScalin"],[622,88,1644,27],[623,6,1644,27,"_ref2$rejectResponder"],[623,27,1644,27],[623,30,1644,27,"_ref2"],[623,35,1644,27],[623,36,1645,4,"rejectResponderTermination"],[623,62,1645,30],[624,6,1645,4,"rejectResponderTermination"],[624,32,1645,30],[624,35,1645,30,"_ref2$rejectResponder"],[624,56,1645,30],[624,70,1645,33],[624,74,1645,37],[624,77,1645,37,"_ref2$rejectResponder"],[624,98,1645,37],[625,6,1645,37,"_ref2$underlineColorA"],[625,27,1645,37],[625,30,1645,37,"_ref2"],[625,35,1645,37],[625,36,1646,4,"underlineColorAndroid"],[625,57,1646,25],[626,6,1646,4,"underlineColorAndroid"],[626,27,1646,25],[626,30,1646,25,"_ref2$underlineColorA"],[626,51,1646,25],[626,65,1646,28],[626,78,1646,41],[626,81,1646,41,"_ref2$underlineColorA"],[626,102,1646,41],[627,6,1647,4,"autoComplete"],[627,18,1647,16],[627,21,1647,16,"_ref2"],[627,26,1647,16],[627,27,1647,4,"autoComplete"],[627,39,1647,16],[628,6,1648,4,"textContentType"],[628,21,1648,19],[628,24,1648,19,"_ref2"],[628,29,1648,19],[628,30,1648,4,"textContentType"],[628,45,1648,19],[629,6,1649,4,"readOnly"],[629,14,1649,12],[629,17,1649,12,"_ref2"],[629,22,1649,12],[629,23,1649,4,"readOnly"],[629,31,1649,12],[630,6,1650,4,"editable"],[630,14,1650,12],[630,17,1650,12,"_ref2"],[630,22,1650,12],[630,23,1650,4,"editable"],[630,31,1650,12],[631,6,1651,4,"enterKeyHint"],[631,18,1651,16],[631,21,1651,16,"_ref2"],[631,26,1651,16],[631,27,1651,4,"enterKeyHint"],[631,39,1651,16],[632,6,1652,4,"returnKeyType"],[632,19,1652,17],[632,22,1652,17,"_ref2"],[632,27,1652,17],[632,28,1652,4,"returnKeyType"],[632,41,1652,17],[633,6,1653,4,"inputMode"],[633,15,1653,13],[633,18,1653,13,"_ref2"],[633,23,1653,13],[633,24,1653,4,"inputMode"],[633,33,1653,13],[634,6,1654,4,"showSoftInputOnFocus"],[634,26,1654,24],[634,29,1654,24,"_ref2"],[634,34,1654,24],[634,35,1654,4,"showSoftInputOnFocus"],[634,55,1654,24],[635,6,1655,4,"keyboardType"],[635,18,1655,16],[635,21,1655,16,"_ref2"],[635,26,1655,16],[635,27,1655,4,"keyboardType"],[635,39,1655,16],[636,6,1656,7,"restProps"],[636,15,1656,16],[636,22,1656,16,"_objectWithoutProperties2"],[636,47,1656,16],[636,48,1656,16,"default"],[636,55,1656,16],[636,57,1656,16,"_ref2"],[636,62,1656,16],[636,64,1656,16,"_excluded3"],[636,74,1656,16],[637,4,1660,2],[638,4,1661,2],[638,8,1661,6,"style"],[638,13,1661,11],[638,16,1661,14],[638,20,1661,14,"flattenStyle"],[638,41,1661,26],[638,43,1661,27,"restProps"],[638,52,1661,36],[638,53,1661,37,"style"],[638,58,1661,42],[638,59,1661,43],[639,4,1663,2],[639,8,1663,6],[639,9,1663,6,"style"],[639,14,1663,11],[639,34,1663,6,"style"],[639,39,1663,11],[639,40,1663,13,"verticalAlign"],[639,53,1663,26],[639,58,1663,30],[639,62,1663,34],[639,64,1663,36],[640,6,1664,4],[641,6,1665,4],[642,6,1666,4,"style"],[642,11,1666,9],[642,12,1666,10,"textAlignVertical"],[642,29,1666,27],[643,6,1667,6],[644,6,1668,6,"verticalAlignToTextAlignVerticalMap"],[644,41,1668,41],[644,42,1668,42,"style"],[644,47,1668,47],[644,48,1668,48,"verticalAlign"],[644,61,1668,61],[644,62,1668,62],[645,6,1669,4],[646,6,1670,4],[647,6,1671,4],[647,13,1671,11,"style"],[647,18,1671,16],[647,19,1671,17,"verticalAlign"],[647,32,1671,30],[648,4,1672,2],[649,4,1674,2],[649,24,1675,4],[649,28,1675,4,"_jsxRuntime"],[649,39,1675,4],[649,40,1675,4,"jsx"],[649,43,1675,4],[649,45,1675,5,"InternalTextInput"],[649,62,1675,22],[649,64,1675,22,"Object"],[649,70,1675,22],[649,71,1675,22,"assign"],[649,77,1675,22],[650,6,1676,6,"allowFontScaling"],[650,22,1676,22],[650,24,1676,24,"allowFontScaling"],[650,40,1676,41],[651,6,1677,6,"rejectResponderTermination"],[651,32,1677,32],[651,34,1677,34,"rejectResponderTermination"],[651,60,1677,61],[652,6,1678,6,"underlineColorAndroid"],[652,27,1678,27],[652,29,1678,29,"underlineColorAndroid"],[652,50,1678,51],[653,6,1679,6,"editable"],[653,14,1679,14],[653,16,1679,16,"readOnly"],[653,24,1679,24],[653,29,1679,29,"undefined"],[653,38,1679,38],[653,41,1679,41],[653,42,1679,42,"readOnly"],[653,50,1679,50],[653,53,1679,53,"editable"],[653,61,1679,62],[654,6,1680,6,"returnKeyType"],[654,19,1680,19],[654,21,1681,8,"enterKeyHint"],[654,33,1681,20],[654,36,1681,23,"enterKeyHintToReturnTypeMap"],[654,63,1681,50],[654,64,1681,51,"enterKeyHint"],[654,76,1681,63],[654,77,1681,64],[654,80,1681,67,"returnKeyType"],[654,93,1682,7],[655,6,1683,6,"keyboardType"],[655,18,1683,18],[655,20,1684,8,"inputMode"],[655,29,1684,17],[655,32,1684,20,"inputModeToKeyboardTypeMap"],[655,58,1684,46],[655,59,1684,47,"inputMode"],[655,68,1684,56],[655,69,1684,57],[655,72,1684,60,"keyboardType"],[655,84,1685,7],[656,6,1686,6,"showSoftInputOnFocus"],[656,26,1686,26],[656,28,1687,8,"inputMode"],[656,37,1687,17],[656,41,1687,21],[656,45,1687,25],[656,48,1687,28,"showSoftInputOnFocus"],[656,68,1687,48],[656,71,1687,51,"inputMode"],[656,80,1687,60],[656,85,1687,65],[656,91,1688,7],[657,6,1689,6,"autoComplete"],[657,18,1689,18],[657,20,1690,8,"Platform"],[657,37,1690,16],[657,38,1690,17,"OS"],[657,40,1690,19],[657,45,1690,24],[657,54,1690,33],[657,57,1691,12],[658,6,1692,12],[659,6,1692,12],[659,7,1692,12,"_autoCompleteWebToAut"],[659,28,1692,12],[659,31,1693,12,"autoCompleteWebToAutoCompleteAndroidMap"],[659,70,1693,51],[659,71,1693,52,"autoComplete"],[659,83,1693,64],[659,84,1693,65],[659,96,1693,65,"_autoCompleteWebToAut"],[659,117,1693,65],[659,120,1694,12,"autoComplete"],[659,132,1694,24],[659,135,1695,12,"undefined"],[659,144,1696,7],[660,6,1697,6,"textContentType"],[660,21,1697,21],[660,23,1698,8,"textContentType"],[660,38,1698,23],[660,42,1698,27],[660,46,1698,31],[660,49,1699,12,"textContentType"],[660,64,1699,27],[660,67,1700,12,"Platform"],[660,84,1700,20],[660,85,1700,21,"OS"],[660,87,1700,23],[660,92,1700,28],[660,97,1700,33],[660,101,1701,14,"autoComplete"],[660,113,1701,26],[660,117,1702,14,"autoComplete"],[660,129,1702,26],[660,133,1702,30,"autoCompleteWebToTextContentTypeMap"],[660,168,1702,65],[661,6,1703,14],[662,6,1704,14],[663,6,1705,14,"autoCompleteWebToTextContentTypeMap"],[663,41,1705,49],[663,42,1705,50,"autoComplete"],[663,54,1705,62],[663,55,1705,63],[663,58,1706,14,"textContentType"],[664,4,1707,7],[664,7,1708,10,"restProps"],[664,16,1708,19],[665,6,1709,6,"forwardedRef"],[665,18,1709,18],[665,20,1709,20,"forwardedRef"],[665,32,1709,33],[666,6,1710,6,"style"],[666,11,1710,11],[666,13,1710,13,"style"],[667,4,1710,19],[667,6,1711,5],[667,7,1711,6],[668,2,1713,0],[668,3,1713,1],[668,4,1713,2],[669,2,1715,0,"ExportedForwardRef"],[669,20,1715,18],[669,21,1715,19,"displayName"],[669,32,1715,30],[669,35,1715,33],[669,46,1715,44],[671,2,1717,0],[672,2,1718,0,"ExportedForwardRef"],[672,20,1718,18],[672,21,1718,19,"State"],[672,26,1718,24],[672,29,1718,27],[673,4,1719,2,"currentlyFocusedInput"],[673,25,1719,23],[673,27,1719,25,"TextInputState"],[673,50,1719,39],[673,51,1719,40,"currentlyFocusedInput"],[673,72,1719,61],[674,4,1721,2,"currentlyFocusedField"],[674,25,1721,23],[674,27,1721,25,"TextInputState"],[674,50,1721,39],[674,51,1721,40,"currentlyFocusedField"],[674,72,1721,61],[675,4,1722,2,"focusTextInput"],[675,18,1722,16],[675,20,1722,18,"TextInputState"],[675,43,1722,32],[675,44,1722,33,"focusTextInput"],[675,58,1722,47],[676,4,1723,2,"blurTextInput"],[676,17,1723,15],[676,19,1723,17,"TextInputState"],[676,42,1723,31],[676,43,1723,32,"blurTextInput"],[677,2,1724,0],[677,3,1724,1],[678,2,1735,0],[678,6,1735,6,"styles"],[678,12,1735,12],[678,15,1735,15,"StyleSheet"],[678,34,1735,25],[678,35,1735,26,"create"],[678,41,1735,32],[678,42,1735,33],[679,4,1736,2,"multilineDefault"],[679,20,1736,18],[679,22,1736,20],[680,6,1737,4],[681,6,1738,4],[682,6,1739,4],[683,6,1740,4,"paddingTop"],[683,16,1740,14],[683,18,1740,16],[684,4,1741,2],[685,2,1742,0],[685,3,1742,1],[685,4,1742,2],[686,2,1744,0],[686,6,1744,6,"verticalAlignToTextAlignVerticalMap"],[686,41,1744,41],[686,44,1744,44],[687,4,1745,2,"auto"],[687,8,1745,6],[687,10,1745,8],[687,16,1745,14],[688,4,1746,2,"top"],[688,7,1746,5],[688,9,1746,7],[688,14,1746,12],[689,4,1747,2,"bottom"],[689,10,1747,8],[689,12,1747,10],[689,20,1747,18],[690,4,1748,2,"middle"],[690,10,1748,8],[690,12,1748,10],[691,2,1749,0],[691,3,1749,1],[693,2,1751,0],[694,2,1752,0,"module"],[694,8,1752,6],[694,9,1752,7,"exports"],[694,16,1752,14],[694,19,1752,19,"ExportedForwardRef"],[694,37,1752,59],[695,0,1752,60],[695,3]],"functionMap":{"names":["<global>","emptyFunctionThatReturnsTrue","InternalTextInput","useLayoutEffect$argument_0","<anonymous>","setLocalRef","Object.assign$argument_1.clear","Object.assign$argument_1.isFocused","Object.assign$argument_1.getNativeRef","Object.assign$argument_1.setSelection","_onChange","_onSelectionChange","_onFocus","_onBlur","_onTapOutside","_onScroll","React.useMemo$argument_0","onPress","TextInput"],"mappings":"AAA;qCCg8B,UD;AEiH;kBC4D;GD+B;kBCY;aCO;ODO;GDE;IGG;UC4B;WDU;UEE;WFE;UGC;WHE;UIC;WJU;KHG;oBQM;GRiB;6BSE;GTa;mBUE;GVK;kBWE;GXS;wBYG;GZK;oBaE;GbE;Ic2C;eCE;ODO;MdI;CFkK;qBkBqG;ClBuE"}},"type":"js/module"}]}