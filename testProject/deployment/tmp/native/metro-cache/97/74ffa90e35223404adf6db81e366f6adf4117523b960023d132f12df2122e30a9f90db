{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":36,"column":0,"index":907}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"./processColor","data":{"asyncType":null,"locs":[{"start":{"line":15,"column":0,"index":290},"end":{"line":15,"column":70,"index":360}}],"key":"Ai2WyxBOlSTeg5AAQ9iFjvakgZ0="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * @format\n   * \n   */\n\n  'use strict';\n\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  var _processColor = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"./processColor\"));\n  var TRANSPARENT = 0; // rgba(0, 0, 0, 0)\n\n  function processColorArray(colors) {\n    return colors == null ? null : colors.map(processColorElement);\n  }\n  function processColorElement(color) {\n    var value = (0, _processColor.default)(color);\n    // For invalid colors, fallback to transparent.\n    if (value == null) {\n      console.error('Invalid value in color array:', color);\n      return TRANSPARENT;\n    }\n    return value;\n  }\n  module.exports = processColorArray;\n});","lineCount":31,"map":[[2,2,1,0],[3,0,2,0],[4,0,3,0],[5,0,4,0],[6,0,5,0],[7,0,6,0],[8,0,7,0],[9,0,8,0],[10,0,9,0],[12,2,11,0],[12,14,11,12],[14,2,11,13],[14,6,11,13,"_interopRequireDefault"],[14,28,11,13],[14,31,11,13,"_$$_REQUIRE"],[14,42,11,13],[14,43,11,13,"_dependencyMap"],[14,57,11,13],[15,2,15,0],[15,6,15,0,"_processColor"],[15,19,15,0],[15,22,15,0,"_interopRequireDefault"],[15,44,15,0],[15,45,15,0,"_$$_REQUIRE"],[15,56,15,0],[15,57,15,0,"_dependencyMap"],[15,71,15,0],[16,2,17,0],[16,6,17,6,"TRANSPARENT"],[16,17,17,17],[16,20,17,20],[16,21,17,21],[16,22,17,22],[16,23,17,23],[18,2,19,0],[18,11,19,9,"processColorArray"],[18,28,19,26,"processColorArray"],[18,29,20,2,"colors"],[18,35,20,37],[18,37,21,40],[19,4,22,2],[19,11,22,9,"colors"],[19,17,22,15],[19,21,22,19],[19,25,22,23],[19,28,22,26],[19,32,22,30],[19,35,22,33,"colors"],[19,41,22,39],[19,42,22,40,"map"],[19,45,22,43],[19,46,22,44,"processColorElement"],[19,65,22,63],[19,66,22,64],[20,2,23,0],[21,2,25,0],[21,11,25,9,"processColorElement"],[21,30,25,28,"processColorElement"],[21,31,25,29,"color"],[21,36,25,46],[21,38,25,69],[22,4,26,2],[22,8,26,8,"value"],[22,13,26,13],[22,16,26,16],[22,20,26,16,"processColor"],[22,41,26,28],[22,43,26,29,"color"],[22,48,26,34],[22,49,26,35],[23,4,27,2],[24,4,28,2],[24,8,28,6,"value"],[24,13,28,11],[24,17,28,15],[24,21,28,19],[24,23,28,21],[25,6,29,4,"console"],[25,13,29,11],[25,14,29,12,"error"],[25,19,29,17],[25,20,29,18],[25,51,29,49],[25,53,29,51,"color"],[25,58,29,56],[25,59,29,57],[26,6,30,4],[26,13,30,11,"TRANSPARENT"],[26,24,30,22],[27,4,31,2],[28,4,32,2],[28,11,32,9,"value"],[28,16,32,14],[29,2,33,0],[30,2,35,0,"module"],[30,8,35,6],[30,9,35,7,"exports"],[30,16,35,14],[30,19,35,17,"processColorArray"],[30,36,35,34],[31,0,35,35],[31,3]],"functionMap":{"names":["<global>","processColorArray","processColorElement"],"mappings":"AAA;ACkB;CDI;AEE;CFQ"}},"type":"js/module"}]}