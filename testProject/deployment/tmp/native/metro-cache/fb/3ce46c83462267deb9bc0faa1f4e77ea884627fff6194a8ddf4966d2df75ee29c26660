{"dependencies":[{"name":"react","data":{"asyncType":null,"locs":[{"start":{"line":8,"column":0,"index":122},"end":{"line":8,"column":31,"index":153}}],"key":"a4EMkKqamYWCMMPV7UeQlqGQ+ks="}},{"name":"@react-navigation/core","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":7,"column":32,"index":121}},{"start":{"line":1,"column":0,"index":0},"end":{"line":7,"column":32,"index":121}}],"key":"i0wMeuFkK29k6tj4be7EOXJEiJA="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = useScrollToTop;\n  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0], \"react\"));\n  function _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\n  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\n  function getScrollableNode(ref) {\n    if (ref.current == null) {\n      return null;\n    }\n    if ('scrollToTop' in ref.current || 'scrollTo' in ref.current || 'scrollToOffset' in ref.current || 'scrollResponderScrollTo' in ref.current) {\n      // This is already a scrollable node.\n      return ref.current;\n    } else if ('getScrollResponder' in ref.current) {\n      // If the view is a wrapper like FlatList, SectionList etc.\n      // We need to use `getScrollResponder` to get access to the scroll responder\n      return ref.current.getScrollResponder();\n    } else if ('getNode' in ref.current) {\n      // When a `ScrollView` is wraped in `Animated.createAnimatedComponent`\n      // we need to use `getNode` to get the ref to the actual scrollview.\n      // Note that `getNode` is deprecated in newer versions of react-native\n      // this is why we check if we already have a scrollable node above.\n      return ref.current.getNode();\n    } else {\n      return ref.current;\n    }\n  }\n  function useScrollToTop(ref) {\n    var navigation = React.useContext(_$$_REQUIRE(_dependencyMap[1], \"@react-navigation/core\").NavigationContext);\n    var route = (0, _$$_REQUIRE(_dependencyMap[1], \"@react-navigation/core\").useRoute)();\n    if (navigation === undefined) {\n      throw new Error(\"Couldn't find a navigation object. Is your component inside NavigationContainer?\");\n    }\n    React.useEffect(function () {\n      var tabNavigations = [];\n      var currentNavigation = navigation;\n      // If the screen is nested inside multiple tab navigators, we should scroll to top for any of them\n      // So we need to find all the parent tab navigators and add the listeners there\n      while (currentNavigation) {\n        if (currentNavigation.getState().type === 'tab') {\n          tabNavigations.push(currentNavigation);\n        }\n        currentNavigation = currentNavigation.getParent();\n      }\n      if (tabNavigations.length === 0) {\n        return;\n      }\n      var unsubscribers = tabNavigations.map(function (tab) {\n        return tab.addListener(\n        // We don't wanna import tab types here to avoid extra deps\n        // in addition, there are multiple tab implementations\n        // @ts-expect-error\n        'tabPress', function (e) {\n          // We should scroll to top only when the screen is focused\n          var isFocused = navigation.isFocused();\n\n          // In a nested stack navigator, tab press resets the stack to first screen\n          // So we should scroll to top only when we are on first screen\n          var isFirst = tabNavigations.includes(navigation) || navigation.getState().routes[0].key === route.key;\n\n          // Run the operation in the next frame so we're sure all listeners have been run\n          // This is necessary to know if preventDefault() has been called\n          requestAnimationFrame(function () {\n            var scrollable = getScrollableNode(ref);\n            if (isFocused && isFirst && scrollable && !e.defaultPrevented) {\n              if ('scrollToTop' in scrollable) {\n                scrollable.scrollToTop();\n              } else if ('scrollTo' in scrollable) {\n                scrollable.scrollTo({\n                  y: 0,\n                  animated: true\n                });\n              } else if ('scrollToOffset' in scrollable) {\n                scrollable.scrollToOffset({\n                  offset: 0,\n                  animated: true\n                });\n              } else if ('scrollResponderScrollTo' in scrollable) {\n                scrollable.scrollResponderScrollTo({\n                  y: 0,\n                  animated: true\n                });\n              }\n            }\n          });\n        });\n      });\n      return function () {\n        unsubscribers.forEach(function (unsubscribe) {\n          return unsubscribe();\n        });\n      };\n    }, [navigation, ref, route.key]);\n  }\n});","lineCount":97,"map":[[6,2,8,0],[6,6,8,0,"React"],[6,11,8,0],[6,14,8,0,"_interopRequireWildcard"],[6,37,8,0],[6,38,8,0,"_$$_REQUIRE"],[6,49,8,0],[6,50,8,0,"_dependencyMap"],[6,64,8,0],[7,2,8,31],[7,11,8,31,"_getRequireWildcardCache"],[7,36,8,31,"e"],[7,37,8,31],[7,66,8,31,"WeakMap"],[7,73,8,31],[7,92,8,31,"r"],[7,93,8,31],[7,100,8,31,"WeakMap"],[7,107,8,31],[7,111,8,31,"t"],[7,112,8,31],[7,119,8,31,"WeakMap"],[7,126,8,31],[7,138,8,31,"_getRequireWildcardCache"],[7,162,8,31],[7,174,8,31,"_getRequireWildcardCache"],[7,199,8,31,"e"],[7,200,8,31],[7,211,8,31,"e"],[7,212,8,31],[7,215,8,31,"t"],[7,216,8,31],[7,219,8,31,"r"],[7,220,8,31],[7,225,8,31,"e"],[7,226,8,31],[8,2,8,31],[8,11,8,31,"_interopRequireWildcard"],[8,35,8,31,"e"],[8,36,8,31],[8,38,8,31,"r"],[8,39,8,31],[8,48,8,31,"r"],[8,49,8,31],[8,53,8,31,"e"],[8,54,8,31],[8,58,8,31,"e"],[8,59,8,31],[8,60,8,31,"__esModule"],[8,70,8,31],[8,79,8,31,"e"],[8,80,8,31],[8,95,8,31,"e"],[8,96,8,31],[8,119,8,31,"e"],[8,120,8,31],[8,145,8,31,"e"],[8,146,8,31],[8,157,8,31,"default"],[8,164,8,31],[8,166,8,31,"e"],[8,167,8,31],[8,175,8,31,"t"],[8,176,8,31],[8,179,8,31,"_getRequireWildcardCache"],[8,203,8,31],[8,204,8,31,"r"],[8,205,8,31],[8,212,8,31,"t"],[8,213,8,31],[8,217,8,31,"t"],[8,218,8,31],[8,219,8,31,"has"],[8,222,8,31],[8,223,8,31,"e"],[8,224,8,31],[8,234,8,31,"t"],[8,235,8,31],[8,236,8,31,"get"],[8,239,8,31],[8,240,8,31,"e"],[8,241,8,31],[8,248,8,31,"n"],[8,249,8,31],[8,254,8,31,"__proto__"],[8,263,8,31],[8,273,8,31,"a"],[8,274,8,31],[8,277,8,31,"Object"],[8,283,8,31],[8,284,8,31,"defineProperty"],[8,298,8,31],[8,302,8,31,"Object"],[8,308,8,31],[8,309,8,31,"getOwnPropertyDescriptor"],[8,333,8,31],[8,344,8,31,"u"],[8,345,8,31],[8,349,8,31,"e"],[8,350,8,31],[8,370,8,31,"u"],[8,371,8,31],[8,378,8,31,"hasOwnProperty"],[8,392,8,31],[8,393,8,31,"call"],[8,397,8,31],[8,398,8,31,"e"],[8,399,8,31],[8,401,8,31,"u"],[8,402,8,31],[8,411,8,31,"i"],[8,412,8,31],[8,415,8,31,"a"],[8,416,8,31],[8,419,8,31,"Object"],[8,425,8,31],[8,426,8,31,"getOwnPropertyDescriptor"],[8,450,8,31],[8,451,8,31,"e"],[8,452,8,31],[8,454,8,31,"u"],[8,455,8,31],[8,465,8,31,"i"],[8,466,8,31],[8,471,8,31,"i"],[8,472,8,31],[8,473,8,31,"get"],[8,476,8,31],[8,480,8,31,"i"],[8,481,8,31],[8,482,8,31,"set"],[8,485,8,31],[8,489,8,31,"Object"],[8,495,8,31],[8,496,8,31,"defineProperty"],[8,510,8,31],[8,511,8,31,"n"],[8,512,8,31],[8,514,8,31,"u"],[8,515,8,31],[8,517,8,31,"i"],[8,518,8,31],[8,522,8,31,"n"],[8,523,8,31],[8,524,8,31,"u"],[8,525,8,31],[8,529,8,31,"e"],[8,530,8,31],[8,531,8,31,"u"],[8,532,8,31],[8,544,8,31,"n"],[8,545,8,31],[8,546,8,31,"default"],[8,553,8,31],[8,556,8,31,"e"],[8,557,8,31],[8,559,8,31,"t"],[8,560,8,31],[8,564,8,31,"t"],[8,565,8,31],[8,566,8,31,"set"],[8,569,8,31],[8,570,8,31,"e"],[8,571,8,31],[8,573,8,31,"n"],[8,574,8,31],[8,577,8,31,"n"],[8,578,8,31],[9,2,24,0],[9,11,24,9,"getScrollableNode"],[9,28,24,26,"getScrollableNode"],[9,29,24,27,"ref"],[9,32,24,66],[9,34,24,68],[10,4,25,2],[10,8,25,6,"ref"],[10,11,25,9],[10,12,25,10,"current"],[10,19,25,17],[10,23,25,21],[10,27,25,25],[10,29,25,27],[11,6,26,4],[11,13,26,11],[11,17,26,15],[12,4,27,2],[13,4,29,2],[13,8,30,4],[13,21,30,17],[13,25,30,21,"ref"],[13,28,30,24],[13,29,30,25,"current"],[13,36,30,32],[13,40,31,4],[13,50,31,14],[13,54,31,18,"ref"],[13,57,31,21],[13,58,31,22,"current"],[13,65,31,29],[13,69,32,4],[13,85,32,20],[13,89,32,24,"ref"],[13,92,32,27],[13,93,32,28,"current"],[13,100,32,35],[13,104,33,4],[13,129,33,29],[13,133,33,33,"ref"],[13,136,33,36],[13,137,33,37,"current"],[13,144,33,44],[13,146,34,4],[14,6,35,4],[15,6,36,4],[15,13,36,11,"ref"],[15,16,36,14],[15,17,36,15,"current"],[15,24,36,22],[16,4,37,2],[16,5,37,3],[16,11,37,9],[16,15,37,13],[16,35,37,33],[16,39,37,37,"ref"],[16,42,37,40],[16,43,37,41,"current"],[16,50,37,48],[16,52,37,50],[17,6,38,4],[18,6,39,4],[19,6,40,4],[19,13,40,11,"ref"],[19,16,40,14],[19,17,40,15,"current"],[19,24,40,22],[19,25,40,23,"getScrollResponder"],[19,43,40,41],[19,44,40,42],[19,45,40,43],[20,4,41,2],[20,5,41,3],[20,11,41,9],[20,15,41,13],[20,24,41,22],[20,28,41,26,"ref"],[20,31,41,29],[20,32,41,30,"current"],[20,39,41,37],[20,41,41,39],[21,6,42,4],[22,6,43,4],[23,6,44,4],[24,6,45,4],[25,6,46,4],[25,13,46,11,"ref"],[25,16,46,14],[25,17,46,15,"current"],[25,24,46,22],[25,25,46,23,"getNode"],[25,32,46,30],[25,33,46,31],[25,34,46,32],[26,4,47,2],[26,5,47,3],[26,11,47,9],[27,6,48,4],[27,13,48,11,"ref"],[27,16,48,14],[27,17,48,15,"current"],[27,24,48,22],[28,4,49,2],[29,2,50,0],[30,2,52,15],[30,11,52,24,"useScrollToTop"],[30,25,52,38,"useScrollToTop"],[30,26,53,2,"ref"],[30,29,53,41],[30,31,54,2],[31,4,55,2],[31,8,55,8,"navigation"],[31,18,55,18],[31,21,55,21,"React"],[31,26,55,26],[31,27,55,27,"useContext"],[31,37,55,37],[31,38,55,38,"NavigationContext"],[31,68,55,38],[31,69,55,38,"NavigationContext"],[31,112,55,55],[31,113,55,56],[32,4,56,2],[32,8,56,8,"route"],[32,13,56,13],[32,16,56,16],[32,20,56,16,"useRoute"],[32,50,56,16],[32,51,56,16,"useRoute"],[32,85,56,24],[32,87,56,25],[32,88,56,26],[33,4,58,2],[33,8,58,6,"navigation"],[33,18,58,16],[33,23,58,21,"undefined"],[33,32,58,30],[33,34,58,32],[34,6,59,4],[34,12,59,10],[34,16,59,14,"Error"],[34,21,59,19],[34,22,60,6],[34,104,61,4],[34,105,61,5],[35,4,62,2],[36,4,64,2,"React"],[36,9,64,7],[36,10,64,8,"useEffect"],[36,19,64,17],[36,20,64,18],[36,32,64,24],[37,6,65,4],[37,10,65,10,"tabNavigations"],[37,24,65,57],[37,27,65,60],[37,29,65,62],[38,6,66,4],[38,10,66,8,"currentNavigation"],[38,27,66,25],[38,30,66,28,"navigation"],[38,40,66,38],[39,6,67,4],[40,6,68,4],[41,6,69,4],[41,13,69,11,"currentNavigation"],[41,30,69,28],[41,32,69,30],[42,8,70,6],[42,12,70,10,"currentNavigation"],[42,29,70,27],[42,30,70,28,"getState"],[42,38,70,36],[42,39,70,37],[42,40,70,38],[42,41,70,39,"type"],[42,45,70,43],[42,50,70,48],[42,55,70,53],[42,57,70,55],[43,10,71,8,"tabNavigations"],[43,24,71,22],[43,25,71,23,"push"],[43,29,71,27],[43,30,71,28,"currentNavigation"],[43,47,71,45],[43,48,71,46],[44,8,72,6],[45,8,74,6,"currentNavigation"],[45,25,74,23],[45,28,74,26,"currentNavigation"],[45,45,74,43],[45,46,74,44,"getParent"],[45,55,74,53],[45,56,74,54],[45,57,74,55],[46,6,75,4],[47,6,77,4],[47,10,77,8,"tabNavigations"],[47,24,77,22],[47,25,77,23,"length"],[47,31,77,29],[47,36,77,34],[47,37,77,35],[47,39,77,37],[48,8,78,6],[49,6,79,4],[50,6,81,4],[50,10,81,10,"unsubscribers"],[50,23,81,23],[50,26,81,26,"tabNavigations"],[50,40,81,40],[50,41,81,41,"map"],[50,44,81,44],[50,45,81,45],[50,55,81,46,"tab"],[50,58,81,49],[50,60,81,54],[51,8,82,6],[51,15,82,13,"tab"],[51,18,82,16],[51,19,82,17,"addListener"],[51,30,82,28],[52,8,83,8],[53,8,84,8],[54,8,85,8],[55,8,86,8],[55,18,86,18],[55,20,87,8],[55,30,87,9,"e"],[55,31,87,38],[55,33,87,43],[56,10,88,10],[57,10,89,10],[57,14,89,16,"isFocused"],[57,23,89,25],[57,26,89,28,"navigation"],[57,36,89,38],[57,37,89,39,"isFocused"],[57,46,89,48],[57,47,89,49],[57,48,89,50],[59,10,91,10],[60,10,92,10],[61,10,93,10],[61,14,93,16,"isFirst"],[61,21,93,23],[61,24,94,12,"tabNavigations"],[61,38,94,26],[61,39,94,27,"includes"],[61,47,94,35],[61,48,94,36,"navigation"],[61,58,94,46],[61,59,94,47],[61,63,95,12,"navigation"],[61,73,95,22],[61,74,95,23,"getState"],[61,82,95,31],[61,83,95,32],[61,84,95,33],[61,85,95,34,"routes"],[61,91,95,40],[61,92,95,41],[61,93,95,42],[61,94,95,43],[61,95,95,44,"key"],[61,98,95,47],[61,103,95,52,"route"],[61,108,95,57],[61,109,95,58,"key"],[61,112,95,61],[63,10,97,10],[64,10,98,10],[65,10,99,10,"requestAnimationFrame"],[65,31,99,31],[65,32,99,32],[65,44,99,38],[66,12,100,12],[66,16,100,18,"scrollable"],[66,26,100,28],[66,29,100,31,"getScrollableNode"],[66,46,100,48],[66,47,100,49,"ref"],[66,50,100,52],[66,51,100,74],[67,12,102,12],[67,16,102,16,"isFocused"],[67,25,102,25],[67,29,102,29,"isFirst"],[67,36,102,36],[67,40,102,40,"scrollable"],[67,50,102,50],[67,54,102,54],[67,55,102,55,"e"],[67,56,102,56],[67,57,102,57,"defaultPrevented"],[67,73,102,73],[67,75,102,75],[68,14,103,14],[68,18,103,18],[68,31,103,31],[68,35,103,35,"scrollable"],[68,45,103,45],[68,47,103,47],[69,16,104,16,"scrollable"],[69,26,104,26],[69,27,104,27,"scrollToTop"],[69,38,104,38],[69,39,104,39],[69,40,104,40],[70,14,105,14],[70,15,105,15],[70,21,105,21],[70,25,105,25],[70,35,105,35],[70,39,105,39,"scrollable"],[70,49,105,49],[70,51,105,51],[71,16,106,16,"scrollable"],[71,26,106,26],[71,27,106,27,"scrollTo"],[71,35,106,35],[71,36,106,36],[72,18,106,38,"y"],[72,19,106,39],[72,21,106,41],[72,22,106,42],[73,18,106,44,"animated"],[73,26,106,52],[73,28,106,54],[74,16,106,59],[74,17,106,60],[74,18,106,61],[75,14,107,14],[75,15,107,15],[75,21,107,21],[75,25,107,25],[75,41,107,41],[75,45,107,45,"scrollable"],[75,55,107,55],[75,57,107,57],[76,16,108,16,"scrollable"],[76,26,108,26],[76,27,108,27,"scrollToOffset"],[76,41,108,41],[76,42,108,42],[77,18,108,44,"offset"],[77,24,108,50],[77,26,108,52],[77,27,108,53],[78,18,108,55,"animated"],[78,26,108,63],[78,28,108,65],[79,16,108,70],[79,17,108,71],[79,18,108,72],[80,14,109,14],[80,15,109,15],[80,21,109,21],[80,25,109,25],[80,50,109,50],[80,54,109,54,"scrollable"],[80,64,109,64],[80,66,109,66],[81,16,110,16,"scrollable"],[81,26,110,26],[81,27,110,27,"scrollResponderScrollTo"],[81,50,110,50],[81,51,110,51],[82,18,110,53,"y"],[82,19,110,54],[82,21,110,56],[82,22,110,57],[83,18,110,59,"animated"],[83,26,110,67],[83,28,110,69],[84,16,110,74],[84,17,110,75],[84,18,110,76],[85,14,111,14],[86,12,112,12],[87,10,113,10],[87,11,113,11],[87,12,113,12],[88,8,114,8],[88,9,115,6],[88,10,115,7],[89,6,116,4],[89,7,116,5],[89,8,116,6],[90,6,118,4],[90,13,118,11],[90,25,118,17],[91,8,119,6,"unsubscribers"],[91,21,119,19],[91,22,119,20,"forEach"],[91,29,119,27],[91,30,119,28],[91,40,119,29,"unsubscribe"],[91,51,119,40],[92,10,119,40],[92,17,119,45,"unsubscribe"],[92,28,119,56],[92,29,119,57],[92,30,119,58],[93,8,119,58],[93,10,119,59],[94,6,120,4],[94,7,120,5],[95,4,121,2],[95,5,121,3],[95,7,121,5],[95,8,121,6,"navigation"],[95,18,121,16],[95,20,121,18,"ref"],[95,23,121,21],[95,25,121,23,"route"],[95,30,121,28],[95,31,121,29,"key"],[95,34,121,32],[95,35,121,33],[95,36,121,34],[96,2,122,0],[97,0,122,1],[97,3]],"functionMap":{"names":["<global>","getScrollableNode","useScrollToTop","React.useEffect$argument_0","tabNavigations.map$argument_0","tab.addListener$argument_1","requestAnimationFrame$argument_0","<anonymous>","unsubscribers.forEach$argument_0"],"mappings":"AAA;ACuB;CD0B;eEE;kBCY;6CCiB;QCM;gCCY;WDc;SDC;KDE;WIE;4BCC,8BD;KJC;GDC;CFC"}},"type":"js/module"}]}