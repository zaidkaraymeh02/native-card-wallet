{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":123,"column":0,"index":3843}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":123,"column":0,"index":3843}}],"key":"ohGilxjVqjyE1GooDVDt9OYg9x0="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":123,"column":0,"index":3843}}],"key":"V6GYoXnblvuuGHJNMy7MHyaunsU="}},{"name":"../Utilities/Platform","data":{"asyncType":null,"locs":[{"start":{"line":18,"column":0,"index":337},"end":{"line":18,"column":45,"index":382}}],"key":"3JpW2lByst9OohsYWa25ZOinj2I="}},{"name":"./RCTDeviceEventEmitter","data":{"asyncType":null,"locs":[{"start":{"line":19,"column":0,"index":383},"end":{"line":19,"column":60,"index":443}}],"key":"0flqaKRlRw3xmpqHStv6m8gpyYo="}},{"name":"invariant","data":{"asyncType":null,"locs":[{"start":{"line":20,"column":0,"index":444},"end":{"line":20,"column":34,"index":478}}],"key":"Fzi/BpZws2YooIGJ9b6u0HJtuks="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * \n   * @format\n   */\n\n  'use strict';\n\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n  var _Platform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"../Utilities/Platform\"));\n  var _RCTDeviceEventEmitter = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"./RCTDeviceEventEmitter\"));\n  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"invariant\"));\n  /**\n   * `NativeEventEmitter` is intended for use by Native Modules to emit events to\n   * JavaScript listeners. If a `NativeModule` is supplied to the constructor, it\n   * will be notified (via `addListener` and `removeListeners`) when the listener\n   * count changes to manage \"native memory\".\n   *\n   * Currently, all native events are fired via a global `RCTDeviceEventEmitter`.\n   * This means event names must be globally unique, and it means that call sites\n   * can theoretically listen to `RCTDeviceEventEmitter` (although discouraged).\n   */\n  var NativeEventEmitter = exports.default = /*#__PURE__*/function () {\n    function NativeEventEmitter(nativeModule) {\n      (0, _classCallCheck2.default)(this, NativeEventEmitter);\n      if (_Platform.default.OS === 'ios') {\n        (0, _invariant.default)(nativeModule != null, '`new NativeEventEmitter()` requires a non-null argument.');\n      }\n      var hasAddListener =\n      // $FlowFixMe[method-unbinding] added when improving typing for this parameters\n      !!nativeModule && typeof nativeModule.addListener === 'function';\n      var hasRemoveListeners =\n      // $FlowFixMe[method-unbinding] added when improving typing for this parameters\n      !!nativeModule && typeof nativeModule.removeListeners === 'function';\n      if (nativeModule && hasAddListener && hasRemoveListeners) {\n        this._nativeModule = nativeModule;\n      } else if (nativeModule != null) {\n        if (!hasAddListener) {\n          console.warn('`new NativeEventEmitter()` was called with a non-null argument without the required `addListener` method.');\n        }\n        if (!hasRemoveListeners) {\n          console.warn('`new NativeEventEmitter()` was called with a non-null argument without the required `removeListeners` method.');\n        }\n      }\n    }\n    return (0, _createClass2.default)(NativeEventEmitter, [{\n      key: \"addListener\",\n      value: function addListener(eventType, listener, context) {\n        var _this$_nativeModule,\n          _this = this;\n        (_this$_nativeModule = this._nativeModule) == null || _this$_nativeModule.addListener(eventType);\n        var subscription = _RCTDeviceEventEmitter.default.addListener(eventType, listener, context);\n        return {\n          remove: function remove() {\n            if (subscription != null) {\n              var _this$_nativeModule2;\n              (_this$_nativeModule2 = _this._nativeModule) == null || _this$_nativeModule2.removeListeners(1);\n              // $FlowFixMe[incompatible-use]\n              subscription.remove();\n              subscription = null;\n            }\n          }\n        };\n      }\n    }, {\n      key: \"emit\",\n      value: function emit(eventType) {\n        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          args[_key - 1] = arguments[_key];\n        }\n        // Generally, `RCTDeviceEventEmitter` is directly invoked. But this is\n        // included for completeness.\n        _RCTDeviceEventEmitter.default.emit.apply(_RCTDeviceEventEmitter.default, [eventType].concat(args));\n      }\n    }, {\n      key: \"removeAllListeners\",\n      value: function removeAllListeners(eventType) {\n        var _this$_nativeModule3;\n        (0, _invariant.default)(eventType != null, '`NativeEventEmitter.removeAllListener()` requires a non-null argument.');\n        (_this$_nativeModule3 = this._nativeModule) == null || _this$_nativeModule3.removeListeners(this.listenerCount(eventType));\n        _RCTDeviceEventEmitter.default.removeAllListeners(eventType);\n      }\n    }, {\n      key: \"listenerCount\",\n      value: function listenerCount(eventType) {\n        return _RCTDeviceEventEmitter.default.listenerCount(eventType);\n      }\n    }]);\n  }();\n});","lineCount":101,"map":[[2,2,1,0],[3,0,2,0],[4,0,3,0],[5,0,4,0],[6,0,5,0],[7,0,6,0],[8,0,7,0],[9,0,8,0],[10,0,9,0],[12,2,11,0],[12,14,11,12],[14,2,11,13],[14,6,11,13,"_interopRequireDefault"],[14,28,11,13],[14,31,11,13,"_$$_REQUIRE"],[14,42,11,13],[14,43,11,13,"_dependencyMap"],[14,57,11,13],[15,2,11,13,"Object"],[15,8,11,13],[15,9,11,13,"defineProperty"],[15,23,11,13],[15,24,11,13,"exports"],[15,31,11,13],[16,4,11,13,"value"],[16,9,11,13],[17,2,11,13],[18,2,11,13,"exports"],[18,9,11,13],[18,10,11,13,"default"],[18,17,11,13],[19,2,11,13],[19,6,11,13,"_classCallCheck2"],[19,22,11,13],[19,25,11,13,"_interopRequireDefault"],[19,47,11,13],[19,48,11,13,"_$$_REQUIRE"],[19,59,11,13],[19,60,11,13,"_dependencyMap"],[19,74,11,13],[20,2,11,13],[20,6,11,13,"_createClass2"],[20,19,11,13],[20,22,11,13,"_interopRequireDefault"],[20,44,11,13],[20,45,11,13,"_$$_REQUIRE"],[20,56,11,13],[20,57,11,13,"_dependencyMap"],[20,71,11,13],[21,2,18,0],[21,6,18,0,"_Platform"],[21,15,18,0],[21,18,18,0,"_interopRequireDefault"],[21,40,18,0],[21,41,18,0,"_$$_REQUIRE"],[21,52,18,0],[21,53,18,0,"_dependencyMap"],[21,67,18,0],[22,2,19,0],[22,6,19,0,"_RCTDeviceEventEmitter"],[22,28,19,0],[22,31,19,0,"_interopRequireDefault"],[22,53,19,0],[22,54,19,0,"_$$_REQUIRE"],[22,65,19,0],[22,66,19,0,"_dependencyMap"],[22,80,19,0],[23,2,20,0],[23,6,20,0,"_invariant"],[23,16,20,0],[23,19,20,0,"_interopRequireDefault"],[23,41,20,0],[23,42,20,0,"_$$_REQUIRE"],[23,53,20,0],[23,54,20,0,"_dependencyMap"],[23,68,20,0],[24,2,29,0],[25,0,30,0],[26,0,31,0],[27,0,32,0],[28,0,33,0],[29,0,34,0],[30,0,35,0],[31,0,36,0],[32,0,37,0],[33,0,38,0],[34,2,29,0],[34,6,39,21,"NativeEventEmitter"],[34,24,39,39],[34,27,39,39,"exports"],[34,34,39,39],[34,35,39,39,"default"],[34,42,39,39],[35,4,44,2],[35,13,44,2,"NativeEventEmitter"],[35,32,44,14,"nativeModule"],[35,44,44,41],[35,46,44,43],[36,6,44,43],[36,10,44,43,"_classCallCheck2"],[36,26,44,43],[36,27,44,43,"default"],[36,34,44,43],[36,42,44,43,"NativeEventEmitter"],[36,60,44,43],[37,6,45,4],[37,10,45,8,"Platform"],[37,27,45,16],[37,28,45,17,"OS"],[37,30,45,19],[37,35,45,24],[37,40,45,29],[37,42,45,31],[38,8,46,6],[38,12,46,6,"invariant"],[38,30,46,15],[38,32,47,8,"nativeModule"],[38,44,47,20],[38,48,47,24],[38,52,47,28],[38,54,48,8],[38,112,49,6],[38,113,49,7],[39,6,50,4],[40,6,52,4],[40,10,52,10,"hasAddListener"],[40,24,52,24],[41,6,53,6],[42,6,54,6],[42,7,54,7],[42,8,54,8,"nativeModule"],[42,20,54,20],[42,24,54,24],[42,31,54,31,"nativeModule"],[42,43,54,43],[42,44,54,44,"addListener"],[42,55,54,55],[42,60,54,60],[42,70,54,70],[43,6,55,4],[43,10,55,10,"hasRemoveListeners"],[43,28,55,28],[44,6,56,6],[45,6,57,6],[45,7,57,7],[45,8,57,8,"nativeModule"],[45,20,57,20],[45,24,57,24],[45,31,57,31,"nativeModule"],[45,43,57,43],[45,44,57,44,"removeListeners"],[45,59,57,59],[45,64,57,64],[45,74,57,74],[46,6,59,4],[46,10,59,8,"nativeModule"],[46,22,59,20],[46,26,59,24,"hasAddListener"],[46,40,59,38],[46,44,59,42,"hasRemoveListeners"],[46,62,59,60],[46,64,59,62],[47,8,60,6],[47,12,60,10],[47,13,60,11,"_nativeModule"],[47,26,60,24],[47,29,60,27,"nativeModule"],[47,41,60,39],[48,6,61,4],[48,7,61,5],[48,13,61,11],[48,17,61,15,"nativeModule"],[48,29,61,27],[48,33,61,31],[48,37,61,35],[48,39,61,37],[49,8,62,6],[49,12,62,10],[49,13,62,11,"hasAddListener"],[49,27,62,25],[49,29,62,27],[50,10,63,8,"console"],[50,17,63,15],[50,18,63,16,"warn"],[50,22,63,20],[50,23,64,10],[50,130,65,8],[50,131,65,9],[51,8,66,6],[52,8,67,6],[52,12,67,10],[52,13,67,11,"hasRemoveListeners"],[52,31,67,29],[52,33,67,31],[53,10,68,8,"console"],[53,17,68,15],[53,18,68,16,"warn"],[53,22,68,20],[53,23,69,10],[53,134,70,8],[53,135,70,9],[54,8,71,6],[55,6,72,4],[56,4,73,2],[57,4,73,3],[57,15,73,3,"_createClass2"],[57,28,73,3],[57,29,73,3,"default"],[57,36,73,3],[57,38,73,3,"NativeEventEmitter"],[57,56,73,3],[58,6,73,3,"key"],[58,9,73,3],[59,6,73,3,"value"],[59,11,73,3],[59,13,75,2],[59,22,75,2,"addListener"],[59,33,75,13,"addListener"],[59,34,76,4,"eventType"],[59,43,76,21],[59,45,77,4,"listener"],[59,53,77,71],[59,55,78,4,"context"],[59,62,78,19],[59,64,79,23],[60,8,79,23],[60,12,79,23,"_this$_nativeModule"],[60,31,79,23],[61,10,79,23,"_this"],[61,15,79,23],[62,8,80,4],[62,9,80,4,"_this$_nativeModule"],[62,28,80,4],[62,35,80,8],[62,36,80,9,"_nativeModule"],[62,49,80,22],[62,62,80,4,"_this$_nativeModule"],[62,81,80,4],[62,82,80,24,"addListener"],[62,93,80,35],[62,94,80,36,"eventType"],[62,103,80,45],[62,104,80,46],[63,8,81,4],[63,12,81,8,"subscription"],[63,24,81,40],[63,27,81,43,"RCTDeviceEventEmitter"],[63,57,81,64],[63,58,81,65,"addListener"],[63,69,81,76],[63,70,82,6,"eventType"],[63,79,82,15],[63,81,83,6,"listener"],[63,89,83,14],[63,91,84,6,"context"],[63,98,85,4],[63,99,85,5],[64,8,87,4],[64,15,87,11],[65,10,88,6,"remove"],[65,16,88,12],[65,18,88,14],[65,27,88,6,"remove"],[65,33,88,12,"remove"],[65,34,88,12],[65,36,88,20],[66,12,89,8],[66,16,89,12,"subscription"],[66,28,89,24],[66,32,89,28],[66,36,89,32],[66,38,89,34],[67,14,89,34],[67,18,89,34,"_this$_nativeModule2"],[67,38,89,34],[68,14,90,10],[68,15,90,10,"_this$_nativeModule2"],[68,35,90,10],[68,38,90,10,"_this"],[68,43,90,14],[68,44,90,15,"_nativeModule"],[68,57,90,28],[68,70,90,10,"_this$_nativeModule2"],[68,90,90,10],[68,91,90,30,"removeListeners"],[68,106,90,45],[68,107,90,46],[68,108,90,47],[68,109,90,48],[69,14,91,10],[70,14,92,10,"subscription"],[70,26,92,22],[70,27,92,23,"remove"],[70,33,92,29],[70,34,92,30],[70,35,92,31],[71,14,93,10,"subscription"],[71,26,93,22],[71,29,93,25],[71,33,93,29],[72,12,94,8],[73,10,95,6],[74,8,96,4],[74,9,96,5],[75,6,97,2],[76,4,97,3],[77,6,97,3,"key"],[77,9,97,3],[78,6,97,3,"value"],[78,11,97,3],[78,13,99,2],[78,22,99,2,"emit"],[78,26,99,6,"emit"],[78,27,100,4,"eventType"],[78,36,100,21],[78,38,102,10],[79,8,102,10],[79,17,102,10,"_len"],[79,21,102,10],[79,24,102,10,"arguments"],[79,33,102,10],[79,34,102,10,"length"],[79,40,102,10],[79,42,101,7,"args"],[79,46,101,11],[79,53,101,11,"Array"],[79,58,101,11],[79,59,101,11,"_len"],[79,63,101,11],[79,70,101,11,"_len"],[79,74,101,11],[79,85,101,11,"_key"],[79,89,101,11],[79,95,101,11,"_key"],[79,99,101,11],[79,102,101,11,"_len"],[79,106,101,11],[79,108,101,11,"_key"],[79,112,101,11],[80,10,101,7,"args"],[80,14,101,11],[80,15,101,11,"_key"],[80,19,101,11],[80,27,101,11,"arguments"],[80,36,101,11],[80,37,101,11,"_key"],[80,41,101,11],[81,8,101,11],[82,8,103,4],[83,8,104,4],[84,8,105,4,"RCTDeviceEventEmitter"],[84,38,105,25],[84,39,105,26,"emit"],[84,43,105,30],[84,44,105,30,"apply"],[84,49,105,30],[84,50,105,4,"RCTDeviceEventEmitter"],[84,80,105,25],[84,83,105,31,"eventType"],[84,92,105,40],[84,94,105,40,"concat"],[84,100,105,40],[84,101,105,45,"args"],[84,105,105,49],[84,107,105,50],[85,6,106,2],[86,4,106,3],[87,6,106,3,"key"],[87,9,106,3],[88,6,106,3,"value"],[88,11,106,3],[88,13,108,2],[88,22,108,2,"removeAllListeners"],[88,40,108,20,"removeAllListeners"],[88,41,109,4,"eventType"],[88,50,109,23],[88,52,110,10],[89,8,110,10],[89,12,110,10,"_this$_nativeModule3"],[89,32,110,10],[90,8,111,4],[90,12,111,4,"invariant"],[90,30,111,13],[90,32,112,6,"eventType"],[90,41,112,15],[90,45,112,19],[90,49,112,23],[90,51,113,6],[90,123,114,4],[90,124,114,5],[91,8,115,4],[91,9,115,4,"_this$_nativeModule3"],[91,29,115,4],[91,36,115,8],[91,37,115,9,"_nativeModule"],[91,50,115,22],[91,63,115,4,"_this$_nativeModule3"],[91,83,115,4],[91,84,115,24,"removeListeners"],[91,99,115,39],[91,100,115,40],[91,104,115,44],[91,105,115,45,"listenerCount"],[91,118,115,58],[91,119,115,59,"eventType"],[91,128,115,68],[91,129,115,69],[91,130,115,70],[92,8,116,4,"RCTDeviceEventEmitter"],[92,38,116,25],[92,39,116,26,"removeAllListeners"],[92,57,116,44],[92,58,116,45,"eventType"],[92,67,116,54],[92,68,116,55],[93,6,117,2],[94,4,117,3],[95,6,117,3,"key"],[95,9,117,3],[96,6,117,3,"value"],[96,11,117,3],[96,13,119,2],[96,22,119,2,"listenerCount"],[96,35,119,15,"listenerCount"],[96,36,119,48,"eventType"],[96,45,119,65],[96,47,119,75],[97,8,120,4],[97,15,120,11,"RCTDeviceEventEmitter"],[97,45,120,32],[97,46,120,33,"listenerCount"],[97,59,120,46],[97,60,120,47,"eventType"],[97,69,120,56],[97,70,120,57],[98,6,121,2],[99,4,121,3],[100,2,121,3],[101,0,121,3],[101,3]],"functionMap":{"names":["<global>","NativeEventEmitter","constructor","addListener","remove","emit","removeAllListeners","listenerCount"],"mappings":"AAA;eCsC;ECK;GD6B;EEE;cCa;ODO;GFE;EIE;GJO;EKE;GLS;EME;GNE;CDC"}},"type":"js/module"}]}