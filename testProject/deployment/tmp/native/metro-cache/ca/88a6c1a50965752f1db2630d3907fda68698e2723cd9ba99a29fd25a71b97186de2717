{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":58,"column":0,"index":1783}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"./Pressability","data":{"asyncType":null,"locs":[{"start":{"line":11,"column":0,"index":228},"end":{"line":14,"column":24,"index":324}}],"key":"VvmcuTN2f+EkmXDdRm4gf15Awyw="}},{"name":"react","data":{"asyncType":null,"locs":[{"start":{"line":15,"column":0,"index":325},"end":{"line":15,"column":40,"index":365}}],"key":"a4EMkKqamYWCMMPV7UeQlqGQ+ks="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = usePressability;\n  var _Pressability = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"./Pressability\"));\n  var _react = _$$_REQUIRE(_dependencyMap[2], \"react\");\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * \n   * @format\n   */\n\n  /**\n   * Creates a persistent instance of `Pressability` that automatically configures\n   * itself and resets. Accepts null `config` to support lazy initialization. Once\n   * initialized, will not un-initialize until the component has been unmounted.\n   *\n   * In order to use `usePressability`, do the following:\n   *\n   *   const config = useMemo(...);\n   *   const eventHandlers = usePressability(config);\n   *   const pressableView = <View {...eventHandlers} />;\n   *\n   */\n  function usePressability(config) {\n    var pressabilityRef = (0, _react.useRef)(null);\n    if (config != null && pressabilityRef.current == null) {\n      pressabilityRef.current = new _Pressability.default(config);\n    }\n    var pressability = pressabilityRef.current;\n\n    // On the initial mount, this is a no-op. On updates, `pressability` will be\n    // re-configured to use the new configuration.\n    (0, _react.useEffect)(function () {\n      if (config != null && pressability != null) {\n        pressability.configure(config);\n      }\n    }, [config, pressability]);\n\n    // On unmount, reset pending state and timers inside `pressability`. This is\n    // a separate effect because we do not want to reset when `config` changes.\n    (0, _react.useEffect)(function () {\n      if (pressability != null) {\n        return function () {\n          pressability.reset();\n        };\n      }\n    }, [pressability]);\n    return pressability == null ? null : pressability.getEventHandlers();\n  }\n});","lineCount":57,"map":[[7,2,11,0],[7,6,11,0,"_Pressability"],[7,19,11,0],[7,22,11,0,"_interopRequireDefault"],[7,44,11,0],[7,45,11,0,"_$$_REQUIRE"],[7,56,11,0],[7,57,11,0,"_dependencyMap"],[7,71,11,0],[8,2,15,0],[8,6,15,0,"_react"],[8,12,15,0],[8,15,15,0,"_$$_REQUIRE"],[8,26,15,0],[8,27,15,0,"_dependencyMap"],[8,41,15,0],[9,2,1,0],[10,0,2,0],[11,0,3,0],[12,0,4,0],[13,0,5,0],[14,0,6,0],[15,0,7,0],[16,0,8,0],[17,0,9,0],[19,2,17,0],[20,0,18,0],[21,0,19,0],[22,0,20,0],[23,0,21,0],[24,0,22,0],[25,0,23,0],[26,0,24,0],[27,0,25,0],[28,0,26,0],[29,0,27,0],[30,0,28,0],[31,2,29,15],[31,11,29,24,"usePressability"],[31,26,29,39,"usePressability"],[31,27,30,2,"config"],[31,33,30,29],[31,35,31,18],[32,4,32,2],[32,8,32,8,"pressabilityRef"],[32,23,32,23],[32,26,32,26],[32,30,32,26,"useRef"],[32,43,32,32],[32,45,32,48],[32,49,32,52],[32,50,32,53],[33,4,33,2],[33,8,33,6,"config"],[33,14,33,12],[33,18,33,16],[33,22,33,20],[33,26,33,24,"pressabilityRef"],[33,41,33,39],[33,42,33,40,"current"],[33,49,33,47],[33,53,33,51],[33,57,33,55],[33,59,33,57],[34,6,34,4,"pressabilityRef"],[34,21,34,19],[34,22,34,20,"current"],[34,29,34,27],[34,32,34,30],[34,36,34,34,"Pressability"],[34,57,34,46],[34,58,34,47,"config"],[34,64,34,53],[34,65,34,54],[35,4,35,2],[36,4,36,2],[36,8,36,8,"pressability"],[36,20,36,20],[36,23,36,23,"pressabilityRef"],[36,38,36,38],[36,39,36,39,"current"],[36,46,36,46],[38,4,38,2],[39,4,39,2],[40,4,40,2],[40,8,40,2,"useEffect"],[40,24,40,11],[40,26,40,12],[40,38,40,18],[41,6,41,4],[41,10,41,8,"config"],[41,16,41,14],[41,20,41,18],[41,24,41,22],[41,28,41,26,"pressability"],[41,40,41,38],[41,44,41,42],[41,48,41,46],[41,50,41,48],[42,8,42,6,"pressability"],[42,20,42,18],[42,21,42,19,"configure"],[42,30,42,28],[42,31,42,29,"config"],[42,37,42,35],[42,38,42,36],[43,6,43,4],[44,4,44,2],[44,5,44,3],[44,7,44,5],[44,8,44,6,"config"],[44,14,44,12],[44,16,44,14,"pressability"],[44,28,44,26],[44,29,44,27],[44,30,44,28],[46,4,46,2],[47,4,47,2],[48,4,48,2],[48,8,48,2,"useEffect"],[48,24,48,11],[48,26,48,12],[48,38,48,18],[49,6,49,4],[49,10,49,8,"pressability"],[49,22,49,20],[49,26,49,24],[49,30,49,28],[49,32,49,30],[50,8,50,6],[50,15,50,13],[50,27,50,19],[51,10,51,8,"pressability"],[51,22,51,20],[51,23,51,21,"reset"],[51,28,51,26],[51,29,51,27],[51,30,51,28],[52,8,52,6],[52,9,52,7],[53,6,53,4],[54,4,54,2],[54,5,54,3],[54,7,54,5],[54,8,54,6,"pressability"],[54,20,54,18],[54,21,54,19],[54,22,54,20],[55,4,56,2],[55,11,56,9,"pressability"],[55,23,56,21],[55,27,56,25],[55,31,56,29],[55,34,56,32],[55,38,56,36],[55,41,56,39,"pressability"],[55,53,56,51],[55,54,56,52,"getEventHandlers"],[55,70,56,68],[55,71,56,69],[55,72,56,70],[56,2,57,0],[57,0,57,1],[57,3]],"functionMap":{"names":["<global>","usePressability","useEffect$argument_0","<anonymous>"],"mappings":"AAA;eC4B;YCW;GDI;YCI;aCE;ODE;GDE;CDG"}},"type":"js/module"}]}