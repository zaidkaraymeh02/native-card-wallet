{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":428,"column":0,"index":13378}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"react","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":31,"index":31}}],"key":"a4EMkKqamYWCMMPV7UeQlqGQ+ks="}},{"name":"react-native","data":{"asyncType":null,"locs":[{"start":{"line":2,"column":0,"index":32},"end":{"line":10,"column":22,"index":159}}],"key":"XEo4Z+Aarw9Y7I7ZLBt66vGLAVQ="}},{"name":"react-native-reanimated","data":{"asyncType":null,"locs":[{"start":{"line":11,"column":0,"index":160},"end":{"line":19,"column":33,"index":338}}],"key":"hLQGRybdteaZIXsECztquPSPONU="}},{"name":"../../utils/DrawerProgressContext","data":{"asyncType":null,"locs":[{"start":{"line":22,"column":0,"index":388},"end":{"line":22,"column":70,"index":458}}],"key":"zIsqqaVVKbBO0g99zHvhCq0OEXs="}},{"name":"./Overlay","data":{"asyncType":null,"locs":[{"start":{"line":28,"column":0,"index":566},"end":{"line":28,"column":32,"index":598}}],"key":"AC29V/ilML5Lt1XxAGFu+uUmjTc="}},{"name":"react/jsx-runtime","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":428,"column":0,"index":13378}}],"key":"5dCMGbjkz1QWCPjOwzvy5ZBkuK8="}},{"name":"../GestureHandler","data":{"asyncType":null,"locs":[{"start":{"line":23,"column":0,"index":459},"end":{"line":27,"column":27,"index":565}},{"start":{"line":23,"column":0,"index":459},"end":{"line":27,"column":27,"index":565}},{"start":{"line":23,"column":0,"index":459},"end":{"line":27,"column":27,"index":565}}],"key":"6GTtfqiPwzFuSqKnllYGmn+4Bjw="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Drawer;\n  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1], \"react\"));\n  var _reactNative = _$$_REQUIRE(_dependencyMap[2], \"react-native\");\n  var _reactNativeReanimated = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[3], \"react-native-reanimated\"));\n  var _DrawerProgressContext = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"../../utils/DrawerProgressContext\"));\n  var _Overlay = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"./Overlay\"));\n  var _jsxRuntime = _$$_REQUIRE(_dependencyMap[6], \"react/jsx-runtime\");\n  var _jsxFileName = \"C:\\\\Program Files\\\\Mendix\\\\10.18.1.55792\\\\modeler\\\\tools\\\\node\\\\node_modules\\\\@react-navigation\\\\drawer\\\\src\\\\views\\\\modern\\\\Drawer.tsx\";\n  function _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\n  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\n  var SWIPE_DISTANCE_MINIMUM = 5;\n  var DEFAULT_DRAWER_WIDTH = '80%';\n  var minmax = function minmax(value, start, end) {\n    'worklet';\n\n    return Math.min(Math.max(value, start), end);\n  };\n  function Drawer(_ref) {\n    var dimensions = _ref.dimensions,\n      drawerPosition = _ref.drawerPosition,\n      drawerStyle = _ref.drawerStyle,\n      drawerType = _ref.drawerType,\n      gestureHandlerProps = _ref.gestureHandlerProps,\n      hideStatusBarOnOpen = _ref.hideStatusBarOnOpen,\n      keyboardDismissMode = _ref.keyboardDismissMode,\n      onClose = _ref.onClose,\n      onOpen = _ref.onOpen,\n      open = _ref.open,\n      overlayStyle = _ref.overlayStyle,\n      renderDrawerContent = _ref.renderDrawerContent,\n      renderSceneContent = _ref.renderSceneContent,\n      statusBarAnimation = _ref.statusBarAnimation,\n      swipeDistanceThreshold = _ref.swipeDistanceThreshold,\n      swipeEdgeWidth = _ref.swipeEdgeWidth,\n      swipeEnabled = _ref.swipeEnabled,\n      swipeVelocityThreshold = _ref.swipeVelocityThreshold,\n      overlayAccessibilityLabel = _ref.overlayAccessibilityLabel;\n    var getDrawerWidth = function getDrawerWidth() {\n      var _ref2 = _reactNative.StyleSheet.flatten(drawerStyle) || {},\n        _ref2$width = _ref2.width,\n        width = _ref2$width === void 0 ? DEFAULT_DRAWER_WIDTH : _ref2$width;\n      if (typeof width === 'string' && width.endsWith('%')) {\n        // Try to calculate width if a percentage is given\n        var percentage = Number(width.replace(/%$/, ''));\n        if (Number.isFinite(percentage)) {\n          return dimensions.width * (percentage / 100);\n        }\n      }\n      return typeof width === 'number' ? width : 0;\n    };\n    var drawerWidth = getDrawerWidth();\n    var isOpen = drawerType === 'permanent' ? true : open;\n    var isRight = drawerPosition === 'right';\n    var getDrawerTranslationX = React.useCallback(function (open) {\n      'worklet';\n\n      if (drawerPosition === 'left') {\n        return open ? 0 : -drawerWidth;\n      }\n      return open ? 0 : drawerWidth;\n    }, [drawerPosition, drawerWidth]);\n    var hideStatusBar = React.useCallback(function (hide) {\n      if (hideStatusBarOnOpen) {\n        _reactNative.StatusBar.setHidden(hide, statusBarAnimation);\n      }\n    }, [hideStatusBarOnOpen, statusBarAnimation]);\n    React.useEffect(function () {\n      hideStatusBar(isOpen);\n      return function () {\n        return hideStatusBar(false);\n      };\n    }, [isOpen, hideStatusBarOnOpen, statusBarAnimation, hideStatusBar]);\n    var interactionHandleRef = React.useRef(null);\n    var startInteraction = function startInteraction() {\n      interactionHandleRef.current = _reactNative.InteractionManager.createInteractionHandle();\n    };\n    var endInteraction = function endInteraction() {\n      if (interactionHandleRef.current != null) {\n        _reactNative.InteractionManager.clearInteractionHandle(interactionHandleRef.current);\n        interactionHandleRef.current = null;\n      }\n    };\n    var hideKeyboard = function hideKeyboard() {\n      if (keyboardDismissMode === 'on-drag') {\n        _reactNative.Keyboard.dismiss();\n      }\n    };\n    var onGestureStart = function onGestureStart() {\n      startInteraction();\n      hideKeyboard();\n      hideStatusBar(true);\n    };\n    var onGestureFinish = function onGestureFinish() {\n      endInteraction();\n    };\n\n    // FIXME: Currently hitSlop is broken when on Android when drawer is on right\n    // https://github.com/software-mansion/react-native-gesture-handler/issues/569\n    var hitSlop = isRight ?\n    // Extend hitSlop to the side of the screen when drawer is closed\n    // This lets the user drag the drawer from the side of the screen\n    {\n      right: 0,\n      width: isOpen ? undefined : swipeEdgeWidth\n    } : {\n      left: 0,\n      width: isOpen ? undefined : swipeEdgeWidth\n    };\n    var touchStartX = (0, _reactNativeReanimated.useSharedValue)(0);\n    var touchX = (0, _reactNativeReanimated.useSharedValue)(0);\n    var translationX = (0, _reactNativeReanimated.useSharedValue)(getDrawerTranslationX(open));\n    var gestureState = (0, _reactNativeReanimated.useSharedValue)(_$$_REQUIRE(_dependencyMap[7], \"../GestureHandler\").GestureState.UNDETERMINED);\n    var toggleDrawer = React.useCallback(function (_ref3) {\n      'worklet';\n\n      var open = _ref3.open,\n        isUserInitiated = _ref3.isUserInitiated,\n        velocity = _ref3.velocity;\n      var translateX = getDrawerTranslationX(open);\n      touchStartX.value = 0;\n      touchX.value = 0;\n      translationX.value = (0, _reactNativeReanimated.withSpring)(translateX, {\n        velocity: velocity,\n        stiffness: 1000,\n        damping: 500,\n        mass: 3,\n        overshootClamping: true,\n        restDisplacementThreshold: 0.01,\n        restSpeedThreshold: 0.01,\n        // @ts-expect-error: This is available in newer reanimated versions\n        reduceMotion: 'never'\n      });\n      if (!isUserInitiated) {\n        return;\n      }\n      if (open) {\n        (0, _reactNativeReanimated.runOnJS)(onOpen)();\n      } else {\n        (0, _reactNativeReanimated.runOnJS)(onClose)();\n      }\n    }, [getDrawerTranslationX, onClose, onOpen, touchStartX, touchX, translationX]);\n    React.useEffect(function () {\n      return toggleDrawer({\n        open: open,\n        isUserInitiated: false\n      });\n    }, [open, toggleDrawer]);\n    var onGestureEvent = (0, _reactNativeReanimated.useAnimatedGestureHandler)({\n      onStart: function onStart(event, ctx) {\n        ctx.hasCalledOnStart = false;\n        ctx.startX = translationX.value;\n        gestureState.value = event.state;\n        touchStartX.value = event.x;\n      },\n      onActive: function onActive(event, ctx) {\n        touchX.value = event.x;\n        translationX.value = ctx.startX + event.translationX;\n        gestureState.value = event.state;\n\n        // onStart will _always_ be called, even when the activation\n        // criteria isn't met yet. This makes sure onGestureStart is only\n        // called when the criteria is really met.\n        if (!ctx.hasCalledOnStart) {\n          ctx.hasCalledOnStart = true;\n          (0, _reactNativeReanimated.runOnJS)(onGestureStart)();\n        }\n      },\n      onEnd: function onEnd(event) {\n        gestureState.value = event.state;\n        var nextOpen = Math.abs(event.translationX) > SWIPE_DISTANCE_MINIMUM && Math.abs(event.translationX) > swipeVelocityThreshold || Math.abs(event.translationX) > swipeDistanceThreshold ? drawerPosition === 'left' ?\n        // If swiped to right, open the drawer, otherwise close it\n        (event.velocityX === 0 ? event.translationX : event.velocityX) > 0 :\n        // If swiped to left, open the drawer, otherwise close it\n        (event.velocityX === 0 ? event.translationX : event.velocityX) < 0 : open;\n        toggleDrawer({\n          open: nextOpen,\n          isUserInitiated: true,\n          velocity: event.velocityX\n        });\n      },\n      onFinish: function onFinish() {\n        (0, _reactNativeReanimated.runOnJS)(onGestureFinish)();\n      }\n    });\n    var translateX = (0, _reactNativeReanimated.useDerivedValue)(function () {\n      // Comment stolen from react-native-gesture-handler/DrawerLayout\n      //\n      // While closing the drawer when user starts gesture outside of its area (in greyed\n      // out part of the window), we want the drawer to follow only once finger reaches the\n      // edge of the drawer.\n      // E.g. on the diagram below drawer is illustrate by X signs and the greyed out area by\n      // dots. The touch gesture starts at '*' and moves left, touch path is indicated by\n      // an arrow pointing left\n      // 1) +---------------+ 2) +---------------+ 3) +---------------+ 4) +---------------+\n      //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n      //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n      //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n      //    |XXXXXXXX|......|    |XXXXXXXX|.<-*..|    |XXXXXXXX|<--*..|    |XXXXX|<-----*..|\n      //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n      //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n      //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n      //    +---------------+    +---------------+    +---------------+    +---------------+\n      //\n      // For the above to work properly we define animated value that will keep start position\n      // of the gesture. Then we use that value to calculate how much we need to subtract from\n      // the translationX. If the gesture started on the greyed out area we take the distance from the\n      // edge of the drawer to the start position. Otherwise we don't subtract at all and the\n      // drawer be pulled back as soon as you start the pan.\n      //\n      // This is used only when drawerType is \"front\"\n      var touchDistance = drawerType === 'front' && gestureState.value === _$$_REQUIRE(_dependencyMap[7], \"../GestureHandler\").GestureState.ACTIVE ? minmax(drawerPosition === 'left' ? touchStartX.value - drawerWidth : dimensions.width - drawerWidth - touchStartX.value, 0, dimensions.width) : 0;\n      var translateX = drawerPosition === 'left' ? minmax(translationX.value + touchDistance, -drawerWidth, 0) : minmax(translationX.value - touchDistance, 0, drawerWidth);\n      return translateX;\n    });\n    var isRTL = _reactNative.I18nManager.getConstants().isRTL;\n    var drawerAnimatedStyle = (0, _reactNativeReanimated.useAnimatedStyle)(function () {\n      var distanceFromEdge = dimensions.width - drawerWidth;\n      return {\n        transform: drawerType === 'permanent' ?\n        // Reanimated needs the property to be present, but it results in Browser bug\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=20574\n        [] : [{\n          translateX:\n          // The drawer stays in place when `drawerType` is `back`\n          (drawerType === 'back' ? 0 : translateX.value) + (drawerPosition === 'left' ? isRTL ? -distanceFromEdge : 0 : isRTL ? 0 : distanceFromEdge)\n        }]\n      };\n    });\n    var contentAnimatedStyle = (0, _reactNativeReanimated.useAnimatedStyle)(function () {\n      return {\n        transform: drawerType === 'permanent' ?\n        // Reanimated needs the property to be present, but it results in Browser bug\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=20574\n        [] : [{\n          translateX:\n          // The screen content stays in place when `drawerType` is `front`\n          drawerType === 'front' ? 0 : translateX.value + drawerWidth * (drawerPosition === 'left' ? 1 : -1)\n        }]\n      };\n    });\n    var progress = (0, _reactNativeReanimated.useDerivedValue)(function () {\n      return drawerType === 'permanent' ? 1 : (0, _reactNativeReanimated.interpolate)(translateX.value, [getDrawerTranslationX(false), getDrawerTranslationX(true)], [0, 1]);\n    });\n    return /*#__PURE__*/(0, _jsxRuntime.jsx)(_DrawerProgressContext.default.Provider, {\n      value: progress,\n      children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_$$_REQUIRE(_dependencyMap[7], \"../GestureHandler\").PanGestureHandler, Object.assign({\n        activeOffsetX: [-SWIPE_DISTANCE_MINIMUM, SWIPE_DISTANCE_MINIMUM],\n        failOffsetY: [-SWIPE_DISTANCE_MINIMUM, SWIPE_DISTANCE_MINIMUM],\n        hitSlop: hitSlop,\n        enabled: drawerType !== 'permanent' && swipeEnabled,\n        onGestureEvent: onGestureEvent\n      }, gestureHandlerProps, {\n        children: /*#__PURE__*/(0, _jsxRuntime.jsxs)(_reactNativeReanimated.default.View, {\n          style: [styles.main, {\n            flexDirection: drawerType === 'permanent' && !isRight ? 'row-reverse' : 'row'\n          }],\n          children: [/*#__PURE__*/(0, _jsxRuntime.jsxs)(_reactNativeReanimated.default.View, {\n            style: [styles.content, contentAnimatedStyle],\n            children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(_reactNative.View, {\n              accessibilityElementsHidden: isOpen && drawerType !== 'permanent',\n              importantForAccessibility: isOpen && drawerType !== 'permanent' ? 'no-hide-descendants' : 'auto',\n              style: styles.content,\n              children: renderSceneContent()\n            }), drawerType !== 'permanent' ? /*#__PURE__*/(0, _jsxRuntime.jsx)(_Overlay.default, {\n              progress: progress,\n              onPress: function onPress() {\n                return toggleDrawer({\n                  open: false,\n                  isUserInitiated: true\n                });\n              },\n              style: overlayStyle,\n              accessibilityLabel: overlayAccessibilityLabel\n            }) : null]\n          }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactNativeReanimated.default.View, {\n            removeClippedSubviews: _reactNative.Platform.OS !== 'ios',\n            style: [styles.container, {\n              position: drawerType === 'permanent' ? 'relative' : 'absolute',\n              zIndex: drawerType === 'back' ? -1 : 0\n            }, drawerAnimatedStyle, drawerStyle],\n            children: renderDrawerContent()\n          })]\n        })\n      }))\n    });\n  }\n  var styles = _reactNative.StyleSheet.create({\n    container: {\n      top: 0,\n      bottom: 0,\n      maxWidth: '100%',\n      width: DEFAULT_DRAWER_WIDTH\n    },\n    content: {\n      flex: 1\n    },\n    main: Object.assign({\n      flex: 1\n    }, _reactNative.Platform.select({\n      // FIXME: We need to hide `overflowX` on Web so the translated content doesn't show offscreen.\n      // But adding `overflowX: 'hidden'` prevents content from collapsing the URL bar.\n      web: null,\n      default: {\n        overflow: 'hidden'\n      }\n    }))\n  });\n});","lineCount":313,"map":[[7,2,1,0],[7,6,1,0,"React"],[7,11,1,0],[7,14,1,0,"_interopRequireWildcard"],[7,37,1,0],[7,38,1,0,"_$$_REQUIRE"],[7,49,1,0],[7,50,1,0,"_dependencyMap"],[7,64,1,0],[8,2,2,0],[8,6,2,0,"_reactNative"],[8,18,2,0],[8,21,2,0,"_$$_REQUIRE"],[8,32,2,0],[8,33,2,0,"_dependencyMap"],[8,47,2,0],[9,2,11,0],[9,6,11,0,"_reactNativeReanimated"],[9,28,11,0],[9,31,11,0,"_interopRequireWildcard"],[9,54,11,0],[9,55,11,0,"_$$_REQUIRE"],[9,66,11,0],[9,67,11,0,"_dependencyMap"],[9,81,11,0],[10,2,22,0],[10,6,22,0,"_DrawerProgressContext"],[10,28,22,0],[10,31,22,0,"_interopRequireDefault"],[10,53,22,0],[10,54,22,0,"_$$_REQUIRE"],[10,65,22,0],[10,66,22,0,"_dependencyMap"],[10,80,22,0],[11,2,28,0],[11,6,28,0,"_Overlay"],[11,14,28,0],[11,17,28,0,"_interopRequireDefault"],[11,39,28,0],[11,40,28,0,"_$$_REQUIRE"],[11,51,28,0],[11,52,28,0,"_dependencyMap"],[11,66,28,0],[12,2,28,32],[12,6,28,32,"_jsxRuntime"],[12,17,28,32],[12,20,28,32,"_$$_REQUIRE"],[12,31,28,32],[12,32,28,32,"_dependencyMap"],[12,46,28,32],[13,2,28,32],[13,6,28,32,"_jsxFileName"],[13,18,28,32],[14,2,28,32],[14,11,28,32,"_getRequireWildcardCache"],[14,36,28,32,"e"],[14,37,28,32],[14,66,28,32,"WeakMap"],[14,73,28,32],[14,92,28,32,"r"],[14,93,28,32],[14,100,28,32,"WeakMap"],[14,107,28,32],[14,111,28,32,"t"],[14,112,28,32],[14,119,28,32,"WeakMap"],[14,126,28,32],[14,138,28,32,"_getRequireWildcardCache"],[14,162,28,32],[14,174,28,32,"_getRequireWildcardCache"],[14,199,28,32,"e"],[14,200,28,32],[14,211,28,32,"e"],[14,212,28,32],[14,215,28,32,"t"],[14,216,28,32],[14,219,28,32,"r"],[14,220,28,32],[14,225,28,32,"e"],[14,226,28,32],[15,2,28,32],[15,11,28,32,"_interopRequireWildcard"],[15,35,28,32,"e"],[15,36,28,32],[15,38,28,32,"r"],[15,39,28,32],[15,48,28,32,"r"],[15,49,28,32],[15,53,28,32,"e"],[15,54,28,32],[15,58,28,32,"e"],[15,59,28,32],[15,60,28,32,"__esModule"],[15,70,28,32],[15,79,28,32,"e"],[15,80,28,32],[15,95,28,32,"e"],[15,96,28,32],[15,119,28,32,"e"],[15,120,28,32],[15,145,28,32,"e"],[15,146,28,32],[15,157,28,32,"default"],[15,164,28,32],[15,166,28,32,"e"],[15,167,28,32],[15,175,28,32,"t"],[15,176,28,32],[15,179,28,32,"_getRequireWildcardCache"],[15,203,28,32],[15,204,28,32,"r"],[15,205,28,32],[15,212,28,32,"t"],[15,213,28,32],[15,217,28,32,"t"],[15,218,28,32],[15,219,28,32,"has"],[15,222,28,32],[15,223,28,32,"e"],[15,224,28,32],[15,234,28,32,"t"],[15,235,28,32],[15,236,28,32,"get"],[15,239,28,32],[15,240,28,32,"e"],[15,241,28,32],[15,248,28,32,"n"],[15,249,28,32],[15,254,28,32,"__proto__"],[15,263,28,32],[15,273,28,32,"a"],[15,274,28,32],[15,277,28,32,"Object"],[15,283,28,32],[15,284,28,32,"defineProperty"],[15,298,28,32],[15,302,28,32,"Object"],[15,308,28,32],[15,309,28,32,"getOwnPropertyDescriptor"],[15,333,28,32],[15,344,28,32,"u"],[15,345,28,32],[15,349,28,32,"e"],[15,350,28,32],[15,370,28,32,"u"],[15,371,28,32],[15,378,28,32,"hasOwnProperty"],[15,392,28,32],[15,393,28,32,"call"],[15,397,28,32],[15,398,28,32,"e"],[15,399,28,32],[15,401,28,32,"u"],[15,402,28,32],[15,411,28,32,"i"],[15,412,28,32],[15,415,28,32,"a"],[15,416,28,32],[15,419,28,32,"Object"],[15,425,28,32],[15,426,28,32,"getOwnPropertyDescriptor"],[15,450,28,32],[15,451,28,32,"e"],[15,452,28,32],[15,454,28,32,"u"],[15,455,28,32],[15,465,28,32,"i"],[15,466,28,32],[15,471,28,32,"i"],[15,472,28,32],[15,473,28,32,"get"],[15,476,28,32],[15,480,28,32,"i"],[15,481,28,32],[15,482,28,32,"set"],[15,485,28,32],[15,489,28,32,"Object"],[15,495,28,32],[15,496,28,32,"defineProperty"],[15,510,28,32],[15,511,28,32,"n"],[15,512,28,32],[15,514,28,32,"u"],[15,515,28,32],[15,517,28,32,"i"],[15,518,28,32],[15,522,28,32,"n"],[15,523,28,32],[15,524,28,32,"u"],[15,525,28,32],[15,529,28,32,"e"],[15,530,28,32],[15,531,28,32,"u"],[15,532,28,32],[15,544,28,32,"n"],[15,545,28,32],[15,546,28,32,"default"],[15,553,28,32],[15,556,28,32,"e"],[15,557,28,32],[15,559,28,32,"t"],[15,560,28,32],[15,564,28,32,"t"],[15,565,28,32],[15,566,28,32,"set"],[15,569,28,32],[15,570,28,32,"e"],[15,571,28,32],[15,573,28,32,"n"],[15,574,28,32],[15,577,28,32,"n"],[15,578,28,32],[16,2,30,0],[16,6,30,6,"SWIPE_DISTANCE_MINIMUM"],[16,28,30,28],[16,31,30,31],[16,32,30,32],[17,2,31,0],[17,6,31,6,"DEFAULT_DRAWER_WIDTH"],[17,26,31,26],[17,29,31,29],[17,34,31,34],[18,2,39,0],[18,6,39,6,"minmax"],[18,12,39,12],[18,15,39,15],[18,24,39,6,"minmax"],[18,30,39,12,"minmax"],[18,31,39,16,"value"],[18,36,39,29],[18,38,39,31,"start"],[18,43,39,44],[18,45,39,46,"end"],[18,48,39,57],[18,50,39,62],[19,4,40,2],[19,13,40,11],[21,4,42,2],[21,11,42,9,"Math"],[21,15,42,13],[21,16,42,14,"min"],[21,19,42,17],[21,20,42,18,"Math"],[21,24,42,22],[21,25,42,23,"max"],[21,28,42,26],[21,29,42,27,"value"],[21,34,42,32],[21,36,42,34,"start"],[21,41,42,39],[21,42,42,40],[21,44,42,42,"end"],[21,47,42,45],[21,48,42,46],[22,2,43,0],[22,3,43,1],[23,2,45,15],[23,11,45,24,"Drawer"],[23,17,45,30,"Drawer"],[23,18,45,30,"_ref"],[23,22,45,30],[23,24,65,16],[24,4,65,16],[24,8,46,2,"dimensions"],[24,18,46,12],[24,21,46,12,"_ref"],[24,25,46,12],[24,26,46,2,"dimensions"],[24,36,46,12],[25,6,47,2,"drawerPosition"],[25,20,47,16],[25,23,47,16,"_ref"],[25,27,47,16],[25,28,47,2,"drawerPosition"],[25,42,47,16],[26,6,48,2,"drawerStyle"],[26,17,48,13],[26,20,48,13,"_ref"],[26,24,48,13],[26,25,48,2,"drawerStyle"],[26,36,48,13],[27,6,49,2,"drawerType"],[27,16,49,12],[27,19,49,12,"_ref"],[27,23,49,12],[27,24,49,2,"drawerType"],[27,34,49,12],[28,6,50,2,"gestureHandlerProps"],[28,25,50,21],[28,28,50,21,"_ref"],[28,32,50,21],[28,33,50,2,"gestureHandlerProps"],[28,52,50,21],[29,6,51,2,"hideStatusBarOnOpen"],[29,25,51,21],[29,28,51,21,"_ref"],[29,32,51,21],[29,33,51,2,"hideStatusBarOnOpen"],[29,52,51,21],[30,6,52,2,"keyboardDismissMode"],[30,25,52,21],[30,28,52,21,"_ref"],[30,32,52,21],[30,33,52,2,"keyboardDismissMode"],[30,52,52,21],[31,6,53,2,"onClose"],[31,13,53,9],[31,16,53,9,"_ref"],[31,20,53,9],[31,21,53,2,"onClose"],[31,28,53,9],[32,6,54,2,"onOpen"],[32,12,54,8],[32,15,54,8,"_ref"],[32,19,54,8],[32,20,54,2,"onOpen"],[32,26,54,8],[33,6,55,2,"open"],[33,10,55,6],[33,13,55,6,"_ref"],[33,17,55,6],[33,18,55,2,"open"],[33,22,55,6],[34,6,56,2,"overlayStyle"],[34,18,56,14],[34,21,56,14,"_ref"],[34,25,56,14],[34,26,56,2,"overlayStyle"],[34,38,56,14],[35,6,57,2,"renderDrawerContent"],[35,25,57,21],[35,28,57,21,"_ref"],[35,32,57,21],[35,33,57,2,"renderDrawerContent"],[35,52,57,21],[36,6,58,2,"renderSceneContent"],[36,24,58,20],[36,27,58,20,"_ref"],[36,31,58,20],[36,32,58,2,"renderSceneContent"],[36,50,58,20],[37,6,59,2,"statusBarAnimation"],[37,24,59,20],[37,27,59,20,"_ref"],[37,31,59,20],[37,32,59,2,"statusBarAnimation"],[37,50,59,20],[38,6,60,2,"swipeDistanceThreshold"],[38,28,60,24],[38,31,60,24,"_ref"],[38,35,60,24],[38,36,60,2,"swipeDistanceThreshold"],[38,58,60,24],[39,6,61,2,"swipeEdgeWidth"],[39,20,61,16],[39,23,61,16,"_ref"],[39,27,61,16],[39,28,61,2,"swipeEdgeWidth"],[39,42,61,16],[40,6,62,2,"swipeEnabled"],[40,18,62,14],[40,21,62,14,"_ref"],[40,25,62,14],[40,26,62,2,"swipeEnabled"],[40,38,62,14],[41,6,63,2,"swipeVelocityThreshold"],[41,28,63,24],[41,31,63,24,"_ref"],[41,35,63,24],[41,36,63,2,"swipeVelocityThreshold"],[41,58,63,24],[42,6,64,2,"overlayAccessibilityLabel"],[42,31,64,27],[42,34,64,27,"_ref"],[42,38,64,27],[42,39,64,2,"overlayAccessibilityLabel"],[42,64,64,27],[43,4,66,2],[43,8,66,8,"getDrawerWidth"],[43,22,66,22],[43,25,66,25],[43,34,66,8,"getDrawerWidth"],[43,48,66,22,"getDrawerWidth"],[43,49,66,22],[43,51,66,39],[44,6,67,4],[44,10,67,4,"_ref2"],[44,15,67,4],[44,18,68,6,"StyleSheet"],[44,41,68,16],[44,42,68,17,"flatten"],[44,49,68,24],[44,50,68,25,"drawerStyle"],[44,61,68,36],[44,62,68,37],[44,66,68,41],[44,67,68,42],[44,68,68,43],[45,8,68,43,"_ref2$width"],[45,19,68,43],[45,22,68,43,"_ref2"],[45,27,68,43],[45,28,67,12,"width"],[45,33,67,17],[46,8,67,12,"width"],[46,13,67,17],[46,16,67,17,"_ref2$width"],[46,27,67,17],[46,41,67,20,"DEFAULT_DRAWER_WIDTH"],[46,61,67,40],[46,64,67,40,"_ref2$width"],[46,75,67,40],[47,6,70,4],[47,10,70,8],[47,17,70,15,"width"],[47,22,70,20],[47,27,70,25],[47,35,70,33],[47,39,70,37,"width"],[47,44,70,42],[47,45,70,43,"endsWith"],[47,53,70,51],[47,54,70,52],[47,57,70,55],[47,58,70,56],[47,60,70,58],[48,8,71,6],[49,8,72,6],[49,12,72,12,"percentage"],[49,22,72,22],[49,25,72,25,"Number"],[49,31,72,31],[49,32,72,32,"width"],[49,37,72,37],[49,38,72,38,"replace"],[49,45,72,45],[49,46,72,46],[49,50,72,50],[49,52,72,52],[49,54,72,54],[49,55,72,55],[49,56,72,56],[50,8,74,6],[50,12,74,10,"Number"],[50,18,74,16],[50,19,74,17,"isFinite"],[50,27,74,25],[50,28,74,26,"percentage"],[50,38,74,36],[50,39,74,37],[50,41,74,39],[51,10,75,8],[51,17,75,15,"dimensions"],[51,27,75,25],[51,28,75,26,"width"],[51,33,75,31],[51,37,75,35,"percentage"],[51,47,75,45],[51,50,75,48],[51,53,75,51],[51,54,75,52],[52,8,76,6],[53,6,77,4],[54,6,79,4],[54,13,79,11],[54,20,79,18,"width"],[54,25,79,23],[54,30,79,28],[54,38,79,36],[54,41,79,39,"width"],[54,46,79,44],[54,49,79,47],[54,50,79,48],[55,4,80,2],[55,5,80,3],[56,4,82,2],[56,8,82,8,"drawerWidth"],[56,19,82,19],[56,22,82,22,"getDrawerWidth"],[56,36,82,36],[56,37,82,37],[56,38,82,38],[57,4,84,2],[57,8,84,8,"isOpen"],[57,14,84,14],[57,17,84,17,"drawerType"],[57,27,84,27],[57,32,84,32],[57,43,84,43],[57,46,84,46],[57,50,84,50],[57,53,84,53,"open"],[57,57,84,57],[58,4,85,2],[58,8,85,8,"isRight"],[58,15,85,15],[58,18,85,18,"drawerPosition"],[58,32,85,32],[58,37,85,37],[58,44,85,44],[59,4,87,2],[59,8,87,8,"getDrawerTranslationX"],[59,29,87,29],[59,32,87,32,"React"],[59,37,87,37],[59,38,87,38,"useCallback"],[59,49,87,49],[59,50,88,4],[59,60,88,5,"open"],[59,64,88,18],[59,66,88,23],[60,6,89,6],[60,15,89,15],[62,6,91,6],[62,10,91,10,"drawerPosition"],[62,24,91,24],[62,29,91,29],[62,35,91,35],[62,37,91,37],[63,8,92,8],[63,15,92,15,"open"],[63,19,92,19],[63,22,92,22],[63,23,92,23],[63,26,92,26],[63,27,92,27,"drawerWidth"],[63,38,92,38],[64,6,93,6],[65,6,95,6],[65,13,95,13,"open"],[65,17,95,17],[65,20,95,20],[65,21,95,21],[65,24,95,24,"drawerWidth"],[65,35,95,35],[66,4,96,4],[66,5,96,5],[66,7,97,4],[66,8,97,5,"drawerPosition"],[66,22,97,19],[66,24,97,21,"drawerWidth"],[66,35,97,32],[66,36,98,2],[66,37,98,3],[67,4,100,2],[67,8,100,8,"hideStatusBar"],[67,21,100,21],[67,24,100,24,"React"],[67,29,100,29],[67,30,100,30,"useCallback"],[67,41,100,41],[67,42,101,4],[67,52,101,5,"hide"],[67,56,101,18],[67,58,101,23],[68,6,102,6],[68,10,102,10,"hideStatusBarOnOpen"],[68,29,102,29],[68,31,102,31],[69,8,103,8,"StatusBar"],[69,30,103,17],[69,31,103,18,"setHidden"],[69,40,103,27],[69,41,103,28,"hide"],[69,45,103,32],[69,47,103,34,"statusBarAnimation"],[69,65,103,52],[69,66,103,53],[70,6,104,6],[71,4,105,4],[71,5,105,5],[71,7,106,4],[71,8,106,5,"hideStatusBarOnOpen"],[71,27,106,24],[71,29,106,26,"statusBarAnimation"],[71,47,106,44],[71,48,107,2],[71,49,107,3],[72,4,109,2,"React"],[72,9,109,7],[72,10,109,8,"useEffect"],[72,19,109,17],[72,20,109,18],[72,32,109,24],[73,6,110,4,"hideStatusBar"],[73,19,110,17],[73,20,110,18,"isOpen"],[73,26,110,24],[73,27,110,25],[74,6,112,4],[74,13,112,11],[75,8,112,11],[75,15,112,17,"hideStatusBar"],[75,28,112,30],[75,29,112,31],[75,34,112,36],[75,35,112,37],[76,6,112,37],[77,4,113,2],[77,5,113,3],[77,7,113,5],[77,8,113,6,"isOpen"],[77,14,113,12],[77,16,113,14,"hideStatusBarOnOpen"],[77,35,113,33],[77,37,113,35,"statusBarAnimation"],[77,55,113,53],[77,57,113,55,"hideStatusBar"],[77,70,113,68],[77,71,113,69],[77,72,113,70],[78,4,115,2],[78,8,115,8,"interactionHandleRef"],[78,28,115,28],[78,31,115,31,"React"],[78,36,115,36],[78,37,115,37,"useRef"],[78,43,115,43],[78,44,115,59],[78,48,115,63],[78,49,115,64],[79,4,117,2],[79,8,117,8,"startInteraction"],[79,24,117,24],[79,27,117,27],[79,36,117,8,"startInteraction"],[79,52,117,24,"startInteraction"],[79,53,117,24],[79,55,117,33],[80,6,118,4,"interactionHandleRef"],[80,26,118,24],[80,27,118,25,"current"],[80,34,118,32],[80,37,118,35,"InteractionManager"],[80,68,118,53],[80,69,118,54,"createInteractionHandle"],[80,92,118,77],[80,93,118,78],[80,94,118,79],[81,4,119,2],[81,5,119,3],[82,4,121,2],[82,8,121,8,"endInteraction"],[82,22,121,22],[82,25,121,25],[82,34,121,8,"endInteraction"],[82,48,121,22,"endInteraction"],[82,49,121,22],[82,51,121,31],[83,6,122,4],[83,10,122,8,"interactionHandleRef"],[83,30,122,28],[83,31,122,29,"current"],[83,38,122,36],[83,42,122,40],[83,46,122,44],[83,48,122,46],[84,8,123,6,"InteractionManager"],[84,39,123,24],[84,40,123,25,"clearInteractionHandle"],[84,62,123,47],[84,63,123,48,"interactionHandleRef"],[84,83,123,68],[84,84,123,69,"current"],[84,91,123,76],[84,92,123,77],[85,8,124,6,"interactionHandleRef"],[85,28,124,26],[85,29,124,27,"current"],[85,36,124,34],[85,39,124,37],[85,43,124,41],[86,6,125,4],[87,4,126,2],[87,5,126,3],[88,4,128,2],[88,8,128,8,"hideKeyboard"],[88,20,128,20],[88,23,128,23],[88,32,128,8,"hideKeyboard"],[88,44,128,20,"hideKeyboard"],[88,45,128,20],[88,47,128,29],[89,6,129,4],[89,10,129,8,"keyboardDismissMode"],[89,29,129,27],[89,34,129,32],[89,43,129,41],[89,45,129,43],[90,8,130,6,"Keyboard"],[90,29,130,14],[90,30,130,15,"dismiss"],[90,37,130,22],[90,38,130,23],[90,39,130,24],[91,6,131,4],[92,4,132,2],[92,5,132,3],[93,4,134,2],[93,8,134,8,"onGestureStart"],[93,22,134,22],[93,25,134,25],[93,34,134,8,"onGestureStart"],[93,48,134,22,"onGestureStart"],[93,49,134,22],[93,51,134,31],[94,6,135,4,"startInteraction"],[94,22,135,20],[94,23,135,21],[94,24,135,22],[95,6,136,4,"hideKeyboard"],[95,18,136,16],[95,19,136,17],[95,20,136,18],[96,6,137,4,"hideStatusBar"],[96,19,137,17],[96,20,137,18],[96,24,137,22],[96,25,137,23],[97,4,138,2],[97,5,138,3],[98,4,140,2],[98,8,140,8,"onGestureFinish"],[98,23,140,23],[98,26,140,26],[98,35,140,8,"onGestureFinish"],[98,50,140,23,"onGestureFinish"],[98,51,140,23],[98,53,140,32],[99,6,141,4,"endInteraction"],[99,20,141,18],[99,21,141,19],[99,22,141,20],[100,4,142,2],[100,5,142,3],[102,4,144,2],[103,4,145,2],[104,4,146,2],[104,8,146,8,"hitSlop"],[104,15,146,15],[104,18,146,18,"isRight"],[104,25,146,25],[105,4,147,6],[106,4,148,6],[107,4,149,6],[108,6,149,8,"right"],[108,11,149,13],[108,13,149,15],[108,14,149,16],[109,6,149,18,"width"],[109,11,149,23],[109,13,149,25,"isOpen"],[109,19,149,31],[109,22,149,34,"undefined"],[109,31,149,43],[109,34,149,46,"swipeEdgeWidth"],[110,4,149,61],[110,5,149,62],[110,8,150,6],[111,6,150,8,"left"],[111,10,150,12],[111,12,150,14],[111,13,150,15],[112,6,150,17,"width"],[112,11,150,22],[112,13,150,24,"isOpen"],[112,19,150,30],[112,22,150,33,"undefined"],[112,31,150,42],[112,34,150,45,"swipeEdgeWidth"],[113,4,150,60],[113,5,150,61],[114,4,152,2],[114,8,152,8,"touchStartX"],[114,19,152,19],[114,22,152,22],[114,26,152,22,"useSharedValue"],[114,63,152,36],[114,65,152,37],[114,66,152,38],[114,67,152,39],[115,4,153,2],[115,8,153,8,"touchX"],[115,14,153,14],[115,17,153,17],[115,21,153,17,"useSharedValue"],[115,58,153,31],[115,60,153,32],[115,61,153,33],[115,62,153,34],[116,4,154,2],[116,8,154,8,"translationX"],[116,20,154,20],[116,23,154,23],[116,27,154,23,"useSharedValue"],[116,64,154,37],[116,66,154,38,"getDrawerTranslationX"],[116,87,154,59],[116,88,154,60,"open"],[116,92,154,64],[116,93,154,65],[116,94,154,66],[117,4,155,2],[117,8,155,8,"gestureState"],[117,20,155,20],[117,23,155,23],[117,27,155,23,"useSharedValue"],[117,64,155,37],[117,66,155,52,"GestureState"],[117,96,155,52],[117,97,155,52,"GestureState"],[117,130,155,64],[117,131,155,65,"UNDETERMINED"],[117,143,155,77],[117,144,155,78],[118,4,157,2],[118,8,157,8,"toggleDrawer"],[118,20,157,20],[118,23,157,23,"React"],[118,28,157,28],[118,29,157,29,"useCallback"],[118,40,157,40],[118,41,158,4],[118,51,158,4,"_ref3"],[118,56,158,4],[118,58,158,60],[119,6,159,6],[119,15,159,15],[121,6,159,16],[121,10,158,7,"open"],[121,14,158,11],[121,17,158,11,"_ref3"],[121,22,158,11],[121,23,158,7,"open"],[121,27,158,11],[122,8,158,13,"isUserInitiated"],[122,23,158,28],[122,26,158,28,"_ref3"],[122,31,158,28],[122,32,158,13,"isUserInitiated"],[122,47,158,28],[123,8,158,30,"velocity"],[123,16,158,38],[123,19,158,38,"_ref3"],[123,24,158,38],[123,25,158,30,"velocity"],[123,33,158,38],[124,6,161,6],[124,10,161,12,"translateX"],[124,20,161,22],[124,23,161,25,"getDrawerTranslationX"],[124,44,161,46],[124,45,161,47,"open"],[124,49,161,51],[124,50,161,52],[125,6,163,6,"touchStartX"],[125,17,163,17],[125,18,163,18,"value"],[125,23,163,23],[125,26,163,26],[125,27,163,27],[126,6,164,6,"touchX"],[126,12,164,12],[126,13,164,13,"value"],[126,18,164,18],[126,21,164,21],[126,22,164,22],[127,6,165,6,"translationX"],[127,18,165,18],[127,19,165,19,"value"],[127,24,165,24],[127,27,165,27],[127,31,165,27,"withSpring"],[127,64,165,37],[127,66,165,38,"translateX"],[127,76,165,48],[127,78,165,50],[128,8,166,8,"velocity"],[128,16,166,16],[128,18,166,8,"velocity"],[128,26,166,16],[129,8,167,8,"stiffness"],[129,17,167,17],[129,19,167,19],[129,23,167,23],[130,8,168,8,"damping"],[130,15,168,15],[130,17,168,17],[130,20,168,20],[131,8,169,8,"mass"],[131,12,169,12],[131,14,169,14],[131,15,169,15],[132,8,170,8,"overshootClamping"],[132,25,170,25],[132,27,170,27],[132,31,170,31],[133,8,171,8,"restDisplacementThreshold"],[133,33,171,33],[133,35,171,35],[133,39,171,39],[134,8,172,8,"restSpeedThreshold"],[134,26,172,26],[134,28,172,28],[134,32,172,32],[135,8,173,8],[136,8,174,8,"reduceMotion"],[136,20,174,20],[136,22,174,22],[137,6,175,6],[137,7,175,7],[137,8,175,8],[138,6,177,6],[138,10,177,10],[138,11,177,11,"isUserInitiated"],[138,26,177,26],[138,28,177,28],[139,8,178,8],[140,6,179,6],[141,6,181,6],[141,10,181,10,"open"],[141,14,181,14],[141,16,181,16],[142,8,182,8],[142,12,182,8,"runOnJS"],[142,42,182,15],[142,44,182,16,"onOpen"],[142,50,182,22],[142,51,182,23],[142,52,182,24],[142,53,182,25],[143,6,183,6],[143,7,183,7],[143,13,183,13],[144,8,184,8],[144,12,184,8,"runOnJS"],[144,42,184,15],[144,44,184,16,"onClose"],[144,51,184,23],[144,52,184,24],[144,53,184,25],[144,54,184,26],[145,6,185,6],[146,4,186,4],[146,5,186,5],[146,7,187,4],[146,8,187,5,"getDrawerTranslationX"],[146,29,187,26],[146,31,187,28,"onClose"],[146,38,187,35],[146,40,187,37,"onOpen"],[146,46,187,43],[146,48,187,45,"touchStartX"],[146,59,187,56],[146,61,187,58,"touchX"],[146,67,187,64],[146,69,187,66,"translationX"],[146,81,187,78],[146,82,188,2],[146,83,188,3],[147,4,190,2,"React"],[147,9,190,7],[147,10,190,8,"useEffect"],[147,19,190,17],[147,20,191,4],[148,6,191,4],[148,13,191,10,"toggleDrawer"],[148,25,191,22],[148,26,191,23],[149,8,191,25,"open"],[149,12,191,29],[149,14,191,25,"open"],[149,18,191,29],[150,8,191,31,"isUserInitiated"],[150,23,191,46],[150,25,191,48],[151,6,191,54],[151,7,191,55],[151,8,191,56],[152,4,191,56],[152,7,192,4],[152,8,192,5,"open"],[152,12,192,9],[152,14,192,11,"toggleDrawer"],[152,26,192,23],[152,27,193,2],[152,28,193,3],[153,4,195,2],[153,8,195,8,"onGestureEvent"],[153,22,195,22],[153,25,195,25],[153,29,195,25,"useAnimatedGestureHandler"],[153,77,195,50],[153,79,198,4],[154,6,199,4,"onStart"],[154,13,199,11],[154,15,199,13],[154,24,199,4,"onStart"],[154,31,199,11,"onStart"],[154,32,199,14,"event"],[154,37,199,19],[154,39,199,21,"ctx"],[154,42,199,24],[154,44,199,29],[155,8,200,6,"ctx"],[155,11,200,9],[155,12,200,10,"hasCalledOnStart"],[155,28,200,26],[155,31,200,29],[155,36,200,34],[156,8,201,6,"ctx"],[156,11,201,9],[156,12,201,10,"startX"],[156,18,201,16],[156,21,201,19,"translationX"],[156,33,201,31],[156,34,201,32,"value"],[156,39,201,37],[157,8,202,6,"gestureState"],[157,20,202,18],[157,21,202,19,"value"],[157,26,202,24],[157,29,202,27,"event"],[157,34,202,32],[157,35,202,33,"state"],[157,40,202,38],[158,8,203,6,"touchStartX"],[158,19,203,17],[158,20,203,18,"value"],[158,25,203,23],[158,28,203,26,"event"],[158,33,203,31],[158,34,203,32,"x"],[158,35,203,33],[159,6,204,4],[159,7,204,5],[160,6,205,4,"onActive"],[160,14,205,12],[160,16,205,14],[160,25,205,4,"onActive"],[160,33,205,12,"onActive"],[160,34,205,15,"event"],[160,39,205,20],[160,41,205,22,"ctx"],[160,44,205,25],[160,46,205,30],[161,8,206,6,"touchX"],[161,14,206,12],[161,15,206,13,"value"],[161,20,206,18],[161,23,206,21,"event"],[161,28,206,26],[161,29,206,27,"x"],[161,30,206,28],[162,8,207,6,"translationX"],[162,20,207,18],[162,21,207,19,"value"],[162,26,207,24],[162,29,207,27,"ctx"],[162,32,207,30],[162,33,207,31,"startX"],[162,39,207,37],[162,42,207,40,"event"],[162,47,207,45],[162,48,207,46,"translationX"],[162,60,207,58],[163,8,208,6,"gestureState"],[163,20,208,18],[163,21,208,19,"value"],[163,26,208,24],[163,29,208,27,"event"],[163,34,208,32],[163,35,208,33,"state"],[163,40,208,38],[165,8,210,6],[166,8,211,6],[167,8,212,6],[168,8,213,6],[168,12,213,10],[168,13,213,11,"ctx"],[168,16,213,14],[168,17,213,15,"hasCalledOnStart"],[168,33,213,31],[168,35,213,33],[169,10,214,8,"ctx"],[169,13,214,11],[169,14,214,12,"hasCalledOnStart"],[169,30,214,28],[169,33,214,31],[169,37,214,35],[170,10,215,8],[170,14,215,8,"runOnJS"],[170,44,215,15],[170,46,215,16,"onGestureStart"],[170,60,215,30],[170,61,215,31],[170,62,215,32],[170,63,215,33],[171,8,216,6],[172,6,217,4],[172,7,217,5],[173,6,218,4,"onEnd"],[173,11,218,9],[173,13,218,11],[173,22,218,4,"onEnd"],[173,27,218,9,"onEnd"],[173,28,218,12,"event"],[173,33,218,17],[173,35,218,22],[174,8,219,6,"gestureState"],[174,20,219,18],[174,21,219,19,"value"],[174,26,219,24],[174,29,219,27,"event"],[174,34,219,32],[174,35,219,33,"state"],[174,40,219,38],[175,8,221,6],[175,12,221,12,"nextOpen"],[175,20,221,20],[175,23,222,9,"Math"],[175,27,222,13],[175,28,222,14,"abs"],[175,31,222,17],[175,32,222,18,"event"],[175,37,222,23],[175,38,222,24,"translationX"],[175,50,222,36],[175,51,222,37],[175,54,222,40,"SWIPE_DISTANCE_MINIMUM"],[175,76,222,62],[175,80,223,10,"Math"],[175,84,223,14],[175,85,223,15,"abs"],[175,88,223,18],[175,89,223,19,"event"],[175,94,223,24],[175,95,223,25,"translationX"],[175,107,223,37],[175,108,223,38],[175,111,223,41,"swipeVelocityThreshold"],[175,133,223,63],[175,137,224,8,"Math"],[175,141,224,12],[175,142,224,13,"abs"],[175,145,224,16],[175,146,224,17,"event"],[175,151,224,22],[175,152,224,23,"translationX"],[175,164,224,35],[175,165,224,36],[175,168,224,39,"swipeDistanceThreshold"],[175,190,224,61],[175,193,225,12,"drawerPosition"],[175,207,225,26],[175,212,225,31],[175,218,225,37],[176,8,226,14],[177,8,227,14],[177,9,227,15,"event"],[177,14,227,20],[177,15,227,21,"velocityX"],[177,24,227,30],[177,29,227,35],[177,30,227,36],[177,33,227,39,"event"],[177,38,227,44],[177,39,227,45,"translationX"],[177,51,227,57],[177,54,227,60,"event"],[177,59,227,65],[177,60,227,66,"velocityX"],[177,69,227,75],[177,73,227,79],[177,74,227,80],[178,8,228,14],[179,8,229,14],[179,9,229,15,"event"],[179,14,229,20],[179,15,229,21,"velocityX"],[179,24,229,30],[179,29,229,35],[179,30,229,36],[179,33,229,39,"event"],[179,38,229,44],[179,39,229,45,"translationX"],[179,51,229,57],[179,54,229,60,"event"],[179,59,229,65],[179,60,229,66,"velocityX"],[179,69,229,75],[179,73,229,79],[179,74,229,80],[179,77,230,12,"open"],[179,81,230,16],[180,8,232,6,"toggleDrawer"],[180,20,232,18],[180,21,232,19],[181,10,233,8,"open"],[181,14,233,12],[181,16,233,14,"nextOpen"],[181,24,233,22],[182,10,234,8,"isUserInitiated"],[182,25,234,23],[182,27,234,25],[182,31,234,29],[183,10,235,8,"velocity"],[183,18,235,16],[183,20,235,18,"event"],[183,25,235,23],[183,26,235,24,"velocityX"],[184,8,236,6],[184,9,236,7],[184,10,236,8],[185,6,237,4],[185,7,237,5],[186,6,238,4,"onFinish"],[186,14,238,12],[186,16,238,14],[186,25,238,4,"onFinish"],[186,33,238,12,"onFinish"],[186,34,238,12],[186,36,238,20],[187,8,239,6],[187,12,239,6,"runOnJS"],[187,42,239,13],[187,44,239,14,"onGestureFinish"],[187,59,239,29],[187,60,239,30],[187,61,239,31],[187,62,239,32],[188,6,240,4],[189,4,241,2],[189,5,241,3],[189,6,241,4],[190,4,243,2],[190,8,243,8,"translateX"],[190,18,243,18],[190,21,243,21],[190,25,243,21,"useDerivedValue"],[190,63,243,36],[190,65,243,37],[190,77,243,43],[191,6,244,4],[192,6,245,4],[193,6,246,4],[194,6,247,4],[195,6,248,4],[196,6,249,4],[197,6,250,4],[198,6,251,4],[199,6,252,4],[200,6,253,4],[201,6,254,4],[202,6,255,4],[203,6,256,4],[204,6,257,4],[205,6,258,4],[206,6,259,4],[207,6,260,4],[208,6,261,4],[209,6,262,4],[210,6,263,4],[211,6,264,4],[212,6,265,4],[213,6,266,4],[214,6,267,4],[215,6,268,4],[216,6,269,4],[216,10,269,10,"touchDistance"],[216,23,269,23],[216,26,270,6,"drawerType"],[216,36,270,16],[216,41,270,21],[216,48,270,28],[216,52,270,32,"gestureState"],[216,64,270,44],[216,65,270,45,"value"],[216,70,270,50],[216,75,270,55,"GestureState"],[216,105,270,55],[216,106,270,55,"GestureState"],[216,139,270,67],[216,140,270,68,"ACTIVE"],[216,146,270,74],[216,149,271,10,"minmax"],[216,155,271,16],[216,156,272,12,"drawerPosition"],[216,170,272,26],[216,175,272,31],[216,181,272,37],[216,184,273,16,"touchStartX"],[216,195,273,27],[216,196,273,28,"value"],[216,201,273,33],[216,204,273,36,"drawerWidth"],[216,215,273,47],[216,218,274,16,"dimensions"],[216,228,274,26],[216,229,274,27,"width"],[216,234,274,32],[216,237,274,35,"drawerWidth"],[216,248,274,46],[216,251,274,49,"touchStartX"],[216,262,274,60],[216,263,274,61,"value"],[216,268,274,66],[216,270,275,12],[216,271,275,13],[216,273,276,12,"dimensions"],[216,283,276,22],[216,284,276,23,"width"],[216,289,277,10],[216,290,277,11],[216,293,278,10],[216,294,278,11],[217,6,280,4],[217,10,280,10,"translateX"],[217,20,280,20],[217,23,281,6,"drawerPosition"],[217,37,281,20],[217,42,281,25],[217,48,281,31],[217,51,282,10,"minmax"],[217,57,282,16],[217,58,282,17,"translationX"],[217,70,282,29],[217,71,282,30,"value"],[217,76,282,35],[217,79,282,38,"touchDistance"],[217,92,282,51],[217,94,282,53],[217,95,282,54,"drawerWidth"],[217,106,282,65],[217,108,282,67],[217,109,282,68],[217,110,282,69],[217,113,283,10,"minmax"],[217,119,283,16],[217,120,283,17,"translationX"],[217,132,283,29],[217,133,283,30,"value"],[217,138,283,35],[217,141,283,38,"touchDistance"],[217,154,283,51],[217,156,283,53],[217,157,283,54],[217,159,283,56,"drawerWidth"],[217,170,283,67],[217,171,283,68],[218,6,285,4],[218,13,285,11,"translateX"],[218,23,285,21],[219,4,286,2],[219,5,286,3],[219,6,286,4],[220,4,288,2],[220,8,288,8,"isRTL"],[220,13,288,13],[220,16,288,16,"I18nManager"],[220,40,288,27],[220,41,288,28,"getConstants"],[220,53,288,40],[220,54,288,41],[220,55,288,42],[220,56,288,43,"isRTL"],[220,61,288,48],[221,4,289,2],[221,8,289,8,"drawerAnimatedStyle"],[221,27,289,27],[221,30,289,30],[221,34,289,30,"useAnimatedStyle"],[221,73,289,46],[221,75,289,47],[221,87,289,53],[222,6,290,4],[222,10,290,10,"distanceFromEdge"],[222,26,290,26],[222,29,290,29,"dimensions"],[222,39,290,39],[222,40,290,40,"width"],[222,45,290,45],[222,48,290,48,"drawerWidth"],[222,59,290,59],[223,6,292,4],[223,13,292,11],[224,8,293,6,"transform"],[224,17,293,15],[224,19,294,8,"drawerType"],[224,29,294,18],[224,34,294,23],[224,45,294,34],[225,8,295,12],[226,8,296,12],[227,8,297,12],[227,10,297,14],[227,13,298,12],[227,14,299,14],[228,10,300,16,"translateX"],[228,20,300,26],[229,10,301,18],[230,10,302,18],[230,11,302,19,"drawerType"],[230,21,302,29],[230,26,302,34],[230,32,302,40],[230,35,302,43],[230,36,302,44],[230,39,302,47,"translateX"],[230,49,302,57],[230,50,302,58,"value"],[230,55,302,63],[230,60,303,19,"drawerPosition"],[230,74,303,33],[230,79,303,38],[230,85,303,44],[230,88,304,22,"isRTL"],[230,93,304,27],[230,96,305,24],[230,97,305,25,"distanceFromEdge"],[230,113,305,41],[230,116,306,24],[230,117,306,25],[230,120,307,22,"isRTL"],[230,125,307,27],[230,128,308,22],[230,129,308,23],[230,132,309,22,"distanceFromEdge"],[230,148,309,38],[231,8,310,14],[231,9,310,15],[232,6,312,4],[232,7,312,5],[233,4,313,2],[233,5,313,3],[233,6,313,4],[234,4,315,2],[234,8,315,8,"contentAnimatedStyle"],[234,28,315,28],[234,31,315,31],[234,35,315,31,"useAnimatedStyle"],[234,74,315,47],[234,76,315,48],[234,88,315,54],[235,6,316,4],[235,13,316,11],[236,8,317,6,"transform"],[236,17,317,15],[236,19,318,8,"drawerType"],[236,29,318,18],[236,34,318,23],[236,45,318,34],[237,8,319,12],[238,8,320,12],[239,8,321,12],[239,10,321,14],[239,13,322,12],[239,14,323,14],[240,10,324,16,"translateX"],[240,20,324,26],[241,10,325,18],[242,10,326,18,"drawerType"],[242,20,326,28],[242,25,326,33],[242,32,326,40],[242,35,327,22],[242,36,327,23],[242,39,328,22,"translateX"],[242,49,328,32],[242,50,328,33,"value"],[242,55,328,38],[242,58,329,22,"drawerWidth"],[242,69,329,33],[242,73,329,37,"drawerPosition"],[242,87,329,51],[242,92,329,56],[242,98,329,62],[242,101,329,65],[242,102,329,66],[242,105,329,69],[242,106,329,70],[242,107,329,71],[243,8,330,14],[243,9,330,15],[244,6,332,4],[244,7,332,5],[245,4,333,2],[245,5,333,3],[245,6,333,4],[246,4,335,2],[246,8,335,8,"progress"],[246,16,335,16],[246,19,335,19],[246,23,335,19,"useDerivedValue"],[246,61,335,34],[246,63,335,35],[246,75,335,41],[247,6,336,4],[247,13,336,11,"drawerType"],[247,23,336,21],[247,28,336,26],[247,39,336,37],[247,42,337,8],[247,43,337,9],[247,46,338,8],[247,50,338,8,"interpolate"],[247,84,338,19],[247,86,339,10,"translateX"],[247,96,339,20],[247,97,339,21,"value"],[247,102,339,26],[247,104,340,10],[247,105,340,11,"getDrawerTranslationX"],[247,126,340,32],[247,127,340,33],[247,132,340,38],[247,133,340,39],[247,135,340,41,"getDrawerTranslationX"],[247,156,340,62],[247,157,340,63],[247,161,340,67],[247,162,340,68],[247,163,340,69],[247,165,341,10],[247,166,341,11],[247,167,341,12],[247,169,341,14],[247,170,341,15],[247,171,342,8],[247,172,342,9],[248,4,343,2],[248,5,343,3],[248,6,343,4],[249,4,345,2],[249,24,346,4],[249,28,346,4,"_jsxRuntime"],[249,39,346,4],[249,40,346,4,"jsx"],[249,43,346,4],[249,45,346,5,"_DrawerProgressContext"],[249,67,346,5],[249,68,346,5,"default"],[249,75,346,26],[249,76,346,27,"Provider"],[249,84,346,35],[250,6,346,36,"value"],[250,11,346,41],[250,13,346,43,"progress"],[250,21,346,52],[251,6,346,52,"children"],[251,14,346,52],[251,29,347,6],[251,33,347,6,"_jsxRuntime"],[251,44,347,6],[251,45,347,6,"jsx"],[251,48,347,6],[251,50,347,7,"_$$_REQUIRE"],[251,61,347,7],[251,62,347,7,"_dependencyMap"],[251,76,347,7],[251,102,347,7,"PanGestureHandler"],[251,119,347,24],[251,121,347,24,"Object"],[251,127,347,24],[251,128,347,24,"assign"],[251,134,347,24],[252,8,348,8,"activeOffsetX"],[252,21,348,21],[252,23,348,23],[252,24,348,24],[252,25,348,25,"SWIPE_DISTANCE_MINIMUM"],[252,47,348,47],[252,49,348,49,"SWIPE_DISTANCE_MINIMUM"],[252,71,348,71],[252,72,348,73],[253,8,349,8,"failOffsetY"],[253,19,349,19],[253,21,349,21],[253,22,349,22],[253,23,349,23,"SWIPE_DISTANCE_MINIMUM"],[253,45,349,45],[253,47,349,47,"SWIPE_DISTANCE_MINIMUM"],[253,69,349,69],[253,70,349,71],[254,8,350,8,"hitSlop"],[254,15,350,15],[254,17,350,17,"hitSlop"],[254,24,350,25],[255,8,351,8,"enabled"],[255,15,351,15],[255,17,351,17,"drawerType"],[255,27,351,27],[255,32,351,32],[255,43,351,43],[255,47,351,47,"swipeEnabled"],[255,59,351,60],[256,8,352,8,"onGestureEvent"],[256,22,352,22],[256,24,352,24,"onGestureEvent"],[257,6,352,39],[257,9,353,12,"gestureHandlerProps"],[257,28,353,31],[258,8,353,31,"children"],[258,16,353,31],[258,31,356,8],[258,35,356,8,"_jsxRuntime"],[258,46,356,8],[258,47,356,8,"jsxs"],[258,51,356,8],[258,53,356,9,"_reactNativeReanimated"],[258,75,356,9],[258,76,356,9,"default"],[258,83,356,17],[258,84,356,18,"View"],[258,88,356,22],[259,10,357,10,"style"],[259,15,357,15],[259,17,357,17],[259,18,358,12,"styles"],[259,24,358,18],[259,25,358,19,"main"],[259,29,358,23],[259,31,359,12],[260,12,360,14,"flexDirection"],[260,25,360,27],[260,27,361,16,"drawerType"],[260,37,361,26],[260,42,361,31],[260,53,361,42],[260,57,361,46],[260,58,361,47,"isRight"],[260,65,361,54],[260,68,361,57],[260,81,361,70],[260,84,361,73],[261,10,362,12],[261,11,362,13],[261,12,363,12],[262,10,363,12,"children"],[262,18,363,12],[262,34,365,10],[262,38,365,10,"_jsxRuntime"],[262,49,365,10],[262,50,365,10,"jsxs"],[262,54,365,10],[262,56,365,11,"_reactNativeReanimated"],[262,78,365,11],[262,79,365,11,"default"],[262,86,365,19],[262,87,365,20,"View"],[262,91,365,24],[263,12,365,25,"style"],[263,17,365,30],[263,19,365,32],[263,20,365,33,"styles"],[263,26,365,39],[263,27,365,40,"content"],[263,34,365,47],[263,36,365,49,"contentAnimatedStyle"],[263,56,365,69],[263,57,365,71],[264,12,365,71,"children"],[264,20,365,71],[264,36,366,12],[264,40,366,12,"_jsxRuntime"],[264,51,366,12],[264,52,366,12,"jsx"],[264,55,366,12],[264,57,366,13,"_reactNative"],[264,69,366,13],[264,70,366,13,"View"],[264,74,366,17],[265,14,367,14,"accessibilityElementsHidden"],[265,41,367,41],[265,43,367,43,"isOpen"],[265,49,367,49],[265,53,367,53,"drawerType"],[265,63,367,63],[265,68,367,68],[265,79,367,80],[266,14,368,14,"importantForAccessibility"],[266,39,368,39],[266,41,369,16,"isOpen"],[266,47,369,22],[266,51,369,26,"drawerType"],[266,61,369,36],[266,66,369,41],[266,77,369,52],[266,80,370,20],[266,101,370,41],[266,104,371,20],[266,110,372,15],[267,14,373,14,"style"],[267,19,373,19],[267,21,373,21,"styles"],[267,27,373,27],[267,28,373,28,"content"],[267,35,373,36],[268,14,373,36,"children"],[268,22,373,36],[268,24,375,15,"renderSceneContent"],[268,42,375,33],[268,43,375,34],[269,12,375,35],[269,13,376,18],[269,14,376,19],[269,16,377,13,"drawerType"],[269,26,377,23],[269,31,377,28],[269,42,377,39],[269,58,378,14],[269,62,378,14,"_jsxRuntime"],[269,73,378,14],[269,74,378,14,"jsx"],[269,77,378,14],[269,79,378,15,"_Overlay"],[269,87,378,15],[269,88,378,15,"default"],[269,95,378,22],[270,14,379,16,"progress"],[270,22,379,24],[270,24,379,26,"progress"],[270,32,379,35],[271,14,380,16,"onPress"],[271,21,380,23],[271,23,380,25],[271,32,380,16,"onPress"],[271,39,380,23,"onPress"],[271,40,380,23],[272,16,380,23],[272,23,381,18,"toggleDrawer"],[272,35,381,30],[272,36,381,31],[273,18,381,33,"open"],[273,22,381,37],[273,24,381,39],[273,29,381,44],[274,18,381,46,"isUserInitiated"],[274,33,381,61],[274,35,381,63],[275,16,381,68],[275,17,381,69],[275,18,381,70],[276,14,381,70],[276,15,382,17],[277,14,383,16,"style"],[277,19,383,21],[277,21,383,23,"overlayStyle"],[277,33,383,36],[278,14,384,16,"accessibilityLabel"],[278,32,384,34],[278,34,384,36,"overlayAccessibilityLabel"],[279,12,384,62],[279,13,385,15],[279,14,385,16],[279,17,386,16],[279,21,386,20],[280,10,386,20],[280,11,387,25],[280,12,387,26],[280,27,388,10],[280,31,388,10,"_jsxRuntime"],[280,42,388,10],[280,43,388,10,"jsx"],[280,46,388,10],[280,48,388,11,"_reactNativeReanimated"],[280,70,388,11],[280,71,388,11,"default"],[280,78,388,19],[280,79,388,20,"View"],[280,83,388,24],[281,12,389,12,"removeClippedSubviews"],[281,33,389,33],[281,35,389,35,"Platform"],[281,56,389,43],[281,57,389,44,"OS"],[281,59,389,46],[281,64,389,51],[281,69,389,57],[282,12,390,12,"style"],[282,17,390,17],[282,19,390,19],[282,20,391,14,"styles"],[282,26,391,20],[282,27,391,21,"container"],[282,36,391,30],[282,38,392,14],[283,14,393,16,"position"],[283,22,393,24],[283,24,393,26,"drawerType"],[283,34,393,36],[283,39,393,41],[283,50,393,52],[283,53,393,55],[283,63,393,65],[283,66,393,68],[283,76,393,78],[284,14,394,16,"zIndex"],[284,20,394,22],[284,22,394,24,"drawerType"],[284,32,394,34],[284,37,394,39],[284,43,394,45],[284,46,394,48],[284,47,394,49],[284,48,394,50],[284,51,394,53],[285,12,395,14],[285,13,395,15],[285,15,396,14,"drawerAnimatedStyle"],[285,34,396,33],[285,36,397,14,"drawerStyle"],[285,47,397,25],[285,48,398,14],[286,12,398,14,"children"],[286,20,398,14],[286,22,400,13,"renderDrawerContent"],[286,41,400,32],[286,42,400,33],[287,10,400,34],[287,11,401,25],[287,12,401,26],[288,8,401,26],[288,9,402,23],[289,6,402,24],[289,8,403,25],[290,4,403,26],[290,5,404,36],[290,6,404,37],[291,2,406,0],[292,2,408,0],[292,6,408,6,"styles"],[292,12,408,12],[292,15,408,15,"StyleSheet"],[292,38,408,25],[292,39,408,26,"create"],[292,45,408,32],[292,46,408,33],[293,4,409,2,"container"],[293,13,409,11],[293,15,409,13],[294,6,410,4,"top"],[294,9,410,7],[294,11,410,9],[294,12,410,10],[295,6,411,4,"bottom"],[295,12,411,10],[295,14,411,12],[295,15,411,13],[296,6,412,4,"maxWidth"],[296,14,412,12],[296,16,412,14],[296,22,412,20],[297,6,413,4,"width"],[297,11,413,9],[297,13,413,11,"DEFAULT_DRAWER_WIDTH"],[298,4,414,2],[298,5,414,3],[299,4,415,2,"content"],[299,11,415,9],[299,13,415,11],[300,6,416,4,"flex"],[300,10,416,8],[300,12,416,10],[301,4,417,2],[301,5,417,3],[302,4,418,2,"main"],[302,8,418,6],[302,10,418,6,"Object"],[302,16,418,6],[302,17,418,6,"assign"],[302,23,418,6],[303,6,419,4,"flex"],[303,10,419,8],[303,12,419,10],[304,4,419,11],[304,7,420,7,"Platform"],[304,28,420,15],[304,29,420,16,"select"],[304,35,420,22],[304,36,420,23],[305,6,421,6],[306,6,422,6],[307,6,423,6,"web"],[307,9,423,9],[307,11,423,11],[307,15,423,15],[308,6,424,6,"default"],[308,13,424,13],[308,15,424,15],[309,8,424,17,"overflow"],[309,16,424,25],[309,18,424,27],[310,6,424,36],[311,4,425,4],[311,5,425,5],[311,6,425,6],[312,2,427,0],[312,3,427,1],[312,4,427,2],[313,0,427,3],[313,3]],"functionMap":{"names":["<global>","minmax","Drawer","getDrawerWidth","getDrawerTranslationX","hideStatusBar","React.useEffect$argument_0","<anonymous>","startInteraction","endInteraction","hideKeyboard","onGestureStart","onGestureFinish","toggleDrawer","useAnimatedGestureHandler$argument_0.onStart","useAnimatedGestureHandler$argument_0.onActive","useAnimatedGestureHandler$argument_0.onEnd","useAnimatedGestureHandler$argument_0.onFinish","useDerivedValue$argument_0","useAnimatedStyle$argument_0","Overlay.props.onPress"],"mappings":"AAA;eCsC;CDI;eEE;yBCqB;GDc;IEQ;KFQ;IGK;KHI;kBII;WCG,0BD;GJC;2BMI;GNE;yBOE;GPK;uBQE;GRI;yBSE;GTI;0BUE;GVE;IWgB;KX4B;IIK,oDJ;aYQ;KZK;caC;KbY;WcC;KdmB;ceC;KfE;qCgBG;GhB2C;+CiBG;GjBwB;gDiBE;GjBkB;mCgBE;GhBQ;yBkBqC;sElBC;CFyB"}},"type":"js/module"}]}