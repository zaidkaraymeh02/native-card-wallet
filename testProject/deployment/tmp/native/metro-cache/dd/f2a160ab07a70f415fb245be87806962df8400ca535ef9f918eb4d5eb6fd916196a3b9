{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":142,"column":0,"index":5258}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/construct","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":142,"column":0,"index":5258}}],"key":"+/t/E9sWxVJdYaIS9a4uS5ukkN4="}},{"name":"./tapGesture","data":{"asyncType":null,"locs":[{"start":{"line":13,"column":0,"index":441},"end":{"line":13,"column":42,"index":483}}],"key":"PDrLvv5iX9PWdHMRaTcJsg7ERUM="}},{"name":"./panGesture","data":{"asyncType":null,"locs":[{"start":{"line":10,"column":0,"index":298},"end":{"line":10,"column":42,"index":340}}],"key":"TVyZwOqF83+w+OUPW3gAvWiLliE="}},{"name":"./pinchGesture","data":{"asyncType":null,"locs":[{"start":{"line":11,"column":0,"index":341},"end":{"line":11,"column":46,"index":387}}],"key":"1qtJVDfwES5RITs13sJKhzPRQik="}},{"name":"./rotationGesture","data":{"asyncType":null,"locs":[{"start":{"line":12,"column":0,"index":388},"end":{"line":12,"column":52,"index":440}}],"key":"irfG99tBOhQX1Gtm8t7LjVUNbEk="}},{"name":"./flingGesture","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":46,"index":46}}],"key":"n7K5H4r5nVZ4FmBj0zRuUqyaGMU="}},{"name":"./longPressGesture","data":{"asyncType":null,"locs":[{"start":{"line":9,"column":0,"index":243},"end":{"line":9,"column":54,"index":297}}],"key":"b6xVzItvByWQ4XIpw2/JU9D0o5k="}},{"name":"./forceTouchGesture","data":{"asyncType":null,"locs":[{"start":{"line":2,"column":0,"index":47},"end":{"line":2,"column":56,"index":103}}],"key":"BkDLDBNbycEF3folpg00BM1Hpts="}},{"name":"./nativeGesture","data":{"asyncType":null,"locs":[{"start":{"line":14,"column":0,"index":484},"end":{"line":14,"column":48,"index":532}}],"key":"S2WTen9Sf2+1K+riuxhCZOh2evI="}},{"name":"./manualGesture","data":{"asyncType":null,"locs":[{"start":{"line":15,"column":0,"index":533},"end":{"line":15,"column":48,"index":581}}],"key":"hGxJAh2PdedKA1a1yULNldT7PwY="}},{"name":"./hoverGesture","data":{"asyncType":null,"locs":[{"start":{"line":16,"column":0,"index":582},"end":{"line":16,"column":46,"index":628}}],"key":"wQXLg9ZGNqPu0QNZzcPePN4g3RM="}},{"name":"./gestureComposition","data":{"asyncType":null,"locs":[{"start":{"line":4,"column":0,"index":141},"end":{"line":8,"column":30,"index":242}},{"start":{"line":4,"column":0,"index":141},"end":{"line":8,"column":30,"index":242}},{"start":{"line":4,"column":0,"index":141},"end":{"line":8,"column":30,"index":242}}],"key":"bMAt3lbwQ2TRHcl54LIUtUd/cBs="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.GestureObjects = void 0;\n  var _construct2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/construct\"));\n  /**\n   * `Gesture` is the object that allows you to create and compose gestures.\n   *\n   * ### Remarks\n   * - Consider wrapping your gesture configurations with `useMemo`, as it will reduce the amount of work Gesture Handler has to do under the hood when updating gestures.\n   *\n   * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/gesture\n   */\n  var GestureObjects = exports.GestureObjects = {\n    /**\n     * A discrete gesture that recognizes one or many taps.\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/tap-gesture\n     */\n    Tap: function Tap() {\n      return new (_$$_REQUIRE(_dependencyMap[2], \"./tapGesture\").TapGesture)();\n    },\n    /**\n     * A continuous gesture that can recognize a panning (dragging) gesture and track its movement.\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pan-gesture\n     */\n    Pan: function Pan() {\n      return new (_$$_REQUIRE(_dependencyMap[3], \"./panGesture\").PanGesture)();\n    },\n    /**\n     * A continuous gesture that recognizes pinch gesture. It allows for tracking the distance between two fingers and use that information to scale or zoom your content.\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pinch-gesture\n     */\n    Pinch: function Pinch() {\n      return new (_$$_REQUIRE(_dependencyMap[4], \"./pinchGesture\").PinchGesture)();\n    },\n    /**\n     * A continuous gesture that can recognize rotation and track its movement.\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/rotation-gesture\n     */\n    Rotation: function Rotation() {\n      return new (_$$_REQUIRE(_dependencyMap[5], \"./rotationGesture\").RotationGesture)();\n    },\n    /**\n     * A discrete gesture that activates when the movement is sufficiently fast.\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/fling-gesture\n     */\n    Fling: function Fling() {\n      return new (_$$_REQUIRE(_dependencyMap[6], \"./flingGesture\").FlingGesture)();\n    },\n    /**\n     * A discrete gesture that activates when the corresponding view is pressed for a sufficiently long time.\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/long-press-gesture\n     */\n    LongPress: function LongPress() {\n      return new (_$$_REQUIRE(_dependencyMap[7], \"./longPressGesture\").LongPressGesture)();\n    },\n    /**\n     * #### iOS only\n     * A continuous gesture that recognizes force of a touch. It allows for tracking pressure of touch on some iOS devices.\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/force-touch-gesture\n     */\n    ForceTouch: function ForceTouch() {\n      return new (_$$_REQUIRE(_dependencyMap[8], \"./forceTouchGesture\").ForceTouchGesture)();\n    },\n    /**\n     * A gesture that allows other touch handling components to participate in RNGH's gesture system.\n     * When used, the other component should be the direct child of a `GestureDetector`.\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/native-gesture\n     */\n    Native: function Native() {\n      return new (_$$_REQUIRE(_dependencyMap[9], \"./nativeGesture\").NativeGesture)();\n    },\n    /**\n     * A plain gesture that has no specific activation criteria nor event data set.\n     * Its state has to be controlled manually using a state manager.\n     * It will not fail when all the pointers are lifted from the screen.\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/manual-gesture\n     */\n    Manual: function Manual() {\n      return new (_$$_REQUIRE(_dependencyMap[10], \"./manualGesture\").ManualGesture)();\n    },\n    /**\n     * A continuous gesture that can recognize hovering above the view it's attached to.\n     * The hover effect may be activated by moving a mouse or a stylus over the view.\n     *\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/hover-gesture\n     */\n    Hover: function Hover() {\n      return new (_$$_REQUIRE(_dependencyMap[11], \"./hoverGesture\").HoverGesture)();\n    },\n    /**\n     * Builds a composed gesture consisting of gestures provided as parameters.\n     * The first one that becomes active cancels the rest of gestures.\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/fundamentals/gesture-composition/#race\n     */\n    Race: function Race() {\n      for (var _len = arguments.length, gestures = new Array(_len), _key = 0; _key < _len; _key++) {\n        gestures[_key] = arguments[_key];\n      }\n      return (0, _construct2.default)(_$$_REQUIRE(_dependencyMap[12], \"./gestureComposition\").ComposedGesture, gestures);\n    },\n    /**\n     * Builds a composed gesture that allows all base gestures to run simultaneously.\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/fundamentals/gesture-composition/#simultaneous\n     */\n    Simultaneous: function Simultaneous() {\n      for (var _len2 = arguments.length, gestures = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        gestures[_key2] = arguments[_key2];\n      }\n      return (0, _construct2.default)(_$$_REQUIRE(_dependencyMap[12], \"./gestureComposition\").SimultaneousGesture, gestures);\n    },\n    /**\n     * Builds a composed gesture where only one of the provided gestures can become active.\n     * Priority is decided through the order of gestures: the first one has higher priority\n     * than the second one, second one has higher priority than the third one, and so on.\n     * For example, to make a gesture that recognizes both single and double tap you need\n     * to call Exclusive(doubleTap, singleTap).\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/fundamentals/gesture-composition/#exclusive\n     */\n    Exclusive: function Exclusive() {\n      for (var _len3 = arguments.length, gestures = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        gestures[_key3] = arguments[_key3];\n      }\n      return (0, _construct2.default)(_$$_REQUIRE(_dependencyMap[12], \"./gestureComposition\").ExclusiveGesture, gestures);\n    }\n  };\n});","lineCount":129,"map":[[8,2,18,0],[9,0,19,0],[10,0,20,0],[11,0,21,0],[12,0,22,0],[13,0,23,0],[14,0,24,0],[15,0,25,0],[16,2,26,7],[16,6,26,13,"GestureObjects"],[16,20,26,27],[16,23,26,27,"exports"],[16,30,26,27],[16,31,26,27,"GestureObjects"],[16,45,26,27],[16,48,26,30],[17,4,27,2],[18,0,28,0],[19,0,29,0],[20,0,30,0],[21,4,31,2,"Tap"],[21,7,31,5],[21,9,31,7],[21,18,31,2,"Tap"],[21,21,31,5,"Tap"],[21,22,31,5],[21,24,31,13],[22,6,32,4],[22,13,32,11],[22,18,32,15,"TapGesture"],[22,48,32,15],[22,49,32,15,"TapGesture"],[22,75,32,25],[22,77,32,26],[22,78,32,27],[23,4,33,2],[23,5,33,3],[24,4,35,2],[25,0,36,0],[26,0,37,0],[27,0,38,0],[28,4,39,2,"Pan"],[28,7,39,5],[28,9,39,7],[28,18,39,2,"Pan"],[28,21,39,5,"Pan"],[28,22,39,5],[28,24,39,13],[29,6,40,4],[29,13,40,11],[29,18,40,15,"PanGesture"],[29,48,40,15],[29,49,40,15,"PanGesture"],[29,75,40,25],[29,77,40,26],[29,78,40,27],[30,4,41,2],[30,5,41,3],[31,4,43,2],[32,0,44,0],[33,0,45,0],[34,0,46,0],[35,4,47,2,"Pinch"],[35,9,47,7],[35,11,47,9],[35,20,47,2,"Pinch"],[35,25,47,7,"Pinch"],[35,26,47,7],[35,28,47,15],[36,6,48,4],[36,13,48,11],[36,18,48,15,"PinchGesture"],[36,48,48,15],[36,49,48,15,"PinchGesture"],[36,79,48,27],[36,81,48,28],[36,82,48,29],[37,4,49,2],[37,5,49,3],[38,4,51,2],[39,0,52,0],[40,0,53,0],[41,0,54,0],[42,4,55,2,"Rotation"],[42,12,55,10],[42,14,55,12],[42,23,55,2,"Rotation"],[42,31,55,10,"Rotation"],[42,32,55,10],[42,34,55,18],[43,6,56,4],[43,13,56,11],[43,18,56,15,"RotationGesture"],[43,48,56,15],[43,49,56,15,"RotationGesture"],[43,85,56,30],[43,87,56,31],[43,88,56,32],[44,4,57,2],[44,5,57,3],[45,4,59,2],[46,0,60,0],[47,0,61,0],[48,0,62,0],[49,4,63,2,"Fling"],[49,9,63,7],[49,11,63,9],[49,20,63,2,"Fling"],[49,25,63,7,"Fling"],[49,26,63,7],[49,28,63,15],[50,6,64,4],[50,13,64,11],[50,18,64,15,"FlingGesture"],[50,48,64,15],[50,49,64,15,"FlingGesture"],[50,79,64,27],[50,81,64,28],[50,82,64,29],[51,4,65,2],[51,5,65,3],[52,4,67,2],[53,0,68,0],[54,0,69,0],[55,0,70,0],[56,4,71,2,"LongPress"],[56,13,71,11],[56,15,71,13],[56,24,71,2,"LongPress"],[56,33,71,11,"LongPress"],[56,34,71,11],[56,36,71,19],[57,6,72,4],[57,13,72,11],[57,18,72,15,"LongPressGesture"],[57,48,72,15],[57,49,72,15,"LongPressGesture"],[57,87,72,31],[57,89,72,32],[57,90,72,33],[58,4,73,2],[58,5,73,3],[59,4,75,2],[60,0,76,0],[61,0,77,0],[62,0,78,0],[63,0,79,0],[64,4,80,2,"ForceTouch"],[64,14,80,12],[64,16,80,14],[64,25,80,2,"ForceTouch"],[64,35,80,12,"ForceTouch"],[64,36,80,12],[64,38,80,20],[65,6,81,4],[65,13,81,11],[65,18,81,15,"ForceTouchGesture"],[65,48,81,15],[65,49,81,15,"ForceTouchGesture"],[65,89,81,32],[65,91,81,33],[65,92,81,34],[66,4,82,2],[66,5,82,3],[67,4,84,2],[68,0,85,0],[69,0,86,0],[70,0,87,0],[71,0,88,0],[72,4,89,2,"Native"],[72,10,89,8],[72,12,89,10],[72,21,89,2,"Native"],[72,27,89,8,"Native"],[72,28,89,8],[72,30,89,16],[73,6,90,4],[73,13,90,11],[73,18,90,15,"NativeGesture"],[73,48,90,15],[73,49,90,15,"NativeGesture"],[73,81,90,28],[73,83,90,29],[73,84,90,30],[74,4,91,2],[74,5,91,3],[75,4,93,2],[76,0,94,0],[77,0,95,0],[78,0,96,0],[79,0,97,0],[80,0,98,0],[81,4,99,2,"Manual"],[81,10,99,8],[81,12,99,10],[81,21,99,2,"Manual"],[81,27,99,8,"Manual"],[81,28,99,8],[81,30,99,16],[82,6,100,4],[82,13,100,11],[82,18,100,15,"ManualGesture"],[82,49,100,15],[82,50,100,15,"ManualGesture"],[82,82,100,28],[82,84,100,29],[82,85,100,30],[83,4,101,2],[83,5,101,3],[84,4,103,2],[85,0,104,0],[86,0,105,0],[87,0,106,0],[88,0,107,0],[89,0,108,0],[90,4,109,2,"Hover"],[90,9,109,7],[90,11,109,9],[90,20,109,2,"Hover"],[90,25,109,7,"Hover"],[90,26,109,7],[90,28,109,15],[91,6,110,4],[91,13,110,11],[91,18,110,15,"HoverGesture"],[91,49,110,15],[91,50,110,15,"HoverGesture"],[91,80,110,27],[91,82,110,28],[91,83,110,29],[92,4,111,2],[92,5,111,3],[93,4,113,2],[94,0,114,0],[95,0,115,0],[96,0,116,0],[97,0,117,0],[98,4,118,2,"Race"],[98,8,118,6],[98,10,118,8],[98,19,118,2,"Race"],[98,23,118,6,"Race"],[98,24,118,6],[98,26,118,36],[99,6,118,36],[99,15,118,36,"_len"],[99,19,118,36],[99,22,118,36,"arguments"],[99,31,118,36],[99,32,118,36,"length"],[99,38,118,36],[99,40,118,12,"gestures"],[99,48,118,20],[99,55,118,20,"Array"],[99,60,118,20],[99,61,118,20,"_len"],[99,65,118,20],[99,68,118,20,"_key"],[99,72,118,20],[99,78,118,20,"_key"],[99,82,118,20],[99,85,118,20,"_len"],[99,89,118,20],[99,91,118,20,"_key"],[99,95,118,20],[100,8,118,12,"gestures"],[100,16,118,20],[100,17,118,20,"_key"],[100,21,118,20],[100,25,118,20,"arguments"],[100,34,118,20],[100,35,118,20,"_key"],[100,39,118,20],[101,6,118,20],[102,6,119,4],[102,17,119,4,"_construct2"],[102,28,119,4],[102,29,119,4,"default"],[102,36,119,4],[102,38,119,15,"ComposedGesture"],[102,69,119,15],[102,70,119,15,"ComposedGesture"],[102,109,119,30],[102,111,119,34,"gestures"],[102,119,119,42],[103,4,120,2],[103,5,120,3],[104,4,122,2],[105,0,123,0],[106,0,124,0],[107,0,125,0],[108,4,126,2,"Simultaneous"],[108,16,126,14],[108,27,126,2,"Simultaneous"],[108,39,126,14,"Simultaneous"],[108,40,126,14],[108,42,126,39],[109,6,126,39],[109,15,126,39,"_len2"],[109,20,126,39],[109,23,126,39,"arguments"],[109,32,126,39],[109,33,126,39,"length"],[109,39,126,39],[109,41,126,18,"gestures"],[109,49,126,26],[109,56,126,26,"Array"],[109,61,126,26],[109,62,126,26,"_len2"],[109,67,126,26],[109,70,126,26,"_key2"],[109,75,126,26],[109,81,126,26,"_key2"],[109,86,126,26],[109,89,126,26,"_len2"],[109,94,126,26],[109,96,126,26,"_key2"],[109,101,126,26],[110,8,126,18,"gestures"],[110,16,126,26],[110,17,126,26,"_key2"],[110,22,126,26],[110,26,126,26,"arguments"],[110,35,126,26],[110,36,126,26,"_key2"],[110,41,126,26],[111,6,126,26],[112,6,127,4],[112,17,127,4,"_construct2"],[112,28,127,4],[112,29,127,4,"default"],[112,36,127,4],[112,38,127,15,"SimultaneousGesture"],[112,69,127,15],[112,70,127,15,"SimultaneousGesture"],[112,113,127,34],[112,115,127,38,"gestures"],[112,123,127,46],[113,4,128,2],[113,5,128,3],[114,4,130,2],[115,0,131,0],[116,0,132,0],[117,0,133,0],[118,0,134,0],[119,0,135,0],[120,0,136,0],[121,0,137,0],[122,4,138,2,"Exclusive"],[122,13,138,11],[122,24,138,2,"Exclusive"],[122,33,138,11,"Exclusive"],[122,34,138,11],[122,36,138,36],[123,6,138,36],[123,15,138,36,"_len3"],[123,20,138,36],[123,23,138,36,"arguments"],[123,32,138,36],[123,33,138,36,"length"],[123,39,138,36],[123,41,138,15,"gestures"],[123,49,138,23],[123,56,138,23,"Array"],[123,61,138,23],[123,62,138,23,"_len3"],[123,67,138,23],[123,70,138,23,"_key3"],[123,75,138,23],[123,81,138,23,"_key3"],[123,86,138,23],[123,89,138,23,"_len3"],[123,94,138,23],[123,96,138,23,"_key3"],[123,101,138,23],[124,8,138,15,"gestures"],[124,16,138,23],[124,17,138,23,"_key3"],[124,22,138,23],[124,26,138,23,"arguments"],[124,35,138,23],[124,36,138,23,"_key3"],[124,41,138,23],[125,6,138,23],[126,6,139,4],[126,17,139,4,"_construct2"],[126,28,139,4],[126,29,139,4,"default"],[126,36,139,4],[126,38,139,15,"ExclusiveGesture"],[126,69,139,15],[126,70,139,15,"ExclusiveGesture"],[126,110,139,31],[126,112,139,35,"gestures"],[126,120,139,43],[127,4,140,2],[128,2,141,0],[128,3,141,1],[129,0,141,2],[129,3]],"functionMap":{"names":["<global>","GestureObjects.Tap","GestureObjects.Pan","GestureObjects.Pinch","GestureObjects.Rotation","GestureObjects.Fling","GestureObjects.LongPress","GestureObjects.ForceTouch","GestureObjects.Native","GestureObjects.Manual","GestureObjects.Hover","GestureObjects.Race","GestureObjects.Simultaneous","GestureObjects.Exclusive"],"mappings":"AAA;OC8B;GDE;OEM;GFE;SGM;GHE;YIM;GJE;SKM;GLE;aMM;GNE;cOO;GPE;UQO;GRE;USQ;GTE;SUQ;GVE;QWO;GXE;EYM;GZE;EaU;GbE"}},"type":"js/module"}]}