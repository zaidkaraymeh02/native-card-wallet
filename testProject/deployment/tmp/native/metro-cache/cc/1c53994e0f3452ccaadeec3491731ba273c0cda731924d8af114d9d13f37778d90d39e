{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":114,"column":0,"index":2682}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"./NativeVibration","data":{"asyncType":null,"locs":[{"start":{"line":12,"column":0,"index":232},"end":{"line":12,"column":48,"index":280}}],"key":"0/k314zCAmty64oU1IGPduEPMQk="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  var _NativeVibration = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"./NativeVibration\")); /**\n                                                                                                       * Copyright (c) Meta Platforms, Inc. and affiliates.\n                                                                                                       *\n                                                                                                       * This source code is licensed under the MIT license found in the\n                                                                                                       * LICENSE file in the root directory of this source tree.\n                                                                                                       *\n                                                                                                       * @format\n                                                                                                       * \n                                                                                                       * @jsdoc\n                                                                                                       */\n\n  /**\n   * Vibration API\n   *\n   * See https://reactnative.dev/docs/vibration\n   */\n\n  var _vibrating = false;\n  var _id = 0; // _id is necessary to prevent race condition.\n  var _default_vibration_length = 400;\n  function vibrateByPattern(pattern) {\n    var repeat = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    if (_vibrating) {\n      return;\n    }\n    _vibrating = true;\n    if (pattern[0] === 0) {\n      _NativeVibration.default.vibrate(_default_vibration_length);\n      // $FlowFixMe[reassign-const]\n      pattern = pattern.slice(1);\n    }\n    if (pattern.length === 0) {\n      _vibrating = false;\n      return;\n    }\n    setTimeout(function () {\n      return vibrateScheduler(++_id, pattern, repeat, 1);\n    }, pattern[0]);\n  }\n  function vibrateScheduler(id, pattern, repeat, nextIndex) {\n    if (!_vibrating || id !== _id) {\n      return;\n    }\n    _NativeVibration.default.vibrate(_default_vibration_length);\n    if (nextIndex >= pattern.length) {\n      if (repeat) {\n        // $FlowFixMe[reassign-const]\n        nextIndex = 0;\n      } else {\n        _vibrating = false;\n        return;\n      }\n    }\n    setTimeout(function () {\n      return vibrateScheduler(id, pattern, repeat, nextIndex + 1);\n    }, pattern[nextIndex]);\n  }\n  var Vibration = {\n    /**\n     * Trigger a vibration with specified `pattern`.\n     *\n     * See https://reactnative.dev/docs/vibration#vibrate\n     */\n    vibrate: function vibrate() {\n      var pattern = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _default_vibration_length;\n      var repeat = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      if (\"android\" === 'android') {\n        if (typeof pattern === 'number') {\n          _NativeVibration.default.vibrate(pattern);\n        } else if (Array.isArray(pattern)) {\n          _NativeVibration.default.vibrateByPattern(pattern, repeat ? 0 : -1);\n        } else {\n          throw new Error('Vibration pattern should be a number or array');\n        }\n      } else {\n        if (_vibrating) {\n          return;\n        }\n        if (typeof pattern === 'number') {\n          _NativeVibration.default.vibrate(pattern);\n        } else if (Array.isArray(pattern)) {\n          vibrateByPattern(pattern, repeat);\n        } else {\n          throw new Error('Vibration pattern should be a number or array');\n        }\n      }\n    },\n    /**\n     * Stop vibration\n     *\n     * See https://reactnative.dev/docs/vibration#cancel\n     */\n    cancel: function cancel() {\n      if (\"android\" === 'ios') {\n        _vibrating = false;\n      } else {\n        _NativeVibration.default.cancel();\n      }\n    }\n  };\n  module.exports = Vibration;\n});","lineCount":104,"map":[[3,2,12,0],[3,6,12,0,"_NativeVibration"],[3,22,12,0],[3,25,12,0,"_interopRequireDefault"],[3,47,12,0],[3,48,12,0,"_$$_REQUIRE"],[3,59,12,0],[3,60,12,0,"_dependencyMap"],[3,74,12,0],[3,101,12,48],[3,102,1,0],[4,0,2,0],[5,0,3,0],[6,0,4,0],[7,0,5,0],[8,0,6,0],[9,0,7,0],[10,0,8,0],[11,0,9,0],[12,0,10,0],[14,2,16,0],[15,0,17,0],[16,0,18,0],[17,0,19,0],[18,0,20,0],[20,2,22,0],[20,6,22,4,"_vibrating"],[20,16,22,23],[20,19,22,26],[20,24,22,31],[21,2,23,0],[21,6,23,4,"_id"],[21,9,23,15],[21,12,23,18],[21,13,23,19],[21,14,23,20],[21,15,23,21],[22,2,24,0],[22,6,24,6,"_default_vibration_length"],[22,31,24,31],[22,34,24,34],[22,37,24,37],[23,2,26,0],[23,11,26,9,"vibrateByPattern"],[23,27,26,25,"vibrateByPattern"],[23,28,26,26,"pattern"],[23,35,26,48],[23,37,26,75],[24,4,26,75],[24,8,26,50,"repeat"],[24,14,26,65],[24,17,26,65,"arguments"],[24,26,26,65],[24,27,26,65,"length"],[24,33,26,65],[24,41,26,65,"arguments"],[24,50,26,65],[24,58,26,65,"undefined"],[24,67,26,65],[24,70,26,65,"arguments"],[24,79,26,65],[24,85,26,68],[24,90,26,73],[25,4,27,2],[25,8,27,6,"_vibrating"],[25,18,27,16],[25,20,27,18],[26,6,28,4],[27,4,29,2],[28,4,30,2,"_vibrating"],[28,14,30,12],[28,17,30,15],[28,21,30,19],[29,4,31,2],[29,8,31,6,"pattern"],[29,15,31,13],[29,16,31,14],[29,17,31,15],[29,18,31,16],[29,23,31,21],[29,24,31,22],[29,26,31,24],[30,6,32,4,"NativeVibration"],[30,30,32,19],[30,31,32,20,"vibrate"],[30,38,32,27],[30,39,32,28,"_default_vibration_length"],[30,64,32,53],[30,65,32,54],[31,6,33,4],[32,6,34,4,"pattern"],[32,13,34,11],[32,16,34,14,"pattern"],[32,23,34,21],[32,24,34,22,"slice"],[32,29,34,27],[32,30,34,28],[32,31,34,29],[32,32,34,30],[33,4,35,2],[34,4,36,2],[34,8,36,6,"pattern"],[34,15,36,13],[34,16,36,14,"length"],[34,22,36,20],[34,27,36,25],[34,28,36,26],[34,30,36,28],[35,6,37,4,"_vibrating"],[35,16,37,14],[35,19,37,17],[35,24,37,22],[36,6,38,4],[37,4,39,2],[38,4,40,2,"setTimeout"],[38,14,40,12],[38,15,40,13],[39,6,40,13],[39,13,40,19,"vibrateScheduler"],[39,29,40,35],[39,30,40,36],[39,32,40,38,"_id"],[39,35,40,41],[39,37,40,43,"pattern"],[39,44,40,50],[39,46,40,52,"repeat"],[39,52,40,58],[39,54,40,60],[39,55,40,61],[39,56,40,62],[40,4,40,62],[40,7,40,64,"pattern"],[40,14,40,71],[40,15,40,72],[40,16,40,73],[40,17,40,74],[40,18,40,75],[41,2,41,0],[42,2,43,0],[42,11,43,9,"vibrateScheduler"],[42,27,43,25,"vibrateScheduler"],[42,28,44,2,"id"],[42,30,44,12],[42,32,45,2,"pattern"],[42,39,45,24],[42,41,46,2,"repeat"],[42,47,46,17],[42,49,47,2,"nextIndex"],[42,58,47,19],[42,60,48,2],[43,4,49,2],[43,8,49,6],[43,9,49,7,"_vibrating"],[43,19,49,17],[43,23,49,21,"id"],[43,25,49,23],[43,30,49,28,"_id"],[43,33,49,31],[43,35,49,33],[44,6,50,4],[45,4,51,2],[46,4,52,2,"NativeVibration"],[46,28,52,17],[46,29,52,18,"vibrate"],[46,36,52,25],[46,37,52,26,"_default_vibration_length"],[46,62,52,51],[46,63,52,52],[47,4,53,2],[47,8,53,6,"nextIndex"],[47,17,53,15],[47,21,53,19,"pattern"],[47,28,53,26],[47,29,53,27,"length"],[47,35,53,33],[47,37,53,35],[48,6,54,4],[48,10,54,8,"repeat"],[48,16,54,14],[48,18,54,16],[49,8,55,6],[50,8,56,6,"nextIndex"],[50,17,56,15],[50,20,56,18],[50,21,56,19],[51,6,57,4],[51,7,57,5],[51,13,57,11],[52,8,58,6,"_vibrating"],[52,18,58,16],[52,21,58,19],[52,26,58,24],[53,8,59,6],[54,6,60,4],[55,4,61,2],[56,4,62,2,"setTimeout"],[56,14,62,12],[56,15,63,4],[57,6,63,4],[57,13,63,10,"vibrateScheduler"],[57,29,63,26],[57,30,63,27,"id"],[57,32,63,29],[57,34,63,31,"pattern"],[57,41,63,38],[57,43,63,40,"repeat"],[57,49,63,46],[57,51,63,48,"nextIndex"],[57,60,63,57],[57,63,63,60],[57,64,63,61],[57,65,63,62],[58,4,63,62],[58,7,64,4,"pattern"],[58,14,64,11],[58,15,64,12,"nextIndex"],[58,24,64,21],[58,25,65,2],[58,26,65,3],[59,2,66,0],[60,2,68,0],[60,6,68,6,"Vibration"],[60,15,68,15],[60,18,68,18],[61,4,69,2],[62,0,70,0],[63,0,71,0],[64,0,72,0],[65,0,73,0],[66,4,74,2,"vibrate"],[66,11,74,9],[66,13,74,11],[66,22,74,2,"vibrate"],[66,29,74,9,"vibrate"],[66,30,74,9],[66,32,77,4],[67,6,77,4],[67,10,75,4,"pattern"],[67,17,75,35],[67,20,75,35,"arguments"],[67,29,75,35],[67,30,75,35,"length"],[67,36,75,35],[67,44,75,35,"arguments"],[67,53,75,35],[67,61,75,35,"undefined"],[67,70,75,35],[67,73,75,35,"arguments"],[67,82,75,35],[67,88,75,38,"_default_vibration_length"],[67,113,75,63],[68,6,75,63],[68,10,76,4,"repeat"],[68,16,76,19],[68,19,76,19,"arguments"],[68,28,76,19],[68,29,76,19,"length"],[68,35,76,19],[68,43,76,19,"arguments"],[68,52,76,19],[68,60,76,19,"undefined"],[68,69,76,19],[68,72,76,19,"arguments"],[68,81,76,19],[68,87,76,22],[68,92,76,27],[69,6,78,4],[69,10,78,8],[69,24,78,24],[69,33,78,33],[69,35,78,35],[70,8,79,6],[70,12,79,10],[70,19,79,17,"pattern"],[70,26,79,24],[70,31,79,29],[70,39,79,37],[70,41,79,39],[71,10,80,8,"NativeVibration"],[71,34,80,23],[71,35,80,24,"vibrate"],[71,42,80,31],[71,43,80,32,"pattern"],[71,50,80,39],[71,51,80,40],[72,8,81,6],[72,9,81,7],[72,15,81,13],[72,19,81,17,"Array"],[72,24,81,22],[72,25,81,23,"isArray"],[72,32,81,30],[72,33,81,31,"pattern"],[72,40,81,38],[72,41,81,39],[72,43,81,41],[73,10,82,8,"NativeVibration"],[73,34,82,23],[73,35,82,24,"vibrateByPattern"],[73,51,82,40],[73,52,82,41,"pattern"],[73,59,82,48],[73,61,82,50,"repeat"],[73,67,82,56],[73,70,82,59],[73,71,82,60],[73,74,82,63],[73,75,82,64],[73,76,82,65],[73,77,82,66],[74,8,83,6],[74,9,83,7],[74,15,83,13],[75,10,84,8],[75,16,84,14],[75,20,84,18,"Error"],[75,25,84,23],[75,26,84,24],[75,73,84,71],[75,74,84,72],[76,8,85,6],[77,6,86,4],[77,7,86,5],[77,13,86,11],[78,8,87,6],[78,12,87,10,"_vibrating"],[78,22,87,20],[78,24,87,22],[79,10,88,8],[80,8,89,6],[81,8,90,6],[81,12,90,10],[81,19,90,17,"pattern"],[81,26,90,24],[81,31,90,29],[81,39,90,37],[81,41,90,39],[82,10,91,8,"NativeVibration"],[82,34,91,23],[82,35,91,24,"vibrate"],[82,42,91,31],[82,43,91,32,"pattern"],[82,50,91,39],[82,51,91,40],[83,8,92,6],[83,9,92,7],[83,15,92,13],[83,19,92,17,"Array"],[83,24,92,22],[83,25,92,23,"isArray"],[83,32,92,30],[83,33,92,31,"pattern"],[83,40,92,38],[83,41,92,39],[83,43,92,41],[84,10,93,8,"vibrateByPattern"],[84,26,93,24],[84,27,93,25,"pattern"],[84,34,93,32],[84,36,93,34,"repeat"],[84,42,93,40],[84,43,93,41],[85,8,94,6],[85,9,94,7],[85,15,94,13],[86,10,95,8],[86,16,95,14],[86,20,95,18,"Error"],[86,25,95,23],[86,26,95,24],[86,73,95,71],[86,74,95,72],[87,8,96,6],[88,6,97,4],[89,4,98,2],[89,5,98,3],[90,4,99,2],[91,0,100,0],[92,0,101,0],[93,0,102,0],[94,0,103,0],[95,4,104,2,"cancel"],[95,10,104,8],[95,12,104,10],[95,21,104,2,"cancel"],[95,27,104,8,"cancel"],[95,28,104,8],[95,30,104,22],[96,6,105,4],[96,10,105,8],[96,24,105,24],[96,29,105,29],[96,31,105,31],[97,8,106,6,"_vibrating"],[97,18,106,16],[97,21,106,19],[97,26,106,24],[98,6,107,4],[98,7,107,5],[98,13,107,11],[99,8,108,6,"NativeVibration"],[99,32,108,21],[99,33,108,22,"cancel"],[99,39,108,28],[99,40,108,29],[99,41,108,30],[100,6,109,4],[101,4,110,2],[102,2,111,0],[102,3,111,1],[103,2,113,0,"module"],[103,8,113,6],[103,9,113,7,"exports"],[103,16,113,14],[103,19,113,17,"Vibration"],[103,28,113,26],[104,0,113,27],[104,3]],"functionMap":{"names":["<global>","vibrateByPattern","setTimeout$argument_0","vibrateScheduler","vibrate","cancel"],"mappings":"AAA;ACyB;aCc,iDD;CDC;AGE;IDoB,0DC;CHG;WIQ;GJwB;UKM;GLM"}},"type":"js/module"}]}