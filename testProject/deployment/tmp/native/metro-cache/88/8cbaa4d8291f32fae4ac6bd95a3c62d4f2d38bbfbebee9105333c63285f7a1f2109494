{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":83,"column":0,"index":2240}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"./PerformanceEventTiming","data":{"asyncType":null,"locs":[{"start":{"line":18,"column":0,"index":446},"end":{"line":18,"column":62,"index":508}}],"key":"JgH87HqTtba/7D9cnIh1vqbgoIs="}},{"name":"./PerformanceEntry","data":{"asyncType":null,"locs":[{"start":{"line":17,"column":0,"index":393},"end":{"line":17,"column":52,"index":445}}],"key":"limm2T+T1Tv0g3goGjXkwAZT0/A="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.RawPerformanceEntryTypeValues = void 0;\n  exports.performanceEntryTypeToRaw = performanceEntryTypeToRaw;\n  exports.rawToPerformanceEntry = rawToPerformanceEntry;\n  exports.rawToPerformanceEntryType = rawToPerformanceEntryType;\n  var _PerformanceEventTiming = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"./PerformanceEventTiming\"));\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * @format\n   * \n   */\n\n  var RawPerformanceEntryTypeValues = exports.RawPerformanceEntryTypeValues = {\n    MARK: 1,\n    MEASURE: 2,\n    EVENT: 3\n  };\n  function rawToPerformanceEntry(entry) {\n    if (entry.entryType === RawPerformanceEntryTypeValues.EVENT) {\n      return new _PerformanceEventTiming.default({\n        name: entry.name,\n        startTime: entry.startTime,\n        duration: entry.duration,\n        processingStart: entry.processingStart,\n        processingEnd: entry.processingEnd,\n        interactionId: entry.interactionId\n      });\n    } else {\n      return new (_$$_REQUIRE(_dependencyMap[2], \"./PerformanceEntry\").PerformanceEntry)({\n        name: entry.name,\n        entryType: rawToPerformanceEntryType(entry.entryType),\n        startTime: entry.startTime,\n        duration: entry.duration\n      });\n    }\n  }\n  function rawToPerformanceEntryType(type) {\n    switch (type) {\n      case RawPerformanceEntryTypeValues.MARK:\n        return 'mark';\n      case RawPerformanceEntryTypeValues.MEASURE:\n        return 'measure';\n      case RawPerformanceEntryTypeValues.EVENT:\n        return 'event';\n      default:\n        throw new TypeError(`rawToPerformanceEntryType: unexpected performance entry type received: ${type}`);\n    }\n  }\n  function performanceEntryTypeToRaw(type) {\n    switch (type) {\n      case 'mark':\n        return RawPerformanceEntryTypeValues.MARK;\n      case 'measure':\n        return RawPerformanceEntryTypeValues.MEASURE;\n      case 'event':\n        return RawPerformanceEntryTypeValues.EVENT;\n      default:\n        // Verify exhaustive check with Flow\n        type;\n        throw new TypeError(`performanceEntryTypeToRaw: unexpected performance entry type received: ${type}`);\n    }\n  }\n});","lineCount":71,"map":[[10,2,18,0],[10,6,18,0,"_PerformanceEventTiming"],[10,29,18,0],[10,32,18,0,"_interopRequireDefault"],[10,54,18,0],[10,55,18,0,"_$$_REQUIRE"],[10,66,18,0],[10,67,18,0,"_dependencyMap"],[10,81,18,0],[11,2,1,0],[12,0,2,0],[13,0,3,0],[14,0,4,0],[15,0,5,0],[16,0,6,0],[17,0,7,0],[18,0,8,0],[19,0,9,0],[21,2,20,7],[21,6,20,13,"RawPerformanceEntryTypeValues"],[21,35,20,42],[21,38,20,42,"exports"],[21,45,20,42],[21,46,20,42,"RawPerformanceEntryTypeValues"],[21,75,20,42],[21,78,20,45],[22,4,21,2,"MARK"],[22,8,21,6],[22,10,21,8],[22,11,21,9],[23,4,22,2,"MEASURE"],[23,11,22,9],[23,13,22,11],[23,14,22,12],[24,4,23,2,"EVENT"],[24,9,23,7],[24,11,23,9],[25,2,24,0],[25,3,24,1],[26,2,26,7],[26,11,26,16,"rawToPerformanceEntry"],[26,32,26,37,"rawToPerformanceEntry"],[26,33,27,2,"entry"],[26,38,27,28],[26,40,28,20],[27,4,29,2],[27,8,29,6,"entry"],[27,13,29,11],[27,14,29,12,"entryType"],[27,23,29,21],[27,28,29,26,"RawPerformanceEntryTypeValues"],[27,57,29,55],[27,58,29,56,"EVENT"],[27,63,29,61],[27,65,29,63],[28,6,30,4],[28,13,30,11],[28,17,30,15,"PerformanceEventTiming"],[28,48,30,37],[28,49,30,38],[29,8,31,6,"name"],[29,12,31,10],[29,14,31,12,"entry"],[29,19,31,17],[29,20,31,18,"name"],[29,24,31,22],[30,8,32,6,"startTime"],[30,17,32,15],[30,19,32,17,"entry"],[30,24,32,22],[30,25,32,23,"startTime"],[30,34,32,32],[31,8,33,6,"duration"],[31,16,33,14],[31,18,33,16,"entry"],[31,23,33,21],[31,24,33,22,"duration"],[31,32,33,30],[32,8,34,6,"processingStart"],[32,23,34,21],[32,25,34,23,"entry"],[32,30,34,28],[32,31,34,29,"processingStart"],[32,46,34,44],[33,8,35,6,"processingEnd"],[33,21,35,19],[33,23,35,21,"entry"],[33,28,35,26],[33,29,35,27,"processingEnd"],[33,42,35,40],[34,8,36,6,"interactionId"],[34,21,36,19],[34,23,36,21,"entry"],[34,28,36,26],[34,29,36,27,"interactionId"],[35,6,37,4],[35,7,37,5],[35,8,37,6],[36,4,38,2],[36,5,38,3],[36,11,38,9],[37,6,39,4],[37,13,39,11],[37,18,39,15,"PerformanceEntry"],[37,48,39,15],[37,49,39,15,"PerformanceEntry"],[37,87,39,31],[37,89,39,32],[38,8,40,6,"name"],[38,12,40,10],[38,14,40,12,"entry"],[38,19,40,17],[38,20,40,18,"name"],[38,24,40,22],[39,8,41,6,"entryType"],[39,17,41,15],[39,19,41,17,"rawToPerformanceEntryType"],[39,44,41,42],[39,45,41,43,"entry"],[39,50,41,48],[39,51,41,49,"entryType"],[39,60,41,58],[39,61,41,59],[40,8,42,6,"startTime"],[40,17,42,15],[40,19,42,17,"entry"],[40,24,42,22],[40,25,42,23,"startTime"],[40,34,42,32],[41,8,43,6,"duration"],[41,16,43,14],[41,18,43,16,"entry"],[41,23,43,21],[41,24,43,22,"duration"],[42,6,44,4],[42,7,44,5],[42,8,44,6],[43,4,45,2],[44,2,46,0],[45,2,48,7],[45,11,48,16,"rawToPerformanceEntryType"],[45,36,48,41,"rawToPerformanceEntryType"],[45,37,49,2,"type"],[45,41,49,31],[45,43,50,24],[46,4,51,2],[46,12,51,10,"type"],[46,16,51,14],[47,6,52,4],[47,11,52,9,"RawPerformanceEntryTypeValues"],[47,40,52,38],[47,41,52,39,"MARK"],[47,45,52,43],[48,8,53,6],[48,15,53,13],[48,21,53,19],[49,6,54,4],[49,11,54,9,"RawPerformanceEntryTypeValues"],[49,40,54,38],[49,41,54,39,"MEASURE"],[49,48,54,46],[50,8,55,6],[50,15,55,13],[50,24,55,22],[51,6,56,4],[51,11,56,9,"RawPerformanceEntryTypeValues"],[51,40,56,38],[51,41,56,39,"EVENT"],[51,46,56,44],[52,8,57,6],[52,15,57,13],[52,22,57,20],[53,6,58,4],[54,8,59,6],[54,14,59,12],[54,18,59,16,"TypeError"],[54,27,59,25],[54,28,60,8],[54,102,60,82,"type"],[54,106,60,86],[54,108,61,6],[54,109,61,7],[55,4,62,2],[56,2,63,0],[57,2,65,7],[57,11,65,16,"performanceEntryTypeToRaw"],[57,36,65,41,"performanceEntryTypeToRaw"],[57,37,66,2,"type"],[57,41,66,28],[57,43,67,27],[58,4,68,2],[58,12,68,10,"type"],[58,16,68,14],[59,6,69,4],[59,11,69,9],[59,17,69,15],[60,8,70,6],[60,15,70,13,"RawPerformanceEntryTypeValues"],[60,44,70,42],[60,45,70,43,"MARK"],[60,49,70,47],[61,6,71,4],[61,11,71,9],[61,20,71,18],[62,8,72,6],[62,15,72,13,"RawPerformanceEntryTypeValues"],[62,44,72,42],[62,45,72,43,"MEASURE"],[62,52,72,50],[63,6,73,4],[63,11,73,9],[63,18,73,16],[64,8,74,6],[64,15,74,13,"RawPerformanceEntryTypeValues"],[64,44,74,42],[64,45,74,43,"EVENT"],[64,50,74,48],[65,6,75,4],[66,8,76,6],[67,8,77,7,"type"],[67,12,77,11],[68,8,78,6],[68,14,78,12],[68,18,78,16,"TypeError"],[68,27,78,25],[68,28,79,8],[68,102,79,82,"type"],[68,106,79,86],[68,108,80,6],[68,109,80,7],[69,4,81,2],[70,2,82,0],[71,0,82,1],[71,3]],"functionMap":{"names":["<global>","rawToPerformanceEntry","rawToPerformanceEntryType","performanceEntryTypeToRaw"],"mappings":"AAA;OCyB;CDoB;OEE;CFe;OGE;CHiB"}},"type":"js/module"}]}