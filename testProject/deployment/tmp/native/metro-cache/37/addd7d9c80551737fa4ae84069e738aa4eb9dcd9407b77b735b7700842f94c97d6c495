{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":36,"column":0,"index":1101}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"../core/InternalAnimatedValue","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":58,"index":58}}],"key":"g/MDMNl3ltOFYuQ3qVE89KHTFJo="}},{"name":"../core/AnimatedCond","data":{"asyncType":null,"locs":[{"start":{"line":5,"column":0,"index":263},"end":{"line":5,"column":66,"index":329}}],"key":"/Mv1RDQ3wIuQ74vOJWSJmzac01Y="}},{"name":"../core/AnimatedCall","data":{"asyncType":null,"locs":[{"start":{"line":3,"column":0,"index":123},"end":{"line":3,"column":66,"index":189}}],"key":"wRzCFNV1V3qNfBt8TlSyG5N9WUc="}},{"name":"../core/AnimatedSet","data":{"asyncType":null,"locs":[{"start":{"line":2,"column":0,"index":59},"end":{"line":2,"column":63,"index":122}}],"key":"YpNOjQkiv1dou11L5fCLF9vnSbc="}},{"name":"../core/AnimatedAlways","data":{"asyncType":null,"locs":[{"start":{"line":4,"column":0,"index":190},"end":{"line":4,"column":72,"index":262}}],"key":"vCd+7m3vLDkQQZJng+D8KYT23lI="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.evaluateOnce = evaluateOnce;\n  var _InternalAnimatedValue = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"../core/InternalAnimatedValue\"));\n  /**\n   * evaluate given node and notify children\n   * @param node - node to be evaluated\n   * @param input - nodes (or one node) representing values which states input for node.\n   * @param callback - after callback\n   */\n\n  function evaluateOnce(node) {\n    var input = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    var callback = arguments.length > 2 ? arguments[2] : undefined;\n    if (!Array.isArray(input)) {\n      input = [input];\n    }\n    var done = new _InternalAnimatedValue.default(0);\n    var evalNode = (0, _$$_REQUIRE(_dependencyMap[2], \"../core/AnimatedCond\").createAnimatedCond)(done, 0, (0, _$$_REQUIRE(_dependencyMap[3], \"../core/AnimatedCall\").createAnimatedCall)([node, (0, _$$_REQUIRE(_dependencyMap[4], \"../core/AnimatedSet\").createAnimatedSet)(done, 1)], function () {\n      callback && callback();\n      for (var i = 0; i < input.length; i++) {\n        input[i].__removeChild(alwaysNode);\n        alwaysNode.__detach();\n      }\n    }));\n    var alwaysNode = (0, _$$_REQUIRE(_dependencyMap[5], \"../core/AnimatedAlways\").createAnimatedAlways)(evalNode);\n    for (var i = 0; i < input.length; i++) {\n      input[i].__addChild(alwaysNode);\n      alwaysNode.__attach();\n    }\n  }\n});","lineCount":35,"map":[[7,2,1,0],[7,6,1,0,"_InternalAnimatedValue"],[7,28,1,0],[7,31,1,0,"_interopRequireDefault"],[7,53,1,0],[7,54,1,0,"_$$_REQUIRE"],[7,65,1,0],[7,66,1,0,"_dependencyMap"],[7,80,1,0],[8,2,7,0],[9,0,8,0],[10,0,9,0],[11,0,10,0],[12,0,11,0],[13,0,12,0],[15,2,14,7],[15,11,14,16,"evaluateOnce"],[15,23,14,28,"evaluateOnce"],[15,24,14,29,"node"],[15,28,14,33],[15,30,14,57],[16,4,14,57],[16,8,14,35,"input"],[16,13,14,40],[16,16,14,40,"arguments"],[16,25,14,40],[16,26,14,40,"length"],[16,32,14,40],[16,40,14,40,"arguments"],[16,49,14,40],[16,57,14,40,"undefined"],[16,66,14,40],[16,69,14,40,"arguments"],[16,78,14,40],[16,84,14,43],[16,86,14,45],[17,4,14,45],[17,8,14,47,"callback"],[17,16,14,55],[17,19,14,55,"arguments"],[17,28,14,55],[17,29,14,55,"length"],[17,35,14,55],[17,42,14,55,"arguments"],[17,51,14,55],[17,57,14,55,"undefined"],[17,66,14,55],[18,4,15,2],[18,8,15,6],[18,9,15,7,"Array"],[18,14,15,12],[18,15,15,13,"isArray"],[18,22,15,20],[18,23,15,21,"input"],[18,28,15,26],[18,29,15,27],[18,31,15,29],[19,6,16,4,"input"],[19,11,16,9],[19,14,16,12],[19,15,16,13,"input"],[19,20,16,18],[19,21,16,19],[20,4,17,2],[21,4,18,2],[21,8,18,8,"done"],[21,12,18,12],[21,15,18,15],[21,19,18,19,"AnimatedValue"],[21,49,18,32],[21,50,18,33],[21,51,18,34],[21,52,18,35],[22,4,19,2],[22,8,19,8,"evalNode"],[22,16,19,16],[22,19,19,19],[22,23,19,19,"cond"],[22,53,19,19],[22,54,19,19,"cond"],[22,96,19,23],[22,98,20,4,"done"],[22,102,20,8],[22,104,21,4],[22,105,21,5],[22,107,22,4],[22,111,22,4,"call"],[22,141,22,4],[22,142,22,4,"call"],[22,184,22,8],[22,186,22,9],[22,187,22,10,"node"],[22,191,22,14],[22,193,22,16],[22,197,22,16,"set"],[22,227,22,16],[22,228,22,16,"set"],[22,268,22,19],[22,270,22,20,"done"],[22,274,22,24],[22,276,22,26],[22,277,22,27],[22,278,22,28],[22,279,22,29],[22,281,22,31],[22,293,22,37],[23,6,23,6,"callback"],[23,14,23,14],[23,18,23,18,"callback"],[23,26,23,26],[23,27,23,27],[23,28,23,28],[24,6,24,6],[24,11,24,11],[24,15,24,15,"i"],[24,16,24,16],[24,19,24,19],[24,20,24,20],[24,22,24,22,"i"],[24,23,24,23],[24,26,24,26,"input"],[24,31,24,31],[24,32,24,32,"length"],[24,38,24,38],[24,40,24,40,"i"],[24,41,24,41],[24,43,24,43],[24,45,24,45],[25,8,25,8,"input"],[25,13,25,13],[25,14,25,14,"i"],[25,15,25,15],[25,16,25,16],[25,17,25,17,"__removeChild"],[25,30,25,30],[25,31,25,31,"alwaysNode"],[25,41,25,41],[25,42,25,42],[26,8,26,8,"alwaysNode"],[26,18,26,18],[26,19,26,19,"__detach"],[26,27,26,27],[26,28,26,28],[26,29,26,29],[27,6,27,6],[28,4,28,4],[28,5,28,5],[28,6,29,2],[28,7,29,3],[29,4,30,2],[29,8,30,8,"alwaysNode"],[29,18,30,18],[29,21,30,21],[29,25,30,21,"always"],[29,55,30,21],[29,56,30,21,"always"],[29,102,30,27],[29,104,30,28,"evalNode"],[29,112,30,36],[29,113,30,37],[30,4,31,2],[30,9,31,7],[30,13,31,11,"i"],[30,14,31,12],[30,17,31,15],[30,18,31,16],[30,20,31,18,"i"],[30,21,31,19],[30,24,31,22,"input"],[30,29,31,27],[30,30,31,28,"length"],[30,36,31,34],[30,38,31,36,"i"],[30,39,31,37],[30,41,31,39],[30,43,31,41],[31,6,32,4,"input"],[31,11,32,9],[31,12,32,10,"i"],[31,13,32,11],[31,14,32,12],[31,15,32,13,"__addChild"],[31,25,32,23],[31,26,32,24,"alwaysNode"],[31,36,32,34],[31,37,32,35],[32,6,33,4,"alwaysNode"],[32,16,33,14],[32,17,33,15,"__attach"],[32,25,33,23],[32,26,33,24],[32,27,33,25],[33,4,34,2],[34,2,35,0],[35,0,35,1],[35,3]],"functionMap":{"names":["<global>","evaluateOnce","call$argument_1"],"mappings":"AAA;OCa;+BCQ;KDM;CDO"}},"type":"js/module"}]}