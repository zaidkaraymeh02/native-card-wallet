{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":125,"column":0,"index":3633}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"invariant","data":{"asyncType":null,"locs":[{"start":{"line":16,"column":0,"index":371},"end":{"line":16,"column":34,"index":405}}],"key":"Fzi/BpZws2YooIGJ9b6u0HJtuks="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * @noformat\n   * @nolint\n   * \n   * @generated SignedSource<<69d0cc554d77cddb1c779dfbdf569505>>\n   */\n\n  'use strict';\n\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.customDirectEventTypes = exports.customBubblingEventTypes = void 0;\n  exports.get = get;\n  exports.register = register;\n  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"invariant\"));\n  // Event configs\n  var customBubblingEventTypes = exports.customBubblingEventTypes = {};\n  var customDirectEventTypes = exports.customDirectEventTypes = {};\n  var viewConfigCallbacks = new Map();\n  var viewConfigs = new Map();\n  function processEventTypes(viewConfig) {\n    var bubblingEventTypes = viewConfig.bubblingEventTypes,\n      directEventTypes = viewConfig.directEventTypes;\n    if (__DEV__) {\n      if (bubblingEventTypes != null && directEventTypes != null) {\n        for (var topLevelType in directEventTypes) {\n          (0, _invariant.default)(bubblingEventTypes[topLevelType] == null, 'Event cannot be both direct and bubbling: %s', topLevelType);\n        }\n      }\n    }\n    if (bubblingEventTypes != null) {\n      for (var _topLevelType in bubblingEventTypes) {\n        if (customBubblingEventTypes[_topLevelType] == null) {\n          customBubblingEventTypes[_topLevelType] = bubblingEventTypes[_topLevelType];\n        }\n      }\n    }\n    if (directEventTypes != null) {\n      for (var _topLevelType2 in directEventTypes) {\n        if (customDirectEventTypes[_topLevelType2] == null) {\n          customDirectEventTypes[_topLevelType2] = directEventTypes[_topLevelType2];\n        }\n      }\n    }\n  }\n\n  /**\n   * Registers a native view/component by name.\n   * A callback is provided to load the view config from UIManager.\n   * The callback is deferred until the view is actually rendered.\n   */\n  function register(name, callback) {\n    (0, _invariant.default)(!viewConfigCallbacks.has(name), 'Tried to register two views with the same name %s', name);\n    (0, _invariant.default)(typeof callback === 'function', 'View config getter callback for component `%s` must be a function (received `%s`)', name, callback === null ? 'null' : typeof callback);\n    viewConfigCallbacks.set(name, callback);\n    return name;\n  }\n\n  /**\n   * Retrieves a config for the specified view.\n   * If this is the first time the view has been used,\n   * This configuration will be lazy-loaded from UIManager.\n   */\n  function get(name) {\n    var viewConfig;\n    if (!viewConfigs.has(name)) {\n      var callback = viewConfigCallbacks.get(name);\n      if (typeof callback !== 'function') {\n        (0, _invariant.default)(false, 'View config getter callback for component `%s` must be a function (received `%s`).%s', name, callback === null ? 'null' : typeof callback,\n        // $FlowFixMe[recursive-definition]\n        typeof name[0] === 'string' && /[a-z]/.test(name[0]) ? ' Make sure to start component names with a capital letter.' : '');\n      }\n      viewConfig = callback();\n      processEventTypes(viewConfig);\n      viewConfigs.set(name, viewConfig);\n\n      // Clear the callback after the config is set so that\n      // we don't mask any errors during registration.\n      viewConfigCallbacks.set(name, null);\n    } else {\n      viewConfig = viewConfigs.get(name);\n    }\n    (0, _invariant.default)(viewConfig, 'View config not found for name %s', name);\n    return viewConfig;\n  }\n});","lineCount":94,"map":[[2,2,1,0],[3,0,2,0],[4,0,3,0],[5,0,4,0],[6,0,5,0],[7,0,6,0],[8,0,7,0],[9,0,8,0],[10,0,9,0],[11,0,10,0],[12,0,11,0],[14,2,13,0],[14,14,13,12],[16,2,13,13],[16,6,13,13,"_interopRequireDefault"],[16,28,13,13],[16,31,13,13,"_$$_REQUIRE"],[16,42,13,13],[16,43,13,13,"_dependencyMap"],[16,57,13,13],[17,2,13,13,"Object"],[17,8,13,13],[17,9,13,13,"defineProperty"],[17,23,13,13],[17,24,13,13,"exports"],[17,31,13,13],[18,4,13,13,"value"],[18,9,13,13],[19,2,13,13],[20,2,13,13,"exports"],[20,9,13,13],[20,10,13,13,"customDirectEventTypes"],[20,32,13,13],[20,35,13,13,"exports"],[20,42,13,13],[20,43,13,13,"customBubblingEventTypes"],[20,67,13,13],[21,2,13,13,"exports"],[21,9,13,13],[21,10,13,13,"get"],[21,13,13,13],[21,16,13,13,"get"],[21,19,13,13],[22,2,13,13,"exports"],[22,9,13,13],[22,10,13,13,"register"],[22,18,13,13],[22,21,13,13,"register"],[22,29,13,13],[23,2,16,0],[23,6,16,0,"_invariant"],[23,16,16,0],[23,19,16,0,"_interopRequireDefault"],[23,41,16,0],[23,42,16,0,"_$$_REQUIRE"],[23,53,16,0],[23,54,16,0,"_dependencyMap"],[23,68,16,0],[24,2,18,0],[25,2,19,7],[25,6,19,13,"customBubblingEventTypes"],[25,30,27,1],[25,33,27,1,"exports"],[25,40,27,1],[25,41,27,1,"customBubblingEventTypes"],[25,65,27,1],[25,68,27,4],[25,69,27,5],[25,70,27,6],[26,2,28,7],[26,6,28,13,"customDirectEventTypes"],[26,28,32,1],[26,31,32,1,"exports"],[26,38,32,1],[26,39,32,1,"customDirectEventTypes"],[26,61,32,1],[26,64,32,4],[26,65,32,5],[26,66,32,6],[27,2,34,0],[27,6,34,6,"viewConfigCallbacks"],[27,25,34,25],[27,28,34,28],[27,32,34,32,"Map"],[27,35,34,35],[27,36,34,63],[27,37,34,64],[28,2,35,0],[28,6,35,6,"viewConfigs"],[28,17,35,17],[28,20,35,20],[28,24,35,24,"Map"],[28,27,35,27],[28,28,35,48],[28,29,35,49],[29,2,37,0],[29,11,37,9,"processEventTypes"],[29,28,37,26,"processEventTypes"],[29,29,37,27,"viewConfig"],[29,39,37,49],[29,41,37,57],[30,4,38,2],[30,8,38,9,"bubblingEventTypes"],[30,26,38,27],[30,29,38,49,"viewConfig"],[30,39,38,59],[30,40,38,9,"bubblingEventTypes"],[30,58,38,27],[31,6,38,29,"directEventTypes"],[31,22,38,45],[31,25,38,49,"viewConfig"],[31,35,38,59],[31,36,38,29,"directEventTypes"],[31,52,38,45],[32,4,40,2],[32,8,40,6,"__DEV__"],[32,15,40,13],[32,17,40,15],[33,6,41,4],[33,10,41,8,"bubblingEventTypes"],[33,28,41,26],[33,32,41,30],[33,36,41,34],[33,40,41,38,"directEventTypes"],[33,56,41,54],[33,60,41,58],[33,64,41,62],[33,66,41,64],[34,8,42,6],[34,13,42,11],[34,17,42,17,"topLevelType"],[34,29,42,29],[34,33,42,33,"directEventTypes"],[34,49,42,49],[34,51,42,51],[35,10,43,8],[35,14,43,8,"invariant"],[35,32,43,17],[35,34,44,10,"bubblingEventTypes"],[35,52,44,28],[35,53,44,29,"topLevelType"],[35,65,44,41],[35,66,44,42],[35,70,44,46],[35,74,44,50],[35,76,45,10],[35,122,45,56],[35,124,46,10,"topLevelType"],[35,136,47,8],[35,137,47,9],[36,8,48,6],[37,6,49,4],[38,4,50,2],[39,4,52,2],[39,8,52,6,"bubblingEventTypes"],[39,26,52,24],[39,30,52,28],[39,34,52,32],[39,36,52,34],[40,6,53,4],[40,11,53,9],[40,15,53,15,"topLevelType"],[40,28,53,27],[40,32,53,31,"bubblingEventTypes"],[40,50,53,49],[40,52,53,51],[41,8,54,6],[41,12,54,10,"customBubblingEventTypes"],[41,36,54,34],[41,37,54,35,"topLevelType"],[41,50,54,47],[41,51,54,48],[41,55,54,52],[41,59,54,56],[41,61,54,58],[42,10,55,8,"customBubblingEventTypes"],[42,34,55,32],[42,35,55,33,"topLevelType"],[42,48,55,45],[42,49,55,46],[42,52,56,10,"bubblingEventTypes"],[42,70,56,28],[42,71,56,29,"topLevelType"],[42,84,56,41],[42,85,56,42],[43,8,57,6],[44,6,58,4],[45,4,59,2],[46,4,61,2],[46,8,61,6,"directEventTypes"],[46,24,61,22],[46,28,61,26],[46,32,61,30],[46,34,61,32],[47,6,62,4],[47,11,62,9],[47,15,62,15,"topLevelType"],[47,29,62,27],[47,33,62,31,"directEventTypes"],[47,49,62,47],[47,51,62,49],[48,8,63,6],[48,12,63,10,"customDirectEventTypes"],[48,34,63,32],[48,35,63,33,"topLevelType"],[48,49,63,45],[48,50,63,46],[48,54,63,50],[48,58,63,54],[48,60,63,56],[49,10,64,8,"customDirectEventTypes"],[49,32,64,30],[49,33,64,31,"topLevelType"],[49,47,64,43],[49,48,64,44],[49,51,64,47,"directEventTypes"],[49,67,64,63],[49,68,64,64,"topLevelType"],[49,82,64,76],[49,83,64,77],[50,8,65,6],[51,6,66,4],[52,4,67,2],[53,2,68,0],[55,2,70,0],[56,0,71,0],[57,0,72,0],[58,0,73,0],[59,0,74,0],[60,2,75,7],[60,11,75,16,"register"],[60,19,75,24,"register"],[60,20,75,25,"name"],[60,24,75,37],[60,26,75,39,"callback"],[60,34,75,65],[60,36,75,75],[61,4,76,2],[61,8,76,2,"invariant"],[61,26,76,11],[61,28,77,4],[61,29,77,5,"viewConfigCallbacks"],[61,48,77,24],[61,49,77,25,"has"],[61,52,77,28],[61,53,77,29,"name"],[61,57,77,33],[61,58,77,34],[61,60,78,4],[61,111,78,55],[61,113,79,4,"name"],[61,117,80,2],[61,118,80,3],[62,4,81,2],[62,8,81,2,"invariant"],[62,26,81,11],[62,28,82,4],[62,35,82,11,"callback"],[62,43,82,19],[62,48,82,24],[62,58,82,34],[62,60,83,4],[62,143,83,87],[62,145,84,4,"name"],[62,149,84,8],[62,151,85,4,"callback"],[62,159,85,12],[62,164,85,17],[62,168,85,21],[62,171,85,24],[62,177,85,30],[62,180,85,33],[62,187,85,40,"callback"],[62,195,86,2],[62,196,86,3],[63,4,87,2,"viewConfigCallbacks"],[63,23,87,21],[63,24,87,22,"set"],[63,27,87,25],[63,28,87,26,"name"],[63,32,87,30],[63,34,87,32,"callback"],[63,42,87,40],[63,43,87,41],[64,4,88,2],[64,11,88,9,"name"],[64,15,88,13],[65,2,89,0],[67,2,91,0],[68,0,92,0],[69,0,93,0],[70,0,94,0],[71,0,95,0],[72,2,96,7],[72,11,96,16,"get"],[72,14,96,19,"get"],[72,15,96,20,"name"],[72,19,96,32],[72,21,96,46],[73,4,97,2],[73,8,97,6,"viewConfig"],[73,18,97,16],[74,4,98,2],[74,8,98,6],[74,9,98,7,"viewConfigs"],[74,20,98,18],[74,21,98,19,"has"],[74,24,98,22],[74,25,98,23,"name"],[74,29,98,27],[74,30,98,28],[74,32,98,30],[75,6,99,4],[75,10,99,10,"callback"],[75,18,99,18],[75,21,99,21,"viewConfigCallbacks"],[75,40,99,40],[75,41,99,41,"get"],[75,44,99,44],[75,45,99,45,"name"],[75,49,99,49],[75,50,99,50],[76,6,100,4],[76,10,100,8],[76,17,100,15,"callback"],[76,25,100,23],[76,30,100,28],[76,40,100,38],[76,42,100,40],[77,8,101,6],[77,12,101,6,"invariant"],[77,30,101,15],[77,32,102,8],[77,37,102,13],[77,39,103,8],[77,125,103,94],[77,127,104,8,"name"],[77,131,104,12],[77,133,105,8,"callback"],[77,141,105,16],[77,146,105,21],[77,150,105,25],[77,153,105,28],[77,159,105,34],[77,162,105,37],[77,169,105,44,"callback"],[77,177,105,52],[78,8,106,8],[79,8,107,8],[79,15,107,15,"name"],[79,19,107,19],[79,20,107,20],[79,21,107,21],[79,22,107,22],[79,27,107,27],[79,35,107,35],[79,39,107,39],[79,46,107,46],[79,47,107,47,"test"],[79,51,107,51],[79,52,107,52,"name"],[79,56,107,56],[79,57,107,57],[79,58,107,58],[79,59,107,59],[79,60,107,60],[79,63,108,12],[79,123,108,72],[79,126,109,12],[79,128,110,6],[79,129,110,7],[80,6,111,4],[81,6,112,4,"viewConfig"],[81,16,112,14],[81,19,112,17,"callback"],[81,27,112,25],[81,28,112,26],[81,29,112,27],[82,6,113,4,"processEventTypes"],[82,23,113,21],[82,24,113,22,"viewConfig"],[82,34,113,32],[82,35,113,33],[83,6,114,4,"viewConfigs"],[83,17,114,15],[83,18,114,16,"set"],[83,21,114,19],[83,22,114,20,"name"],[83,26,114,24],[83,28,114,26,"viewConfig"],[83,38,114,36],[83,39,114,37],[85,6,116,4],[86,6,117,4],[87,6,118,4,"viewConfigCallbacks"],[87,25,118,23],[87,26,118,24,"set"],[87,29,118,27],[87,30,118,28,"name"],[87,34,118,32],[87,36,118,34],[87,40,118,38],[87,41,118,39],[88,4,119,2],[88,5,119,3],[88,11,119,9],[89,6,120,4,"viewConfig"],[89,16,120,14],[89,19,120,17,"viewConfigs"],[89,30,120,28],[89,31,120,29,"get"],[89,34,120,32],[89,35,120,33,"name"],[89,39,120,37],[89,40,120,38],[90,4,121,2],[91,4,122,2],[91,8,122,2,"invariant"],[91,26,122,11],[91,28,122,12,"viewConfig"],[91,38,122,22],[91,40,122,24],[91,75,122,59],[91,77,122,61,"name"],[91,81,122,65],[91,82,122,66],[92,4,123,2],[92,11,123,9,"viewConfig"],[92,21,123,19],[93,2,124,0],[94,0,124,1],[94,3]],"functionMap":{"names":["<global>","processEventTypes","register","get"],"mappings":"AAA;ACoC;CD+B;OEO;CFc;OGO;CH4B"}},"type":"js/module"}]}