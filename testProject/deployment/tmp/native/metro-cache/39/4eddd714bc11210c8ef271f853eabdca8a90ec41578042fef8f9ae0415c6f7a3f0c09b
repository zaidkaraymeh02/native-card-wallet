{"dependencies":[],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * @format\n   * \n   */\n\n  'use strict';\n\n  function processFontVariant(fontVariant) {\n    if (Array.isArray(fontVariant)) {\n      return fontVariant;\n    }\n\n    // $FlowFixMe[incompatible-type]\n    var match = fontVariant.split(' ').filter(Boolean);\n    return match;\n  }\n  module.exports = processFontVariant;\n});","lineCount":24,"map":[[2,2,1,0],[3,0,2,0],[4,0,3,0],[5,0,4,0],[6,0,5,0],[7,0,6,0],[8,0,7,0],[9,0,8,0],[10,0,9,0],[12,2,11,0],[12,14,11,12],[14,2,15,0],[14,11,15,9,"processFontVariant"],[14,29,15,27,"processFontVariant"],[14,30,16,2,"fontVariant"],[14,41,16,53],[14,43,17,34],[15,4,18,2],[15,8,18,6,"Array"],[15,13,18,11],[15,14,18,12,"isArray"],[15,21,18,19],[15,22,18,20,"fontVariant"],[15,33,18,31],[15,34,18,32],[15,36,18,34],[16,6,19,4],[16,13,19,11,"fontVariant"],[16,24,19,22],[17,4,20,2],[19,4,22,2],[20,4,23,2],[20,8,23,8,"match"],[20,13,23,45],[20,16,23,48,"fontVariant"],[20,27,23,59],[20,28,24,5,"split"],[20,33,24,10],[20,34,24,11],[20,37,24,14],[20,38,24,15],[20,39,25,5,"filter"],[20,45,25,11],[20,46,25,12,"Boolean"],[20,53,25,19],[20,54,25,20],[21,4,27,2],[21,11,27,9,"match"],[21,16,27,14],[22,2,28,0],[23,2,30,0,"module"],[23,8,30,6],[23,9,30,7,"exports"],[23,16,30,14],[23,19,30,17,"processFontVariant"],[23,37,30,35],[24,0,30,36],[24,3]],"functionMap":{"names":["<global>","processFontVariant"],"mappings":"AAA;ACc;CDa"}},"type":"js/module"}]}