{"dependencies":[{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":51,"column":0,"index":1226}}],"key":"8I802z/QkQYw0PV6ZCqhBNDwn0Q="}},{"name":"./getDevServer","data":{"asyncType":null,"locs":[{"start":{"line":15,"column":21,"index":319},"end":{"line":15,"column":46,"index":344}}],"key":"PEcM6TbyS4rBYfu5y89u4bAVQj8="}},{"name":"../../Network/fetch","data":{"asyncType":null,"locs":[{"start":{"line":42,"column":32,"index":983},"end":{"line":42,"column":62,"index":1013}}],"key":"4jSlkM3V+JkRMwc+yrTFO5YLdHA="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * @format\n   * \n   */\n\n  'use strict';\n\n  var _asyncToGenerator = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/asyncToGenerator\");\n  function symbolicateStackTrace(_x, _x2) {\n    return _symbolicateStackTrace.apply(this, arguments);\n  }\n  function _symbolicateStackTrace() {\n    _symbolicateStackTrace = _asyncToGenerator(function* (stack, extraData) {\n      var _global$fetch;\n      var devServer = _$$_REQUIRE(_dependencyMap[1], \"./getDevServer\")();\n      if (!devServer.bundleLoadedFromServer) {\n        throw new Error('Bundle was not loaded from Metro.');\n      }\n\n      // Lazy-load `fetch` until the first symbolication call to avoid circular requires.\n      var fetch = (_global$fetch = global.fetch) != null ? _global$fetch : _$$_REQUIRE(_dependencyMap[2], \"../../Network/fetch\");\n      var response = yield fetch(devServer.url + 'symbolicate', {\n        method: 'POST',\n        body: JSON.stringify({\n          stack: stack,\n          extraData: extraData\n        })\n      });\n      return yield response.json();\n    });\n    return _symbolicateStackTrace.apply(this, arguments);\n  }\n  module.exports = symbolicateStackTrace;\n});","lineCount":40,"map":[[2,2,1,0],[3,0,2,0],[4,0,3,0],[5,0,4,0],[6,0,5,0],[7,0,6,0],[8,0,7,0],[9,0,8,0],[10,0,9,0],[12,2,11,0],[12,14,11,12],[14,2,11,13],[14,6,11,13,"_asyncToGenerator"],[14,23,11,13],[14,26,11,13,"_$$_REQUIRE"],[14,37,11,13],[14,38,11,13,"_dependencyMap"],[14,52,11,13],[15,2,11,13],[15,11,32,15,"symbolicateStackTrace"],[15,32,32,36,"symbolicateStackTrace"],[15,33,32,36,"_x"],[15,35,32,36],[15,37,32,36,"_x2"],[15,40,32,36],[16,4,32,36],[16,11,32,36,"_symbolicateStackTrace"],[16,33,32,36],[16,34,32,36,"apply"],[16,39,32,36],[16,46,32,36,"arguments"],[16,55,32,36],[17,2,32,36],[18,2,32,36],[18,11,32,36,"_symbolicateStackTrace"],[18,34,32,36],[19,4,32,36,"_symbolicateStackTrace"],[19,26,32,36],[19,29,32,36,"_asyncToGenerator"],[19,46,32,36],[19,47,32,0],[19,58,33,2,"stack"],[19,63,33,26],[19,65,34,2,"extraData"],[19,74,34,19],[19,76,35,35],[20,6,35,35],[20,10,35,35,"_global$fetch"],[20,23,35,35],[21,6,36,2],[21,10,36,8,"devServer"],[21,19,36,17],[21,22,36,20,"_$$_REQUIRE"],[21,33,36,20],[21,34,36,20,"_dependencyMap"],[21,48,36,20],[21,71,36,33],[21,72,36,34],[22,6,37,2],[22,10,37,6],[22,11,37,7,"devServer"],[22,20,37,16],[22,21,37,17,"bundleLoadedFromServer"],[22,43,37,39],[22,45,37,41],[23,8,38,4],[23,14,38,10],[23,18,38,14,"Error"],[23,23,38,19],[23,24,38,20],[23,59,38,55],[23,60,38,56],[24,6,39,2],[26,6,41,2],[27,6,42,2],[27,10,42,8,"fetch"],[27,15,42,13],[27,19,42,13,"_global$fetch"],[27,32,42,13],[27,35,42,16,"global"],[27,41,42,22],[27,42,42,23,"fetch"],[27,47,42,28],[27,59,42,28,"_global$fetch"],[27,72,42,28],[27,75,42,32,"require"],[27,86,42,39],[27,87,42,39,"_dependencyMap"],[27,101,42,39],[27,127,42,61],[27,128,42,62],[28,6,43,2],[28,10,43,8,"response"],[28,18,43,16],[28,27,43,25,"fetch"],[28,32,43,30],[28,33,43,31,"devServer"],[28,42,43,40],[28,43,43,41,"url"],[28,46,43,44],[28,49,43,47],[28,62,43,60],[28,64,43,62],[29,8,44,4,"method"],[29,14,44,10],[29,16,44,12],[29,22,44,18],[30,8,45,4,"body"],[30,12,45,8],[30,14,45,10,"JSON"],[30,18,45,14],[30,19,45,15,"stringify"],[30,28,45,24],[30,29,45,25],[31,10,45,26,"stack"],[31,15,45,31],[31,17,45,26,"stack"],[31,22,45,31],[32,10,45,33,"extraData"],[32,19,45,42],[32,21,45,33,"extraData"],[33,8,45,42],[33,9,45,43],[34,6,46,2],[34,7,46,3],[34,8,46,4],[35,6,47,2],[35,19,47,15,"response"],[35,27,47,23],[35,28,47,24,"json"],[35,32,47,28],[35,33,47,29],[35,34,47,30],[36,4,48,0],[36,5,48,1],[37,4,48,1],[37,11,48,1,"_symbolicateStackTrace"],[37,33,48,1],[37,34,48,1,"apply"],[37,39,48,1],[37,46,48,1,"arguments"],[37,55,48,1],[38,2,48,1],[39,2,50,0,"module"],[39,8,50,6],[39,9,50,7,"exports"],[39,16,50,14],[39,19,50,17,"symbolicateStackTrace"],[39,40,50,38],[40,0,50,39],[40,3]],"functionMap":{"names":["<global>","symbolicateStackTrace"],"mappings":"AAA;AC+B;CDgB"}},"type":"js/module"}]}