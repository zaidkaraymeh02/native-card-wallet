{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":30,"column":0,"index":969}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":30,"column":0,"index":969}}],"key":"EU+qeBIKi4KcIzPeK4PbkLqFqVY="}},{"name":"escape-string-regexp","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":54,"index":54}}],"key":"pv3xsw91DuEhfWNv1C6M3srszHc="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = extractPathFromURL;\n  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\"));\n  var _escapeStringRegexp = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"escape-string-regexp\"));\n  function extractPathFromURL(prefixes, url) {\n    for (var prefix of prefixes) {\n      var _prefix$match$, _prefix$match;\n      var protocol = (_prefix$match$ = (_prefix$match = prefix.match(/^[^:]+:/)) == null ? void 0 : _prefix$match[0]) != null ? _prefix$match$ : '';\n      var host = prefix.replace(new RegExp(`^${(0, _escapeStringRegexp.default)(protocol)}`), '').replace(/\\/+/g, '/') // Replace multiple slash (//) with single ones\n      .replace(/^\\//, ''); // Remove extra leading slash\n\n      var prefixRegex = new RegExp(`^${(0, _escapeStringRegexp.default)(protocol)}(/)*${host.split('.').map(function (it) {\n        return it === '*' ? '[^/]+' : (0, _escapeStringRegexp.default)(it);\n      }).join('\\\\.')}`);\n      var _url$split = url.split('?'),\n        _url$split2 = (0, _slicedToArray2.default)(_url$split, 2),\n        originAndPath = _url$split2[0],\n        searchParams = _url$split2[1];\n      var normalizedURL = originAndPath.replace(/\\/+/g, '/').concat(searchParams ? `?${searchParams}` : '');\n      if (prefixRegex.test(normalizedURL)) {\n        return normalizedURL.replace(prefixRegex, '');\n      }\n    }\n    return undefined;\n  }\n});","lineCount":30,"map":[[8,2,1,0],[8,6,1,0,"_escapeStringRegexp"],[8,25,1,0],[8,28,1,0,"_interopRequireDefault"],[8,50,1,0],[8,51,1,0,"_$$_REQUIRE"],[8,62,1,0],[8,63,1,0,"_dependencyMap"],[8,77,1,0],[9,2,3,15],[9,11,3,24,"extractPathFromURL"],[9,29,3,42,"extractPathFromURL"],[9,30,3,43,"prefixes"],[9,38,3,61],[9,40,3,63,"url"],[9,43,3,74],[9,45,3,76],[10,4,4,2],[10,9,4,7],[10,13,4,13,"prefix"],[10,19,4,19],[10,23,4,23,"prefixes"],[10,31,4,31],[10,33,4,33],[11,6,4,33],[11,10,4,33,"_prefix$match$"],[11,24,4,33],[11,26,4,33,"_prefix$match"],[11,39,4,33],[12,6,5,4],[12,10,5,10,"protocol"],[12,18,5,18],[12,22,5,18,"_prefix$match$"],[12,36,5,18],[12,40,5,18,"_prefix$match"],[12,53,5,18],[12,56,5,21,"prefix"],[12,62,5,27],[12,63,5,28,"match"],[12,68,5,33],[12,69,5,34],[12,78,5,43],[12,79,5,44],[12,100,5,21,"_prefix$match"],[12,113,5,21],[12,114,5,47],[12,115,5,48],[12,116,5,49],[12,128,5,49,"_prefix$match$"],[12,142,5,49],[12,145,5,53],[12,147,5,55],[13,6,6,4],[13,10,6,10,"host"],[13,14,6,14],[13,17,6,17,"prefix"],[13,23,6,23],[13,24,7,7,"replace"],[13,31,7,14],[13,32,7,15],[13,36,7,19,"RegExp"],[13,42,7,25],[13,43,7,26],[13,47,7,30],[13,51,7,30,"escapeStringRegexp"],[13,78,7,48],[13,80,7,49,"protocol"],[13,88,7,57],[13,89,7,58],[13,91,7,60],[13,92,7,61],[13,94,7,63],[13,96,7,65],[13,97,7,66],[13,98,8,7,"replace"],[13,105,8,14],[13,106,8,15],[13,112,8,21],[13,114,8,23],[13,117,8,26],[13,118,8,27],[13,119,8,28],[14,6,8,28],[14,7,9,7,"replace"],[14,14,9,14],[14,15,9,15],[14,20,9,20],[14,22,9,22],[14,24,9,24],[14,25,9,25],[14,26,9,26],[14,27,9,27],[16,6,11,4],[16,10,11,10,"prefixRegex"],[16,21,11,21],[16,24,11,24],[16,28,11,28,"RegExp"],[16,34,11,34],[16,35,12,6],[16,39,12,10],[16,43,12,10,"escapeStringRegexp"],[16,70,12,28],[16,72,12,29,"protocol"],[16,80,12,37],[16,81,12,38],[16,88,12,45,"host"],[16,92,12,49],[16,93,13,9,"split"],[16,98,13,14],[16,99,13,15],[16,102,13,18],[16,103,13,19],[16,104,14,9,"map"],[16,107,14,12],[16,108,14,13],[16,118,14,14,"it"],[16,120,14,16],[17,8,14,16],[17,15,14,22,"it"],[17,17,14,24],[17,22,14,29],[17,25,14,32],[17,28,14,35],[17,35,14,42],[17,38,14,45],[17,42,14,45,"escapeStringRegexp"],[17,69,14,63],[17,71,14,64,"it"],[17,73,14,66],[17,74,14,67],[18,6,14,67],[18,7,14,68],[18,8,14,69],[18,9,15,9,"join"],[18,13,15,13],[18,14,15,14],[18,19,15,19],[18,20,15,20],[18,22,16,4],[18,23,16,5],[19,6,18,4],[19,10,18,4,"_url$split"],[19,20,18,4],[19,23,18,42,"url"],[19,26,18,45],[19,27,18,46,"split"],[19,32,18,51],[19,33,18,52],[19,36,18,55],[19,37,18,56],[20,8,18,56,"_url$split2"],[20,19,18,56],[20,26,18,56,"_slicedToArray2"],[20,41,18,56],[20,42,18,56,"default"],[20,49,18,56],[20,51,18,56,"_url$split"],[20,61,18,56],[21,8,18,11,"originAndPath"],[21,21,18,24],[21,24,18,24,"_url$split2"],[21,35,18,24],[22,8,18,26,"searchParams"],[22,20,18,38],[22,23,18,38,"_url$split2"],[22,34,18,38],[23,6,19,4],[23,10,19,10,"normalizedURL"],[23,23,19,23],[23,26,19,26,"originAndPath"],[23,39,19,39],[23,40,20,7,"replace"],[23,47,20,14],[23,48,20,15],[23,54,20,21],[23,56,20,23],[23,59,20,26],[23,60,20,27],[23,61,21,7,"concat"],[23,67,21,13],[23,68,21,14,"searchParams"],[23,80,21,26],[23,83,21,29],[23,87,21,33,"searchParams"],[23,99,21,45],[23,101,21,47],[23,104,21,50],[23,106,21,52],[23,107,21,53],[24,6,23,4],[24,10,23,8,"prefixRegex"],[24,21,23,19],[24,22,23,20,"test"],[24,26,23,24],[24,27,23,25,"normalizedURL"],[24,40,23,38],[24,41,23,39],[24,43,23,41],[25,8,24,6],[25,15,24,13,"normalizedURL"],[25,28,24,26],[25,29,24,27,"replace"],[25,36,24,34],[25,37,24,35,"prefixRegex"],[25,48,24,46],[25,50,24,48],[25,52,24,50],[25,53,24,51],[26,6,25,4],[27,4,26,2],[28,4,28,2],[28,11,28,9,"undefined"],[28,20,28,18],[29,2,29,0],[30,0,29,1],[30,3]],"functionMap":{"names":["<global>","extractPathFromURL","host.split.map$argument_0"],"mappings":"AAA;eCE;aCW,uDD;CDe"}},"type":"js/module"}]}