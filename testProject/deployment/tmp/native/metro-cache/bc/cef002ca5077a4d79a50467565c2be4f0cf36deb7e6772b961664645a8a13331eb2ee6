{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":129,"column":0,"index":4715}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":129,"column":0,"index":4715}}],"key":"ohGilxjVqjyE1GooDVDt9OYg9x0="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":129,"column":0,"index":4715}}],"key":"V6GYoXnblvuuGHJNMy7MHyaunsU="}},{"name":"../EventEmitter/NativeEventEmitter","data":{"asyncType":null,"locs":[{"start":{"line":11,"column":0,"index":228},"end":{"line":11,"column":68,"index":296}}],"key":"FxUYVDH3eq4FUmUOIfY0RLK75tc="}},{"name":"../Utilities/logError","data":{"asyncType":null,"locs":[{"start":{"line":12,"column":0,"index":297},"end":{"line":12,"column":45,"index":342}}],"key":"9QQI3ZNrzhD8jtBw9PeEcnYvcnQ="}},{"name":"../Utilities/Platform","data":{"asyncType":null,"locs":[{"start":{"line":13,"column":0,"index":343},"end":{"line":13,"column":45,"index":388}}],"key":"3JpW2lByst9OohsYWa25ZOinj2I="}},{"name":"./NativeAppState","data":{"asyncType":null,"locs":[{"start":{"line":15,"column":0,"index":460},"end":{"line":15,"column":46,"index":506}}],"key":"oIltyBLtD/SjzawiiRgPLBrfczc="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n  var _NativeEventEmitter = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"../EventEmitter/NativeEventEmitter\"));\n  var _logError = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"../Utilities/logError\"));\n  var _Platform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"../Utilities/Platform\"));\n  var _NativeAppState = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"./NativeAppState\"));\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * \n   * @format\n   */\n  /**\n   * `AppState` can tell you if the app is in the foreground or background,\n   * and notify you when the state changes.\n   *\n   * See https://reactnative.dev/docs/appstate\n   */\n  var AppState = /*#__PURE__*/function () {\n    function AppState() {\n      var _this = this;\n      (0, _classCallCheck2.default)(this, AppState);\n      this.currentState = null;\n      if (_NativeAppState.default == null) {\n        this.isAvailable = false;\n      } else {\n        this.isAvailable = true;\n        var emitter = new _NativeEventEmitter.default(\n        // T88715063: NativeEventEmitter only used this parameter on iOS. Now it uses it on all platforms, so this code was modified automatically to preserve its behavior\n        // If you want to use the native module on other platforms, please remove this condition and test its behavior\n        _Platform.default.OS !== 'ios' ? null : _NativeAppState.default);\n        this._emitter = emitter;\n        this.currentState = _NativeAppState.default.getConstants().initialAppState;\n        var eventUpdated = false;\n\n        // TODO: this is a terrible solution - in order to ensure `currentState`\n        // prop is up to date, we have to register an observer that updates it\n        // whenever the state changes, even if nobody cares. We should just\n        // deprecate the `currentState` property and get rid of this.\n        emitter.addListener('appStateDidChange', function (appStateData) {\n          eventUpdated = true;\n          _this.currentState = appStateData.app_state;\n        });\n\n        // TODO: see above - this request just populates the value of `currentState`\n        // when the module is first initialized. Would be better to get rid of the\n        // prop and expose `getCurrentAppState` method directly.\n        // $FlowExpectedError[incompatible-call]\n        _NativeAppState.default.getCurrentAppState(function (appStateData) {\n          // It's possible that the state will have changed here & listeners need to be notified\n          if (!eventUpdated && _this.currentState !== appStateData.app_state) {\n            _this.currentState = appStateData.app_state;\n            // $FlowFixMe[incompatible-call]\n            emitter.emit('appStateDidChange', appStateData);\n          }\n        }, _logError.default);\n      }\n    }\n\n    /**\n     * Add a handler to AppState changes by listening to the `change` event type\n     * and providing the handler.\n     *\n     * See https://reactnative.dev/docs/appstate#addeventlistener\n     */\n    return (0, _createClass2.default)(AppState, [{\n      key: \"addEventListener\",\n      value: function addEventListener(type, handler) {\n        var emitter = this._emitter;\n        if (emitter == null) {\n          throw new Error('Cannot use AppState when `isAvailable` is false.');\n        }\n        switch (type) {\n          case 'change':\n            // $FlowIssue[invalid-tuple-arity] Flow cannot refine handler based on the event type\n            var changeHandler = handler;\n            return emitter.addListener('appStateDidChange', function (appStateData) {\n              changeHandler(appStateData.app_state);\n            });\n          case 'memoryWarning':\n            // $FlowIssue[invalid-tuple-arity] Flow cannot refine handler based on the event type\n            var memoryWarningHandler = handler;\n            return emitter.addListener('memoryWarning', memoryWarningHandler);\n          case 'blur':\n          case 'focus':\n            // $FlowIssue[invalid-tuple-arity] Flow cannot refine handler based on the event type\n            var focusOrBlurHandler = handler;\n            return emitter.addListener('appStateFocusChange', function (hasFocus) {\n              if (type === 'blur' && !hasFocus) {\n                focusOrBlurHandler();\n              }\n              if (type === 'focus' && hasFocus) {\n                focusOrBlurHandler();\n              }\n            });\n        }\n        throw new Error('Trying to subscribe to unknown event: ' + type);\n      }\n    }]);\n  }();\n  module.exports = new AppState();\n});","lineCount":107,"map":[[5,2,11,0],[5,6,11,0,"_NativeEventEmitter"],[5,25,11,0],[5,28,11,0,"_interopRequireDefault"],[5,50,11,0],[5,51,11,0,"_$$_REQUIRE"],[5,62,11,0],[5,63,11,0,"_dependencyMap"],[5,77,11,0],[6,2,12,0],[6,6,12,0,"_logError"],[6,15,12,0],[6,18,12,0,"_interopRequireDefault"],[6,40,12,0],[6,41,12,0,"_$$_REQUIRE"],[6,52,12,0],[6,53,12,0,"_dependencyMap"],[6,67,12,0],[7,2,13,0],[7,6,13,0,"_Platform"],[7,15,13,0],[7,18,13,0,"_interopRequireDefault"],[7,40,13,0],[7,41,13,0,"_$$_REQUIRE"],[7,52,13,0],[7,53,13,0,"_dependencyMap"],[7,67,13,0],[8,2,15,0],[8,6,15,0,"_NativeAppState"],[8,21,15,0],[8,24,15,0,"_interopRequireDefault"],[8,46,15,0],[8,47,15,0,"_$$_REQUIRE"],[8,58,15,0],[8,59,15,0,"_dependencyMap"],[8,73,15,0],[9,2,1,0],[10,0,2,0],[11,0,3,0],[12,0,4,0],[13,0,5,0],[14,0,6,0],[15,0,7,0],[16,0,8,0],[17,0,9,0],[18,2,32,0],[19,0,33,0],[20,0,34,0],[21,0,35,0],[22,0,36,0],[23,0,37,0],[24,2,32,0],[24,6,38,6,"AppState"],[24,14,38,14],[25,4,44,2],[25,13,44,2,"AppState"],[25,22,44,2],[25,24,44,16],[26,6,44,16],[26,10,44,16,"_this"],[26,15,44,16],[27,6,44,16],[27,10,44,16,"_classCallCheck2"],[27,26,44,16],[27,27,44,16,"default"],[27,34,44,16],[27,42,44,16,"AppState"],[27,50,44,16],[28,6,44,16],[28,11,39,2,"currentState"],[28,23,39,14],[28,26,39,26],[28,30,39,30],[29,6,45,4],[29,10,45,8,"NativeAppState"],[29,33,45,22],[29,37,45,26],[29,41,45,30],[29,43,45,32],[30,8,46,6],[30,12,46,10],[30,13,46,11,"isAvailable"],[30,24,46,22],[30,27,46,25],[30,32,46,30],[31,6,47,4],[31,7,47,5],[31,13,47,11],[32,8,48,6],[32,12,48,10],[32,13,48,11,"isAvailable"],[32,24,48,22],[32,27,48,25],[32,31,48,29],[33,8,50,6],[33,12,50,12,"emitter"],[33,19,50,71],[33,22,51,8],[33,26,51,12,"NativeEventEmitter"],[33,53,51,30],[34,8,52,10],[35,8,53,10],[36,8,54,10,"Platform"],[36,25,54,18],[36,26,54,19,"OS"],[36,28,54,21],[36,33,54,26],[36,38,54,31],[36,41,54,34],[36,45,54,38],[36,48,54,41,"NativeAppState"],[36,71,55,8],[36,72,55,9],[37,8,56,6],[37,12,56,10],[37,13,56,11,"_emitter"],[37,21,56,19],[37,24,56,22,"emitter"],[37,31,56,29],[38,8,58,6],[38,12,58,10],[38,13,58,11,"currentState"],[38,25,58,23],[38,28,58,26,"NativeAppState"],[38,51,58,40],[38,52,58,41,"getConstants"],[38,64,58,53],[38,65,58,54],[38,66,58,55],[38,67,58,56,"initialAppState"],[38,82,58,71],[39,8,60,6],[39,12,60,10,"eventUpdated"],[39,24,60,22],[39,27,60,25],[39,32,60,30],[41,8,62,6],[42,8,63,6],[43,8,64,6],[44,8,65,6],[45,8,66,6,"emitter"],[45,15,66,13],[45,16,66,14,"addListener"],[45,27,66,25],[45,28,66,26],[45,47,66,45],[45,49,66,47],[45,59,66,47,"appStateData"],[45,71,66,59],[45,73,66,63],[46,10,67,8,"eventUpdated"],[46,22,67,20],[46,25,67,23],[46,29,67,27],[47,10,68,8,"_this"],[47,15,68,12],[47,16,68,13,"currentState"],[47,28,68,25],[47,31,68,28,"appStateData"],[47,43,68,40],[47,44,68,41,"app_state"],[47,53,68,50],[48,8,69,6],[48,9,69,7],[48,10,69,8],[50,8,71,6],[51,8,72,6],[52,8,73,6],[53,8,74,6],[54,8,75,6,"NativeAppState"],[54,31,75,20],[54,32,75,21,"getCurrentAppState"],[54,50,75,39],[54,51,75,40],[54,61,75,40,"appStateData"],[54,73,75,52],[54,75,75,56],[55,10,76,8],[56,10,77,8],[56,14,77,12],[56,15,77,13,"eventUpdated"],[56,27,77,25],[56,31,77,29,"_this"],[56,36,77,33],[56,37,77,34,"currentState"],[56,49,77,46],[56,54,77,51,"appStateData"],[56,66,77,63],[56,67,77,64,"app_state"],[56,76,77,73],[56,78,77,75],[57,12,78,10,"_this"],[57,17,78,14],[57,18,78,15,"currentState"],[57,30,78,27],[57,33,78,30,"appStateData"],[57,45,78,42],[57,46,78,43,"app_state"],[57,55,78,52],[58,12,79,10],[59,12,80,10,"emitter"],[59,19,80,17],[59,20,80,18,"emit"],[59,24,80,22],[59,25,80,23],[59,44,80,42],[59,46,80,44,"appStateData"],[59,58,80,56],[59,59,80,57],[60,10,81,8],[61,8,82,6],[61,9,82,7],[61,11,82,9,"logError"],[61,28,82,17],[61,29,82,18],[62,6,83,4],[63,4,84,2],[65,4,86,2],[66,0,87,0],[67,0,88,0],[68,0,89,0],[69,0,90,0],[70,0,91,0],[71,4,86,2],[71,15,86,2,"_createClass2"],[71,28,86,2],[71,29,86,2,"default"],[71,36,86,2],[71,38,86,2,"AppState"],[71,46,86,2],[72,6,86,2,"key"],[72,9,86,2],[73,6,86,2,"value"],[73,11,86,2],[73,13,92,2],[73,22,92,2,"addEventListener"],[73,38,92,18,"addEventListener"],[73,39,93,4,"type"],[73,43,93,11],[73,45,94,4,"handler"],[73,52,94,67],[73,54,95,23],[74,8,96,4],[74,12,96,10,"emitter"],[74,19,96,17],[74,22,96,20],[74,26,96,24],[74,27,96,25,"_emitter"],[74,35,96,33],[75,8,97,4],[75,12,97,8,"emitter"],[75,19,97,15],[75,23,97,19],[75,27,97,23],[75,29,97,25],[76,10,98,6],[76,16,98,12],[76,20,98,16,"Error"],[76,25,98,21],[76,26,98,22],[76,76,98,72],[76,77,98,73],[77,8,99,4],[78,8,100,4],[78,16,100,12,"type"],[78,20,100,16],[79,10,101,6],[79,15,101,11],[79,23,101,19],[80,12,102,8],[81,12,103,8],[81,16,103,14,"changeHandler"],[81,29,103,51],[81,32,103,54,"handler"],[81,39,103,61],[82,12,104,8],[82,19,104,15,"emitter"],[82,26,104,22],[82,27,104,23,"addListener"],[82,38,104,34],[82,39,104,35],[82,58,104,54],[82,60,104,56],[82,70,104,56,"appStateData"],[82,82,104,68],[82,84,104,72],[83,14,105,10,"changeHandler"],[83,27,105,23],[83,28,105,24,"appStateData"],[83,40,105,36],[83,41,105,37,"app_state"],[83,50,105,46],[83,51,105,47],[84,12,106,8],[84,13,106,9],[84,14,106,10],[85,10,107,6],[85,15,107,11],[85,30,107,26],[86,12,108,8],[87,12,109,8],[87,16,109,14,"memoryWarningHandler"],[87,36,109,46],[87,39,109,49,"handler"],[87,46,109,56],[88,12,110,8],[88,19,110,15,"emitter"],[88,26,110,22],[88,27,110,23,"addListener"],[88,38,110,34],[88,39,110,35],[88,54,110,50],[88,56,110,52,"memoryWarningHandler"],[88,76,110,72],[88,77,110,73],[89,10,111,6],[89,15,111,11],[89,21,111,17],[90,10,112,6],[90,15,112,11],[90,22,112,18],[91,12,113,8],[92,12,114,8],[92,16,114,14,"focusOrBlurHandler"],[92,34,114,44],[92,37,114,47,"handler"],[92,44,114,54],[93,12,115,8],[93,19,115,15,"emitter"],[93,26,115,22],[93,27,115,23,"addListener"],[93,38,115,34],[93,39,115,35],[93,60,115,56],[93,62,115,58],[93,72,115,58,"hasFocus"],[93,80,115,66],[93,82,115,70],[94,14,116,10],[94,18,116,14,"type"],[94,22,116,18],[94,27,116,23],[94,33,116,29],[94,37,116,33],[94,38,116,34,"hasFocus"],[94,46,116,42],[94,48,116,44],[95,16,117,12,"focusOrBlurHandler"],[95,34,117,30],[95,35,117,31],[95,36,117,32],[96,14,118,10],[97,14,119,10],[97,18,119,14,"type"],[97,22,119,18],[97,27,119,23],[97,34,119,30],[97,38,119,34,"hasFocus"],[97,46,119,42],[97,48,119,44],[98,16,120,12,"focusOrBlurHandler"],[98,34,120,30],[98,35,120,31],[98,36,120,32],[99,14,121,10],[100,12,122,8],[100,13,122,9],[100,14,122,10],[101,8,123,4],[102,8,124,4],[102,14,124,10],[102,18,124,14,"Error"],[102,23,124,19],[102,24,124,20],[102,64,124,60],[102,67,124,63,"type"],[102,71,124,67],[102,72,124,68],[103,6,125,2],[104,4,125,3],[105,2,125,3],[106,2,128,0,"module"],[106,8,128,6],[106,9,128,7,"exports"],[106,16,128,14],[106,19,128,18],[106,23,128,22,"AppState"],[106,31,128,30],[106,32,128,31],[106,33,128,43],[107,0,128,44],[107,3]],"functionMap":{"names":["<global>","AppState","constructor","emitter.addListener$argument_1","NativeAppState.getCurrentAppState$argument_0","addEventListener"],"mappings":"AAA;ACqC;ECM;+CCsB;ODG;wCEM;OFO;GDE;EIQ;wDFY;SEE;0DFS;SEO;GJG;CDC"}},"type":"js/module"}]}