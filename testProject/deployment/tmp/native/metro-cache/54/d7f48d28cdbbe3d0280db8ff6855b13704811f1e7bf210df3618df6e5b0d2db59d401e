{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":491,"column":0,"index":12653}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":491,"column":0,"index":12653}}],"key":"ohGilxjVqjyE1GooDVDt9OYg9x0="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":491,"column":0,"index":12653}}],"key":"V6GYoXnblvuuGHJNMy7MHyaunsU="}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":491,"column":0,"index":12653}}],"key":"rcd0dMwf8BS2g+8U1wyhIOxtYEo="}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":491,"column":0,"index":12653}}],"key":"4pxOr+e+5cSZAdeEKxSt3F7LoKY="}},{"name":"@babel/runtime/helpers/inherits","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":491,"column":0,"index":12653}}],"key":"EDnOjopp9yNVawSzfBRsy2dq5dM="}},{"name":"../../Core/Devtools/parseErrorStack","data":{"asyncType":null,"locs":[{"start":{"line":21,"column":0,"index":456},"end":{"line":21,"column":66,"index":522}}],"key":"FgxQzv74nv4TEARyMhTrzrRRqIo="}},{"name":"../../NativeModules/specs/NativeDevSettings","data":{"asyncType":null,"locs":[{"start":{"line":22,"column":0,"index":523},"end":{"line":22,"column":76,"index":599}}],"key":"wrzW3tGGGAhLjsLSVM808Cn2bTA="}},{"name":"../../NativeModules/specs/NativeLogBox","data":{"asyncType":null,"locs":[{"start":{"line":23,"column":0,"index":600},"end":{"line":23,"column":66,"index":666}}],"key":"gVaxfWXVRxL2zJT5JNlaaR/Xrgs="}},{"name":"./LogBoxLog","data":{"asyncType":null,"locs":[{"start":{"line":24,"column":0,"index":667},"end":{"line":24,"column":36,"index":703}}],"key":"NkM4+L+MmwTJD8nd0tRosHgq5Og="}},{"name":"react","data":{"asyncType":null,"locs":[{"start":{"line":26,"column":0,"index":759},"end":{"line":26,"column":31,"index":790}}],"key":"a4EMkKqamYWCMMPV7UeQlqGQ+ks="}},{"name":"react/jsx-runtime","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":491,"column":0,"index":12653}}],"key":"5dCMGbjkz1QWCPjOwzvy5ZBkuK8="}},{"name":"../../Core/ExceptionsManager","data":{"asyncType":null,"locs":[{"start":{"line":106,"column":28,"index":2664},"end":{"line":106,"column":67,"index":2703}}],"key":"rh1lsYexuAEiAxWxhF9+r+tk2ws="}},{"name":"./parseLogBoxLog","data":{"asyncType":null,"locs":[{"start":{"line":25,"column":0,"index":704},"end":{"line":25,"column":54,"index":758}}],"key":"Zbz8QjDcDG2C2PQ9AuAV++r6EsA=","isOptional":true}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.addException = addException;\n  exports.addIgnorePatterns = addIgnorePatterns;\n  exports.addLog = addLog;\n  exports.checkWarningFilter = checkWarningFilter;\n  exports.clear = clear;\n  exports.clearErrors = clearErrors;\n  exports.clearWarnings = clearWarnings;\n  exports.dismiss = dismiss;\n  exports.getAppInfo = getAppInfo;\n  exports.getIgnorePatterns = getIgnorePatterns;\n  exports.isDisabled = isDisabled;\n  exports.isLogBoxErrorMessage = isLogBoxErrorMessage;\n  exports.isMessageIgnored = isMessageIgnored;\n  exports.observe = observe;\n  exports.reportLogBoxError = reportLogBoxError;\n  exports.retrySymbolicateLogNow = retrySymbolicateLogNow;\n  exports.setAppInfo = setAppInfo;\n  exports.setDisabled = setDisabled;\n  exports.setSelectedLog = setSelectedLog;\n  exports.setWarningFilter = setWarningFilter;\n  exports.symbolicateLogLazy = symbolicateLogLazy;\n  exports.symbolicateLogNow = symbolicateLogNow;\n  exports.withSubscription = withSubscription;\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/getPrototypeOf\"));\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/inherits\"));\n  var _parseErrorStack = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"../../Core/Devtools/parseErrorStack\"));\n  var _NativeDevSettings = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"../../NativeModules/specs/NativeDevSettings\"));\n  var _NativeLogBox = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"../../NativeModules/specs/NativeLogBox\"));\n  var _LogBoxLog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9], \"./LogBoxLog\"));\n  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[10], \"react\"));\n  var _jsxRuntime = _$$_REQUIRE(_dependencyMap[11], \"react/jsx-runtime\");\n  var _jsxFileName = \"C:\\\\Program Files\\\\Mendix\\\\10.18.1.55792\\\\modeler\\\\tools\\\\node\\\\node_modules\\\\react-native\\\\Libraries\\\\LogBox\\\\Data\\\\LogBoxData.js\";\n  function _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\n  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\n  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }\n  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); } /**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n  var observers = new Set();\n  var ignorePatterns = new Set();\n  var appInfo = null;\n  var logs = new Set();\n  var updateTimeout = null;\n  var _isDisabled = false;\n  var _selectedIndex = -1;\n  var hasShownFuseboxWarningsMigrationMessage = false;\n  var warningFilter = function warningFilter(format) {\n    return {\n      finalFormat: format,\n      forceDialogImmediately: false,\n      suppressDialog_LEGACY: true,\n      suppressCompletely: false,\n      monitorEvent: 'unknown',\n      monitorListVersion: 0,\n      monitorSampleRate: 1\n    };\n  };\n  var LOGBOX_ERROR_MESSAGE = 'An error was thrown when attempting to render log messages via LogBox.';\n  function getNextState() {\n    return {\n      logs: logs,\n      isDisabled: _isDisabled,\n      selectedLogIndex: _selectedIndex\n    };\n  }\n  function reportLogBoxError(error, componentStack) {\n    var ExceptionsManager = _$$_REQUIRE(_dependencyMap[12], \"../../Core/ExceptionsManager\");\n    error.message = `${LOGBOX_ERROR_MESSAGE}\\n\\n${error.message}`;\n    if (componentStack != null) {\n      error.componentStack = componentStack;\n    }\n    ExceptionsManager.handleException(error, /* isFatal */true);\n  }\n  function isLogBoxErrorMessage(message) {\n    return typeof message === 'string' && message.includes(LOGBOX_ERROR_MESSAGE);\n  }\n  function isMessageIgnored(message) {\n    for (var pattern of ignorePatterns) {\n      if (pattern instanceof RegExp && pattern.test(message) || typeof pattern === 'string' && message.includes(pattern)) {\n        return true;\n      }\n    }\n    return false;\n  }\n  function handleUpdate() {\n    if (updateTimeout == null) {\n      updateTimeout = setImmediate(function () {\n        updateTimeout = null;\n        var nextState = getNextState();\n        observers.forEach(function (_ref) {\n          var observer = _ref.observer;\n          return observer(nextState);\n        });\n      });\n    }\n  }\n  function appendNewLog(newLog) {\n    // Don't want store these logs because they trigger a\n    // state update when we add them to the store.\n    if (isMessageIgnored(newLog.message.content)) {\n      return;\n    }\n\n    // If the next log has the same category as the previous one\n    // then roll it up into the last log in the list by incrementing\n    // the count (similar to how Chrome does it).\n    var lastLog = Array.from(logs).pop();\n    if (lastLog && lastLog.category === newLog.category) {\n      lastLog.incrementCount();\n      handleUpdate();\n      return;\n    }\n    if (newLog.level === 'fatal') {\n      // If possible, to avoid jank, we don't want to open the error before\n      // it's symbolicated. To do that, we optimistically wait for\n      // symbolication for up to a second before adding the log.\n      var OPTIMISTIC_WAIT_TIME = 1000;\n      var _addPendingLog = function addPendingLog() {\n        logs.add(newLog);\n        if (_selectedIndex < 0) {\n          setSelectedLog(logs.size - 1);\n        } else {\n          handleUpdate();\n        }\n        _addPendingLog = null;\n      };\n      var optimisticTimeout = setTimeout(function () {\n        if (_addPendingLog) {\n          _addPendingLog();\n        }\n      }, OPTIMISTIC_WAIT_TIME);\n      newLog.symbolicate(function (status) {\n        if (_addPendingLog && status !== 'PENDING') {\n          _addPendingLog();\n          clearTimeout(optimisticTimeout);\n        } else if (status !== 'PENDING') {\n          // The log has already been added but we need to trigger a render.\n          handleUpdate();\n        }\n      });\n    } else if (newLog.level === 'syntax') {\n      logs.add(newLog);\n      setSelectedLog(logs.size - 1);\n    } else {\n      logs.add(newLog);\n      handleUpdate();\n    }\n  }\n  function addLog(log) {\n    if (log.level === 'warn' && global.__FUSEBOX_HAS_FULL_CONSOLE_SUPPORT__) {\n      // Under Fusebox, don't report warnings to LogBox.\n      showFuseboxWarningsMigrationMessageOnce();\n      return;\n    }\n    var errorForStackTrace = new Error();\n\n    // Parsing logs are expensive so we schedule this\n    // otherwise spammy logs would pause rendering.\n    setImmediate(function () {\n      try {\n        var _log$stack;\n        var stack = (0, _parseErrorStack.default)((_log$stack = log.stack) != null ? _log$stack : errorForStackTrace == null ? void 0 : errorForStackTrace.stack);\n        appendNewLog(new _LogBoxLog.default({\n          level: log.level,\n          message: log.message,\n          isComponentError: false,\n          stack: stack,\n          category: log.category,\n          componentStack: log.componentStack,\n          componentStackType: log.componentStackType || 'legacy'\n        }));\n      } catch (error) {\n        reportLogBoxError(error);\n      }\n    });\n  }\n  function addException(error) {\n    // Parsing logs are expensive so we schedule this\n    // otherwise spammy logs would pause rendering.\n    setImmediate(function () {\n      try {\n        appendNewLog(new _LogBoxLog.default((0, _$$_REQUIRE(_dependencyMap[13], \"./parseLogBoxLog\").parseLogBoxException)(error)));\n      } catch (loggingError) {\n        reportLogBoxError(loggingError);\n      }\n    });\n  }\n  function symbolicateLogNow(log) {\n    log.symbolicate(function () {\n      handleUpdate();\n    });\n  }\n  function retrySymbolicateLogNow(log) {\n    log.retrySymbolicate(function () {\n      handleUpdate();\n    });\n  }\n  function symbolicateLogLazy(log) {\n    log.symbolicate();\n  }\n  function clear() {\n    if (logs.size > 0) {\n      logs = new Set();\n      setSelectedLog(-1);\n    }\n  }\n  function setSelectedLog(proposedNewIndex) {\n    var oldIndex = _selectedIndex;\n    var newIndex = proposedNewIndex;\n    var logArray = Array.from(logs);\n    var index = logArray.length - 1;\n    while (index >= 0) {\n      // The latest syntax error is selected and displayed before all other logs.\n      if (logArray[index].level === 'syntax') {\n        newIndex = index;\n        break;\n      }\n      index -= 1;\n    }\n    _selectedIndex = newIndex;\n    handleUpdate();\n    if (_NativeLogBox.default) {\n      setTimeout(function () {\n        if (oldIndex < 0 && newIndex >= 0) {\n          _NativeLogBox.default.show();\n        } else if (oldIndex >= 0 && newIndex < 0) {\n          _NativeLogBox.default.hide();\n        }\n      }, 0);\n    }\n  }\n  function clearWarnings() {\n    var newLogs = Array.from(logs).filter(function (log) {\n      return log.level !== 'warn';\n    });\n    if (newLogs.length !== logs.size) {\n      logs = new Set(newLogs);\n      setSelectedLog(-1);\n      handleUpdate();\n    }\n  }\n  function clearErrors() {\n    var newLogs = Array.from(logs).filter(function (log) {\n      return log.level !== 'error' && log.level !== 'fatal';\n    });\n    if (newLogs.length !== logs.size) {\n      logs = new Set(newLogs);\n      setSelectedLog(-1);\n    }\n  }\n  function dismiss(log) {\n    if (logs.has(log)) {\n      logs.delete(log);\n      handleUpdate();\n    }\n  }\n  function setWarningFilter(filter) {\n    warningFilter = filter;\n  }\n  function setAppInfo(info) {\n    appInfo = info;\n  }\n  function getAppInfo() {\n    return appInfo != null ? appInfo() : null;\n  }\n  function checkWarningFilter(format) {\n    return warningFilter(format);\n  }\n  function getIgnorePatterns() {\n    return Array.from(ignorePatterns);\n  }\n  function addIgnorePatterns(patterns) {\n    var existingSize = ignorePatterns.size;\n    // The same pattern may be added multiple times, but adding a new pattern\n    // can be expensive so let's find only the ones that are new.\n    patterns.forEach(function (pattern) {\n      if (pattern instanceof RegExp) {\n        for (var existingPattern of ignorePatterns) {\n          if (existingPattern instanceof RegExp && existingPattern.toString() === pattern.toString()) {\n            return;\n          }\n        }\n        ignorePatterns.add(pattern);\n      }\n      ignorePatterns.add(pattern);\n    });\n    if (ignorePatterns.size === existingSize) {\n      return;\n    }\n    // We need to recheck all of the existing logs.\n    // This allows adding an ignore pattern anywhere in the codebase.\n    // Without this, if you ignore a pattern after the a log is created,\n    // then we would keep showing the log.\n    logs = new Set(Array.from(logs).filter(function (log) {\n      return !isMessageIgnored(log.message.content);\n    }));\n    handleUpdate();\n  }\n  function setDisabled(value) {\n    if (value === _isDisabled) {\n      return;\n    }\n    _isDisabled = value;\n    handleUpdate();\n  }\n  function isDisabled() {\n    return _isDisabled;\n  }\n  function observe(observer) {\n    var subscription = {\n      observer: observer\n    };\n    observers.add(subscription);\n    observer(getNextState());\n    return {\n      unsubscribe: function unsubscribe() {\n        observers.delete(subscription);\n      }\n    };\n  }\n  function withSubscription(WrappedComponent) {\n    var LogBoxStateSubscription = /*#__PURE__*/function (_React$Component) {\n      function LogBoxStateSubscription() {\n        var _this;\n        (0, _classCallCheck2.default)(this, LogBoxStateSubscription);\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n        _this = _callSuper(this, LogBoxStateSubscription, [].concat(args));\n        _this.state = {\n          logs: new Set(),\n          isDisabled: false,\n          hasError: false,\n          selectedLogIndex: -1\n        };\n        return _this;\n      }\n      (0, _inherits2.default)(LogBoxStateSubscription, _React$Component);\n      return (0, _createClass2.default)(LogBoxStateSubscription, [{\n        key: \"componentDidCatch\",\n        value: function componentDidCatch(err, errorInfo) {\n          /* $FlowFixMe[class-object-subtyping] added when improving typing for\n           * this parameters */\n          reportLogBoxError(err, errorInfo.componentStack);\n        }\n      }, {\n        key: \"render\",\n        value: function render() {\n          if (this.state.hasError) {\n            // This happens when the component failed to render, in which case we delegate to the native redbox.\n            // We can't show anyback fallback UI here, because the error may be with <View> or <Text>.\n            return null;\n          }\n          return /*#__PURE__*/(0, _jsxRuntime.jsx)(WrappedComponent, {\n            logs: Array.from(this.state.logs),\n            isDisabled: this.state.isDisabled,\n            selectedLogIndex: this.state.selectedLogIndex\n          });\n        }\n      }, {\n        key: \"componentDidMount\",\n        value: function componentDidMount() {\n          var _this2 = this;\n          this._subscription = observe(function (data) {\n            _this2.setState(data);\n          });\n        }\n      }, {\n        key: \"componentWillUnmount\",\n        value: function componentWillUnmount() {\n          if (this._subscription != null) {\n            this._subscription.unsubscribe();\n          }\n        }\n      }], [{\n        key: \"getDerivedStateFromError\",\n        value: function getDerivedStateFromError() {\n          return {\n            hasError: true\n          };\n        }\n      }]);\n    }(React.Component);\n    return LogBoxStateSubscription;\n  }\n  function showFuseboxWarningsMigrationMessageOnce() {\n    if (hasShownFuseboxWarningsMigrationMessage) {\n      return;\n    }\n    hasShownFuseboxWarningsMigrationMessage = true;\n    appendNewLog(new _LogBoxLog.default({\n      level: 'warn',\n      message: {\n        content: 'Open debugger to view warnings.',\n        substitutions: []\n      },\n      isComponentError: false,\n      stack: [],\n      category: 'fusebox-warnings-migration',\n      componentStack: [],\n      onNotificationPress: function onNotificationPress() {\n        if (_NativeDevSettings.default.openDebugger) {\n          _NativeDevSettings.default.openDebugger();\n        }\n        clearWarnings();\n      }\n    }));\n  }\n});","lineCount":423,"map":[[34,2,21,0],[34,6,21,0,"_parseErrorStack"],[34,22,21,0],[34,25,21,0,"_interopRequireDefault"],[34,47,21,0],[34,48,21,0,"_$$_REQUIRE"],[34,59,21,0],[34,60,21,0,"_dependencyMap"],[34,74,21,0],[35,2,22,0],[35,6,22,0,"_NativeDevSettings"],[35,24,22,0],[35,27,22,0,"_interopRequireDefault"],[35,49,22,0],[35,50,22,0,"_$$_REQUIRE"],[35,61,22,0],[35,62,22,0,"_dependencyMap"],[35,76,22,0],[36,2,23,0],[36,6,23,0,"_NativeLogBox"],[36,19,23,0],[36,22,23,0,"_interopRequireDefault"],[36,44,23,0],[36,45,23,0,"_$$_REQUIRE"],[36,56,23,0],[36,57,23,0,"_dependencyMap"],[36,71,23,0],[37,2,24,0],[37,6,24,0,"_LogBoxLog"],[37,16,24,0],[37,19,24,0,"_interopRequireDefault"],[37,41,24,0],[37,42,24,0,"_$$_REQUIRE"],[37,53,24,0],[37,54,24,0,"_dependencyMap"],[37,68,24,0],[38,2,26,0],[38,6,26,0,"React"],[38,11,26,0],[38,14,26,0,"_interopRequireWildcard"],[38,37,26,0],[38,38,26,0,"_$$_REQUIRE"],[38,49,26,0],[38,50,26,0,"_dependencyMap"],[38,64,26,0],[39,2,26,31],[39,6,26,31,"_jsxRuntime"],[39,17,26,31],[39,20,26,31,"_$$_REQUIRE"],[39,31,26,31],[39,32,26,31,"_dependencyMap"],[39,46,26,31],[40,2,26,31],[40,6,26,31,"_jsxFileName"],[40,18,26,31],[41,2,26,31],[41,11,26,31,"_getRequireWildcardCache"],[41,36,26,31,"e"],[41,37,26,31],[41,66,26,31,"WeakMap"],[41,73,26,31],[41,92,26,31,"r"],[41,93,26,31],[41,100,26,31,"WeakMap"],[41,107,26,31],[41,111,26,31,"t"],[41,112,26,31],[41,119,26,31,"WeakMap"],[41,126,26,31],[41,138,26,31,"_getRequireWildcardCache"],[41,162,26,31],[41,174,26,31,"_getRequireWildcardCache"],[41,199,26,31,"e"],[41,200,26,31],[41,211,26,31,"e"],[41,212,26,31],[41,215,26,31,"t"],[41,216,26,31],[41,219,26,31,"r"],[41,220,26,31],[41,225,26,31,"e"],[41,226,26,31],[42,2,26,31],[42,11,26,31,"_interopRequireWildcard"],[42,35,26,31,"e"],[42,36,26,31],[42,38,26,31,"r"],[42,39,26,31],[42,48,26,31,"r"],[42,49,26,31],[42,53,26,31,"e"],[42,54,26,31],[42,58,26,31,"e"],[42,59,26,31],[42,60,26,31,"__esModule"],[42,70,26,31],[42,79,26,31,"e"],[42,80,26,31],[42,95,26,31,"e"],[42,96,26,31],[42,119,26,31,"e"],[42,120,26,31],[42,145,26,31,"e"],[42,146,26,31],[42,157,26,31,"default"],[42,164,26,31],[42,166,26,31,"e"],[42,167,26,31],[42,175,26,31,"t"],[42,176,26,31],[42,179,26,31,"_getRequireWildcardCache"],[42,203,26,31],[42,204,26,31,"r"],[42,205,26,31],[42,212,26,31,"t"],[42,213,26,31],[42,217,26,31,"t"],[42,218,26,31],[42,219,26,31,"has"],[42,222,26,31],[42,223,26,31,"e"],[42,224,26,31],[42,234,26,31,"t"],[42,235,26,31],[42,236,26,31,"get"],[42,239,26,31],[42,240,26,31,"e"],[42,241,26,31],[42,248,26,31,"n"],[42,249,26,31],[42,254,26,31,"__proto__"],[42,263,26,31],[42,273,26,31,"a"],[42,274,26,31],[42,277,26,31,"Object"],[42,283,26,31],[42,284,26,31,"defineProperty"],[42,298,26,31],[42,302,26,31,"Object"],[42,308,26,31],[42,309,26,31,"getOwnPropertyDescriptor"],[42,333,26,31],[42,344,26,31,"u"],[42,345,26,31],[42,349,26,31,"e"],[42,350,26,31],[42,370,26,31,"u"],[42,371,26,31],[42,378,26,31,"hasOwnProperty"],[42,392,26,31],[42,393,26,31,"call"],[42,397,26,31],[42,398,26,31,"e"],[42,399,26,31],[42,401,26,31,"u"],[42,402,26,31],[42,411,26,31,"i"],[42,412,26,31],[42,415,26,31,"a"],[42,416,26,31],[42,419,26,31,"Object"],[42,425,26,31],[42,426,26,31,"getOwnPropertyDescriptor"],[42,450,26,31],[42,451,26,31,"e"],[42,452,26,31],[42,454,26,31,"u"],[42,455,26,31],[42,465,26,31,"i"],[42,466,26,31],[42,471,26,31,"i"],[42,472,26,31],[42,473,26,31,"get"],[42,476,26,31],[42,480,26,31,"i"],[42,481,26,31],[42,482,26,31,"set"],[42,485,26,31],[42,489,26,31,"Object"],[42,495,26,31],[42,496,26,31,"defineProperty"],[42,510,26,31],[42,511,26,31,"n"],[42,512,26,31],[42,514,26,31,"u"],[42,515,26,31],[42,517,26,31,"i"],[42,518,26,31],[42,522,26,31,"n"],[42,523,26,31],[42,524,26,31,"u"],[42,525,26,31],[42,529,26,31,"e"],[42,530,26,31],[42,531,26,31,"u"],[42,532,26,31],[42,544,26,31,"n"],[42,545,26,31],[42,546,26,31,"default"],[42,553,26,31],[42,556,26,31,"e"],[42,557,26,31],[42,559,26,31,"t"],[42,560,26,31],[42,564,26,31,"t"],[42,565,26,31],[42,566,26,31,"set"],[42,569,26,31],[42,570,26,31,"e"],[42,571,26,31],[42,573,26,31,"n"],[42,574,26,31],[42,577,26,31,"n"],[42,578,26,31],[43,2,26,31],[43,11,26,31,"_callSuper"],[43,22,26,31,"t"],[43,23,26,31],[43,25,26,31,"o"],[43,26,26,31],[43,28,26,31,"e"],[43,29,26,31],[43,40,26,31,"o"],[43,41,26,31],[43,48,26,31,"_getPrototypeOf2"],[43,64,26,31],[43,65,26,31,"default"],[43,72,26,31],[43,74,26,31,"o"],[43,75,26,31],[43,82,26,31,"_possibleConstructorReturn2"],[43,109,26,31],[43,110,26,31,"default"],[43,117,26,31],[43,119,26,31,"t"],[43,120,26,31],[43,122,26,31,"_isNativeReflectConstruct"],[43,147,26,31],[43,152,26,31,"Reflect"],[43,159,26,31],[43,160,26,31,"construct"],[43,169,26,31],[43,170,26,31,"o"],[43,171,26,31],[43,173,26,31,"e"],[43,174,26,31],[43,186,26,31,"_getPrototypeOf2"],[43,202,26,31],[43,203,26,31,"default"],[43,210,26,31],[43,212,26,31,"t"],[43,213,26,31],[43,215,26,31,"constructor"],[43,226,26,31],[43,230,26,31,"o"],[43,231,26,31],[43,232,26,31,"apply"],[43,237,26,31],[43,238,26,31,"t"],[43,239,26,31],[43,241,26,31,"e"],[43,242,26,31],[44,2,26,31],[44,11,26,31,"_isNativeReflectConstruct"],[44,37,26,31],[44,51,26,31,"t"],[44,52,26,31],[44,56,26,31,"Boolean"],[44,63,26,31],[44,64,26,31,"prototype"],[44,73,26,31],[44,74,26,31,"valueOf"],[44,81,26,31],[44,82,26,31,"call"],[44,86,26,31],[44,87,26,31,"Reflect"],[44,94,26,31],[44,95,26,31,"construct"],[44,104,26,31],[44,105,26,31,"Boolean"],[44,112,26,31],[44,145,26,31,"t"],[44,146,26,31],[44,159,26,31,"_isNativeReflectConstruct"],[44,184,26,31],[44,196,26,31,"_isNativeReflectConstruct"],[44,222,26,31],[44,235,26,31,"t"],[44,236,26,31],[44,246,1,0],[45,0,2,0],[46,0,3,0],[47,0,4,0],[48,0,5,0],[49,0,6,0],[50,0,7,0],[51,0,8,0],[52,0,9,0],[53,2,70,0],[53,6,70,6,"observers"],[53,15,70,47],[53,18,70,50],[53,22,70,54,"Set"],[53,25,70,57],[53,26,70,58],[53,27,70,59],[54,2,71,0],[54,6,71,6,"ignorePatterns"],[54,20,71,40],[54,23,71,43],[54,27,71,47,"Set"],[54,30,71,50],[54,31,71,51],[54,32,71,52],[55,2,72,0],[55,6,72,4,"appInfo"],[55,13,72,27],[55,16,72,30],[55,20,72,34],[56,2,73,0],[56,6,73,4,"logs"],[56,10,73,20],[56,13,73,23],[56,17,73,27,"Set"],[56,20,73,30],[56,21,73,31],[56,22,73,32],[57,2,74,0],[57,6,74,4,"updateTimeout"],[57,19,74,36],[57,22,74,39],[57,26,74,43],[58,2,75,0],[58,6,75,4,"_isDisabled"],[58,17,75,15],[58,20,75,18],[58,25,75,23],[59,2,76,0],[59,6,76,4,"_selectedIndex"],[59,20,76,18],[59,23,76,21],[59,24,76,22],[59,25,76,23],[60,2,77,0],[60,6,77,4,"hasShownFuseboxWarningsMigrationMessage"],[60,45,77,43],[60,48,77,46],[60,53,77,51],[61,2,79,0],[61,6,79,4,"warningFilter"],[61,19,79,32],[61,22,79,35],[61,31,79,4,"warningFilter"],[61,44,79,32,"warningFilter"],[61,45,79,45,"format"],[61,51,79,51],[61,53,79,53],[62,4,80,2],[62,11,80,9],[63,6,81,4,"finalFormat"],[63,17,81,15],[63,19,81,17,"format"],[63,25,81,23],[64,6,82,4,"forceDialogImmediately"],[64,28,82,26],[64,30,82,28],[64,35,82,33],[65,6,83,4,"suppressDialog_LEGACY"],[65,27,83,25],[65,29,83,27],[65,33,83,31],[66,6,84,4,"suppressCompletely"],[66,24,84,22],[66,26,84,24],[66,31,84,29],[67,6,85,4,"monitorEvent"],[67,18,85,16],[67,20,85,18],[67,29,85,27],[68,6,86,4,"monitorListVersion"],[68,24,86,22],[68,26,86,24],[68,27,86,25],[69,6,87,4,"monitorSampleRate"],[69,23,87,21],[69,25,87,23],[70,4,88,2],[70,5,88,3],[71,2,89,0],[71,3,89,1],[72,2,91,0],[72,6,91,6,"LOGBOX_ERROR_MESSAGE"],[72,26,91,26],[72,29,92,2],[72,101,92,74],[73,2,94,0],[73,11,94,9,"getNextState"],[73,23,94,21,"getNextState"],[73,24,94,21],[73,26,94,24],[74,4,95,2],[74,11,95,9],[75,6,96,4,"logs"],[75,10,96,8],[75,12,96,4,"logs"],[75,16,96,8],[76,6,97,4,"isDisabled"],[76,16,97,14],[76,18,97,16,"_isDisabled"],[76,29,97,27],[77,6,98,4,"selectedLogIndex"],[77,22,98,20],[77,24,98,22,"_selectedIndex"],[78,4,99,2],[78,5,99,3],[79,2,100,0],[80,2,102,7],[80,11,102,16,"reportLogBoxError"],[80,28,102,33,"reportLogBoxError"],[80,29,103,2,"error"],[80,34,103,22],[80,36,104,2,"componentStack"],[80,50,104,25],[80,52,105,8],[81,4,106,2],[81,8,106,8,"ExceptionsManager"],[81,25,106,25],[81,28,106,28,"require"],[81,39,106,35],[81,40,106,35,"_dependencyMap"],[81,54,106,35],[81,90,106,66],[81,91,106,67],[82,4,108,2,"error"],[82,9,108,7],[82,10,108,8,"message"],[82,17,108,15],[82,20,108,18],[82,23,108,21,"LOGBOX_ERROR_MESSAGE"],[82,43,108,41],[82,50,108,48,"error"],[82,55,108,53],[82,56,108,54,"message"],[82,63,108,61],[82,65,108,63],[83,4,109,2],[83,8,109,6,"componentStack"],[83,22,109,20],[83,26,109,24],[83,30,109,28],[83,32,109,30],[84,6,110,4,"error"],[84,11,110,9],[84,12,110,10,"componentStack"],[84,26,110,24],[84,29,110,27,"componentStack"],[84,43,110,41],[85,4,111,2],[86,4,112,2,"ExceptionsManager"],[86,21,112,19],[86,22,112,20,"handleException"],[86,37,112,35],[86,38,112,36,"error"],[86,43,112,41],[86,45,112,43],[86,58,112,57],[86,62,112,61],[86,63,112,62],[87,2,113,0],[88,2,115,7],[88,11,115,16,"isLogBoxErrorMessage"],[88,31,115,36,"isLogBoxErrorMessage"],[88,32,115,37,"message"],[88,39,115,52],[88,41,115,63],[89,4,116,2],[89,11,116,9],[89,18,116,16,"message"],[89,25,116,23],[89,30,116,28],[89,38,116,36],[89,42,116,40,"message"],[89,49,116,47],[89,50,116,48,"includes"],[89,58,116,56],[89,59,116,57,"LOGBOX_ERROR_MESSAGE"],[89,79,116,77],[89,80,116,78],[90,2,117,0],[91,2,119,7],[91,11,119,16,"isMessageIgnored"],[91,27,119,32,"isMessageIgnored"],[91,28,119,33,"message"],[91,35,119,48],[91,37,119,59],[92,4,120,2],[92,9,120,7],[92,13,120,13,"pattern"],[92,20,120,20],[92,24,120,24,"ignorePatterns"],[92,38,120,38],[92,40,120,40],[93,6,121,4],[93,10,122,7,"pattern"],[93,17,122,14],[93,29,122,26,"RegExp"],[93,35,122,32],[93,39,122,36,"pattern"],[93,46,122,43],[93,47,122,44,"test"],[93,51,122,48],[93,52,122,49,"message"],[93,59,122,56],[93,60,122,57],[93,64,123,7],[93,71,123,14,"pattern"],[93,78,123,21],[93,83,123,26],[93,91,123,34],[93,95,123,38,"message"],[93,102,123,45],[93,103,123,46,"includes"],[93,111,123,54],[93,112,123,55,"pattern"],[93,119,123,62],[93,120,123,64],[93,122,124,6],[94,8,125,6],[94,15,125,13],[94,19,125,17],[95,6,126,4],[96,4,127,2],[97,4,128,2],[97,11,128,9],[97,16,128,14],[98,2,129,0],[99,2,131,0],[99,11,131,9,"handleUpdate"],[99,23,131,21,"handleUpdate"],[99,24,131,21],[99,26,131,30],[100,4,132,2],[100,8,132,6,"updateTimeout"],[100,21,132,19],[100,25,132,23],[100,29,132,27],[100,31,132,29],[101,6,133,4,"updateTimeout"],[101,19,133,17],[101,22,133,20,"setImmediate"],[101,34,133,32],[101,35,133,33],[101,47,133,39],[102,8,134,6,"updateTimeout"],[102,21,134,19],[102,24,134,22],[102,28,134,26],[103,8,135,6],[103,12,135,12,"nextState"],[103,21,135,21],[103,24,135,24,"getNextState"],[103,36,135,36],[103,37,135,37],[103,38,135,38],[104,8,136,6,"observers"],[104,17,136,15],[104,18,136,16,"forEach"],[104,25,136,23],[104,26,136,24],[104,36,136,24,"_ref"],[104,40,136,24],[105,10,136,24],[105,14,136,26,"observer"],[105,22,136,34],[105,25,136,34,"_ref"],[105,29,136,34],[105,30,136,26,"observer"],[105,38,136,34],[106,10,136,34],[106,17,136,40,"observer"],[106,25,136,48],[106,26,136,49,"nextState"],[106,35,136,58],[106,36,136,59],[107,8,136,59],[107,10,136,60],[108,6,137,4],[108,7,137,5],[108,8,137,6],[109,4,138,2],[110,2,139,0],[111,2,141,0],[111,11,141,9,"appendNewLog"],[111,23,141,21,"appendNewLog"],[111,24,141,22,"newLog"],[111,30,141,39],[111,32,141,41],[112,4,142,2],[113,4,143,2],[114,4,144,2],[114,8,144,6,"isMessageIgnored"],[114,24,144,22],[114,25,144,23,"newLog"],[114,31,144,29],[114,32,144,30,"message"],[114,39,144,37],[114,40,144,38,"content"],[114,47,144,45],[114,48,144,46],[114,50,144,48],[115,6,145,4],[116,4,146,2],[118,4,148,2],[119,4,149,2],[120,4,150,2],[121,4,151,2],[121,8,151,8,"lastLog"],[121,15,151,15],[121,18,151,18,"Array"],[121,23,151,23],[121,24,151,24,"from"],[121,28,151,28],[121,29,151,29,"logs"],[121,33,151,33],[121,34,151,34],[121,35,151,35,"pop"],[121,38,151,38],[121,39,151,39],[121,40,151,40],[122,4,152,2],[122,8,152,6,"lastLog"],[122,15,152,13],[122,19,152,17,"lastLog"],[122,26,152,24],[122,27,152,25,"category"],[122,35,152,33],[122,40,152,38,"newLog"],[122,46,152,44],[122,47,152,45,"category"],[122,55,152,53],[122,57,152,55],[123,6,153,4,"lastLog"],[123,13,153,11],[123,14,153,12,"incrementCount"],[123,28,153,26],[123,29,153,27],[123,30,153,28],[124,6,154,4,"handleUpdate"],[124,18,154,16],[124,19,154,17],[124,20,154,18],[125,6,155,4],[126,4,156,2],[127,4,158,2],[127,8,158,6,"newLog"],[127,14,158,12],[127,15,158,13,"level"],[127,20,158,18],[127,25,158,23],[127,32,158,30],[127,34,158,32],[128,6,159,4],[129,6,160,4],[130,6,161,4],[131,6,162,4],[131,10,162,10,"OPTIMISTIC_WAIT_TIME"],[131,30,162,30],[131,33,162,33],[131,37,162,37],[132,6,164,4],[132,10,164,8,"addPendingLog"],[132,24,164,34],[132,27,164,37],[132,36,164,8,"addPendingLog"],[132,49,164,34,"addPendingLog"],[132,50,164,34],[132,52,164,43],[133,8,165,6,"logs"],[133,12,165,10],[133,13,165,11,"add"],[133,16,165,14],[133,17,165,15,"newLog"],[133,23,165,21],[133,24,165,22],[134,8,166,6],[134,12,166,10,"_selectedIndex"],[134,26,166,24],[134,29,166,27],[134,30,166,28],[134,32,166,30],[135,10,167,8,"setSelectedLog"],[135,24,167,22],[135,25,167,23,"logs"],[135,29,167,27],[135,30,167,28,"size"],[135,34,167,32],[135,37,167,35],[135,38,167,36],[135,39,167,37],[136,8,168,6],[136,9,168,7],[136,15,168,13],[137,10,169,8,"handleUpdate"],[137,22,169,20],[137,23,169,21],[137,24,169,22],[138,8,170,6],[139,8,171,6,"addPendingLog"],[139,22,171,19],[139,25,171,22],[139,29,171,26],[140,6,172,4],[140,7,172,5],[141,6,174,4],[141,10,174,10,"optimisticTimeout"],[141,27,174,27],[141,30,174,30,"setTimeout"],[141,40,174,40],[141,41,174,41],[141,53,174,47],[142,8,175,6],[142,12,175,10,"addPendingLog"],[142,26,175,23],[142,28,175,25],[143,10,176,8,"addPendingLog"],[143,24,176,21],[143,25,176,22],[143,26,176,23],[144,8,177,6],[145,6,178,4],[145,7,178,5],[145,9,178,7,"OPTIMISTIC_WAIT_TIME"],[145,29,178,27],[145,30,178,28],[146,6,180,4,"newLog"],[146,12,180,10],[146,13,180,11,"symbolicate"],[146,24,180,22],[146,25,180,23],[146,35,180,23,"status"],[146,41,180,29],[146,43,180,33],[147,8,181,6],[147,12,181,10,"addPendingLog"],[147,26,181,23],[147,30,181,27,"status"],[147,36,181,33],[147,41,181,38],[147,50,181,47],[147,52,181,49],[148,10,182,8,"addPendingLog"],[148,24,182,21],[148,25,182,22],[148,26,182,23],[149,10,183,8,"clearTimeout"],[149,22,183,20],[149,23,183,21,"optimisticTimeout"],[149,40,183,38],[149,41,183,39],[150,8,184,6],[150,9,184,7],[150,15,184,13],[150,19,184,17,"status"],[150,25,184,23],[150,30,184,28],[150,39,184,37],[150,41,184,39],[151,10,185,8],[152,10,186,8,"handleUpdate"],[152,22,186,20],[152,23,186,21],[152,24,186,22],[153,8,187,6],[154,6,188,4],[154,7,188,5],[154,8,188,6],[155,4,189,2],[155,5,189,3],[155,11,189,9],[155,15,189,13,"newLog"],[155,21,189,19],[155,22,189,20,"level"],[155,27,189,25],[155,32,189,30],[155,40,189,38],[155,42,189,40],[156,6,190,4,"logs"],[156,10,190,8],[156,11,190,9,"add"],[156,14,190,12],[156,15,190,13,"newLog"],[156,21,190,19],[156,22,190,20],[157,6,191,4,"setSelectedLog"],[157,20,191,18],[157,21,191,19,"logs"],[157,25,191,23],[157,26,191,24,"size"],[157,30,191,28],[157,33,191,31],[157,34,191,32],[157,35,191,33],[158,4,192,2],[158,5,192,3],[158,11,192,9],[159,6,193,4,"logs"],[159,10,193,8],[159,11,193,9,"add"],[159,14,193,12],[159,15,193,13,"newLog"],[159,21,193,19],[159,22,193,20],[160,6,194,4,"handleUpdate"],[160,18,194,16],[160,19,194,17],[160,20,194,18],[161,4,195,2],[162,2,196,0],[163,2,198,7],[163,11,198,16,"addLog"],[163,17,198,22,"addLog"],[163,18,198,23,"log"],[163,21,198,35],[163,23,198,43],[164,4,199,2],[164,8,199,6,"log"],[164,11,199,9],[164,12,199,10,"level"],[164,17,199,15],[164,22,199,20],[164,28,199,26],[164,32,199,30,"global"],[164,38,199,36],[164,39,199,37,"__FUSEBOX_HAS_FULL_CONSOLE_SUPPORT__"],[164,75,199,73],[164,77,199,75],[165,6,200,4],[166,6,201,4,"showFuseboxWarningsMigrationMessageOnce"],[166,45,201,43],[166,46,201,44],[166,47,201,45],[167,6,202,4],[168,4,203,2],[169,4,204,2],[169,8,204,8,"errorForStackTrace"],[169,26,204,26],[169,29,204,29],[169,33,204,33,"Error"],[169,38,204,38],[169,39,204,39],[169,40,204,40],[171,4,206,2],[172,4,207,2],[173,4,208,2,"setImmediate"],[173,16,208,14],[173,17,208,15],[173,29,208,21],[174,6,209,4],[174,10,209,8],[175,8,209,8],[175,12,209,8,"_log$stack"],[175,22,209,8],[176,8,210,6],[176,12,210,12,"stack"],[176,17,210,17],[176,20,210,20],[176,24,210,20,"parseErrorStack"],[176,48,210,35],[176,51,210,35,"_log$stack"],[176,61,210,35],[176,64,210,36,"log"],[176,67,210,39],[176,68,210,40,"stack"],[176,73,210,45],[176,85,210,45,"_log$stack"],[176,95,210,45],[176,98,210,49,"errorForStackTrace"],[176,116,210,67],[176,136,210,49,"errorForStackTrace"],[176,154,210,67],[176,155,210,69,"stack"],[176,160,210,74],[176,161,210,75],[177,8,212,6,"appendNewLog"],[177,20,212,18],[177,21,213,8],[177,25,213,12,"LogBoxLog"],[177,43,213,21],[177,44,213,22],[178,10,214,10,"level"],[178,15,214,15],[178,17,214,17,"log"],[178,20,214,20],[178,21,214,21,"level"],[178,26,214,26],[179,10,215,10,"message"],[179,17,215,17],[179,19,215,19,"log"],[179,22,215,22],[179,23,215,23,"message"],[179,30,215,30],[180,10,216,10,"isComponentError"],[180,26,216,26],[180,28,216,28],[180,33,216,33],[181,10,217,10,"stack"],[181,15,217,15],[181,17,217,10,"stack"],[181,22,217,15],[182,10,218,10,"category"],[182,18,218,18],[182,20,218,20,"log"],[182,23,218,23],[182,24,218,24,"category"],[182,32,218,32],[183,10,219,10,"componentStack"],[183,24,219,24],[183,26,219,26,"log"],[183,29,219,29],[183,30,219,30,"componentStack"],[183,44,219,44],[184,10,220,10,"componentStackType"],[184,28,220,28],[184,30,220,30,"log"],[184,33,220,33],[184,34,220,34,"componentStackType"],[184,52,220,52],[184,56,220,56],[185,8,221,8],[185,9,221,9],[185,10,222,6],[185,11,222,7],[186,6,223,4],[186,7,223,5],[186,8,223,6],[186,15,223,13,"error"],[186,20,223,18],[186,22,223,20],[187,8,224,6,"reportLogBoxError"],[187,25,224,23],[187,26,224,24,"error"],[187,31,224,29],[187,32,224,30],[188,6,225,4],[189,4,226,2],[189,5,226,3],[189,6,226,4],[190,2,227,0],[191,2,229,7],[191,11,229,16,"addException"],[191,23,229,28,"addException"],[191,24,229,29,"error"],[191,29,229,57],[191,31,229,65],[192,4,230,2],[193,4,231,2],[194,4,232,2,"setImmediate"],[194,16,232,14],[194,17,232,15],[194,29,232,21],[195,6,233,4],[195,10,233,8],[196,8,234,6,"appendNewLog"],[196,20,234,18],[196,21,234,19],[196,25,234,23,"LogBoxLog"],[196,43,234,32],[196,44,234,33],[196,48,234,33,"parseLogBoxException"],[196,79,234,33],[196,80,234,33,"parseLogBoxException"],[196,120,234,53],[196,122,234,54,"error"],[196,127,234,59],[196,128,234,60],[196,129,234,61],[196,130,234,62],[197,6,235,4],[197,7,235,5],[197,8,235,6],[197,15,235,13,"loggingError"],[197,27,235,25],[197,29,235,27],[198,8,236,6,"reportLogBoxError"],[198,25,236,23],[198,26,236,24,"loggingError"],[198,38,236,36],[198,39,236,37],[199,6,237,4],[200,4,238,2],[200,5,238,3],[200,6,238,4],[201,2,239,0],[202,2,241,7],[202,11,241,16,"symbolicateLogNow"],[202,28,241,33,"symbolicateLogNow"],[202,29,241,34,"log"],[202,32,241,48],[202,34,241,50],[203,4,242,2,"log"],[203,7,242,5],[203,8,242,6,"symbolicate"],[203,19,242,17],[203,20,242,18],[203,32,242,24],[204,6,243,4,"handleUpdate"],[204,18,243,16],[204,19,243,17],[204,20,243,18],[205,4,244,2],[205,5,244,3],[205,6,244,4],[206,2,245,0],[207,2,247,7],[207,11,247,16,"retrySymbolicateLogNow"],[207,33,247,38,"retrySymbolicateLogNow"],[207,34,247,39,"log"],[207,37,247,53],[207,39,247,55],[208,4,248,2,"log"],[208,7,248,5],[208,8,248,6,"retrySymbolicate"],[208,24,248,22],[208,25,248,23],[208,37,248,29],[209,6,249,4,"handleUpdate"],[209,18,249,16],[209,19,249,17],[209,20,249,18],[210,4,250,2],[210,5,250,3],[210,6,250,4],[211,2,251,0],[212,2,253,7],[212,11,253,16,"symbolicateLogLazy"],[212,29,253,34,"symbolicateLogLazy"],[212,30,253,35,"log"],[212,33,253,49],[212,35,253,51],[213,4,254,2,"log"],[213,7,254,5],[213,8,254,6,"symbolicate"],[213,19,254,17],[213,20,254,18],[213,21,254,19],[214,2,255,0],[215,2,257,7],[215,11,257,16,"clear"],[215,16,257,21,"clear"],[215,17,257,21],[215,19,257,30],[216,4,258,2],[216,8,258,6,"logs"],[216,12,258,10],[216,13,258,11,"size"],[216,17,258,15],[216,20,258,18],[216,21,258,19],[216,23,258,21],[217,6,259,4,"logs"],[217,10,259,8],[217,13,259,11],[217,17,259,15,"Set"],[217,20,259,18],[217,21,259,19],[217,22,259,20],[218,6,260,4,"setSelectedLog"],[218,20,260,18],[218,21,260,19],[218,22,260,20],[218,23,260,21],[218,24,260,22],[219,4,261,2],[220,2,262,0],[221,2,264,7],[221,11,264,16,"setSelectedLog"],[221,25,264,30,"setSelectedLog"],[221,26,264,31,"proposedNewIndex"],[221,42,264,55],[221,44,264,63],[222,4,265,2],[222,8,265,8,"oldIndex"],[222,16,265,16],[222,19,265,19,"_selectedIndex"],[222,33,265,33],[223,4,266,2],[223,8,266,6,"newIndex"],[223,16,266,14],[223,19,266,17,"proposedNewIndex"],[223,35,266,33],[224,4,268,2],[224,8,268,8,"logArray"],[224,16,268,16],[224,19,268,19,"Array"],[224,24,268,24],[224,25,268,25,"from"],[224,29,268,29],[224,30,268,30,"logs"],[224,34,268,34],[224,35,268,35],[225,4,269,2],[225,8,269,6,"index"],[225,13,269,11],[225,16,269,14,"logArray"],[225,24,269,22],[225,25,269,23,"length"],[225,31,269,29],[225,34,269,32],[225,35,269,33],[226,4,270,2],[226,11,270,9,"index"],[226,16,270,14],[226,20,270,18],[226,21,270,19],[226,23,270,21],[227,6,271,4],[228,6,272,4],[228,10,272,8,"logArray"],[228,18,272,16],[228,19,272,17,"index"],[228,24,272,22],[228,25,272,23],[228,26,272,24,"level"],[228,31,272,29],[228,36,272,34],[228,44,272,42],[228,46,272,44],[229,8,273,6,"newIndex"],[229,16,273,14],[229,19,273,17,"index"],[229,24,273,22],[230,8,274,6],[231,6,275,4],[232,6,276,4,"index"],[232,11,276,9],[232,15,276,13],[232,16,276,14],[233,4,277,2],[234,4,278,2,"_selectedIndex"],[234,18,278,16],[234,21,278,19,"newIndex"],[234,29,278,27],[235,4,279,2,"handleUpdate"],[235,16,279,14],[235,17,279,15],[235,18,279,16],[236,4,280,2],[236,8,280,6,"NativeLogBox"],[236,29,280,18],[236,31,280,20],[237,6,281,4,"setTimeout"],[237,16,281,14],[237,17,281,15],[237,29,281,21],[238,8,282,6],[238,12,282,10,"oldIndex"],[238,20,282,18],[238,23,282,21],[238,24,282,22],[238,28,282,26,"newIndex"],[238,36,282,34],[238,40,282,38],[238,41,282,39],[238,43,282,41],[239,10,283,8,"NativeLogBox"],[239,31,283,20],[239,32,283,21,"show"],[239,36,283,25],[239,37,283,26],[239,38,283,27],[240,8,284,6],[240,9,284,7],[240,15,284,13],[240,19,284,17,"oldIndex"],[240,27,284,25],[240,31,284,29],[240,32,284,30],[240,36,284,34,"newIndex"],[240,44,284,42],[240,47,284,45],[240,48,284,46],[240,50,284,48],[241,10,285,8,"NativeLogBox"],[241,31,285,20],[241,32,285,21,"hide"],[241,36,285,25],[241,37,285,26],[241,38,285,27],[242,8,286,6],[243,6,287,4],[243,7,287,5],[243,9,287,7],[243,10,287,8],[243,11,287,9],[244,4,288,2],[245,2,289,0],[246,2,291,7],[246,11,291,16,"clearWarnings"],[246,24,291,29,"clearWarnings"],[246,25,291,29],[246,27,291,38],[247,4,292,2],[247,8,292,8,"newLogs"],[247,15,292,15],[247,18,292,18,"Array"],[247,23,292,23],[247,24,292,24,"from"],[247,28,292,28],[247,29,292,29,"logs"],[247,33,292,33],[247,34,292,34],[247,35,292,35,"filter"],[247,41,292,41],[247,42,292,42],[247,52,292,42,"log"],[247,55,292,45],[248,6,292,45],[248,13,292,49,"log"],[248,16,292,52],[248,17,292,53,"level"],[248,22,292,58],[248,27,292,63],[248,33,292,69],[249,4,292,69],[249,6,292,70],[250,4,293,2],[250,8,293,6,"newLogs"],[250,15,293,13],[250,16,293,14,"length"],[250,22,293,20],[250,27,293,25,"logs"],[250,31,293,29],[250,32,293,30,"size"],[250,36,293,34],[250,38,293,36],[251,6,294,4,"logs"],[251,10,294,8],[251,13,294,11],[251,17,294,15,"Set"],[251,20,294,18],[251,21,294,19,"newLogs"],[251,28,294,26],[251,29,294,27],[252,6,295,4,"setSelectedLog"],[252,20,295,18],[252,21,295,19],[252,22,295,20],[252,23,295,21],[252,24,295,22],[253,6,296,4,"handleUpdate"],[253,18,296,16],[253,19,296,17],[253,20,296,18],[254,4,297,2],[255,2,298,0],[256,2,300,7],[256,11,300,16,"clearErrors"],[256,22,300,27,"clearErrors"],[256,23,300,27],[256,25,300,36],[257,4,301,2],[257,8,301,8,"newLogs"],[257,15,301,15],[257,18,301,18,"Array"],[257,23,301,23],[257,24,301,24,"from"],[257,28,301,28],[257,29,301,29,"logs"],[257,33,301,33],[257,34,301,34],[257,35,301,35,"filter"],[257,41,301,41],[257,42,302,4],[257,52,302,4,"log"],[257,55,302,7],[258,6,302,7],[258,13,302,11,"log"],[258,16,302,14],[258,17,302,15,"level"],[258,22,302,20],[258,27,302,25],[258,34,302,32],[258,38,302,36,"log"],[258,41,302,39],[258,42,302,40,"level"],[258,47,302,45],[258,52,302,50],[258,59,302,57],[259,4,302,57],[259,5,303,2],[259,6,303,3],[260,4,304,2],[260,8,304,6,"newLogs"],[260,15,304,13],[260,16,304,14,"length"],[260,22,304,20],[260,27,304,25,"logs"],[260,31,304,29],[260,32,304,30,"size"],[260,36,304,34],[260,38,304,36],[261,6,305,4,"logs"],[261,10,305,8],[261,13,305,11],[261,17,305,15,"Set"],[261,20,305,18],[261,21,305,19,"newLogs"],[261,28,305,26],[261,29,305,27],[262,6,306,4,"setSelectedLog"],[262,20,306,18],[262,21,306,19],[262,22,306,20],[262,23,306,21],[262,24,306,22],[263,4,307,2],[264,2,308,0],[265,2,310,7],[265,11,310,16,"dismiss"],[265,18,310,23,"dismiss"],[265,19,310,24,"log"],[265,22,310,38],[265,24,310,46],[266,4,311,2],[266,8,311,6,"logs"],[266,12,311,10],[266,13,311,11,"has"],[266,16,311,14],[266,17,311,15,"log"],[266,20,311,18],[266,21,311,19],[266,23,311,21],[267,6,312,4,"logs"],[267,10,312,8],[267,11,312,9,"delete"],[267,17,312,15],[267,18,312,16,"log"],[267,21,312,19],[267,22,312,20],[268,6,313,4,"handleUpdate"],[268,18,313,16],[268,19,313,17],[268,20,313,18],[269,4,314,2],[270,2,315,0],[271,2,317,7],[271,11,317,16,"setWarningFilter"],[271,27,317,32,"setWarningFilter"],[271,28,317,33,"filter"],[271,34,317,54],[271,36,317,62],[272,4,318,2,"warningFilter"],[272,17,318,15],[272,20,318,18,"filter"],[272,26,318,24],[273,2,319,0],[274,2,321,7],[274,11,321,16,"setAppInfo"],[274,21,321,26,"setAppInfo"],[274,22,321,27,"info"],[274,26,321,46],[274,28,321,54],[275,4,322,2,"appInfo"],[275,11,322,9],[275,14,322,12,"info"],[275,18,322,16],[276,2,323,0],[277,2,325,7],[277,11,325,16,"getAppInfo"],[277,21,325,26,"getAppInfo"],[277,22,325,26],[277,24,325,39],[278,4,326,2],[278,11,326,9,"appInfo"],[278,18,326,16],[278,22,326,20],[278,26,326,24],[278,29,326,27,"appInfo"],[278,36,326,34],[278,37,326,35],[278,38,326,36],[278,41,326,39],[278,45,326,43],[279,2,327,0],[280,2,329,7],[280,11,329,16,"checkWarningFilter"],[280,29,329,34,"checkWarningFilter"],[280,30,329,35,"format"],[280,36,329,49],[280,38,329,64],[281,4,330,2],[281,11,330,9,"warningFilter"],[281,24,330,22],[281,25,330,23,"format"],[281,31,330,29],[281,32,330,30],[282,2,331,0],[283,2,333,7],[283,11,333,16,"getIgnorePatterns"],[283,28,333,33,"getIgnorePatterns"],[283,29,333,33],[283,31,333,67],[284,4,334,2],[284,11,334,9,"Array"],[284,16,334,14],[284,17,334,15,"from"],[284,21,334,19],[284,22,334,20,"ignorePatterns"],[284,36,334,34],[284,37,334,35],[285,2,335,0],[286,2,337,7],[286,11,337,16,"addIgnorePatterns"],[286,28,337,33,"addIgnorePatterns"],[286,29,338,2,"patterns"],[286,37,338,41],[286,39,339,8],[287,4,340,2],[287,8,340,8,"existingSize"],[287,20,340,20],[287,23,340,23,"ignorePatterns"],[287,37,340,37],[287,38,340,38,"size"],[287,42,340,42],[288,4,341,2],[289,4,342,2],[290,4,343,2,"patterns"],[290,12,343,10],[290,13,343,11,"forEach"],[290,20,343,18],[290,21,343,19],[290,31,343,20,"pattern"],[290,38,343,42],[290,40,343,47],[291,6,344,4],[291,10,344,8,"pattern"],[291,17,344,15],[291,29,344,27,"RegExp"],[291,35,344,33],[291,37,344,35],[292,8,345,6],[292,13,345,11],[292,17,345,17,"existingPattern"],[292,32,345,32],[292,36,345,36,"ignorePatterns"],[292,50,345,50],[292,52,345,52],[293,10,346,8],[293,14,347,10,"existingPattern"],[293,29,347,25],[293,41,347,37,"RegExp"],[293,47,347,43],[293,51,348,10,"existingPattern"],[293,66,348,25],[293,67,348,26,"toString"],[293,75,348,34],[293,76,348,35],[293,77,348,36],[293,82,348,41,"pattern"],[293,89,348,48],[293,90,348,49,"toString"],[293,98,348,57],[293,99,348,58],[293,100,348,59],[293,102,349,10],[294,12,350,10],[295,10,351,8],[296,8,352,6],[297,8,353,6,"ignorePatterns"],[297,22,353,20],[297,23,353,21,"add"],[297,26,353,24],[297,27,353,25,"pattern"],[297,34,353,32],[297,35,353,33],[298,6,354,4],[299,6,355,4,"ignorePatterns"],[299,20,355,18],[299,21,355,19,"add"],[299,24,355,22],[299,25,355,23,"pattern"],[299,32,355,30],[299,33,355,31],[300,4,356,2],[300,5,356,3],[300,6,356,4],[301,4,357,2],[301,8,357,6,"ignorePatterns"],[301,22,357,20],[301,23,357,21,"size"],[301,27,357,25],[301,32,357,30,"existingSize"],[301,44,357,42],[301,46,357,44],[302,6,358,4],[303,4,359,2],[304,4,360,2],[305,4,361,2],[306,4,362,2],[307,4,363,2],[308,4,364,2,"logs"],[308,8,364,6],[308,11,364,9],[308,15,364,13,"Set"],[308,18,364,16],[308,19,365,4,"Array"],[308,24,365,9],[308,25,365,10,"from"],[308,29,365,14],[308,30,365,15,"logs"],[308,34,365,19],[308,35,365,20],[308,36,365,21,"filter"],[308,42,365,27],[308,43,365,28],[308,53,365,28,"log"],[308,56,365,31],[309,6,365,31],[309,13,365,35],[309,14,365,36,"isMessageIgnored"],[309,30,365,52],[309,31,365,53,"log"],[309,34,365,56],[309,35,365,57,"message"],[309,42,365,64],[309,43,365,65,"content"],[309,50,365,72],[309,51,365,73],[310,4,365,73],[310,6,366,2],[310,7,366,3],[311,4,367,2,"handleUpdate"],[311,16,367,14],[311,17,367,15],[311,18,367,16],[312,2,368,0],[313,2,370,7],[313,11,370,16,"setDisabled"],[313,22,370,27,"setDisabled"],[313,23,370,28,"value"],[313,28,370,42],[313,30,370,50],[314,4,371,2],[314,8,371,6,"value"],[314,13,371,11],[314,18,371,16,"_isDisabled"],[314,29,371,27],[314,31,371,29],[315,6,372,4],[316,4,373,2],[317,4,374,2,"_isDisabled"],[317,15,374,13],[317,18,374,16,"value"],[317,23,374,21],[318,4,375,2,"handleUpdate"],[318,16,375,14],[318,17,375,15],[318,18,375,16],[319,2,376,0],[320,2,378,7],[320,11,378,16,"isDisabled"],[320,21,378,26,"isDisabled"],[320,22,378,26],[320,24,378,38],[321,4,379,2],[321,11,379,9,"_isDisabled"],[321,22,379,20],[322,2,380,0],[323,2,382,7],[323,11,382,16,"observe"],[323,18,382,23,"observe"],[323,19,382,24,"observer"],[323,27,382,42],[323,29,382,58],[324,4,383,2],[324,8,383,8,"subscription"],[324,20,383,20],[324,23,383,23],[325,6,383,24,"observer"],[325,14,383,32],[325,16,383,24,"observer"],[326,4,383,32],[326,5,383,33],[327,4,384,2,"observers"],[327,13,384,11],[327,14,384,12,"add"],[327,17,384,15],[327,18,384,16,"subscription"],[327,30,384,28],[327,31,384,29],[328,4,386,2,"observer"],[328,12,386,10],[328,13,386,11,"getNextState"],[328,25,386,23],[328,26,386,24],[328,27,386,25],[328,28,386,26],[329,4,388,2],[329,11,388,9],[330,6,389,4,"unsubscribe"],[330,17,389,15],[330,28,389,4,"unsubscribe"],[330,39,389,15,"unsubscribe"],[330,40,389,15],[330,42,389,24],[331,8,390,6,"observers"],[331,17,390,15],[331,18,390,16,"delete"],[331,24,390,22],[331,25,390,23,"subscription"],[331,37,390,35],[331,38,390,36],[332,6,391,4],[333,4,392,2],[333,5,392,3],[334,2,393,0],[335,2,411,7],[335,11,411,16,"withSubscription"],[335,27,411,32,"withSubscription"],[335,28,412,2,"WrappedComponent"],[335,44,412,39],[335,46,413,33],[336,4,413,33],[336,8,414,8,"LogBoxStateSubscription"],[336,31,414,31],[336,57,414,31,"_React$Component"],[336,73,414,31],[337,6,414,31],[337,15,414,31,"LogBoxStateSubscription"],[337,39,414,31],[338,8,414,31],[338,12,414,31,"_this"],[338,17,414,31],[339,8,414,31],[339,12,414,31,"_classCallCheck2"],[339,28,414,31],[339,29,414,31,"default"],[339,36,414,31],[339,44,414,31,"LogBoxStateSubscription"],[339,67,414,31],[340,8,414,31],[340,17,414,31,"_len"],[340,21,414,31],[340,24,414,31,"arguments"],[340,33,414,31],[340,34,414,31,"length"],[340,40,414,31],[340,42,414,31,"args"],[340,46,414,31],[340,53,414,31,"Array"],[340,58,414,31],[340,59,414,31,"_len"],[340,63,414,31],[340,66,414,31,"_key"],[340,70,414,31],[340,76,414,31,"_key"],[340,80,414,31],[340,83,414,31,"_len"],[340,87,414,31],[340,89,414,31,"_key"],[340,93,414,31],[341,10,414,31,"args"],[341,14,414,31],[341,15,414,31,"_key"],[341,19,414,31],[341,23,414,31,"arguments"],[341,32,414,31],[341,33,414,31,"_key"],[341,37,414,31],[342,8,414,31],[343,8,414,31,"_this"],[343,13,414,31],[343,16,414,31,"_callSuper"],[343,26,414,31],[343,33,414,31,"LogBoxStateSubscription"],[343,56,414,31],[343,61,414,31,"concat"],[343,67,414,31],[343,68,414,31,"args"],[343,72,414,31],[344,8,414,31,"_this"],[344,13,414,31],[344,14,427,4,"state"],[344,19,427,9],[344,22,427,19],[345,10,428,6,"logs"],[345,14,428,10],[345,16,428,12],[345,20,428,16,"Set"],[345,23,428,19],[345,24,428,20],[345,25,428,21],[346,10,429,6,"isDisabled"],[346,20,429,16],[346,22,429,18],[346,27,429,23],[347,10,430,6,"hasError"],[347,18,430,14],[347,20,430,16],[347,25,430,21],[348,10,431,6,"selectedLogIndex"],[348,26,431,22],[348,28,431,24],[348,29,431,25],[349,8,432,4],[349,9,432,5],[350,8,432,5],[350,15,432,5,"_this"],[350,20,432,5],[351,6,432,5],[352,6,432,5],[352,10,432,5,"_inherits2"],[352,20,432,5],[352,21,432,5,"default"],[352,28,432,5],[352,30,432,5,"LogBoxStateSubscription"],[352,53,432,5],[352,55,432,5,"_React$Component"],[352,71,432,5],[353,6,432,5],[353,17,432,5,"_createClass2"],[353,30,432,5],[353,31,432,5,"default"],[353,38,432,5],[353,40,432,5,"LogBoxStateSubscription"],[353,63,432,5],[354,8,432,5,"key"],[354,11,432,5],[355,8,432,5,"value"],[355,13,432,5],[355,15,419,4],[355,24,419,4,"componentDidCatch"],[355,41,419,21,"componentDidCatch"],[355,42,419,22,"err"],[355,45,419,32],[355,47,419,34,"errorInfo"],[355,56,419,74],[355,58,419,76],[356,10,420,6],[357,0,421,0],[358,10,422,6,"reportLogBoxError"],[358,27,422,23],[358,28,422,24,"err"],[358,31,422,27],[358,33,422,29,"errorInfo"],[358,42,422,38],[358,43,422,39,"componentStack"],[358,57,422,53],[358,58,422,54],[359,8,423,4],[360,6,423,5],[361,8,423,5,"key"],[361,11,423,5],[362,8,423,5,"value"],[362,13,423,5],[362,15,434,4],[362,24,434,4,"render"],[362,30,434,10,"render"],[362,31,434,10],[362,33,434,25],[363,10,435,6],[363,14,435,10],[363,18,435,14],[363,19,435,15,"state"],[363,24,435,20],[363,25,435,21,"hasError"],[363,33,435,29],[363,35,435,31],[364,12,436,8],[365,12,437,8],[366,12,438,8],[366,19,438,15],[366,23,438,19],[367,10,439,6],[368,10,441,6],[368,30,442,8],[368,34,442,8,"_jsxRuntime"],[368,45,442,8],[368,46,442,8,"jsx"],[368,49,442,8],[368,51,442,9,"WrappedComponent"],[368,67,442,25],[369,12,443,10,"logs"],[369,16,443,14],[369,18,443,16,"Array"],[369,23,443,21],[369,24,443,22,"from"],[369,28,443,26],[369,29,443,27],[369,33,443,31],[369,34,443,32,"state"],[369,39,443,37],[369,40,443,38,"logs"],[369,44,443,42],[369,45,443,44],[370,12,444,10,"isDisabled"],[370,22,444,20],[370,24,444,22],[370,28,444,26],[370,29,444,27,"state"],[370,34,444,32],[370,35,444,33,"isDisabled"],[370,45,444,44],[371,12,445,10,"selectedLogIndex"],[371,28,445,26],[371,30,445,28],[371,34,445,32],[371,35,445,33,"state"],[371,40,445,38],[371,41,445,39,"selectedLogIndex"],[372,10,445,56],[372,11,446,9],[372,12,446,10],[373,8,448,4],[374,6,448,5],[375,8,448,5,"key"],[375,11,448,5],[376,8,448,5,"value"],[376,13,448,5],[376,15,450,4],[376,24,450,4,"componentDidMount"],[376,41,450,21,"componentDidMount"],[376,42,450,21],[376,44,450,30],[377,10,450,30],[377,14,450,30,"_this2"],[377,20,450,30],[378,10,451,6],[378,14,451,10],[378,15,451,11,"_subscription"],[378,28,451,24],[378,31,451,27,"observe"],[378,38,451,34],[378,39,451,35],[378,49,451,35,"data"],[378,53,451,39],[378,55,451,43],[379,12,452,8,"_this2"],[379,18,452,12],[379,19,452,13,"setState"],[379,27,452,21],[379,28,452,22,"data"],[379,32,452,26],[379,33,452,27],[380,10,453,6],[380,11,453,7],[380,12,453,8],[381,8,454,4],[382,6,454,5],[383,8,454,5,"key"],[383,11,454,5],[384,8,454,5,"value"],[384,13,454,5],[384,15,456,4],[384,24,456,4,"componentWillUnmount"],[384,44,456,24,"componentWillUnmount"],[384,45,456,24],[384,47,456,33],[385,10,457,6],[385,14,457,10],[385,18,457,14],[385,19,457,15,"_subscription"],[385,32,457,28],[385,36,457,32],[385,40,457,36],[385,42,457,38],[386,12,458,8],[386,16,458,12],[386,17,458,13,"_subscription"],[386,30,458,26],[386,31,458,27,"unsubscribe"],[386,42,458,38],[386,43,458,39],[386,44,458,40],[387,10,459,6],[388,8,460,4],[389,6,460,5],[390,8,460,5,"key"],[390,11,460,5],[391,8,460,5,"value"],[391,13,460,5],[391,15,415,4],[391,24,415,11,"getDerivedStateFromError"],[391,48,415,35,"getDerivedStateFromError"],[391,49,415,35],[391,51,415,59],[392,10,416,6],[392,17,416,13],[393,12,416,14,"hasError"],[393,20,416,22],[393,22,416,24],[394,10,416,28],[394,11,416,29],[395,8,417,4],[396,6,417,5],[397,4,417,5],[397,6,414,40,"React"],[397,11,414,45],[397,12,414,46,"Component"],[397,21,414,55],[398,4,463,2],[398,11,463,9,"LogBoxStateSubscription"],[398,34,463,32],[399,2,464,0],[400,2,466,0],[400,11,466,9,"showFuseboxWarningsMigrationMessageOnce"],[400,50,466,48,"showFuseboxWarningsMigrationMessageOnce"],[400,51,466,48],[400,53,466,51],[401,4,467,2],[401,8,467,6,"hasShownFuseboxWarningsMigrationMessage"],[401,47,467,45],[401,49,467,47],[402,6,468,4],[403,4,469,2],[404,4,470,2,"hasShownFuseboxWarningsMigrationMessage"],[404,43,470,41],[404,46,470,44],[404,50,470,48],[405,4,471,2,"appendNewLog"],[405,16,471,14],[405,17,472,4],[405,21,472,8,"LogBoxLog"],[405,39,472,17],[405,40,472,18],[406,6,473,6,"level"],[406,11,473,11],[406,13,473,13],[406,19,473,19],[407,6,474,6,"message"],[407,13,474,13],[407,15,474,15],[408,8,475,8,"content"],[408,15,475,15],[408,17,475,17],[408,50,475,50],[409,8,476,8,"substitutions"],[409,21,476,21],[409,23,476,23],[410,6,477,6],[410,7,477,7],[411,6,478,6,"isComponentError"],[411,22,478,22],[411,24,478,24],[411,29,478,29],[412,6,479,6,"stack"],[412,11,479,11],[412,13,479,13],[412,15,479,15],[413,6,480,6,"category"],[413,14,480,14],[413,16,480,16],[413,44,480,44],[414,6,481,6,"componentStack"],[414,20,481,20],[414,22,481,22],[414,24,481,24],[415,6,482,6,"onNotificationPress"],[415,25,482,25],[415,27,482,27],[415,36,482,6,"onNotificationPress"],[415,55,482,25,"onNotificationPress"],[415,56,482,25],[415,58,482,33],[416,8,483,8],[416,12,483,12,"NativeDevSettings"],[416,38,483,29],[416,39,483,30,"openDebugger"],[416,51,483,42],[416,53,483,44],[417,10,484,10,"NativeDevSettings"],[417,36,484,27],[417,37,484,28,"openDebugger"],[417,49,484,40],[417,50,484,41],[417,51,484,42],[418,8,485,8],[419,8,486,8,"clearWarnings"],[419,21,486,21],[419,22,486,22],[419,23,486,23],[420,6,487,6],[421,4,488,4],[421,5,488,5],[421,6,489,2],[421,7,489,3],[422,2,490,0],[423,0,490,1],[423,3]],"functionMap":{"names":["<global>","warningFilter","getNextState","reportLogBoxError","isLogBoxErrorMessage","isMessageIgnored","handleUpdate","setImmediate$argument_0","observers.forEach$argument_0","appendNewLog","addPendingLog","setTimeout$argument_0","newLog.symbolicate$argument_0","addLog","addException","symbolicateLogNow","log.symbolicate$argument_0","retrySymbolicateLogNow","log.retrySymbolicate$argument_0","symbolicateLogLazy","clear","setSelectedLog","clearWarnings","Array.from.filter$argument_0","clearErrors","dismiss","setWarningFilter","setAppInfo","getAppInfo","checkWarningFilter","getIgnorePatterns","addIgnorePatterns","patterns.forEach$argument_0","setDisabled","isDisabled","observe","unsubscribe","withSubscription","LogBoxStateSubscription","LogBoxStateSubscription.getDerivedStateFromError","LogBoxStateSubscription#componentDidCatch","LogBoxStateSubscription#render","LogBoxStateSubscription#componentDidMount","observe$argument_0","LogBoxStateSubscription#componentWillUnmount","showFuseboxWarningsMigrationMessageOnce","LogBoxLog$argument_0.onNotificationPress"],"mappings":"AAA;mCC8E;CDU;AEK;CFM;OGE;CHW;OIE;CJE;OKE;CLU;AME;iCCE;wBCG,mCD;KDC;CNE;ASE;qCCuB;KDQ;yCEE;KFI;uBGE;KHQ;CTQ;OaE;eNU;GMkB;CbC;OcE;ePG;GOM;CdC;OeE;kBCC;GDE;CfC;OiBE;uBCC;GDE;CjBC;OmBE;CnBE;OoBE;CpBK;OqBE;eViB;KUM;CrBE;OsBE;0CCC,2BD;CtBM;OwBE;IDE,qDC;CxBM;OyBE;CzBK;O0BE;C1BE;O2BE;C3BE;O4BE;C5BE;O6BE;C7BE;O8BE;C9BE;O+BE;mBCM;GDa;4BRS,6CQ;C/BG;OiCE;CjCM;OkCE;ClCE;OmCE;ICO;KDE;CnCE;OqCkB;ECG;ICC;KDE;IEE;KFI;IGW;KHc;IIE;mCCC;ODE;KJC;IME;KNI;GDC;CrCG;A6CE;2BCgB;ODK;C7CG"}},"type":"js/module"}]}