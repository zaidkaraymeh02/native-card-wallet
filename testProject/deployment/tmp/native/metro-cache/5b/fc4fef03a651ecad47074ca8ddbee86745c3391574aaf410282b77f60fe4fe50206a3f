{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":33,"column":0,"index":908}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":33,"column":0,"index":908}}],"key":"ohGilxjVqjyE1GooDVDt9OYg9x0="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":33,"column":0,"index":908}}],"key":"V6GYoXnblvuuGHJNMy7MHyaunsU="}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":33,"column":0,"index":908}}],"key":"rcd0dMwf8BS2g+8U1wyhIOxtYEo="}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":33,"column":0,"index":908}}],"key":"4pxOr+e+5cSZAdeEKxSt3F7LoKY="}},{"name":"@babel/runtime/helpers/inherits","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":33,"column":0,"index":908}}],"key":"EDnOjopp9yNVawSzfBRsy2dq5dM="}},{"name":"fbjs/lib/invariant","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":43,"index":43}}],"key":"avnjoAx2FQYjx6eZ7ALk+OuZk68="}},{"name":"./AnimatedNode","data":{"asyncType":null,"locs":[{"start":{"line":3,"column":0,"index":91},"end":{"line":3,"column":42,"index":133}}],"key":"3roa5JYtcfxCkpexJXwVNW3mWv0="}},{"name":"../val","data":{"asyncType":null,"locs":[{"start":{"line":4,"column":0,"index":134},"end":{"line":4,"column":29,"index":163}}],"key":"CDlYAz5y1JiXWGTtKqaFUSMXIf0="}},{"name":"../core/AnimatedBlock","data":{"asyncType":null,"locs":[{"start":{"line":2,"column":0,"index":44},"end":{"line":2,"column":46,"index":90}}],"key":"6gyDiq4QU4flc8Or/XN5uYrwPPw="}}],"output":[{"data":{"code":"__d((function(g,r,i,a,m,_e,d){var t=r(d[0]);Object.defineProperty(_e,\"__esModule\",{value:!0}),_e.createAnimatedConcat=function(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];return new v(e.map(r(d[9]).adapt))};var e=t(r(d[1])),n=t(r(d[2])),o=t(r(d[3])),u=t(r(d[4])),c=t(r(d[5])),f=t(r(d[6])),l=t(r(d[7]));function p(){try{var t=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(t){}return(p=function(){return!!t})()}var v=(function(t){function v(t){var n,c,y,s;return(0,e.default)(this,v),(0,f.default)(t.every((function(t){return t instanceof l.default||'number'==typeof t||'string'==typeof t})),`Reanimated: Animated.concat node arguments should be of type AnimatedNode or String or Number. One or more of them are not of that type. Node: ${t}`),c=this,y=v,s=[{type:'concat',input:t},t],y=(0,u.default)(y),(n=(0,o.default)(c,p()?Reflect.construct(y,s||[],(0,u.default)(c).constructor):y.apply(c,s)))._input=t,n}return(0,c.default)(v,t),(0,n.default)(v,[{key:\"__onEvaluate\",value:function(){return this._input.reduce((function(t,e){return t+(0,r(d[8]).val)(e)}),'')}},{key:\"toString\",value:function(){return`AnimatedConcat, id: ${this.__nodeID}`}}])})(l.default)}));","lineCount":1,"map":[[1,118,30,7],[1,129,30,46],[1,137,30,46,"_len"],[1,139,30,46,"arguments"],[1,149,30,46,"length"],[1,156,30,40,"args"],[1,158,30,44],[1,162,30,44,"Array"],[1,168,30,44,"_len"],[1,171,30,44,"_key"],[1,173,30,44],[1,175,30,44,"_key"],[1,177,30,44,"_len"],[1,179,30,44,"_key"],[1,183,30,40,"args"],[1,185,30,44,"_key"],[1,188,30,44,"arguments"],[1,198,30,44,"_key"],[1,201,31,2],[1,208,31,9],[1,212,31,13,"AnimatedConcat"],[1,214,31,28,"args"],[1,216,31,33,"map"],[1,220,31,37,"adapt"],[1,235,32,0],[1,237],[1,306,1,0,"_invariant"],[1,308,1,0,"_interopRequireDefault"],[1,310,1,0,"r"],[1,312,1,0,"d"],[1,314,1,0],[1,319,3,0,"_AnimatedNode2"],[1,321,3,0,"_interopRequireDefault"],[1,323,3,0,"r"],[1,325,3,0,"d"],[1,327,3,0],[1,332,3,42],[1,341,3,42,"_isNativeReflectConstruct"],[1,345,3,42],[1,353,3,42,"t"],[1,356,3,42,"Boolean"],[1,364,3,42,"prototype"],[1,374,3,42,"valueOf"],[1,382,3,42,"call"],[1,387,3,42,"Reflect"],[1,395,3,42,"construct"],[1,405,3,42,"Boolean"],[1,413,3,42],[1,439,3,42,"t"],[1,442,3,42],[1,450,3,42,"_isNativeReflectConstruct"],[1,452,3,42],[1,471,3,42,"t"],[1,472,3,42],[1,481,6,6,"AnimatedConcat"],[1,484,6,20],[1,493,6,20,"_AnimatedNode"],[1,496,7,2],[1,505,7,2,"AnimatedConcat"],[1,507,7,14,"input"],[1,510,7,21],[1,514,7,21,"_this"],[1,516,3,42,"t"],[1,518,3,42,"o"],[1,520,3,42,"e"],[1,522,18,24],[1,529,7,21],[1,531,7,21,"_classCallCheck2"],[1,533,7,21,"default"],[1,542,7,21,"this"],[1,547,7,21,"AnimatedConcat"],[1,551,8,4],[1,553,8,4,"invariant"],[1,564,9,6,"input"],[1,566,9,12,"every"],[1,573,10,8],[1,582,10,8,"el"],[1,585,10,10],[1,592,11,10,"el"],[1,605,11,24,"AnimatedNode"],[1,616,12,24],[1,633,12,17,"el"],[1,636,13,24],[1,653,13,17,"el"],[1,654,13,32],[1,658,15,6],[1,804,15,152,"input"],[1,809,3,42,"t"],[1,811,17,4,"this"],[1,816,3,42,"o"],[1,818,17,4,"AnimatedConcat"],[1,820,3,42,"e"],[1,822,17,4],[1,823,17,10],[1,824,17,12,"type"],[1,829,17,18],[1,838,17,28,"input"],[1,847,17,37,"input"],[1,850,3,42,"o"],[1,853,3,42],[1,855,3,42,"_getPrototypeOf2"],[1,857,3,42,"default"],[1,866,3,42,"o"],[1,870,17,4,"_this"],[1,873,3,42],[1,875,3,42,"_possibleConstructorReturn2"],[1,877,3,42,"default"],[1,886,3,42,"t"],[1,888,3,42,"_isNativeReflectConstruct"],[1,892,3,42,"Reflect"],[1,900,3,42,"construct"],[1,910,3,42,"o"],[1,912,3,42,"e"],[1,915,3,42],[1,921,3,42,"_getPrototypeOf2"],[1,923,3,42,"default"],[1,932,3,42,"t"],[1,935,3,42,"constructor"],[1,948,3,42,"o"],[1,950,3,42,"apply"],[1,956,3,42,"t"],[1,958,3,42,"e"],[1,963,18,9,"_input"],[1,970,18,18,"input"],[1,972,18,24,"_this"],[1,973,19,2],[1,974,19,3],[1,983,19,3,"_inherits2"],[1,985,19,3,"default"],[1,994,19,3,"AnimatedConcat"],[1,996,19,3,"_AnimatedNode"],[1,1000,19,3],[1,1002,19,3,"_createClass2"],[1,1004,19,3,"default"],[1,1013,19,3,"AnimatedConcat"],[1,1015,19,3],[1,1017,19,3,"key"],[1,1021,19,3],[1,1036,19,3,"value"],[1,1042,21,2],[1,1053,22,4],[1,1060,22,11,"this"],[1,1065,22,16,"_input"],[1,1072,22,23,"reduce"],[1,1080,22,30],[1,1089,22,31,"prev"],[1,1091,22,37,"current"],[1,1094,22,44],[1,1101,22,49,"prev"],[1,1104,22,56],[1,1106,22,56,"val"],[1,1119,22,60,"current"],[1,1121,22,68],[1,1124,22,70],[1,1127,23,2],[1,1130,23,3],[1,1131,23,3,"key"],[1,1135,23,3],[1,1146,23,3,"value"],[1,1152,25,2],[1,1163,26,4],[1,1169,26,11],[1,1192,26,34,"this"],[1,1197,26,39,"__nodeID"],[1,1207,27,2],[1,1211,27,3],[1,1213,6,20],[1,1214,6,29,"AnimatedNode"],[1,1224,32,1],[1,1228]],"functionMap":{"names":["<global>","AnimatedConcat","constructor","input.every$argument_0","__onEvaluate","_input.reduce$argument_0","toString","createAnimatedConcat"],"mappings":"AAA;ACK;ECC;QCG;gCDG;GDM;EGE;8BCC,sCD;GHC;EKE;GLE;CDC;OOE;CPE"}},"type":"js/module"}]}