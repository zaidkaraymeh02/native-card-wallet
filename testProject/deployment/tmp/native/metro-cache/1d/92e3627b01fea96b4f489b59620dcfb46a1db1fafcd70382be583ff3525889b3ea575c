{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":74,"column":0,"index":1741}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":74,"column":0,"index":1741}}],"key":"ohGilxjVqjyE1GooDVDt9OYg9x0="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":74,"column":0,"index":1741}}],"key":"V6GYoXnblvuuGHJNMy7MHyaunsU="}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":74,"column":0,"index":1741}}],"key":"rcd0dMwf8BS2g+8U1wyhIOxtYEo="}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":74,"column":0,"index":1741}}],"key":"4pxOr+e+5cSZAdeEKxSt3F7LoKY="}},{"name":"@babel/runtime/helpers/inherits","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":74,"column":0,"index":1741}}],"key":"EDnOjopp9yNVawSzfBRsy2dq5dM="}},{"name":"./AnimatedNode","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":42,"index":42}}],"key":"3roa5JYtcfxCkpexJXwVNW3mWv0="}},{"name":"fbjs/lib/areEqual","data":{"asyncType":null,"locs":[{"start":{"line":3,"column":0,"index":44},"end":{"line":3,"column":42,"index":86}}],"key":"jVhiQhShIH3Y2FMXQ5EY6rGo8/E="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.createOrReuseTransformNode = createOrReuseTransformNode;\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/getPrototypeOf\"));\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/inherits\"));\n  var _AnimatedNode2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"./AnimatedNode\"));\n  var _areEqual = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"fbjs/lib/areEqual\"));\n  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }\n  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\n  function sanitizeTransform(inputTransform) {\n    var outputTransform = [];\n    inputTransform.forEach(function (transform) {\n      for (var key in transform) {\n        var value = transform[key];\n        if (value instanceof _AnimatedNode2.default) {\n          outputTransform.push({\n            property: key,\n            nodeID: value.__nodeID\n          });\n        } else {\n          outputTransform.push({\n            property: key,\n            value: value\n          });\n        }\n      }\n    });\n    return outputTransform;\n  }\n  function extractAnimatedParentNodes(transform) {\n    var parents = [];\n    transform.forEach(function (transform) {\n      for (var key in transform) {\n        var value = transform[key];\n        if (value instanceof _AnimatedNode2.default) {\n          parents.push(value);\n        }\n      }\n    });\n    return parents;\n  }\n  function createOrReuseTransformNode(transform, oldNode) {\n    var config = sanitizeTransform(transform);\n    if (oldNode && (0, _areEqual.default)(config, oldNode._config)) {\n      return oldNode;\n    }\n    return new AnimatedTransform(transform, config);\n  }\n  var AnimatedTransform = /*#__PURE__*/function (_AnimatedNode) {\n    function AnimatedTransform(transform, config) {\n      var _this;\n      (0, _classCallCheck2.default)(this, AnimatedTransform);\n      _this = _callSuper(this, AnimatedTransform, [{\n        type: 'transform',\n        transform: config\n      }, extractAnimatedParentNodes(transform)]);\n      _this._config = config;\n      _this._transform = transform;\n      return _this;\n    }\n    (0, _inherits2.default)(AnimatedTransform, _AnimatedNode);\n    return (0, _createClass2.default)(AnimatedTransform, [{\n      key: \"toString\",\n      value: function toString() {\n        return `AnimatedTransform, id: ${this.__nodeID}`;\n      }\n    }, {\n      key: \"__onEvaluate\",\n      value: function __onEvaluate() {\n        return this._transform.map(function (transform) {\n          var result = {};\n          for (var key in transform) {\n            var value = transform[key];\n            if (value instanceof _AnimatedNode2.default) {\n              result[key] = value.__getValue();\n            }\n          }\n          return result;\n        });\n      }\n    }]);\n  }(_AnimatedNode2.default);\n});","lineCount":89,"map":[[12,2,1,0],[12,6,1,0,"_AnimatedNode2"],[12,20,1,0],[12,23,1,0,"_interopRequireDefault"],[12,45,1,0],[12,46,1,0,"_$$_REQUIRE"],[12,57,1,0],[12,58,1,0,"_dependencyMap"],[12,72,1,0],[13,2,3,0],[13,6,3,0,"_areEqual"],[13,15,3,0],[13,18,3,0,"_interopRequireDefault"],[13,40,3,0],[13,41,3,0,"_$$_REQUIRE"],[13,52,3,0],[13,53,3,0,"_dependencyMap"],[13,67,3,0],[14,2,3,42],[14,11,3,42,"_callSuper"],[14,22,3,42,"t"],[14,23,3,42],[14,25,3,42,"o"],[14,26,3,42],[14,28,3,42,"e"],[14,29,3,42],[14,40,3,42,"o"],[14,41,3,42],[14,48,3,42,"_getPrototypeOf2"],[14,64,3,42],[14,65,3,42,"default"],[14,72,3,42],[14,74,3,42,"o"],[14,75,3,42],[14,82,3,42,"_possibleConstructorReturn2"],[14,109,3,42],[14,110,3,42,"default"],[14,117,3,42],[14,119,3,42,"t"],[14,120,3,42],[14,122,3,42,"_isNativeReflectConstruct"],[14,147,3,42],[14,152,3,42,"Reflect"],[14,159,3,42],[14,160,3,42,"construct"],[14,169,3,42],[14,170,3,42,"o"],[14,171,3,42],[14,173,3,42,"e"],[14,174,3,42],[14,186,3,42,"_getPrototypeOf2"],[14,202,3,42],[14,203,3,42,"default"],[14,210,3,42],[14,212,3,42,"t"],[14,213,3,42],[14,215,3,42,"constructor"],[14,226,3,42],[14,230,3,42,"o"],[14,231,3,42],[14,232,3,42,"apply"],[14,237,3,42],[14,238,3,42,"t"],[14,239,3,42],[14,241,3,42,"e"],[14,242,3,42],[15,2,3,42],[15,11,3,42,"_isNativeReflectConstruct"],[15,37,3,42],[15,51,3,42,"t"],[15,52,3,42],[15,56,3,42,"Boolean"],[15,63,3,42],[15,64,3,42,"prototype"],[15,73,3,42],[15,74,3,42,"valueOf"],[15,81,3,42],[15,82,3,42,"call"],[15,86,3,42],[15,87,3,42,"Reflect"],[15,94,3,42],[15,95,3,42,"construct"],[15,104,3,42],[15,105,3,42,"Boolean"],[15,112,3,42],[15,145,3,42,"t"],[15,146,3,42],[15,159,3,42,"_isNativeReflectConstruct"],[15,184,3,42],[15,196,3,42,"_isNativeReflectConstruct"],[15,222,3,42],[15,235,3,42,"t"],[15,236,3,42],[16,2,5,0],[16,11,5,9,"sanitizeTransform"],[16,28,5,26,"sanitizeTransform"],[16,29,5,27,"inputTransform"],[16,43,5,41],[16,45,5,43],[17,4,6,2],[17,8,6,8,"outputTransform"],[17,23,6,23],[17,26,6,26],[17,28,6,28],[18,4,7,2,"inputTransform"],[18,18,7,16],[18,19,7,17,"forEach"],[18,26,7,24],[18,27,7,25],[18,37,7,25,"transform"],[18,46,7,34],[18,48,7,38],[19,6,8,4],[19,11,8,9],[19,15,8,15,"key"],[19,18,8,18],[19,22,8,22,"transform"],[19,31,8,31],[19,33,8,33],[20,8,9,6],[20,12,9,12,"value"],[20,17,9,17],[20,20,9,20,"transform"],[20,29,9,29],[20,30,9,30,"key"],[20,33,9,33],[20,34,9,34],[21,8,10,6],[21,12,10,10,"value"],[21,17,10,15],[21,29,10,27,"AnimatedNode"],[21,51,10,39],[21,53,10,41],[22,10,11,8,"outputTransform"],[22,25,11,23],[22,26,11,24,"push"],[22,30,11,28],[22,31,11,29],[23,12,12,10,"property"],[23,20,12,18],[23,22,12,20,"key"],[23,25,12,23],[24,12,13,10,"nodeID"],[24,18,13,16],[24,20,13,18,"value"],[24,25,13,23],[24,26,13,24,"__nodeID"],[25,10,14,8],[25,11,14,9],[25,12,14,10],[26,8,15,6],[26,9,15,7],[26,15,15,13],[27,10,16,8,"outputTransform"],[27,25,16,23],[27,26,16,24,"push"],[27,30,16,28],[27,31,16,29],[28,12,17,10,"property"],[28,20,17,18],[28,22,17,20,"key"],[28,25,17,23],[29,12,18,10,"value"],[29,17,18,15],[29,19,18,10,"value"],[30,10,19,8],[30,11,19,9],[30,12,19,10],[31,8,20,6],[32,6,21,4],[33,4,22,2],[33,5,22,3],[33,6,22,4],[34,4,23,2],[34,11,23,9,"outputTransform"],[34,26,23,24],[35,2,24,0],[36,2,26,0],[36,11,26,9,"extractAnimatedParentNodes"],[36,37,26,35,"extractAnimatedParentNodes"],[36,38,26,36,"transform"],[36,47,26,45],[36,49,26,47],[37,4,27,2],[37,8,27,8,"parents"],[37,15,27,15],[37,18,27,18],[37,20,27,20],[38,4,28,2,"transform"],[38,13,28,11],[38,14,28,12,"forEach"],[38,21,28,19],[38,22,28,20],[38,32,28,20,"transform"],[38,41,28,29],[38,43,28,33],[39,6,29,4],[39,11,29,9],[39,15,29,15,"key"],[39,18,29,18],[39,22,29,22,"transform"],[39,31,29,31],[39,33,29,33],[40,8,30,6],[40,12,30,12,"value"],[40,17,30,17],[40,20,30,20,"transform"],[40,29,30,29],[40,30,30,30,"key"],[40,33,30,33],[40,34,30,34],[41,8,31,6],[41,12,31,10,"value"],[41,17,31,15],[41,29,31,27,"AnimatedNode"],[41,51,31,39],[41,53,31,41],[42,10,32,8,"parents"],[42,17,32,15],[42,18,32,16,"push"],[42,22,32,20],[42,23,32,21,"value"],[42,28,32,26],[42,29,32,27],[43,8,33,6],[44,6,34,4],[45,4,35,2],[45,5,35,3],[45,6,35,4],[46,4,36,2],[46,11,36,9,"parents"],[46,18,36,16],[47,2,37,0],[48,2,39,7],[48,11,39,16,"createOrReuseTransformNode"],[48,37,39,42,"createOrReuseTransformNode"],[48,38,39,43,"transform"],[48,47,39,52],[48,49,39,54,"oldNode"],[48,56,39,61],[48,58,39,63],[49,4,40,2],[49,8,40,8,"config"],[49,14,40,14],[49,17,40,17,"sanitizeTransform"],[49,34,40,34],[49,35,40,35,"transform"],[49,44,40,44],[49,45,40,45],[50,4,41,2],[50,8,41,6,"oldNode"],[50,15,41,13],[50,19,41,17],[50,23,41,17,"deepEqual"],[50,40,41,26],[50,42,41,27,"config"],[50,48,41,33],[50,50,41,35,"oldNode"],[50,57,41,42],[50,58,41,43,"_config"],[50,65,41,50],[50,66,41,51],[50,68,41,53],[51,6,42,4],[51,13,42,11,"oldNode"],[51,20,42,18],[52,4,43,2],[53,4,44,2],[53,11,44,9],[53,15,44,13,"AnimatedTransform"],[53,32,44,30],[53,33,44,31,"transform"],[53,42,44,40],[53,44,44,42,"config"],[53,50,44,48],[53,51,44,49],[54,2,45,0],[55,2,45,1],[55,6,47,6,"AnimatedTransform"],[55,23,47,23],[55,49,47,23,"_AnimatedNode"],[55,62,47,23],[56,4,48,2],[56,13,48,2,"AnimatedTransform"],[56,31,48,14,"transform"],[56,40,48,23],[56,42,48,25,"config"],[56,48,48,31],[56,50,48,33],[57,6,48,33],[57,10,48,33,"_this"],[57,15,48,33],[58,6,48,33],[58,10,48,33,"_classCallCheck2"],[58,26,48,33],[58,27,48,33,"default"],[58,34,48,33],[58,42,48,33,"AnimatedTransform"],[58,59,48,33],[59,6,49,4,"_this"],[59,11,49,4],[59,14,49,4,"_callSuper"],[59,24,49,4],[59,31,49,4,"AnimatedTransform"],[59,48,49,4],[59,51,50,6],[60,8,50,8,"type"],[60,12,50,12],[60,14,50,14],[60,25,50,25],[61,8,50,27,"transform"],[61,17,50,36],[61,19,50,38,"config"],[62,6,50,45],[62,7,50,46],[62,9,51,6,"extractAnimatedParentNodes"],[62,35,51,32],[62,36,51,33,"transform"],[62,45,51,42],[62,46,51,43],[63,6,53,4,"_this"],[63,11,53,4],[63,12,53,9,"_config"],[63,19,53,16],[63,22,53,19,"config"],[63,28,53,25],[64,6,54,4,"_this"],[64,11,54,4],[64,12,54,9,"_transform"],[64,22,54,19],[64,25,54,22,"transform"],[64,34,54,31],[65,6,54,32],[65,13,54,32,"_this"],[65,18,54,32],[66,4,55,2],[67,4,55,3],[67,8,55,3,"_inherits2"],[67,18,55,3],[67,19,55,3,"default"],[67,26,55,3],[67,28,55,3,"AnimatedTransform"],[67,45,55,3],[67,47,55,3,"_AnimatedNode"],[67,60,55,3],[68,4,55,3],[68,15,55,3,"_createClass2"],[68,28,55,3],[68,29,55,3,"default"],[68,36,55,3],[68,38,55,3,"AnimatedTransform"],[68,55,55,3],[69,6,55,3,"key"],[69,9,55,3],[70,6,55,3,"value"],[70,11,55,3],[70,13,57,2],[70,22,57,2,"toString"],[70,30,57,10,"toString"],[70,31,57,10],[70,33,57,13],[71,8,58,4],[71,15,58,11],[71,41,58,37],[71,45,58,41],[71,46,58,42,"__nodeID"],[71,54,58,50],[71,56,58,52],[72,6,59,2],[73,4,59,3],[74,6,59,3,"key"],[74,9,59,3],[75,6,59,3,"value"],[75,11,59,3],[75,13,61,2],[75,22,61,2,"__onEvaluate"],[75,34,61,14,"__onEvaluate"],[75,35,61,14],[75,37,61,17],[76,8,62,4],[76,15,62,11],[76,19,62,15],[76,20,62,16,"_transform"],[76,30,62,26],[76,31,62,27,"map"],[76,34,62,30],[76,35,62,31],[76,45,62,31,"transform"],[76,54,62,40],[76,56,62,44],[77,10,63,6],[77,14,63,12,"result"],[77,20,63,18],[77,23,63,21],[77,24,63,22],[77,25,63,23],[78,10,64,6],[78,15,64,11],[78,19,64,17,"key"],[78,22,64,20],[78,26,64,24,"transform"],[78,35,64,33],[78,37,64,35],[79,12,65,8],[79,16,65,14,"value"],[79,21,65,19],[79,24,65,22,"transform"],[79,33,65,31],[79,34,65,32,"key"],[79,37,65,35],[79,38,65,36],[80,12,66,8],[80,16,66,12,"value"],[80,21,66,17],[80,33,66,29,"AnimatedNode"],[80,55,66,41],[80,57,66,43],[81,14,67,10,"result"],[81,20,67,16],[81,21,67,17,"key"],[81,24,67,20],[81,25,67,21],[81,28,67,24,"value"],[81,33,67,29],[81,34,67,30,"__getValue"],[81,44,67,40],[81,45,67,41],[81,46,67,42],[82,12,68,8],[83,10,69,6],[84,10,70,6],[84,17,70,13,"result"],[84,23,70,19],[85,8,71,4],[85,9,71,5],[85,10,71,6],[86,6,72,2],[87,4,72,3],[88,2,72,3],[88,4,47,32,"AnimatedNode"],[88,26,47,44],[89,0,47,44],[89,3]],"functionMap":{"names":["<global>","sanitizeTransform","inputTransform.forEach$argument_0","extractAnimatedParentNodes","transform.forEach$argument_0","createOrReuseTransformNode","AnimatedTransform","constructor","toString","__onEvaluate","_transform.map$argument_0"],"mappings":"AAA;ACI;yBCE;GDe;CDE;AGE;oBCE;GDO;CHE;OKE;CLM;AME;ECC;GDO;EEE;GFE;EGE;+BCC;KDS;GHC;CNC"}},"type":"js/module"}]}