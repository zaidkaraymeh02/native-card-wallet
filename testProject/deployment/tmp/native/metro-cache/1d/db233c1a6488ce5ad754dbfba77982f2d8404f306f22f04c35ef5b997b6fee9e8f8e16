{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":87,"column":0,"index":2645}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":87,"column":0,"index":2645}}],"key":"ohGilxjVqjyE1GooDVDt9OYg9x0="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":87,"column":0,"index":2645}}],"key":"V6GYoXnblvuuGHJNMy7MHyaunsU="}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":87,"column":0,"index":2645}}],"key":"rcd0dMwf8BS2g+8U1wyhIOxtYEo="}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":87,"column":0,"index":2645}}],"key":"4pxOr+e+5cSZAdeEKxSt3F7LoKY="}},{"name":"@babel/runtime/helpers/inherits","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":87,"column":0,"index":2645}}],"key":"EDnOjopp9yNVawSzfBRsy2dq5dM="}},{"name":"./gesture","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":59,"index":59}}],"key":"rijS9WvIw33qqKul2343YfpqKYE="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.TapGesture = void 0;\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/getPrototypeOf\"));\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/inherits\"));\n  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }\n  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\n  var TapGesture = exports.TapGesture = /*#__PURE__*/function (_BaseGesture) {\n    function TapGesture() {\n      var _this;\n      (0, _classCallCheck2.default)(this, TapGesture);\n      _this = _callSuper(this, TapGesture);\n      _this.config = {};\n      _this.handlerName = 'TapGestureHandler';\n      _this.shouldCancelWhenOutside(true);\n      return _this;\n    }\n\n    /**\n     * Minimum number of pointers (fingers) required to be placed before the gesture activates.\n     * Should be a positive integer. The default value is 1.\n     * @param minPointers\n     */\n    (0, _inherits2.default)(TapGesture, _BaseGesture);\n    return (0, _createClass2.default)(TapGesture, [{\n      key: \"minPointers\",\n      value: function minPointers(_minPointers) {\n        this.config.minPointers = _minPointers;\n        return this;\n      }\n\n      /**\n       * Number of tap gestures required to activate the gesture.\n       * The default value is 1.\n       * @param count\n       */\n    }, {\n      key: \"numberOfTaps\",\n      value: function numberOfTaps(count) {\n        this.config.numberOfTaps = count;\n        return this;\n      }\n\n      /**\n       * Maximum distance, expressed in points, that defines how far the finger is allowed to travel during a tap gesture.\n       * @param maxDist\n       * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/tap-gesture#maxdistancevalue-number\n       */\n    }, {\n      key: \"maxDistance\",\n      value: function maxDistance(maxDist) {\n        this.config.maxDist = maxDist;\n        return this;\n      }\n\n      /**\n       * Maximum time, expressed in milliseconds, that defines how fast a finger must be released after a touch.\n       * The default value is 500.\n       * @param duration\n       */\n    }, {\n      key: \"maxDuration\",\n      value: function maxDuration(duration) {\n        this.config.maxDurationMs = duration;\n        return this;\n      }\n\n      /**\n       * Maximum time, expressed in milliseconds, that can pass before the next tap â€” if many taps are required.\n       * The default value is 500.\n       * @param delay\n       */\n    }, {\n      key: \"maxDelay\",\n      value: function maxDelay(delay) {\n        this.config.maxDelayMs = delay;\n        return this;\n      }\n\n      /**\n       * Maximum distance, expressed in points, that defines how far the finger is allowed to travel along the X axis during a tap gesture.\n       * @param delta\n       * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/tap-gesture#maxdeltaxvalue-number\n       */\n    }, {\n      key: \"maxDeltaX\",\n      value: function maxDeltaX(delta) {\n        this.config.maxDeltaX = delta;\n        return this;\n      }\n\n      /**\n       * Maximum distance, expressed in points, that defines how far the finger is allowed to travel along the Y axis during a tap gesture.\n       * @param delta\n       * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/tap-gesture#maxdeltayvalue-number\n       */\n    }, {\n      key: \"maxDeltaY\",\n      value: function maxDeltaY(delta) {\n        this.config.maxDeltaY = delta;\n        return this;\n      }\n    }]);\n  }(_$$_REQUIRE(_dependencyMap[6], \"./gesture\").BaseGesture);\n});","lineCount":111,"map":[[14,6,5,13,"TapGesture"],[14,16,5,23],[14,19,5,23,"exports"],[14,26,5,23],[14,27,5,23,"TapGesture"],[14,37,5,23],[14,63,5,23,"_BaseGesture"],[14,75,5,23],[15,4,8,2],[15,13,8,2,"TapGesture"],[15,24,8,2],[15,26,8,16],[16,6,8,16],[16,10,8,16,"_this"],[16,15,8,16],[17,6,8,16],[17,10,8,16,"_classCallCheck2"],[17,26,8,16],[17,27,8,16,"default"],[17,34,8,16],[17,42,8,16,"TapGesture"],[17,52,8,16],[18,6,9,4,"_this"],[18,11,9,4],[18,14,9,4,"_callSuper"],[18,24,9,4],[18,31,9,4,"TapGesture"],[18,41,9,4],[19,6,9,12,"_this"],[19,11,9,12],[19,12,6,9,"config"],[19,18,6,15],[19,21,6,56],[19,22,6,57],[19,23,6,58],[20,6,11,4,"_this"],[20,11,11,4],[20,12,11,9,"handlerName"],[20,23,11,20],[20,26,11,23],[20,45,11,42],[21,6,12,4,"_this"],[21,11,12,4],[21,12,12,9,"shouldCancelWhenOutside"],[21,35,12,32],[21,36,12,33],[21,40,12,37],[21,41,12,38],[22,6,12,39],[22,13,12,39,"_this"],[22,18,12,39],[23,4,13,2],[25,4,15,2],[26,0,16,0],[27,0,17,0],[28,0,18,0],[29,0,19,0],[30,4,15,2],[30,8,15,2,"_inherits2"],[30,18,15,2],[30,19,15,2,"default"],[30,26,15,2],[30,28,15,2,"TapGesture"],[30,38,15,2],[30,40,15,2,"_BaseGesture"],[30,52,15,2],[31,4,15,2],[31,15,15,2,"_createClass2"],[31,28,15,2],[31,29,15,2,"default"],[31,36,15,2],[31,38,15,2,"TapGesture"],[31,48,15,2],[32,6,15,2,"key"],[32,9,15,2],[33,6,15,2,"value"],[33,11,15,2],[33,13,20,2],[33,22,20,2,"minPointers"],[33,33,20,13,"minPointers"],[33,34,20,14,"minPointers"],[33,46,20,33],[33,48,20,35],[34,8,21,4],[34,12,21,8],[34,13,21,9,"config"],[34,19,21,15],[34,20,21,16,"minPointers"],[34,31,21,27],[34,34,21,30,"minPointers"],[34,46,21,41],[35,8,22,4],[35,15,22,11],[35,19,22,15],[36,6,23,2],[38,6,25,2],[39,0,26,0],[40,0,27,0],[41,0,28,0],[42,0,29,0],[43,4,25,2],[44,6,25,2,"key"],[44,9,25,2],[45,6,25,2,"value"],[45,11,25,2],[45,13,30,2],[45,22,30,2,"numberOfTaps"],[45,34,30,14,"numberOfTaps"],[45,35,30,15,"count"],[45,40,30,28],[45,42,30,30],[46,8,31,4],[46,12,31,8],[46,13,31,9,"config"],[46,19,31,15],[46,20,31,16,"numberOfTaps"],[46,32,31,28],[46,35,31,31,"count"],[46,40,31,36],[47,8,32,4],[47,15,32,11],[47,19,32,15],[48,6,33,2],[50,6,35,2],[51,0,36,0],[52,0,37,0],[53,0,38,0],[54,0,39,0],[55,4,35,2],[56,6,35,2,"key"],[56,9,35,2],[57,6,35,2,"value"],[57,11,35,2],[57,13,40,2],[57,22,40,2,"maxDistance"],[57,33,40,13,"maxDistance"],[57,34,40,14,"maxDist"],[57,41,40,29],[57,43,40,31],[58,8,41,4],[58,12,41,8],[58,13,41,9,"config"],[58,19,41,15],[58,20,41,16,"maxDist"],[58,27,41,23],[58,30,41,26,"maxDist"],[58,37,41,33],[59,8,42,4],[59,15,42,11],[59,19,42,15],[60,6,43,2],[62,6,45,2],[63,0,46,0],[64,0,47,0],[65,0,48,0],[66,0,49,0],[67,4,45,2],[68,6,45,2,"key"],[68,9,45,2],[69,6,45,2,"value"],[69,11,45,2],[69,13,50,2],[69,22,50,2,"maxDuration"],[69,33,50,13,"maxDuration"],[69,34,50,14,"duration"],[69,42,50,30],[69,44,50,32],[70,8,51,4],[70,12,51,8],[70,13,51,9,"config"],[70,19,51,15],[70,20,51,16,"maxDurationMs"],[70,33,51,29],[70,36,51,32,"duration"],[70,44,51,40],[71,8,52,4],[71,15,52,11],[71,19,52,15],[72,6,53,2],[74,6,55,2],[75,0,56,0],[76,0,57,0],[77,0,58,0],[78,0,59,0],[79,4,55,2],[80,6,55,2,"key"],[80,9,55,2],[81,6,55,2,"value"],[81,11,55,2],[81,13,60,2],[81,22,60,2,"maxDelay"],[81,30,60,10,"maxDelay"],[81,31,60,11,"delay"],[81,36,60,24],[81,38,60,26],[82,8,61,4],[82,12,61,8],[82,13,61,9,"config"],[82,19,61,15],[82,20,61,16,"maxDelayMs"],[82,30,61,26],[82,33,61,29,"delay"],[82,38,61,34],[83,8,62,4],[83,15,62,11],[83,19,62,15],[84,6,63,2],[86,6,65,2],[87,0,66,0],[88,0,67,0],[89,0,68,0],[90,0,69,0],[91,4,65,2],[92,6,65,2,"key"],[92,9,65,2],[93,6,65,2,"value"],[93,11,65,2],[93,13,70,2],[93,22,70,2,"maxDeltaX"],[93,31,70,11,"maxDeltaX"],[93,32,70,12,"delta"],[93,37,70,25],[93,39,70,27],[94,8,71,4],[94,12,71,8],[94,13,71,9,"config"],[94,19,71,15],[94,20,71,16,"maxDeltaX"],[94,29,71,25],[94,32,71,28,"delta"],[94,37,71,33],[95,8,72,4],[95,15,72,11],[95,19,72,15],[96,6,73,2],[98,6,75,2],[99,0,76,0],[100,0,77,0],[101,0,78,0],[102,0,79,0],[103,4,75,2],[104,6,75,2,"key"],[104,9,75,2],[105,6,75,2,"value"],[105,11,75,2],[105,13,80,2],[105,22,80,2,"maxDeltaY"],[105,31,80,11,"maxDeltaY"],[105,32,80,12,"delta"],[105,37,80,25],[105,39,80,27],[106,8,81,4],[106,12,81,8],[106,13,81,9,"config"],[106,19,81,15],[106,20,81,16,"maxDeltaY"],[106,29,81,25],[106,32,81,28,"delta"],[106,37,81,33],[107,8,82,4],[107,15,82,11],[107,19,82,15],[108,6,83,2],[109,4,83,3],[110,2,83,3],[110,4,5,32,"BaseGesture"],[110,34,5,32],[110,35,5,32,"BaseGesture"],[110,59,5,43],[111,0,5,43],[111,3]],"functionMap":{"names":["<global>","TapGesture","TapGesture#constructor","TapGesture#minPointers","TapGesture#numberOfTaps","TapGesture#maxDistance","TapGesture#maxDuration","TapGesture#maxDelay","TapGesture#maxDeltaX","TapGesture#maxDeltaY"],"mappings":"AAA;OCI;ECG;GDK;EEO;GFG;EGO;GHG;EIO;GJG;EKO;GLG;EMO;GNG;EOO;GPG;EQO;GRG;CDC"}},"type":"js/module"}]}