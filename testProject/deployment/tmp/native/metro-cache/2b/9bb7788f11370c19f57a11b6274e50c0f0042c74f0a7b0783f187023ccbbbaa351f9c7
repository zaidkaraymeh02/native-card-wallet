{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":358,"column":0,"index":9682}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":358,"column":0,"index":9682}}],"key":"EU+qeBIKi4KcIzPeK4PbkLqFqVY="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":358,"column":0,"index":9682}}],"key":"ohGilxjVqjyE1GooDVDt9OYg9x0="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":358,"column":0,"index":9682}}],"key":"V6GYoXnblvuuGHJNMy7MHyaunsU="}},{"name":"./specs/NativeDOM","data":{"asyncType":null,"locs":[{"start":{"line":21,"column":0,"index":577},"end":{"line":21,"column":42,"index":619}}],"key":"TcbRiTYNok3yxUtTlzHcZCnDZbg="}},{"name":"../oldstylecollections/NodeList","data":{"asyncType":null,"locs":[{"start":{"line":20,"column":0,"index":513},"end":{"line":20,"column":63,"index":576}}],"key":"e829OytwgHyGBC6Wf1HHpcXkVIA="}},{"name":"./ReadOnlyElement","data":{"asyncType":null,"locs":[{"start":{"line":110,"column":29,"index":2700},"end":{"line":110,"column":57,"index":2728}}],"key":"Y5N5neV0upQlmZ4Q8PUCGsJI+g8="}},{"name":"../../../../../Libraries/Renderer/shims/ReactFabric","data":{"asyncType":null,"locs":[{"start":{"line":307,"column":22,"index":8009},"end":{"line":307,"column":84,"index":8071}},{"start":{"line":352,"column":22,"index":9334},"end":{"line":352,"column":84,"index":9396}}],"key":"AFtJ9d48muIiJSQp8tIE/GWOK8s="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  exports.getChildNodes = getChildNodes;\n  exports.getInstanceHandle = getInstanceHandle;\n  exports.getPublicInstanceFromInternalInstanceHandle = getPublicInstanceFromInternalInstanceHandle;\n  exports.getShadowNode = getShadowNode;\n  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\"));\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/createClass\"));\n  var _NativeDOM = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"./specs/NativeDOM\"));\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * @format\n   * \n   */\n\n  // flowlint unsafe-getters-setters:off\n\n  // We initialize this lazily to avoid a require cycle\n  // (`ReadOnlyElement` also depends on `ReadOnlyNode`).\n  var ReadOnlyElementClass;\n  var ReadOnlyNode = exports.default = /*#__PURE__*/function () {\n    function ReadOnlyNode(internalInstanceHandle) {\n      (0, _classCallCheck2.default)(this, ReadOnlyNode);\n      setInstanceHandle(this, internalInstanceHandle);\n    }\n    return (0, _createClass2.default)(ReadOnlyNode, [{\n      key: \"childNodes\",\n      get: function get() {\n        var childNodes = getChildNodes(this);\n        return (0, _$$_REQUIRE(_dependencyMap[5], \"../oldstylecollections/NodeList\").createNodeList)(childNodes);\n      }\n    }, {\n      key: \"firstChild\",\n      get: function get() {\n        var childNodes = getChildNodes(this);\n        if (childNodes.length === 0) {\n          return null;\n        }\n        return childNodes[0];\n      }\n    }, {\n      key: \"isConnected\",\n      get: function get() {\n        var shadowNode = getShadowNode(this);\n        if (shadowNode == null) {\n          return false;\n        }\n        return _NativeDOM.default.isConnected(shadowNode);\n      }\n    }, {\n      key: \"lastChild\",\n      get: function get() {\n        var childNodes = getChildNodes(this);\n        if (childNodes.length === 0) {\n          return null;\n        }\n        return childNodes[childNodes.length - 1];\n      }\n    }, {\n      key: \"nextSibling\",\n      get: function get() {\n        var _getNodeSiblingsAndPo = getNodeSiblingsAndPosition(this),\n          _getNodeSiblingsAndPo2 = (0, _slicedToArray2.default)(_getNodeSiblingsAndPo, 2),\n          siblings = _getNodeSiblingsAndPo2[0],\n          position = _getNodeSiblingsAndPo2[1];\n        if (position === siblings.length - 1) {\n          // this node is the last child of its parent, so there is no next sibling.\n          return null;\n        }\n        return siblings[position + 1];\n      }\n\n      /**\n       * @abstract\n       */\n    }, {\n      key: \"nodeName\",\n      get: function get() {\n        throw new TypeError('`nodeName` is abstract and must be implemented in a subclass of `ReadOnlyNode`');\n      }\n\n      /**\n       * @abstract\n       */\n    }, {\n      key: \"nodeType\",\n      get: function get() {\n        throw new TypeError('`nodeType` is abstract and must be implemented in a subclass of `ReadOnlyNode`');\n      }\n\n      /**\n       * @abstract\n       */\n    }, {\n      key: \"nodeValue\",\n      get: function get() {\n        throw new TypeError('`nodeValue` is abstract and must be implemented in a subclass of `ReadOnlyNode`');\n      }\n    }, {\n      key: \"parentElement\",\n      get: function get() {\n        var parentNode = this.parentNode;\n        if (ReadOnlyElementClass == null) {\n          // We initialize this lazily to avoid a require cycle.\n          ReadOnlyElementClass = _$$_REQUIRE(_dependencyMap[6], \"./ReadOnlyElement\").default;\n        }\n        if (parentNode instanceof ReadOnlyElementClass) {\n          return parentNode;\n        }\n        return null;\n      }\n    }, {\n      key: \"parentNode\",\n      get: function get() {\n        var _getPublicInstanceFro;\n        var shadowNode = getShadowNode(this);\n        if (shadowNode == null) {\n          return null;\n        }\n        var parentInstanceHandle = _NativeDOM.default.getParentNode(shadowNode);\n        if (parentInstanceHandle == null) {\n          return null;\n        }\n        return (_getPublicInstanceFro = getPublicInstanceFromInternalInstanceHandle(parentInstanceHandle)) != null ? _getPublicInstanceFro : null;\n      }\n    }, {\n      key: \"previousSibling\",\n      get: function get() {\n        var _getNodeSiblingsAndPo3 = getNodeSiblingsAndPosition(this),\n          _getNodeSiblingsAndPo4 = (0, _slicedToArray2.default)(_getNodeSiblingsAndPo3, 2),\n          siblings = _getNodeSiblingsAndPo4[0],\n          position = _getNodeSiblingsAndPo4[1];\n        if (position === 0) {\n          // this node is the first child of its parent, so there is no previous sibling.\n          return null;\n        }\n        return siblings[position - 1];\n      }\n\n      /**\n       * @abstract\n       */\n    }, {\n      key: \"textContent\",\n      get: function get() {\n        throw new TypeError('`textContent` is abstract and must be implemented in a subclass of `ReadOnlyNode`');\n      }\n    }, {\n      key: \"compareDocumentPosition\",\n      value: function compareDocumentPosition(otherNode) {\n        // Quick check to avoid having to call into Fabric if the nodes are the same.\n        if (otherNode === this) {\n          return 0;\n        }\n        var shadowNode = getShadowNode(this);\n        var otherShadowNode = getShadowNode(otherNode);\n        if (shadowNode == null || otherShadowNode == null) {\n          return ReadOnlyNode.DOCUMENT_POSITION_DISCONNECTED;\n        }\n        return _NativeDOM.default.compareDocumentPosition(shadowNode, otherShadowNode);\n      }\n    }, {\n      key: \"contains\",\n      value: function contains(otherNode) {\n        if (otherNode === this) {\n          return true;\n        }\n        var position = this.compareDocumentPosition(otherNode);\n        // eslint-disable-next-line no-bitwise\n        return (position & ReadOnlyNode.DOCUMENT_POSITION_CONTAINED_BY) !== 0;\n      }\n    }, {\n      key: \"getRootNode\",\n      value: function getRootNode() {\n        // eslint-disable-next-line consistent-this\n        var lastKnownParent = this;\n        var nextPossibleParent = this.parentNode;\n        while (nextPossibleParent != null) {\n          lastKnownParent = nextPossibleParent;\n          nextPossibleParent = nextPossibleParent.parentNode;\n        }\n        return lastKnownParent;\n      }\n    }, {\n      key: \"hasChildNodes\",\n      value: function hasChildNodes() {\n        return getChildNodes(this).length > 0;\n      }\n\n      /*\n       * Node types, as returned by the `nodeType` property.\n       */\n\n      /**\n       * Type of Element, HTMLElement and ReactNativeElement instances.\n       */\n    }]);\n  }();\n  ReadOnlyNode.ELEMENT_NODE = 1;\n  /**\n   * Currently Unused in React Native.\n   */\n  ReadOnlyNode.ATTRIBUTE_NODE = 2;\n  /**\n   * Text nodes.\n   */\n  ReadOnlyNode.TEXT_NODE = 3;\n  /**\n   * @deprecated Unused in React Native.\n   */\n  ReadOnlyNode.CDATA_SECTION_NODE = 4;\n  /**\n   * @deprecated\n   */\n  ReadOnlyNode.ENTITY_REFERENCE_NODE = 5;\n  /**\n   * @deprecated\n   */\n  ReadOnlyNode.ENTITY_NODE = 6;\n  /**\n   * @deprecated Unused in React Native.\n   */\n  ReadOnlyNode.PROCESSING_INSTRUCTION_NODE = 7;\n  /**\n   * @deprecated Unused in React Native.\n   */\n  ReadOnlyNode.COMMENT_NODE = 8;\n  /**\n   * @deprecated Unused in React Native.\n   */\n  ReadOnlyNode.DOCUMENT_NODE = 9;\n  /**\n   * @deprecated Unused in React Native.\n   */\n  ReadOnlyNode.DOCUMENT_TYPE_NODE = 10;\n  /**\n   * @deprecated Unused in React Native.\n   */\n  ReadOnlyNode.DOCUMENT_FRAGMENT_NODE = 11;\n  /**\n   * @deprecated\n   */\n  ReadOnlyNode.NOTATION_NODE = 12;\n  /*\n   * Document position flags. Used to check the return value of\n   * `compareDocumentPosition()`.\n   */\n  /**\n   * Both nodes are in different documents.\n   */\n  ReadOnlyNode.DOCUMENT_POSITION_DISCONNECTED = 1;\n  /**\n   * `otherNode` precedes the node in either a pre-order depth-first traversal of a tree containing both\n   * (e.g., as an ancestor or previous sibling or a descendant of a previous sibling or previous sibling of an ancestor)\n   * or (if they are disconnected) in an arbitrary but consistent ordering.\n   */\n  ReadOnlyNode.DOCUMENT_POSITION_PRECEDING = 2;\n  /**\n   * `otherNode` follows the node in either a pre-order depth-first traversal of a tree containing both\n   * (e.g., as a descendant or following sibling or a descendant of a following sibling or following sibling of an ancestor)\n   * or (if they are disconnected) in an arbitrary but consistent ordering.\n   */\n  ReadOnlyNode.DOCUMENT_POSITION_FOLLOWING = 4;\n  /**\n   * `otherNode` is an ancestor of the node.\n   */\n  ReadOnlyNode.DOCUMENT_POSITION_CONTAINS = 8;\n  /**\n   * `otherNode` is a descendant of the node.\n   */\n  ReadOnlyNode.DOCUMENT_POSITION_CONTAINED_BY = 16;\n  /**\n   * @deprecated Unused in React Native.\n   */\n  ReadOnlyNode.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC = 32;\n  var INSTANCE_HANDLE_KEY = Symbol('internalInstanceHandle');\n  function getInstanceHandle(node) {\n    // $FlowExpectedError[prop-missing]\n    return node[INSTANCE_HANDLE_KEY];\n  }\n  function setInstanceHandle(node, instanceHandle) {\n    // $FlowExpectedError[prop-missing]\n    node[INSTANCE_HANDLE_KEY] = instanceHandle;\n  }\n  function getShadowNode(node) {\n    // Lazy import Fabric here to avoid DOM Node APIs classes from having side-effects.\n    // With a static import we can't use these classes for Paper-only variants.\n    var ReactFabric = _$$_REQUIRE(_dependencyMap[7], \"../../../../../Libraries/Renderer/shims/ReactFabric\");\n    return ReactFabric.getNodeFromInternalInstanceHandle(getInstanceHandle(node));\n  }\n  function getChildNodes(node) {\n    var shadowNode = getShadowNode(node);\n    if (shadowNode == null) {\n      return [];\n    }\n    var childNodeInstanceHandles = _NativeDOM.default.getChildNodes(shadowNode);\n    return childNodeInstanceHandles.map(function (instanceHandle) {\n      return getPublicInstanceFromInternalInstanceHandle(instanceHandle);\n    }).filter(Boolean);\n  }\n  function getNodeSiblingsAndPosition(node) {\n    var parent = node.parentNode;\n    if (parent == null) {\n      // This node is the root or it's disconnected.\n      return [[node], 0];\n    }\n    var siblings = getChildNodes(parent);\n    var position = siblings.indexOf(node);\n    if (position === -1) {\n      throw new TypeError(\"Missing node in parent's child node list\");\n    }\n    return [siblings, position];\n  }\n  function getPublicInstanceFromInternalInstanceHandle(instanceHandle) {\n    // Lazy import Fabric here to avoid DOM Node APIs classes from having side-effects.\n    // With a static import we can't use these classes for Paper-only variants.\n    var ReactFabric = _$$_REQUIRE(_dependencyMap[7], \"../../../../../Libraries/Renderer/shims/ReactFabric\");\n    var mixedPublicInstance = ReactFabric.getPublicInstanceFromInternalInstanceHandle(instanceHandle);\n    // $FlowExpectedError[incompatible-return] React defines public instances as \"mixed\" because it can't access the definition from React Native.\n    return mixedPublicInstance;\n  }\n});","lineCount":331,"map":[[14,2,21,0],[14,6,21,0,"_NativeDOM"],[14,16,21,0],[14,19,21,0,"_interopRequireDefault"],[14,41,21,0],[14,42,21,0,"_$$_REQUIRE"],[14,53,21,0],[14,54,21,0,"_dependencyMap"],[14,68,21,0],[15,2,1,0],[16,0,2,0],[17,0,3,0],[18,0,4,0],[19,0,5,0],[20,0,6,0],[21,0,7,0],[22,0,8,0],[23,0,9,0],[25,2,11,0],[27,2,23,0],[28,2,24,0],[29,2,25,0],[29,6,25,4,"ReadOnlyElementClass"],[29,26,25,48],[30,2,25,49],[30,6,27,21,"ReadOnlyNode"],[30,18,27,33],[30,21,27,33,"exports"],[30,28,27,33],[30,29,27,33,"default"],[30,36,27,33],[31,4,28,2],[31,13,28,2,"ReadOnlyNode"],[31,26,28,14,"internalInstanceHandle"],[31,48,28,60],[31,50,28,62],[32,6,28,62],[32,10,28,62,"_classCallCheck2"],[32,26,28,62],[32,27,28,62,"default"],[32,34,28,62],[32,42,28,62,"ReadOnlyNode"],[32,54,28,62],[33,6,29,4,"setInstanceHandle"],[33,23,29,21],[33,24,29,22],[33,28,29,26],[33,30,29,28,"internalInstanceHandle"],[33,52,29,50],[33,53,29,51],[34,4,30,2],[35,4,30,3],[35,15,30,3,"_createClass2"],[35,28,30,3],[35,29,30,3,"default"],[35,36,30,3],[35,38,30,3,"ReadOnlyNode"],[35,50,30,3],[36,6,30,3,"key"],[36,9,30,3],[37,6,30,3,"get"],[37,9,30,3],[37,11,32,2],[37,20,32,2,"get"],[37,24,32,2],[37,26,32,43],[38,8,33,4],[38,12,33,10,"childNodes"],[38,22,33,20],[38,25,33,23,"getChildNodes"],[38,38,33,36],[38,39,33,37],[38,43,33,41],[38,44,33,42],[39,8,34,4],[39,15,34,11],[39,19,34,11,"createNodeList"],[39,49,34,11],[39,50,34,11,"createNodeList"],[39,99,34,25],[39,101,34,26,"childNodes"],[39,111,34,36],[39,112,34,37],[40,6,35,2],[41,4,35,3],[42,6,35,3,"key"],[42,9,35,3],[43,6,35,3,"get"],[43,9,35,3],[43,11,37,2],[43,20,37,2,"get"],[43,24,37,2],[43,26,37,40],[44,8,38,4],[44,12,38,10,"childNodes"],[44,22,38,20],[44,25,38,23,"getChildNodes"],[44,38,38,36],[44,39,38,37],[44,43,38,41],[44,44,38,42],[45,8,40,4],[45,12,40,8,"childNodes"],[45,22,40,18],[45,23,40,19,"length"],[45,29,40,25],[45,34,40,30],[45,35,40,31],[45,37,40,33],[46,10,41,6],[46,17,41,13],[46,21,41,17],[47,8,42,4],[48,8,44,4],[48,15,44,11,"childNodes"],[48,25,44,21],[48,26,44,22],[48,27,44,23],[48,28,44,24],[49,6,45,2],[50,4,45,3],[51,6,45,3,"key"],[51,9,45,3],[52,6,45,3,"get"],[52,9,45,3],[52,11,47,2],[52,20,47,2,"get"],[52,24,47,2],[52,26,47,29],[53,8,48,4],[53,12,48,10,"shadowNode"],[53,22,48,20],[53,25,48,23,"getShadowNode"],[53,38,48,36],[53,39,48,37],[53,43,48,41],[53,44,48,42],[54,8,50,4],[54,12,50,8,"shadowNode"],[54,22,50,18],[54,26,50,22],[54,30,50,26],[54,32,50,28],[55,10,51,6],[55,17,51,13],[55,22,51,18],[56,8,52,4],[57,8,54,4],[57,15,54,11,"NativeDOM"],[57,33,54,20],[57,34,54,21,"isConnected"],[57,45,54,32],[57,46,54,33,"shadowNode"],[57,56,54,43],[57,57,54,44],[58,6,55,2],[59,4,55,3],[60,6,55,3,"key"],[60,9,55,3],[61,6,55,3,"get"],[61,9,55,3],[61,11,57,2],[61,20,57,2,"get"],[61,24,57,2],[61,26,57,39],[62,8,58,4],[62,12,58,10,"childNodes"],[62,22,58,20],[62,25,58,23,"getChildNodes"],[62,38,58,36],[62,39,58,37],[62,43,58,41],[62,44,58,42],[63,8,60,4],[63,12,60,8,"childNodes"],[63,22,60,18],[63,23,60,19,"length"],[63,29,60,25],[63,34,60,30],[63,35,60,31],[63,37,60,33],[64,10,61,6],[64,17,61,13],[64,21,61,17],[65,8,62,4],[66,8,64,4],[66,15,64,11,"childNodes"],[66,25,64,21],[66,26,64,22,"childNodes"],[66,36,64,32],[66,37,64,33,"length"],[66,43,64,39],[66,46,64,42],[66,47,64,43],[66,48,64,44],[67,6,65,2],[68,4,65,3],[69,6,65,3,"key"],[69,9,65,3],[70,6,65,3,"get"],[70,9,65,3],[70,11,67,2],[70,20,67,2,"get"],[70,24,67,2],[70,26,67,41],[71,8,68,4],[71,12,68,4,"_getNodeSiblingsAndPo"],[71,33,68,4],[71,36,68,33,"getNodeSiblingsAndPosition"],[71,62,68,59],[71,63,68,60],[71,67,68,64],[71,68,68,65],[72,10,68,65,"_getNodeSiblingsAndPo2"],[72,32,68,65],[72,39,68,65,"_slicedToArray2"],[72,54,68,65],[72,55,68,65,"default"],[72,62,68,65],[72,64,68,65,"_getNodeSiblingsAndPo"],[72,85,68,65],[73,10,68,11,"siblings"],[73,18,68,19],[73,21,68,19,"_getNodeSiblingsAndPo2"],[73,43,68,19],[74,10,68,21,"position"],[74,18,68,29],[74,21,68,29,"_getNodeSiblingsAndPo2"],[74,43,68,29],[75,8,70,4],[75,12,70,8,"position"],[75,20,70,16],[75,25,70,21,"siblings"],[75,33,70,29],[75,34,70,30,"length"],[75,40,70,36],[75,43,70,39],[75,44,70,40],[75,46,70,42],[76,10,71,6],[77,10,72,6],[77,17,72,13],[77,21,72,17],[78,8,73,4],[79,8,75,4],[79,15,75,11,"siblings"],[79,23,75,19],[79,24,75,20,"position"],[79,32,75,28],[79,35,75,31],[79,36,75,32],[79,37,75,33],[80,6,76,2],[82,6,78,2],[83,0,79,0],[84,0,80,0],[85,4,78,2],[86,6,78,2,"key"],[86,9,78,2],[87,6,78,2,"get"],[87,9,78,2],[87,11,81,2],[87,20,81,2,"get"],[87,24,81,2],[87,26,81,25],[88,8,82,4],[88,14,82,10],[88,18,82,14,"TypeError"],[88,27,82,23],[88,28,83,6],[88,108,84,4],[88,109,84,5],[89,6,85,2],[91,6,87,2],[92,0,88,0],[93,0,89,0],[94,4,87,2],[95,6,87,2,"key"],[95,9,87,2],[96,6,87,2,"get"],[96,9,87,2],[96,11,90,2],[96,20,90,2,"get"],[96,24,90,2],[96,26,90,25],[97,8,91,4],[97,14,91,10],[97,18,91,14,"TypeError"],[97,27,91,23],[97,28,92,6],[97,108,93,4],[97,109,93,5],[98,6,94,2],[100,6,96,2],[101,0,97,0],[102,0,98,0],[103,4,96,2],[104,6,96,2,"key"],[104,9,96,2],[105,6,96,2,"get"],[105,9,96,2],[105,11,99,2],[105,20,99,2,"get"],[105,24,99,2],[105,26,99,33],[106,8,100,4],[106,14,100,10],[106,18,100,14,"TypeError"],[106,27,100,23],[106,28,101,6],[106,109,102,4],[106,110,102,5],[107,6,103,2],[108,4,103,3],[109,6,103,3,"key"],[109,9,103,3],[110,6,103,3,"get"],[110,9,103,3],[110,11,105,2],[110,20,105,2,"get"],[110,24,105,2],[110,26,105,46],[111,8,106,4],[111,12,106,10,"parentNode"],[111,22,106,20],[111,25,106,23],[111,29,106,27],[111,30,106,28,"parentNode"],[111,40,106,38],[112,8,108,4],[112,12,108,8,"ReadOnlyElementClass"],[112,32,108,28],[112,36,108,32],[112,40,108,36],[112,42,108,38],[113,10,109,6],[114,10,110,6,"ReadOnlyElementClass"],[114,30,110,26],[114,33,110,29,"require"],[114,44,110,36],[114,45,110,36,"_dependencyMap"],[114,59,110,36],[114,83,110,56],[114,84,110,57],[114,85,110,58,"default"],[114,92,110,65],[115,8,111,4],[116,8,113,4],[116,12,113,8,"parentNode"],[116,22,113,18],[116,34,113,30,"ReadOnlyElementClass"],[116,54,113,50],[116,56,113,52],[117,10,114,6],[117,17,114,13,"parentNode"],[117,27,114,23],[118,8,115,4],[119,8,117,4],[119,15,117,11],[119,19,117,15],[120,6,118,2],[121,4,118,3],[122,6,118,3,"key"],[122,9,118,3],[123,6,118,3,"get"],[123,9,118,3],[123,11,120,2],[123,20,120,2,"get"],[123,24,120,2],[123,26,120,40],[124,8,120,40],[124,12,120,40,"_getPublicInstanceFro"],[124,33,120,40],[125,8,121,4],[125,12,121,10,"shadowNode"],[125,22,121,20],[125,25,121,23,"getShadowNode"],[125,38,121,36],[125,39,121,37],[125,43,121,41],[125,44,121,42],[126,8,123,4],[126,12,123,8,"shadowNode"],[126,22,123,18],[126,26,123,22],[126,30,123,26],[126,32,123,28],[127,10,124,6],[127,17,124,13],[127,21,124,17],[128,8,125,4],[129,8,127,4],[129,12,127,10,"parentInstanceHandle"],[129,32,127,30],[129,35,127,33,"NativeDOM"],[129,53,127,42],[129,54,127,43,"getParentNode"],[129,67,127,56],[129,68,127,57,"shadowNode"],[129,78,127,67],[129,79,127,68],[130,8,129,4],[130,12,129,8,"parentInstanceHandle"],[130,32,129,28],[130,36,129,32],[130,40,129,36],[130,42,129,38],[131,10,130,6],[131,17,130,13],[131,21,130,17],[132,8,131,4],[133,8,133,4],[133,16,133,4,"_getPublicInstanceFro"],[133,37,133,4],[133,40,134,6,"getPublicInstanceFromInternalInstanceHandle"],[133,83,134,49],[133,84,134,50,"parentInstanceHandle"],[133,104,134,70],[133,105,134,71],[133,117,134,71,"_getPublicInstanceFro"],[133,138,134,71],[133,141,134,75],[133,145,134,79],[134,6,136,2],[135,4,136,3],[136,6,136,3,"key"],[136,9,136,3],[137,6,136,3,"get"],[137,9,136,3],[137,11,138,2],[137,20,138,2,"get"],[137,24,138,2],[137,26,138,45],[138,8,139,4],[138,12,139,4,"_getNodeSiblingsAndPo3"],[138,34,139,4],[138,37,139,33,"getNodeSiblingsAndPosition"],[138,63,139,59],[138,64,139,60],[138,68,139,64],[138,69,139,65],[139,10,139,65,"_getNodeSiblingsAndPo4"],[139,32,139,65],[139,39,139,65,"_slicedToArray2"],[139,54,139,65],[139,55,139,65,"default"],[139,62,139,65],[139,64,139,65,"_getNodeSiblingsAndPo3"],[139,86,139,65],[140,10,139,11,"siblings"],[140,18,139,19],[140,21,139,19,"_getNodeSiblingsAndPo4"],[140,43,139,19],[141,10,139,21,"position"],[141,18,139,29],[141,21,139,29,"_getNodeSiblingsAndPo4"],[141,43,139,29],[142,8,141,4],[142,12,141,8,"position"],[142,20,141,16],[142,25,141,21],[142,26,141,22],[142,28,141,24],[143,10,142,6],[144,10,143,6],[144,17,143,13],[144,21,143,17],[145,8,144,4],[146,8,146,4],[146,15,146,11,"siblings"],[146,23,146,19],[146,24,146,20,"position"],[146,32,146,28],[146,35,146,31],[146,36,146,32],[146,37,146,33],[147,6,147,2],[149,6,149,2],[150,0,150,0],[151,0,151,0],[152,4,149,2],[153,6,149,2,"key"],[153,9,149,2],[154,6,149,2,"get"],[154,9,149,2],[154,11,152,2],[154,20,152,2,"get"],[154,24,152,2],[154,26,152,35],[155,8,153,4],[155,14,153,10],[155,18,153,14,"TypeError"],[155,27,153,23],[155,28,154,6],[155,111,155,4],[155,112,155,5],[156,6,156,2],[157,4,156,3],[158,6,156,3,"key"],[158,9,156,3],[159,6,156,3,"value"],[159,11,156,3],[159,13,158,2],[159,22,158,2,"compareDocumentPosition"],[159,45,158,25,"compareDocumentPosition"],[159,46,158,26,"otherNode"],[159,55,158,49],[159,57,158,59],[160,8,159,4],[161,8,160,4],[161,12,160,8,"otherNode"],[161,21,160,17],[161,26,160,22],[161,30,160,26],[161,32,160,28],[162,10,161,6],[162,17,161,13],[162,18,161,14],[163,8,162,4],[164,8,164,4],[164,12,164,10,"shadowNode"],[164,22,164,20],[164,25,164,23,"getShadowNode"],[164,38,164,36],[164,39,164,37],[164,43,164,41],[164,44,164,42],[165,8,165,4],[165,12,165,10,"otherShadowNode"],[165,27,165,25],[165,30,165,28,"getShadowNode"],[165,43,165,41],[165,44,165,42,"otherNode"],[165,53,165,51],[165,54,165,52],[166,8,167,4],[166,12,167,8,"shadowNode"],[166,22,167,18],[166,26,167,22],[166,30,167,26],[166,34,167,30,"otherShadowNode"],[166,49,167,45],[166,53,167,49],[166,57,167,53],[166,59,167,55],[167,10,168,6],[167,17,168,13,"ReadOnlyNode"],[167,29,168,25],[167,30,168,26,"DOCUMENT_POSITION_DISCONNECTED"],[167,60,168,56],[168,8,169,4],[169,8,171,4],[169,15,171,11,"NativeDOM"],[169,33,171,20],[169,34,171,21,"compareDocumentPosition"],[169,57,171,44],[169,58,171,45,"shadowNode"],[169,68,171,55],[169,70,171,57,"otherShadowNode"],[169,85,171,72],[169,86,171,73],[170,6,172,2],[171,4,172,3],[172,6,172,3,"key"],[172,9,172,3],[173,6,172,3,"value"],[173,11,172,3],[173,13,174,2],[173,22,174,2,"contains"],[173,30,174,10,"contains"],[173,31,174,11,"otherNode"],[173,40,174,34],[173,42,174,45],[174,8,175,4],[174,12,175,8,"otherNode"],[174,21,175,17],[174,26,175,22],[174,30,175,26],[174,32,175,28],[175,10,176,6],[175,17,176,13],[175,21,176,17],[176,8,177,4],[177,8,179,4],[177,12,179,10,"position"],[177,20,179,18],[177,23,179,21],[177,27,179,25],[177,28,179,26,"compareDocumentPosition"],[177,51,179,49],[177,52,179,50,"otherNode"],[177,61,179,59],[177,62,179,60],[178,8,180,4],[179,8,181,4],[179,15,181,11],[179,16,181,12,"position"],[179,24,181,20],[179,27,181,23,"ReadOnlyNode"],[179,39,181,35],[179,40,181,36,"DOCUMENT_POSITION_CONTAINED_BY"],[179,70,181,66],[179,76,181,72],[179,77,181,73],[180,6,182,2],[181,4,182,3],[182,6,182,3,"key"],[182,9,182,3],[183,6,182,3,"value"],[183,11,182,3],[183,13,184,2],[183,22,184,2,"getRootNode"],[183,33,184,13,"getRootNode"],[183,34,184,13],[183,36,184,30],[184,8,185,4],[185,8,186,4],[185,12,186,8,"lastKnownParent"],[185,27,186,37],[185,30,186,40],[185,34,186,44],[186,8,187,4],[186,12,187,8,"nextPossibleParent"],[186,30,187,41],[186,33,187,44],[186,37,187,48],[186,38,187,49,"parentNode"],[186,48,187,59],[187,8,189,4],[187,15,189,11,"nextPossibleParent"],[187,33,189,29],[187,37,189,33],[187,41,189,37],[187,43,189,39],[188,10,190,6,"lastKnownParent"],[188,25,190,21],[188,28,190,24,"nextPossibleParent"],[188,46,190,42],[189,10,191,6,"nextPossibleParent"],[189,28,191,24],[189,31,191,27,"nextPossibleParent"],[189,49,191,45],[189,50,191,46,"parentNode"],[189,60,191,56],[190,8,192,4],[191,8,194,4],[191,15,194,11,"lastKnownParent"],[191,30,194,26],[192,6,195,2],[193,4,195,3],[194,6,195,3,"key"],[194,9,195,3],[195,6,195,3,"value"],[195,11,195,3],[195,13,197,2],[195,22,197,2,"hasChildNodes"],[195,35,197,15,"hasChildNodes"],[195,36,197,15],[195,38,197,27],[196,8,198,4],[196,15,198,11,"getChildNodes"],[196,28,198,24],[196,29,198,25],[196,33,198,29],[196,34,198,30],[196,35,198,31,"length"],[196,41,198,37],[196,44,198,40],[196,45,198,41],[197,6,199,2],[199,6,201,2],[200,0,202,0],[201,0,203,0],[203,6,205,2],[204,0,206,0],[205,0,207,0],[206,4,205,2],[207,2,205,2],[208,2,27,21,"ReadOnlyNode"],[208,14,27,33],[208,15,208,9,"ELEMENT_NODE"],[208,27,208,21],[208,30,208,32],[208,31,208,33],[209,2,209,2],[210,0,210,0],[211,0,211,0],[212,2,27,21,"ReadOnlyNode"],[212,14,27,33],[212,15,212,9,"ATTRIBUTE_NODE"],[212,29,212,23],[212,32,212,34],[212,33,212,35],[213,2,213,2],[214,0,214,0],[215,0,215,0],[216,2,27,21,"ReadOnlyNode"],[216,14,27,33],[216,15,216,9,"TEXT_NODE"],[216,24,216,18],[216,27,216,29],[216,28,216,30],[217,2,217,2],[218,0,218,0],[219,0,219,0],[220,2,27,21,"ReadOnlyNode"],[220,14,27,33],[220,15,220,9,"CDATA_SECTION_NODE"],[220,33,220,27],[220,36,220,38],[220,37,220,39],[221,2,221,2],[222,0,222,0],[223,0,223,0],[224,2,27,21,"ReadOnlyNode"],[224,14,27,33],[224,15,224,9,"ENTITY_REFERENCE_NODE"],[224,36,224,30],[224,39,224,41],[224,40,224,42],[225,2,225,2],[226,0,226,0],[227,0,227,0],[228,2,27,21,"ReadOnlyNode"],[228,14,27,33],[228,15,228,9,"ENTITY_NODE"],[228,26,228,20],[228,29,228,31],[228,30,228,32],[229,2,229,2],[230,0,230,0],[231,0,231,0],[232,2,27,21,"ReadOnlyNode"],[232,14,27,33],[232,15,232,9,"PROCESSING_INSTRUCTION_NODE"],[232,42,232,36],[232,45,232,47],[232,46,232,48],[233,2,233,2],[234,0,234,0],[235,0,235,0],[236,2,27,21,"ReadOnlyNode"],[236,14,27,33],[236,15,236,9,"COMMENT_NODE"],[236,27,236,21],[236,30,236,32],[236,31,236,33],[237,2,237,2],[238,0,238,0],[239,0,239,0],[240,2,27,21,"ReadOnlyNode"],[240,14,27,33],[240,15,240,9,"DOCUMENT_NODE"],[240,28,240,22],[240,31,240,33],[240,32,240,34],[241,2,241,2],[242,0,242,0],[243,0,243,0],[244,2,27,21,"ReadOnlyNode"],[244,14,27,33],[244,15,244,9,"DOCUMENT_TYPE_NODE"],[244,33,244,27],[244,36,244,38],[244,38,244,40],[245,2,245,2],[246,0,246,0],[247,0,247,0],[248,2,27,21,"ReadOnlyNode"],[248,14,27,33],[248,15,248,9,"DOCUMENT_FRAGMENT_NODE"],[248,37,248,31],[248,40,248,42],[248,42,248,44],[249,2,249,2],[250,0,250,0],[251,0,251,0],[252,2,27,21,"ReadOnlyNode"],[252,14,27,33],[252,15,252,9,"NOTATION_NODE"],[252,28,252,22],[252,31,252,33],[252,33,252,35],[253,2,254,2],[254,0,255,0],[255,0,256,0],[256,0,257,0],[257,2,259,2],[258,0,260,0],[259,0,261,0],[260,2,27,21,"ReadOnlyNode"],[260,14,27,33],[260,15,262,9,"DOCUMENT_POSITION_DISCONNECTED"],[260,45,262,39],[260,48,262,50],[260,49,262,51],[261,2,263,2],[262,0,264,0],[263,0,265,0],[264,0,266,0],[265,0,267,0],[266,2,27,21,"ReadOnlyNode"],[266,14,27,33],[266,15,268,9,"DOCUMENT_POSITION_PRECEDING"],[266,42,268,36],[266,45,268,47],[266,46,268,48],[267,2,269,2],[268,0,270,0],[269,0,271,0],[270,0,272,0],[271,0,273,0],[272,2,27,21,"ReadOnlyNode"],[272,14,27,33],[272,15,274,9,"DOCUMENT_POSITION_FOLLOWING"],[272,42,274,36],[272,45,274,47],[272,46,274,48],[273,2,275,2],[274,0,276,0],[275,0,277,0],[276,2,27,21,"ReadOnlyNode"],[276,14,27,33],[276,15,278,9,"DOCUMENT_POSITION_CONTAINS"],[276,41,278,35],[276,44,278,46],[276,45,278,47],[277,2,279,2],[278,0,280,0],[279,0,281,0],[280,2,27,21,"ReadOnlyNode"],[280,14,27,33],[280,15,282,9,"DOCUMENT_POSITION_CONTAINED_BY"],[280,45,282,39],[280,48,282,50],[280,50,282,52],[281,2,283,2],[282,0,284,0],[283,0,285,0],[284,2,27,21,"ReadOnlyNode"],[284,14,27,33],[284,15,286,9,"DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC"],[284,56,286,50],[284,59,286,61],[284,61,286,63],[285,2,289,0],[285,6,289,6,"INSTANCE_HANDLE_KEY"],[285,25,289,25],[285,28,289,28,"Symbol"],[285,34,289,34],[285,35,289,35],[285,59,289,59],[285,60,289,60],[286,2,291,7],[286,11,291,16,"getInstanceHandle"],[286,28,291,33,"getInstanceHandle"],[286,29,291,34,"node"],[286,33,291,52],[286,35,291,78],[287,4,292,2],[288,4,293,2],[288,11,293,9,"node"],[288,15,293,13],[288,16,293,14,"INSTANCE_HANDLE_KEY"],[288,35,293,33],[288,36,293,34],[289,2,294,0],[290,2,296,0],[290,11,296,9,"setInstanceHandle"],[290,28,296,26,"setInstanceHandle"],[290,29,297,2,"node"],[290,33,297,20],[290,35,298,2,"instanceHandle"],[290,49,298,40],[290,51,299,8],[291,4,300,2],[292,4,301,2,"node"],[292,8,301,6],[292,9,301,7,"INSTANCE_HANDLE_KEY"],[292,28,301,26],[292,29,301,27],[292,32,301,30,"instanceHandle"],[292,46,301,44],[293,2,302,0],[294,2,304,7],[294,11,304,16,"getShadowNode"],[294,24,304,29,"getShadowNode"],[294,25,304,30,"node"],[294,29,304,48],[294,31,304,63],[295,4,305,2],[296,4,306,2],[297,4,307,2],[297,8,307,8,"ReactFabric"],[297,19,307,19],[297,22,307,22,"require"],[297,33,307,29],[297,34,307,29,"_dependencyMap"],[297,48,307,29],[297,106,307,83],[297,107,307,84],[298,4,308,2],[298,11,308,9,"ReactFabric"],[298,22,308,20],[298,23,308,21,"getNodeFromInternalInstanceHandle"],[298,56,308,54],[298,57,308,55,"getInstanceHandle"],[298,74,308,72],[298,75,308,73,"node"],[298,79,308,77],[298,80,308,78],[298,81,308,79],[299,2,309,0],[300,2,311,7],[300,11,311,16,"getChildNodes"],[300,24,311,29,"getChildNodes"],[300,25,312,2,"node"],[300,29,312,20],[300,31,313,32],[301,4,314,2],[301,8,314,8,"shadowNode"],[301,18,314,18],[301,21,314,21,"getShadowNode"],[301,34,314,34],[301,35,314,35,"node"],[301,39,314,39],[301,40,314,40],[302,4,316,2],[302,8,316,6,"shadowNode"],[302,18,316,16],[302,22,316,20],[302,26,316,24],[302,28,316,26],[303,6,317,4],[303,13,317,11],[303,15,317,13],[304,4,318,2],[305,4,320,2],[305,8,320,8,"childNodeInstanceHandles"],[305,32,320,32],[305,35,320,35,"NativeDOM"],[305,53,320,44],[305,54,320,45,"getChildNodes"],[305,67,320,58],[305,68,320,59,"shadowNode"],[305,78,320,69],[305,79,320,70],[306,4,321,2],[306,11,321,9,"childNodeInstanceHandles"],[306,35,321,33],[306,36,322,5,"map"],[306,39,322,8],[306,40,322,9],[306,50,322,9,"instanceHandle"],[306,64,322,23],[307,6,322,23],[307,13,323,6,"getPublicInstanceFromInternalInstanceHandle"],[307,56,323,49],[307,57,323,50,"instanceHandle"],[307,71,323,64],[307,72,323,65],[308,4,323,65],[308,5,324,4],[308,6,324,5],[308,7,325,5,"filter"],[308,13,325,11],[308,14,325,12,"Boolean"],[308,21,325,19],[308,22,325,20],[309,2,326,0],[310,2,328,0],[310,11,328,9,"getNodeSiblingsAndPosition"],[310,37,328,35,"getNodeSiblingsAndPosition"],[310,38,329,2,"node"],[310,42,329,20],[310,44,330,42],[311,4,331,2],[311,8,331,8,"parent"],[311,14,331,14],[311,17,331,17,"node"],[311,21,331,21],[311,22,331,22,"parentNode"],[311,32,331,32],[312,4,332,2],[312,8,332,6,"parent"],[312,14,332,12],[312,18,332,16],[312,22,332,20],[312,24,332,22],[313,6,333,4],[314,6,334,4],[314,13,334,11],[314,14,334,12],[314,15,334,13,"node"],[314,19,334,17],[314,20,334,18],[314,22,334,20],[314,23,334,21],[314,24,334,22],[315,4,335,2],[316,4,337,2],[316,8,337,8,"siblings"],[316,16,337,16],[316,19,337,19,"getChildNodes"],[316,32,337,32],[316,33,337,33,"parent"],[316,39,337,39],[316,40,337,40],[317,4,338,2],[317,8,338,8,"position"],[317,16,338,16],[317,19,338,19,"siblings"],[317,27,338,27],[317,28,338,28,"indexOf"],[317,35,338,35],[317,36,338,36,"node"],[317,40,338,40],[317,41,338,41],[318,4,340,2],[318,8,340,6,"position"],[318,16,340,14],[318,21,340,19],[318,22,340,20],[318,23,340,21],[318,25,340,23],[319,6,341,4],[319,12,341,10],[319,16,341,14,"TypeError"],[319,25,341,23],[319,26,341,24],[319,68,341,66],[319,69,341,67],[320,4,342,2],[321,4,344,2],[321,11,344,9],[321,12,344,10,"siblings"],[321,20,344,18],[321,22,344,20,"position"],[321,30,344,28],[321,31,344,29],[322,2,345,0],[323,2,347,7],[323,11,347,16,"getPublicInstanceFromInternalInstanceHandle"],[323,54,347,59,"getPublicInstanceFromInternalInstanceHandle"],[323,55,348,2,"instanceHandle"],[323,69,348,40],[323,71,349,17],[324,4,350,2],[325,4,351,2],[326,4,352,2],[326,8,352,8,"ReactFabric"],[326,19,352,19],[326,22,352,22,"require"],[326,33,352,29],[326,34,352,29,"_dependencyMap"],[326,48,352,29],[326,106,352,83],[326,107,352,84],[327,4,353,2],[327,8,353,8,"mixedPublicInstance"],[327,27,353,27],[327,30,354,4,"ReactFabric"],[327,41,354,15],[327,42,354,16,"getPublicInstanceFromInternalInstanceHandle"],[327,85,354,59],[327,86,354,60,"instanceHandle"],[327,100,354,74],[327,101,354,75],[328,4,355,2],[329,4,356,2],[329,11,356,9,"mixedPublicInstance"],[329,30,356,28],[330,2,357,0],[331,0,357,1],[331,3]],"functionMap":{"names":["<global>","ReadOnlyNode","constructor","get__childNodes","get__firstChild","get__isConnected","get__lastChild","get__nextSibling","get__nodeName","get__nodeType","get__nodeValue","get__parentElement","get__parentNode","get__previousSibling","get__textContent","compareDocumentPosition","contains","getRootNode","hasChildNodes","getInstanceHandle","setInstanceHandle","getShadowNode","getChildNodes","childNodeInstanceHandles.map$argument_0","getNodeSiblingsAndPosition","getPublicInstanceFromInternalInstanceHandle"],"mappings":"AAA;eC0B;ECC;GDE;EEE;GFG;EGE;GHQ;EIE;GJQ;EKE;GLQ;EME;GNS;EOK;GPI;EQK;GRI;ESK;GTI;EUE;GVa;EWE;GXgB;EYE;GZS;EaK;GbI;EcE;Gdc;EeE;GfQ;EgBE;GhBW;EiBE;GjBE;CDwF;OmBI;CnBG;AoBE;CpBM;OqBE;CrBK;OsBE;SCW;iEDC;CtBG;AwBE;CxBiB;OyBE;CzBU"}},"type":"js/module"}]}