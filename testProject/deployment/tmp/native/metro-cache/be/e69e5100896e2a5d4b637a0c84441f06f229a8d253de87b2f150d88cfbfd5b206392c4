{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":300,"column":0,"index":7325}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":300,"column":0,"index":7325}}],"key":"ohGilxjVqjyE1GooDVDt9OYg9x0="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":300,"column":0,"index":7325}}],"key":"V6GYoXnblvuuGHJNMy7MHyaunsU="}},{"name":"../Performance/Systrace","data":{"asyncType":null,"locs":[{"start":{"line":18,"column":0,"index":326},"end":{"line":18,"column":52,"index":378}}],"key":"8BbC2DX1/RekdS3q6H5EDxQpVLU="}},{"name":"./infoLog","data":{"asyncType":null,"locs":[{"start":{"line":19,"column":0,"index":379},"end":{"line":19,"column":32,"index":411}}],"key":"SSHVtWIKHjYEbWCVN1RC0UTeszg="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = createPerformanceLogger;\n  exports.getCurrentTimestamp = void 0;\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n  var Systrace = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[3], \"../Performance/Systrace\"));\n  var _infoLog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"./infoLog\"));\n  var _global$nativeQPLTime;\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * \n   * @format\n   */\n  function _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\n  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\n  var _cookies = {};\n  var PRINT_TO_CONSOLE = false; // Type as false to prevent accidentally committing `true`;\n\n  var getCurrentTimestamp = exports.getCurrentTimestamp = (_global$nativeQPLTime = global.nativeQPLTimestamp) != null ? _global$nativeQPLTime : function () {\n    return global.performance.now();\n  };\n  var PerformanceLogger = /*#__PURE__*/function () {\n    function PerformanceLogger() {\n      (0, _classCallCheck2.default)(this, PerformanceLogger);\n      this._timespans = {};\n      this._extras = {};\n      this._points = {};\n      this._pointExtras = {};\n      this._closed = false;\n    }\n    return (0, _createClass2.default)(PerformanceLogger, [{\n      key: \"addTimespan\",\n      value: function addTimespan(key, startTime, endTime, startExtras, endExtras) {\n        if (this._closed) {\n          if (PRINT_TO_CONSOLE && __DEV__) {\n            (0, _infoLog.default)('PerformanceLogger: addTimespan - has closed ignoring: ', key);\n          }\n          return;\n        }\n        if (this._timespans[key]) {\n          if (PRINT_TO_CONSOLE && __DEV__) {\n            (0, _infoLog.default)('PerformanceLogger: Attempting to add a timespan that already exists ', key);\n          }\n          return;\n        }\n        this._timespans[key] = {\n          startTime: startTime,\n          endTime: endTime,\n          totalTime: endTime - (startTime || 0),\n          startExtras: startExtras,\n          endExtras: endExtras\n        };\n      }\n    }, {\n      key: \"append\",\n      value: function append(performanceLogger) {\n        this._timespans = Object.assign({}, performanceLogger.getTimespans(), this._timespans);\n        this._extras = Object.assign({}, performanceLogger.getExtras(), this._extras);\n        this._points = Object.assign({}, performanceLogger.getPoints(), this._points);\n        this._pointExtras = Object.assign({}, performanceLogger.getPointExtras(), this._pointExtras);\n      }\n    }, {\n      key: \"clear\",\n      value: function clear() {\n        this._timespans = {};\n        this._extras = {};\n        this._points = {};\n        if (PRINT_TO_CONSOLE) {\n          (0, _infoLog.default)('PerformanceLogger.js', 'clear');\n        }\n      }\n    }, {\n      key: \"clearCompleted\",\n      value: function clearCompleted() {\n        for (var _key in this._timespans) {\n          var _this$_timespans$_key;\n          if (((_this$_timespans$_key = this._timespans[_key]) == null ? void 0 : _this$_timespans$_key.totalTime) != null) {\n            delete this._timespans[_key];\n          }\n        }\n        this._extras = {};\n        this._points = {};\n        if (PRINT_TO_CONSOLE) {\n          (0, _infoLog.default)('PerformanceLogger.js', 'clearCompleted');\n        }\n      }\n    }, {\n      key: \"close\",\n      value: function close() {\n        this._closed = true;\n      }\n    }, {\n      key: \"currentTimestamp\",\n      value: function currentTimestamp() {\n        return getCurrentTimestamp();\n      }\n    }, {\n      key: \"getExtras\",\n      value: function getExtras() {\n        return this._extras;\n      }\n    }, {\n      key: \"getPoints\",\n      value: function getPoints() {\n        return this._points;\n      }\n    }, {\n      key: \"getPointExtras\",\n      value: function getPointExtras() {\n        return this._pointExtras;\n      }\n    }, {\n      key: \"getTimespans\",\n      value: function getTimespans() {\n        return this._timespans;\n      }\n    }, {\n      key: \"hasTimespan\",\n      value: function hasTimespan(key) {\n        return !!this._timespans[key];\n      }\n    }, {\n      key: \"isClosed\",\n      value: function isClosed() {\n        return this._closed;\n      }\n    }, {\n      key: \"logEverything\",\n      value: function logEverything() {\n        if (PRINT_TO_CONSOLE) {\n          // log timespans\n          for (var _key2 in this._timespans) {\n            var _this$_timespans$_key2;\n            if (((_this$_timespans$_key2 = this._timespans[_key2]) == null ? void 0 : _this$_timespans$_key2.totalTime) != null) {\n              (0, _infoLog.default)(_key2 + ': ' + this._timespans[_key2].totalTime + 'ms');\n            }\n          }\n\n          // log extras\n          (0, _infoLog.default)(this._extras);\n\n          // log points\n          for (var _key3 in this._points) {\n            if (this._points[_key3] != null) {\n              (0, _infoLog.default)(_key3 + ': ' + this._points[_key3] + 'ms');\n            }\n          }\n        }\n      }\n    }, {\n      key: \"markPoint\",\n      value: function markPoint(key) {\n        var timestamp = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : getCurrentTimestamp();\n        var extras = arguments.length > 2 ? arguments[2] : undefined;\n        if (this._closed) {\n          if (PRINT_TO_CONSOLE && __DEV__) {\n            (0, _infoLog.default)('PerformanceLogger: markPoint - has closed ignoring: ', key);\n          }\n          return;\n        }\n        if (this._points[key] != null) {\n          if (PRINT_TO_CONSOLE && __DEV__) {\n            (0, _infoLog.default)('PerformanceLogger: Attempting to mark a point that has been already logged ', key);\n          }\n          return;\n        }\n        this._points[key] = timestamp;\n        if (extras) {\n          this._pointExtras[key] = extras;\n        }\n      }\n    }, {\n      key: \"removeExtra\",\n      value: function removeExtra(key) {\n        var value = this._extras[key];\n        delete this._extras[key];\n        return value;\n      }\n    }, {\n      key: \"setExtra\",\n      value: function setExtra(key, value) {\n        if (this._closed) {\n          if (PRINT_TO_CONSOLE && __DEV__) {\n            (0, _infoLog.default)('PerformanceLogger: setExtra - has closed ignoring: ', key);\n          }\n          return;\n        }\n        if (this._extras.hasOwnProperty(key)) {\n          if (PRINT_TO_CONSOLE && __DEV__) {\n            (0, _infoLog.default)('PerformanceLogger: Attempting to set an extra that already exists ', {\n              key: key,\n              currentValue: this._extras[key],\n              attemptedValue: value\n            });\n          }\n          return;\n        }\n        this._extras[key] = value;\n      }\n    }, {\n      key: \"startTimespan\",\n      value: function startTimespan(key) {\n        var timestamp = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : getCurrentTimestamp();\n        var extras = arguments.length > 2 ? arguments[2] : undefined;\n        if (this._closed) {\n          if (PRINT_TO_CONSOLE && __DEV__) {\n            (0, _infoLog.default)('PerformanceLogger: startTimespan - has closed ignoring: ', key);\n          }\n          return;\n        }\n        if (this._timespans[key]) {\n          if (PRINT_TO_CONSOLE && __DEV__) {\n            (0, _infoLog.default)('PerformanceLogger: Attempting to start a timespan that already exists ', key);\n          }\n          return;\n        }\n        this._timespans[key] = {\n          startTime: timestamp,\n          startExtras: extras\n        };\n        _cookies[key] = Systrace.beginAsyncEvent(key);\n        if (PRINT_TO_CONSOLE) {\n          (0, _infoLog.default)('PerformanceLogger.js', 'start: ' + key);\n        }\n      }\n    }, {\n      key: \"stopTimespan\",\n      value: function stopTimespan(key) {\n        var timestamp = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : getCurrentTimestamp();\n        var extras = arguments.length > 2 ? arguments[2] : undefined;\n        if (this._closed) {\n          if (PRINT_TO_CONSOLE && __DEV__) {\n            (0, _infoLog.default)('PerformanceLogger: stopTimespan - has closed ignoring: ', key);\n          }\n          return;\n        }\n        var timespan = this._timespans[key];\n        if (!timespan || timespan.startTime == null) {\n          if (PRINT_TO_CONSOLE && __DEV__) {\n            (0, _infoLog.default)('PerformanceLogger: Attempting to end a timespan that has not started ', key);\n          }\n          return;\n        }\n        if (timespan.endTime != null) {\n          if (PRINT_TO_CONSOLE && __DEV__) {\n            (0, _infoLog.default)('PerformanceLogger: Attempting to end a timespan that has already ended ', key);\n          }\n          return;\n        }\n        timespan.endExtras = extras;\n        timespan.endTime = timestamp;\n        timespan.totalTime = timespan.endTime - (timespan.startTime || 0);\n        if (PRINT_TO_CONSOLE) {\n          (0, _infoLog.default)('PerformanceLogger.js', 'end: ' + key);\n        }\n        if (_cookies[key] != null) {\n          Systrace.endAsyncEvent(key, _cookies[key]);\n          delete _cookies[key];\n        }\n      }\n    }]);\n  }(); // Re-exporting for backwards compatibility with all the clients that\n  // may still import it from this module.\n  /**\n   * This function creates performance loggers that can be used to collect and log\n   * various performance data such as timespans, points and extras.\n   * The loggers need to have minimal overhead since they're used in production.\n   */\n  function createPerformanceLogger() {\n    return new PerformanceLogger();\n  }\n});","lineCount":280,"map":[[10,2,18,0],[10,6,18,0,"Systrace"],[10,14,18,0],[10,17,18,0,"_interopRequireWildcard"],[10,40,18,0],[10,41,18,0,"_$$_REQUIRE"],[10,52,18,0],[10,53,18,0,"_dependencyMap"],[10,67,18,0],[11,2,19,0],[11,6,19,0,"_infoLog"],[11,14,19,0],[11,17,19,0,"_interopRequireDefault"],[11,39,19,0],[11,40,19,0,"_$$_REQUIRE"],[11,51,19,0],[11,52,19,0,"_dependencyMap"],[11,66,19,0],[12,2,19,32],[12,6,19,32,"_global$nativeQPLTime"],[12,27,19,32],[13,2,1,0],[14,0,2,0],[15,0,3,0],[16,0,4,0],[17,0,5,0],[18,0,6,0],[19,0,7,0],[20,0,8,0],[21,0,9,0],[22,2,1,0],[22,11,1,0,"_getRequireWildcardCache"],[22,36,1,0,"e"],[22,37,1,0],[22,66,1,0,"WeakMap"],[22,73,1,0],[22,92,1,0,"r"],[22,93,1,0],[22,100,1,0,"WeakMap"],[22,107,1,0],[22,111,1,0,"t"],[22,112,1,0],[22,119,1,0,"WeakMap"],[22,126,1,0],[22,138,1,0,"_getRequireWildcardCache"],[22,162,1,0],[22,174,1,0,"_getRequireWildcardCache"],[22,199,1,0,"e"],[22,200,1,0],[22,211,1,0,"e"],[22,212,1,0],[22,215,1,0,"t"],[22,216,1,0],[22,219,1,0,"r"],[22,220,1,0],[22,225,1,0,"e"],[22,226,1,0],[23,2,1,0],[23,11,1,0,"_interopRequireWildcard"],[23,35,1,0,"e"],[23,36,1,0],[23,38,1,0,"r"],[23,39,1,0],[23,48,1,0,"r"],[23,49,1,0],[23,53,1,0,"e"],[23,54,1,0],[23,58,1,0,"e"],[23,59,1,0],[23,60,1,0,"__esModule"],[23,70,1,0],[23,79,1,0,"e"],[23,80,1,0],[23,95,1,0,"e"],[23,96,1,0],[23,119,1,0,"e"],[23,120,1,0],[23,145,1,0,"e"],[23,146,1,0],[23,157,1,0,"default"],[23,164,1,0],[23,166,1,0,"e"],[23,167,1,0],[23,175,1,0,"t"],[23,176,1,0],[23,179,1,0,"_getRequireWildcardCache"],[23,203,1,0],[23,204,1,0,"r"],[23,205,1,0],[23,212,1,0,"t"],[23,213,1,0],[23,217,1,0,"t"],[23,218,1,0],[23,219,1,0,"has"],[23,222,1,0],[23,223,1,0,"e"],[23,224,1,0],[23,234,1,0,"t"],[23,235,1,0],[23,236,1,0,"get"],[23,239,1,0],[23,240,1,0,"e"],[23,241,1,0],[23,248,1,0,"n"],[23,249,1,0],[23,254,1,0,"__proto__"],[23,263,1,0],[23,273,1,0,"a"],[23,274,1,0],[23,277,1,0,"Object"],[23,283,1,0],[23,284,1,0,"defineProperty"],[23,298,1,0],[23,302,1,0,"Object"],[23,308,1,0],[23,309,1,0,"getOwnPropertyDescriptor"],[23,333,1,0],[23,344,1,0,"u"],[23,345,1,0],[23,349,1,0,"e"],[23,350,1,0],[23,370,1,0,"u"],[23,371,1,0],[23,378,1,0,"hasOwnProperty"],[23,392,1,0],[23,393,1,0,"call"],[23,397,1,0],[23,398,1,0,"e"],[23,399,1,0],[23,401,1,0,"u"],[23,402,1,0],[23,411,1,0,"i"],[23,412,1,0],[23,415,1,0,"a"],[23,416,1,0],[23,419,1,0,"Object"],[23,425,1,0],[23,426,1,0,"getOwnPropertyDescriptor"],[23,450,1,0],[23,451,1,0,"e"],[23,452,1,0],[23,454,1,0,"u"],[23,455,1,0],[23,465,1,0,"i"],[23,466,1,0],[23,471,1,0,"i"],[23,472,1,0],[23,473,1,0,"get"],[23,476,1,0],[23,480,1,0,"i"],[23,481,1,0],[23,482,1,0,"set"],[23,485,1,0],[23,489,1,0,"Object"],[23,495,1,0],[23,496,1,0,"defineProperty"],[23,510,1,0],[23,511,1,0,"n"],[23,512,1,0],[23,514,1,0,"u"],[23,515,1,0],[23,517,1,0,"i"],[23,518,1,0],[23,522,1,0,"n"],[23,523,1,0],[23,524,1,0,"u"],[23,525,1,0],[23,529,1,0,"e"],[23,530,1,0],[23,531,1,0,"u"],[23,532,1,0],[23,544,1,0,"n"],[23,545,1,0],[23,546,1,0,"default"],[23,553,1,0],[23,556,1,0,"e"],[23,557,1,0],[23,559,1,0,"t"],[23,560,1,0],[23,564,1,0,"t"],[23,565,1,0],[23,566,1,0,"set"],[23,569,1,0],[23,570,1,0,"e"],[23,571,1,0],[23,573,1,0,"n"],[23,574,1,0],[23,577,1,0,"n"],[23,578,1,0],[24,2,21,0],[24,6,21,6,"_cookies"],[24,14,21,44],[24,17,21,47],[24,18,21,48],[24,19,21,49],[25,2,23,0],[25,6,23,6,"PRINT_TO_CONSOLE"],[25,22,23,29],[25,25,23,32],[25,30,23,37],[25,31,23,38],[25,32,23,39],[27,2,25,7],[27,6,25,13,"getCurrentTimestamp"],[27,25,25,46],[27,28,25,46,"exports"],[27,35,25,46],[27,36,25,46,"getCurrentTimestamp"],[27,55,25,46],[27,59,25,46,"_global$nativeQPLTime"],[27,80,25,46],[27,83,26,2,"global"],[27,89,26,8],[27,90,26,9,"nativeQPLTimestamp"],[27,108,26,27],[27,120,26,27,"_global$nativeQPLTime"],[27,141,26,27],[27,144,26,32],[28,4,26,32],[28,11,26,38,"global"],[28,17,26,44],[28,18,26,45,"performance"],[28,29,26,56],[28,30,26,57,"now"],[28,33,26,60],[28,34,26,61],[28,35,26,62],[29,2,26,62],[29,3,26,63],[30,2,26,64],[30,6,28,6,"PerformanceLogger"],[30,23,28,23],[31,4,28,23],[31,13,28,23,"PerformanceLogger"],[31,31,28,23],[32,6,28,23],[32,10,28,23,"_classCallCheck2"],[32,26,28,23],[32,27,28,23,"default"],[32,34,28,23],[32,42,28,23,"PerformanceLogger"],[32,59,28,23],[33,6,28,23],[33,11,29,2,"_timespans"],[33,21,29,12],[33,24,29,43],[33,25,29,44],[33,26,29,45],[34,6,29,45],[34,11,30,2,"_extras"],[34,18,30,9],[34,21,30,42],[34,22,30,43],[34,23,30,44],[35,6,30,44],[35,11,31,2,"_points"],[35,18,31,9],[35,21,31,38],[35,22,31,39],[35,23,31,40],[36,6,31,40],[36,11,32,2,"_pointExtras"],[36,23,32,14],[36,26,32,48],[36,27,32,49],[36,28,32,50],[37,6,32,50],[37,11,33,2,"_closed"],[37,18,33,9],[37,21,33,21],[37,26,33,26],[38,4,33,26],[39,4,33,26],[39,15,33,26,"_createClass2"],[39,28,33,26],[39,29,33,26,"default"],[39,36,33,26],[39,38,33,26,"PerformanceLogger"],[39,55,33,26],[40,6,33,26,"key"],[40,9,33,26],[41,6,33,26,"value"],[41,11,33,26],[41,13,35,2],[41,22,35,2,"addTimespan"],[41,33,35,13,"addTimespan"],[41,34,36,4,"key"],[41,37,36,15],[41,39,37,4,"startTime"],[41,48,37,21],[41,50,38,4,"endTime"],[41,57,38,19],[41,59,39,4,"startExtras"],[41,70,39,24],[41,72,40,4,"endExtras"],[41,81,40,22],[41,83,41,4],[42,8,42,4],[42,12,42,8],[42,16,42,12],[42,17,42,13,"_closed"],[42,24,42,20],[42,26,42,22],[43,10,43,6],[43,14,43,10,"PRINT_TO_CONSOLE"],[43,30,43,26],[43,34,43,30,"__DEV__"],[43,41,43,37],[43,43,43,39],[44,12,44,8],[44,16,44,8,"infoLog"],[44,32,44,15],[44,34,44,16],[44,90,44,72],[44,92,44,74,"key"],[44,95,44,77],[44,96,44,78],[45,10,45,6],[46,10,46,6],[47,8,47,4],[48,8,48,4],[48,12,48,8],[48,16,48,12],[48,17,48,13,"_timespans"],[48,27,48,23],[48,28,48,24,"key"],[48,31,48,27],[48,32,48,28],[48,34,48,30],[49,10,49,6],[49,14,49,10,"PRINT_TO_CONSOLE"],[49,30,49,26],[49,34,49,30,"__DEV__"],[49,41,49,37],[49,43,49,39],[50,12,50,8],[50,16,50,8,"infoLog"],[50,32,50,15],[50,34,51,10],[50,104,51,80],[50,106,52,10,"key"],[50,109,53,8],[50,110,53,9],[51,10,54,6],[52,10,55,6],[53,8,56,4],[54,8,58,4],[54,12,58,8],[54,13,58,9,"_timespans"],[54,23,58,19],[54,24,58,20,"key"],[54,27,58,23],[54,28,58,24],[54,31,58,27],[55,10,59,6,"startTime"],[55,19,59,15],[55,21,59,6,"startTime"],[55,30,59,15],[56,10,60,6,"endTime"],[56,17,60,13],[56,19,60,6,"endTime"],[56,26,60,13],[57,10,61,6,"totalTime"],[57,19,61,15],[57,21,61,17,"endTime"],[57,28,61,24],[57,32,61,28,"startTime"],[57,41,61,37],[57,45,61,41],[57,46,61,42],[57,47,61,43],[58,10,62,6,"startExtras"],[58,21,62,17],[58,23,62,6,"startExtras"],[58,34,62,17],[59,10,63,6,"endExtras"],[59,19,63,15],[59,21,63,6,"endExtras"],[60,8,64,4],[60,9,64,5],[61,6,65,2],[62,4,65,3],[63,6,65,3,"key"],[63,9,65,3],[64,6,65,3,"value"],[64,11,65,3],[64,13,67,2],[64,22,67,2,"append"],[64,28,67,8,"append"],[64,29,67,9,"performanceLogger"],[64,46,67,46],[64,48,67,48],[65,8,68,4],[65,12,68,8],[65,13,68,9,"_timespans"],[65,23,68,19],[65,26,68,19,"Object"],[65,32,68,19],[65,33,68,19,"assign"],[65,39,68,19],[65,44,69,9,"performanceLogger"],[65,61,69,26],[65,62,69,27,"getTimespans"],[65,74,69,39],[65,75,69,40],[65,76,69,41],[65,78,70,9],[65,82,70,13],[65,83,70,14,"_timespans"],[65,93,70,24],[65,94,71,5],[66,8,72,4],[66,12,72,8],[66,13,72,9,"_extras"],[66,20,72,16],[66,23,72,16,"Object"],[66,29,72,16],[66,30,72,16,"assign"],[66,36,72,16],[66,41,72,23,"performanceLogger"],[66,58,72,40],[66,59,72,41,"getExtras"],[66,68,72,50],[66,69,72,51],[66,70,72,52],[66,72,72,57],[66,76,72,61],[66,77,72,62,"_extras"],[66,84,72,69],[66,85,72,70],[67,8,73,4],[67,12,73,8],[67,13,73,9,"_points"],[67,20,73,16],[67,23,73,16,"Object"],[67,29,73,16],[67,30,73,16,"assign"],[67,36,73,16],[67,41,73,23,"performanceLogger"],[67,58,73,40],[67,59,73,41,"getPoints"],[67,68,73,50],[67,69,73,51],[67,70,73,52],[67,72,73,57],[67,76,73,61],[67,77,73,62,"_points"],[67,84,73,69],[67,85,73,70],[68,8,74,4],[68,12,74,8],[68,13,74,9,"_pointExtras"],[68,25,74,21],[68,28,74,21,"Object"],[68,34,74,21],[68,35,74,21,"assign"],[68,41,74,21],[68,46,75,9,"performanceLogger"],[68,63,75,26],[68,64,75,27,"getPointExtras"],[68,78,75,41],[68,79,75,42],[68,80,75,43],[68,82,76,9],[68,86,76,13],[68,87,76,14,"_pointExtras"],[68,99,76,26],[68,100,77,5],[69,6,78,2],[70,4,78,3],[71,6,78,3,"key"],[71,9,78,3],[72,6,78,3,"value"],[72,11,78,3],[72,13,80,2],[72,22,80,2,"clear"],[72,27,80,7,"clear"],[72,28,80,7],[72,30,80,10],[73,8,81,4],[73,12,81,8],[73,13,81,9,"_timespans"],[73,23,81,19],[73,26,81,22],[73,27,81,23],[73,28,81,24],[74,8,82,4],[74,12,82,8],[74,13,82,9,"_extras"],[74,20,82,16],[74,23,82,19],[74,24,82,20],[74,25,82,21],[75,8,83,4],[75,12,83,8],[75,13,83,9,"_points"],[75,20,83,16],[75,23,83,19],[75,24,83,20],[75,25,83,21],[76,8,84,4],[76,12,84,8,"PRINT_TO_CONSOLE"],[76,28,84,24],[76,30,84,26],[77,10,85,6],[77,14,85,6,"infoLog"],[77,30,85,13],[77,32,85,14],[77,54,85,36],[77,56,85,38],[77,63,85,45],[77,64,85,46],[78,8,86,4],[79,6,87,2],[80,4,87,3],[81,6,87,3,"key"],[81,9,87,3],[82,6,87,3,"value"],[82,11,87,3],[82,13,89,2],[82,22,89,2,"clearCompleted"],[82,36,89,16,"clearCompleted"],[82,37,89,16],[82,39,89,19],[83,8,90,4],[83,13,90,9],[83,17,90,15,"key"],[83,21,90,18],[83,25,90,22],[83,29,90,26],[83,30,90,27,"_timespans"],[83,40,90,37],[83,42,90,39],[84,10,90,39],[84,14,90,39,"_this$_timespans$_key"],[84,35,90,39],[85,10,91,6],[85,14,91,10],[85,16,91,10,"_this$_timespans$_key"],[85,37,91,10],[85,44,91,14],[85,45,91,15,"_timespans"],[85,55,91,25],[85,56,91,26,"key"],[85,60,91,29],[85,61,91,30],[85,82,91,10,"_this$_timespans$_key"],[85,103,91,10],[85,104,91,32,"totalTime"],[85,113,91,41],[85,118,91,45],[85,122,91,49],[85,124,91,51],[86,12,92,8],[86,19,92,15],[86,23,92,19],[86,24,92,20,"_timespans"],[86,34,92,30],[86,35,92,31,"key"],[86,39,92,34],[86,40,92,35],[87,10,93,6],[88,8,94,4],[89,8,95,4],[89,12,95,8],[89,13,95,9,"_extras"],[89,20,95,16],[89,23,95,19],[89,24,95,20],[89,25,95,21],[90,8,96,4],[90,12,96,8],[90,13,96,9,"_points"],[90,20,96,16],[90,23,96,19],[90,24,96,20],[90,25,96,21],[91,8,97,4],[91,12,97,8,"PRINT_TO_CONSOLE"],[91,28,97,24],[91,30,97,26],[92,10,98,6],[92,14,98,6,"infoLog"],[92,30,98,13],[92,32,98,14],[92,54,98,36],[92,56,98,38],[92,72,98,54],[92,73,98,55],[93,8,99,4],[94,6,100,2],[95,4,100,3],[96,6,100,3,"key"],[96,9,100,3],[97,6,100,3,"value"],[97,11,100,3],[97,13,102,2],[97,22,102,2,"close"],[97,27,102,7,"close"],[97,28,102,7],[97,30,102,10],[98,8,103,4],[98,12,103,8],[98,13,103,9,"_closed"],[98,20,103,16],[98,23,103,19],[98,27,103,23],[99,6,104,2],[100,4,104,3],[101,6,104,3,"key"],[101,9,104,3],[102,6,104,3,"value"],[102,11,104,3],[102,13,106,2],[102,22,106,2,"currentTimestamp"],[102,38,106,18,"currentTimestamp"],[102,39,106,18],[102,41,106,29],[103,8,107,4],[103,15,107,11,"getCurrentTimestamp"],[103,34,107,30],[103,35,107,31],[103,36,107,32],[104,6,108,2],[105,4,108,3],[106,6,108,3,"key"],[106,9,108,3],[107,6,108,3,"value"],[107,11,108,3],[107,13,110,2],[107,22,110,2,"getExtras"],[107,31,110,11,"getExtras"],[107,32,110,11],[107,34,110,44],[108,8,111,4],[108,15,111,11],[108,19,111,15],[108,20,111,16,"_extras"],[108,27,111,23],[109,6,112,2],[110,4,112,3],[111,6,112,3,"key"],[111,9,112,3],[112,6,112,3,"value"],[112,11,112,3],[112,13,114,2],[112,22,114,2,"getPoints"],[112,31,114,11,"getPoints"],[112,32,114,11],[112,34,114,40],[113,8,115,4],[113,15,115,11],[113,19,115,15],[113,20,115,16,"_points"],[113,27,115,23],[114,6,116,2],[115,4,116,3],[116,6,116,3,"key"],[116,9,116,3],[117,6,116,3,"value"],[117,11,116,3],[117,13,118,2],[117,22,118,2,"getPointExtras"],[117,36,118,16,"getPointExtras"],[117,37,118,16],[117,39,118,45],[118,8,119,4],[118,15,119,11],[118,19,119,15],[118,20,119,16,"_pointExtras"],[118,32,119,28],[119,6,120,2],[120,4,120,3],[121,6,120,3,"key"],[121,9,120,3],[122,6,120,3,"value"],[122,11,120,3],[122,13,122,2],[122,22,122,2,"getTimespans"],[122,34,122,14,"getTimespans"],[122,35,122,14],[122,37,122,45],[123,8,123,4],[123,15,123,11],[123,19,123,15],[123,20,123,16,"_timespans"],[123,30,123,26],[124,6,124,2],[125,4,124,3],[126,6,124,3,"key"],[126,9,124,3],[127,6,124,3,"value"],[127,11,124,3],[127,13,126,2],[127,22,126,2,"hasTimespan"],[127,33,126,13,"hasTimespan"],[127,34,126,14,"key"],[127,37,126,25],[127,39,126,36],[128,8,127,4],[128,15,127,11],[128,16,127,12],[128,17,127,13],[128,21,127,17],[128,22,127,18,"_timespans"],[128,32,127,28],[128,33,127,29,"key"],[128,36,127,32],[128,37,127,33],[129,6,128,2],[130,4,128,3],[131,6,128,3,"key"],[131,9,128,3],[132,6,128,3,"value"],[132,11,128,3],[132,13,130,2],[132,22,130,2,"isClosed"],[132,30,130,10,"isClosed"],[132,31,130,10],[132,33,130,22],[133,8,131,4],[133,15,131,11],[133,19,131,15],[133,20,131,16,"_closed"],[133,27,131,23],[134,6,132,2],[135,4,132,3],[136,6,132,3,"key"],[136,9,132,3],[137,6,132,3,"value"],[137,11,132,3],[137,13,134,2],[137,22,134,2,"logEverything"],[137,35,134,15,"logEverything"],[137,36,134,15],[137,38,134,18],[138,8,135,4],[138,12,135,8,"PRINT_TO_CONSOLE"],[138,28,135,24],[138,30,135,26],[139,10,136,6],[140,10,137,6],[140,15,137,11],[140,19,137,17,"key"],[140,24,137,20],[140,28,137,24],[140,32,137,28],[140,33,137,29,"_timespans"],[140,43,137,39],[140,45,137,41],[141,12,137,41],[141,16,137,41,"_this$_timespans$_key2"],[141,38,137,41],[142,12,138,8],[142,16,138,12],[142,18,138,12,"_this$_timespans$_key2"],[142,40,138,12],[142,47,138,16],[142,48,138,17,"_timespans"],[142,58,138,27],[142,59,138,28,"key"],[142,64,138,31],[142,65,138,32],[142,86,138,12,"_this$_timespans$_key2"],[142,108,138,12],[142,109,138,34,"totalTime"],[142,118,138,43],[142,123,138,47],[142,127,138,51],[142,129,138,53],[143,14,139,10],[143,18,139,10,"infoLog"],[143,34,139,17],[143,36,139,18,"key"],[143,41,139,21],[143,44,139,24],[143,48,139,28],[143,51,139,31],[143,55,139,35],[143,56,139,36,"_timespans"],[143,66,139,46],[143,67,139,47,"key"],[143,72,139,50],[143,73,139,51],[143,74,139,52,"totalTime"],[143,83,139,61],[143,86,139,64],[143,90,139,68],[143,91,139,69],[144,12,140,8],[145,10,141,6],[147,10,143,6],[148,10,144,6],[148,14,144,6,"infoLog"],[148,30,144,13],[148,32,144,14],[148,36,144,18],[148,37,144,19,"_extras"],[148,44,144,26],[148,45,144,27],[150,10,146,6],[151,10,147,6],[151,15,147,11],[151,19,147,17,"key"],[151,24,147,20],[151,28,147,24],[151,32,147,28],[151,33,147,29,"_points"],[151,40,147,36],[151,42,147,38],[152,12,148,8],[152,16,148,12],[152,20,148,16],[152,21,148,17,"_points"],[152,28,148,24],[152,29,148,25,"key"],[152,34,148,28],[152,35,148,29],[152,39,148,33],[152,43,148,37],[152,45,148,39],[153,14,149,10],[153,18,149,10,"infoLog"],[153,34,149,17],[153,36,149,18,"key"],[153,41,149,21],[153,44,149,24],[153,48,149,28],[153,51,149,31],[153,55,149,35],[153,56,149,36,"_points"],[153,63,149,43],[153,64,149,44,"key"],[153,69,149,47],[153,70,149,48],[153,73,149,51],[153,77,149,55],[153,78,149,56],[154,12,150,8],[155,10,151,6],[156,8,152,4],[157,6,153,2],[158,4,153,3],[159,6,153,3,"key"],[159,9,153,3],[160,6,153,3,"value"],[160,11,153,3],[160,13,155,2],[160,22,155,2,"markPoint"],[160,31,155,11,"markPoint"],[160,32,156,4,"key"],[160,35,156,15],[160,37,159,4],[161,8,159,4],[161,12,157,4,"timestamp"],[161,21,157,22],[161,24,157,22,"arguments"],[161,33,157,22],[161,34,157,22,"length"],[161,40,157,22],[161,48,157,22,"arguments"],[161,57,157,22],[161,65,157,22,"undefined"],[161,74,157,22],[161,77,157,22,"arguments"],[161,86,157,22],[161,92,157,25,"getCurrentTimestamp"],[161,111,157,44],[161,112,157,45],[161,113,157,46],[162,8,157,46],[162,12,158,4,"extras"],[162,18,158,19],[162,21,158,19,"arguments"],[162,30,158,19],[162,31,158,19,"length"],[162,37,158,19],[162,44,158,19,"arguments"],[162,53,158,19],[162,59,158,19,"undefined"],[162,68,158,19],[163,8,160,4],[163,12,160,8],[163,16,160,12],[163,17,160,13,"_closed"],[163,24,160,20],[163,26,160,22],[164,10,161,6],[164,14,161,10,"PRINT_TO_CONSOLE"],[164,30,161,26],[164,34,161,30,"__DEV__"],[164,41,161,37],[164,43,161,39],[165,12,162,8],[165,16,162,8,"infoLog"],[165,32,162,15],[165,34,162,16],[165,88,162,70],[165,90,162,72,"key"],[165,93,162,75],[165,94,162,76],[166,10,163,6],[167,10,164,6],[168,8,165,4],[169,8,166,4],[169,12,166,8],[169,16,166,12],[169,17,166,13,"_points"],[169,24,166,20],[169,25,166,21,"key"],[169,28,166,24],[169,29,166,25],[169,33,166,29],[169,37,166,33],[169,39,166,35],[170,10,167,6],[170,14,167,10,"PRINT_TO_CONSOLE"],[170,30,167,26],[170,34,167,30,"__DEV__"],[170,41,167,37],[170,43,167,39],[171,12,168,8],[171,16,168,8,"infoLog"],[171,32,168,15],[171,34,169,10],[171,111,169,87],[171,113,170,10,"key"],[171,116,171,8],[171,117,171,9],[172,10,172,6],[173,10,173,6],[174,8,174,4],[175,8,175,4],[175,12,175,8],[175,13,175,9,"_points"],[175,20,175,16],[175,21,175,17,"key"],[175,24,175,20],[175,25,175,21],[175,28,175,24,"timestamp"],[175,37,175,33],[176,8,176,4],[176,12,176,8,"extras"],[176,18,176,14],[176,20,176,16],[177,10,177,6],[177,14,177,10],[177,15,177,11,"_pointExtras"],[177,27,177,23],[177,28,177,24,"key"],[177,31,177,27],[177,32,177,28],[177,35,177,31,"extras"],[177,41,177,37],[178,8,178,4],[179,6,179,2],[180,4,179,3],[181,6,179,3,"key"],[181,9,179,3],[182,6,179,3,"value"],[182,11,179,3],[182,13,181,2],[182,22,181,2,"removeExtra"],[182,33,181,13,"removeExtra"],[182,34,181,14,"key"],[182,37,181,25],[182,39,181,40],[183,8,182,4],[183,12,182,10,"value"],[183,17,182,15],[183,20,182,18],[183,24,182,22],[183,25,182,23,"_extras"],[183,32,182,30],[183,33,182,31,"key"],[183,36,182,34],[183,37,182,35],[184,8,183,4],[184,15,183,11],[184,19,183,15],[184,20,183,16,"_extras"],[184,27,183,23],[184,28,183,24,"key"],[184,31,183,27],[184,32,183,28],[185,8,184,4],[185,15,184,11,"value"],[185,20,184,16],[186,6,185,2],[187,4,185,3],[188,6,185,3,"key"],[188,9,185,3],[189,6,185,3,"value"],[189,11,185,3],[189,13,187,2],[189,22,187,2,"setExtra"],[189,30,187,10,"setExtra"],[189,31,187,11,"key"],[189,34,187,22],[189,36,187,24,"value"],[189,41,187,41],[189,43,187,43],[190,8,188,4],[190,12,188,8],[190,16,188,12],[190,17,188,13,"_closed"],[190,24,188,20],[190,26,188,22],[191,10,189,6],[191,14,189,10,"PRINT_TO_CONSOLE"],[191,30,189,26],[191,34,189,30,"__DEV__"],[191,41,189,37],[191,43,189,39],[192,12,190,8],[192,16,190,8,"infoLog"],[192,32,190,15],[192,34,190,16],[192,87,190,69],[192,89,190,71,"key"],[192,92,190,74],[192,93,190,75],[193,10,191,6],[194,10,192,6],[195,8,193,4],[196,8,195,4],[196,12,195,8],[196,16,195,12],[196,17,195,13,"_extras"],[196,24,195,20],[196,25,195,21,"hasOwnProperty"],[196,39,195,35],[196,40,195,36,"key"],[196,43,195,39],[196,44,195,40],[196,46,195,42],[197,10,196,6],[197,14,196,10,"PRINT_TO_CONSOLE"],[197,30,196,26],[197,34,196,30,"__DEV__"],[197,41,196,37],[197,43,196,39],[198,12,197,8],[198,16,197,8,"infoLog"],[198,32,197,15],[198,34,198,10],[198,102,198,78],[198,104,199,10],[199,14,199,11,"key"],[199,17,199,14],[199,19,199,11,"key"],[199,22,199,14],[200,14,199,16,"currentValue"],[200,26,199,28],[200,28,199,30],[200,32,199,34],[200,33,199,35,"_extras"],[200,40,199,42],[200,41,199,43,"key"],[200,44,199,46],[200,45,199,47],[201,14,199,49,"attemptedValue"],[201,28,199,63],[201,30,199,65,"value"],[202,12,199,70],[202,13,200,8],[202,14,200,9],[203,10,201,6],[204,10,202,6],[205,8,203,4],[206,8,204,4],[206,12,204,8],[206,13,204,9,"_extras"],[206,20,204,16],[206,21,204,17,"key"],[206,24,204,20],[206,25,204,21],[206,28,204,24,"value"],[206,33,204,29],[207,6,205,2],[208,4,205,3],[209,6,205,3,"key"],[209,9,205,3],[210,6,205,3,"value"],[210,11,205,3],[210,13,207,2],[210,22,207,2,"startTimespan"],[210,35,207,15,"startTimespan"],[210,36,208,4,"key"],[210,39,208,15],[210,41,211,4],[211,8,211,4],[211,12,209,4,"timestamp"],[211,21,209,22],[211,24,209,22,"arguments"],[211,33,209,22],[211,34,209,22,"length"],[211,40,209,22],[211,48,209,22,"arguments"],[211,57,209,22],[211,65,209,22,"undefined"],[211,74,209,22],[211,77,209,22,"arguments"],[211,86,209,22],[211,92,209,25,"getCurrentTimestamp"],[211,111,209,44],[211,112,209,45],[211,113,209,46],[212,8,209,46],[212,12,210,4,"extras"],[212,18,210,19],[212,21,210,19,"arguments"],[212,30,210,19],[212,31,210,19,"length"],[212,37,210,19],[212,44,210,19,"arguments"],[212,53,210,19],[212,59,210,19,"undefined"],[212,68,210,19],[213,8,212,4],[213,12,212,8],[213,16,212,12],[213,17,212,13,"_closed"],[213,24,212,20],[213,26,212,22],[214,10,213,6],[214,14,213,10,"PRINT_TO_CONSOLE"],[214,30,213,26],[214,34,213,30,"__DEV__"],[214,41,213,37],[214,43,213,39],[215,12,214,8],[215,16,214,8,"infoLog"],[215,32,214,15],[215,34,215,10],[215,92,215,68],[215,94,216,10,"key"],[215,97,217,8],[215,98,217,9],[216,10,218,6],[217,10,219,6],[218,8,220,4],[219,8,222,4],[219,12,222,8],[219,16,222,12],[219,17,222,13,"_timespans"],[219,27,222,23],[219,28,222,24,"key"],[219,31,222,27],[219,32,222,28],[219,34,222,30],[220,10,223,6],[220,14,223,10,"PRINT_TO_CONSOLE"],[220,30,223,26],[220,34,223,30,"__DEV__"],[220,41,223,37],[220,43,223,39],[221,12,224,8],[221,16,224,8,"infoLog"],[221,32,224,15],[221,34,225,10],[221,106,225,82],[221,108,226,10,"key"],[221,111,227,8],[221,112,227,9],[222,10,228,6],[223,10,229,6],[224,8,230,4],[225,8,232,4],[225,12,232,8],[225,13,232,9,"_timespans"],[225,23,232,19],[225,24,232,20,"key"],[225,27,232,23],[225,28,232,24],[225,31,232,27],[226,10,233,6,"startTime"],[226,19,233,15],[226,21,233,17,"timestamp"],[226,30,233,26],[227,10,234,6,"startExtras"],[227,21,234,17],[227,23,234,19,"extras"],[228,8,235,4],[228,9,235,5],[229,8,236,4,"_cookies"],[229,16,236,12],[229,17,236,13,"key"],[229,20,236,16],[229,21,236,17],[229,24,236,20,"Systrace"],[229,32,236,28],[229,33,236,29,"beginAsyncEvent"],[229,48,236,44],[229,49,236,45,"key"],[229,52,236,48],[229,53,236,49],[230,8,237,4],[230,12,237,8,"PRINT_TO_CONSOLE"],[230,28,237,24],[230,30,237,26],[231,10,238,6],[231,14,238,6,"infoLog"],[231,30,238,13],[231,32,238,14],[231,54,238,36],[231,56,238,38],[231,65,238,47],[231,68,238,50,"key"],[231,71,238,53],[231,72,238,54],[232,8,239,4],[233,6,240,2],[234,4,240,3],[235,6,240,3,"key"],[235,9,240,3],[236,6,240,3,"value"],[236,11,240,3],[236,13,242,2],[236,22,242,2,"stopTimespan"],[236,34,242,14,"stopTimespan"],[236,35,243,4,"key"],[236,38,243,15],[236,40,246,4],[237,8,246,4],[237,12,244,4,"timestamp"],[237,21,244,22],[237,24,244,22,"arguments"],[237,33,244,22],[237,34,244,22,"length"],[237,40,244,22],[237,48,244,22,"arguments"],[237,57,244,22],[237,65,244,22,"undefined"],[237,74,244,22],[237,77,244,22,"arguments"],[237,86,244,22],[237,92,244,25,"getCurrentTimestamp"],[237,111,244,44],[237,112,244,45],[237,113,244,46],[238,8,244,46],[238,12,245,4,"extras"],[238,18,245,19],[238,21,245,19,"arguments"],[238,30,245,19],[238,31,245,19,"length"],[238,37,245,19],[238,44,245,19,"arguments"],[238,53,245,19],[238,59,245,19,"undefined"],[238,68,245,19],[239,8,247,4],[239,12,247,8],[239,16,247,12],[239,17,247,13,"_closed"],[239,24,247,20],[239,26,247,22],[240,10,248,6],[240,14,248,10,"PRINT_TO_CONSOLE"],[240,30,248,26],[240,34,248,30,"__DEV__"],[240,41,248,37],[240,43,248,39],[241,12,249,8],[241,16,249,8,"infoLog"],[241,32,249,15],[241,34,249,16],[241,91,249,73],[241,93,249,75,"key"],[241,96,249,78],[241,97,249,79],[242,10,250,6],[243,10,251,6],[244,8,252,4],[245,8,254,4],[245,12,254,10,"timespan"],[245,20,254,18],[245,23,254,21],[245,27,254,25],[245,28,254,26,"_timespans"],[245,38,254,36],[245,39,254,37,"key"],[245,42,254,40],[245,43,254,41],[246,8,255,4],[246,12,255,8],[246,13,255,9,"timespan"],[246,21,255,17],[246,25,255,21,"timespan"],[246,33,255,29],[246,34,255,30,"startTime"],[246,43,255,39],[246,47,255,43],[246,51,255,47],[246,53,255,49],[247,10,256,6],[247,14,256,10,"PRINT_TO_CONSOLE"],[247,30,256,26],[247,34,256,30,"__DEV__"],[247,41,256,37],[247,43,256,39],[248,12,257,8],[248,16,257,8,"infoLog"],[248,32,257,15],[248,34,258,10],[248,105,258,81],[248,107,259,10,"key"],[248,110,260,8],[248,111,260,9],[249,10,261,6],[250,10,262,6],[251,8,263,4],[252,8,264,4],[252,12,264,8,"timespan"],[252,20,264,16],[252,21,264,17,"endTime"],[252,28,264,24],[252,32,264,28],[252,36,264,32],[252,38,264,34],[253,10,265,6],[253,14,265,10,"PRINT_TO_CONSOLE"],[253,30,265,26],[253,34,265,30,"__DEV__"],[253,41,265,37],[253,43,265,39],[254,12,266,8],[254,16,266,8,"infoLog"],[254,32,266,15],[254,34,267,10],[254,107,267,83],[254,109,268,10,"key"],[254,112,269,8],[254,113,269,9],[255,10,270,6],[256,10,271,6],[257,8,272,4],[258,8,274,4,"timespan"],[258,16,274,12],[258,17,274,13,"endExtras"],[258,26,274,22],[258,29,274,25,"extras"],[258,35,274,31],[259,8,275,4,"timespan"],[259,16,275,12],[259,17,275,13,"endTime"],[259,24,275,20],[259,27,275,23,"timestamp"],[259,36,275,32],[260,8,276,4,"timespan"],[260,16,276,12],[260,17,276,13,"totalTime"],[260,26,276,22],[260,29,276,25,"timespan"],[260,37,276,33],[260,38,276,34,"endTime"],[260,45,276,41],[260,49,276,45,"timespan"],[260,57,276,53],[260,58,276,54,"startTime"],[260,67,276,63],[260,71,276,67],[260,72,276,68],[260,73,276,69],[261,8,277,4],[261,12,277,8,"PRINT_TO_CONSOLE"],[261,28,277,24],[261,30,277,26],[262,10,278,6],[262,14,278,6,"infoLog"],[262,30,278,13],[262,32,278,14],[262,54,278,36],[262,56,278,38],[262,63,278,45],[262,66,278,48,"key"],[262,69,278,51],[262,70,278,52],[263,8,279,4],[264,8,281,4],[264,12,281,8,"_cookies"],[264,20,281,16],[264,21,281,17,"key"],[264,24,281,20],[264,25,281,21],[264,29,281,25],[264,33,281,29],[264,35,281,31],[265,10,282,6,"Systrace"],[265,18,282,14],[265,19,282,15,"endAsyncEvent"],[265,32,282,28],[265,33,282,29,"key"],[265,36,282,32],[265,38,282,34,"_cookies"],[265,46,282,42],[265,47,282,43,"key"],[265,50,282,46],[265,51,282,47],[265,52,282,48],[266,10,283,6],[266,17,283,13,"_cookies"],[266,25,283,21],[266,26,283,22,"key"],[266,29,283,25],[266,30,283,26],[267,8,284,4],[268,6,285,2],[269,4,285,3],[270,2,285,3],[270,7,288,0],[271,2,289,0],[272,2,292,0],[273,0,293,0],[274,0,294,0],[275,0,295,0],[276,0,296,0],[277,2,297,15],[277,11,297,24,"createPerformanceLogger"],[277,34,297,47,"createPerformanceLogger"],[277,35,297,47],[277,37,297,70],[278,4,298,2],[278,11,298,9],[278,15,298,13,"PerformanceLogger"],[278,32,298,30],[278,33,298,31],[278,34,298,32],[279,2,299,0],[280,0,299,1],[280,3]],"functionMap":{"names":["<global>","<anonymous>","PerformanceLogger","PerformanceLogger#addTimespan","PerformanceLogger#append","PerformanceLogger#clear","PerformanceLogger#clearCompleted","PerformanceLogger#close","PerformanceLogger#currentTimestamp","PerformanceLogger#getExtras","PerformanceLogger#getPoints","PerformanceLogger#getPointExtras","PerformanceLogger#getTimespans","PerformanceLogger#hasTimespan","PerformanceLogger#isClosed","PerformanceLogger#logEverything","PerformanceLogger#markPoint","PerformanceLogger#removeExtra","PerformanceLogger#setExtra","PerformanceLogger#startTimespan","PerformanceLogger#stopTimespan","createPerformanceLogger"],"mappings":"AAA;gCCyB,8BD;AEE;ECO;GD8B;EEE;GFW;EGE;GHO;EIE;GJW;EKE;GLE;EME;GNE;EOE;GPE;EQE;GRE;ESE;GTE;EUE;GVE;EWE;GXE;EYE;GZE;EaE;GbmB;EcE;GdwB;EeE;GfI;EgBE;GhBkB;EiBE;GjBiC;EkBE;GlB2C;CFC;eqBW;CrBE"}},"type":"js/module"}]}