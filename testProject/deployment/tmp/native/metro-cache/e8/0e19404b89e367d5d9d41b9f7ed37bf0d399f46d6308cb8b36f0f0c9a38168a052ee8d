{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":544,"column":0,"index":18954}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":544,"column":0,"index":18954}}],"key":"XnmB3YjhLQUu4Gtg+kalDAx6bCo="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":544,"column":0,"index":18954}}],"key":"ohGilxjVqjyE1GooDVDt9OYg9x0="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":544,"column":0,"index":18954}}],"key":"V6GYoXnblvuuGHJNMy7MHyaunsU="}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":544,"column":0,"index":18954}}],"key":"rcd0dMwf8BS2g+8U1wyhIOxtYEo="}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":544,"column":0,"index":18954}}],"key":"4pxOr+e+5cSZAdeEKxSt3F7LoKY="}},{"name":"@babel/runtime/helpers/inherits","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":544,"column":0,"index":18954}}],"key":"EDnOjopp9yNVawSzfBRsy2dq5dM="}},{"name":"@babel/runtime/helpers/defineProperty","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":544,"column":0,"index":18954}}],"key":"RY2z4+Bdq4bpTD/1b+1jGPWZdgA="}},{"name":"react","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":31,"index":31}}],"key":"a4EMkKqamYWCMMPV7UeQlqGQ+ks="}},{"name":"react-native","data":{"asyncType":null,"locs":[{"start":{"line":2,"column":0,"index":32},"end":{"line":7,"column":22,"index":133}}],"key":"XEo4Z+Aarw9Y7I7ZLBt66vGLAVQ="}},{"name":"../RNGestureHandlerModule","data":{"asyncType":null,"locs":[{"start":{"line":9,"column":0,"index":201},"end":{"line":9,"column":63,"index":264}}],"key":"rPPmo2MLpjENsDg3Ww924PhFl60="}},{"name":"../GestureHandlerRootViewContext","data":{"asyncType":null,"locs":[{"start":{"line":24,"column":0,"index":850},"end":{"line":24,"column":77,"index":927}}],"key":"b0tOsb2A94qxSbRbtD/BktBFznI="}},{"name":"react/jsx-runtime","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":544,"column":0,"index":18954}}],"key":"5dCMGbjkz1QWCPjOwzvy5ZBkuK8="}},{"name":"./customDirectEventTypes","data":{"asyncType":null,"locs":[{"start":{"line":8,"column":0,"index":134},"end":{"line":8,"column":66,"index":200}}],"key":"vmRYEuFc/HGKqlBRho945FzOchk="}},{"name":"../utils","data":{"asyncType":null,"locs":[{"start":{"line":21,"column":0,"index":670},"end":{"line":21,"column":70,"index":740}},{"start":{"line":21,"column":0,"index":670},"end":{"line":21,"column":70,"index":740}},{"start":{"line":21,"column":0,"index":670},"end":{"line":21,"column":70,"index":740}},{"start":{"line":21,"column":0,"index":670},"end":{"line":21,"column":70,"index":740}},{"start":{"line":21,"column":0,"index":670},"end":{"line":21,"column":70,"index":740}}],"key":"wnEVYE0exYilYcCniP5DP5xdv08="}},{"name":"../State","data":{"asyncType":null,"locs":[{"start":{"line":10,"column":0,"index":265},"end":{"line":10,"column":33,"index":298}},{"start":{"line":10,"column":0,"index":265},"end":{"line":10,"column":33,"index":298}},{"start":{"line":10,"column":0,"index":265},"end":{"line":10,"column":33,"index":298}},{"start":{"line":10,"column":0,"index":265},"end":{"line":10,"column":33,"index":298}},{"start":{"line":10,"column":0,"index":265},"end":{"line":10,"column":33,"index":298}},{"start":{"line":10,"column":0,"index":265},"end":{"line":10,"column":33,"index":298}}],"key":"Q8nOM11Vuvfos2IZ/lO9FOcbk+g="}},{"name":"../ActionType","data":{"asyncType":null,"locs":[{"start":{"line":22,"column":0,"index":741},"end":{"line":22,"column":43,"index":784}},{"start":{"line":22,"column":0,"index":741},"end":{"line":22,"column":43,"index":784}},{"start":{"line":22,"column":0,"index":741},"end":{"line":22,"column":43,"index":784}},{"start":{"line":22,"column":0,"index":741},"end":{"line":22,"column":43,"index":784}}],"key":"LmEMEJoPv7O/xrjLPCSpnXXLsmw="}},{"name":"./handlersRegistry","data":{"asyncType":null,"locs":[{"start":{"line":11,"column":0,"index":299},"end":{"line":11,"column":79,"index":378}},{"start":{"line":11,"column":0,"index":299},"end":{"line":11,"column":79,"index":378}},{"start":{"line":11,"column":0,"index":299},"end":{"line":11,"column":79,"index":378}},{"start":{"line":11,"column":0,"index":299},"end":{"line":11,"column":79,"index":378}}],"key":"uUSwkNM2LATozp8YVz2n0Z5NN80="}},{"name":"./utils","data":{"asyncType":null,"locs":[{"start":{"line":19,"column":0,"index":549},"end":{"line":19,"column":80,"index":629}},{"start":{"line":19,"column":0,"index":549},"end":{"line":19,"column":80,"index":629}},{"start":{"line":19,"column":0,"index":549},"end":{"line":19,"column":80,"index":629}},{"start":{"line":19,"column":0,"index":549},"end":{"line":19,"column":80,"index":629}},{"start":{"line":19,"column":0,"index":549},"end":{"line":19,"column":80,"index":629}},{"start":{"line":19,"column":0,"index":549},"end":{"line":19,"column":80,"index":629}},{"start":{"line":19,"column":0,"index":549},"end":{"line":19,"column":80,"index":629}},{"start":{"line":19,"column":0,"index":549},"end":{"line":19,"column":80,"index":629}}],"key":"FH4oXkS7WdR5kG0v+Eku8TWcu80="}},{"name":"./getNextHandlerTag","data":{"asyncType":null,"locs":[{"start":{"line":12,"column":0,"index":379},"end":{"line":12,"column":56,"index":435}}],"key":"v3eA4aozTEnL6g0DCmxSBxnkAlg="}},{"name":"../ghQueueMicrotask","data":{"asyncType":null,"locs":[{"start":{"line":25,"column":0,"index":928},"end":{"line":25,"column":55,"index":983}},{"start":{"line":25,"column":0,"index":928},"end":{"line":25,"column":55,"index":983}}],"key":"TTQQP3RHvuVHAscADKbtBNLPyaU="}},{"name":"./PressabilityDebugView","data":{"asyncType":null,"locs":[{"start":{"line":23,"column":0,"index":785},"end":{"line":23,"column":64,"index":849}}],"key":"wCWp40DPaNOojL98kp8kbUGtKUU="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = createHandler;\n  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/toConsumableArray\"));\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/createClass\"));\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/getPrototypeOf\"));\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/inherits\"));\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"@babel/runtime/helpers/defineProperty\"));\n  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8], \"react\"));\n  var _reactNative = _$$_REQUIRE(_dependencyMap[9], \"react-native\");\n  var _RNGestureHandlerModule = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10], \"../RNGestureHandlerModule\"));\n  var _GestureHandlerRootViewContext = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11], \"../GestureHandlerRootViewContext\"));\n  var _jsxRuntime = _$$_REQUIRE(_dependencyMap[12], \"react/jsx-runtime\");\n  var _UIManagerAny$getView,\n    _jsxFileName = \"C:\\\\Program Files\\\\Mendix\\\\10.18.1.55792\\\\modeler\\\\tools\\\\node\\\\node_modules\\\\react-native-gesture-handler\\\\src\\\\handlers\\\\createHandler.tsx\";\n  function _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\n  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\n  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }\n  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\n  var UIManagerAny = _reactNative.UIManager;\n  _$$_REQUIRE(_dependencyMap[13], \"./customDirectEventTypes\").customDirectEventTypes.topGestureHandlerEvent = {\n    registrationName: 'onGestureHandlerEvent'\n  };\n  var customGHEventsConfigFabricAndroid = {\n    topOnGestureHandlerEvent: {\n      registrationName: 'onGestureHandlerEvent'\n    },\n    topOnGestureHandlerStateChange: {\n      registrationName: 'onGestureHandlerStateChange'\n    }\n  };\n  var customGHEventsConfig = Object.assign({\n    onGestureHandlerEvent: {\n      registrationName: 'onGestureHandlerEvent'\n    },\n    onGestureHandlerStateChange: {\n      registrationName: 'onGestureHandlerStateChange'\n    }\n  }, (0, _$$_REQUIRE(_dependencyMap[14], \"../utils\").isFabric)() && _reactNative.Platform.OS === 'android' && customGHEventsConfigFabricAndroid);\n\n  // Add gesture specific events to genericDirectEventTypes object exported from UIManager\n  // native module.\n  // Once new event types are registered with react it is possible to dispatch these\n  // events to all kind of native views.\n  UIManagerAny.genericDirectEventTypes = Object.assign({}, UIManagerAny.genericDirectEventTypes, customGHEventsConfig);\n  // In newer versions of RN the `genericDirectEventTypes` is located in the object\n  // returned by UIManager.getViewManagerConfig('getConstants') or in older RN UIManager.getConstants(), we need to add it there as well to make\n  // it compatible with RN 61+\n  var UIManagerConstants = (_UIManagerAny$getView = UIManagerAny.getViewManagerConfig == null ? void 0 : UIManagerAny.getViewManagerConfig('getConstants')) != null ? _UIManagerAny$getView : UIManagerAny.getConstants == null ? void 0 : UIManagerAny.getConstants();\n  if (UIManagerConstants) {\n    UIManagerConstants.genericDirectEventTypes = Object.assign({}, UIManagerConstants.genericDirectEventTypes, customGHEventsConfig);\n  }\n\n  // Wrap JS responder calls and notify gesture handler manager\n  var _UIManagerAny$setJSRe = UIManagerAny.setJSResponder,\n    oldSetJSResponder = _UIManagerAny$setJSRe === void 0 ? function () {\n      // no-op\n    } : _UIManagerAny$setJSRe,\n    _UIManagerAny$clearJS = UIManagerAny.clearJSResponder,\n    oldClearJSResponder = _UIManagerAny$clearJS === void 0 ? function () {\n      // no-op\n    } : _UIManagerAny$clearJS;\n  UIManagerAny.setJSResponder = function (tag, blockNativeResponder) {\n    _RNGestureHandlerModule.default.handleSetJSResponder(tag, blockNativeResponder);\n    oldSetJSResponder(tag, blockNativeResponder);\n  };\n  UIManagerAny.clearJSResponder = function () {\n    _RNGestureHandlerModule.default.handleClearJSResponder();\n    oldClearJSResponder();\n  };\n  var allowTouches = true;\n  var DEV_ON_ANDROID = __DEV__ && _reactNative.Platform.OS === 'android';\n  // Toggled inspector blocks touch events in order to allow inspecting on Android\n  // This needs to be a global variable in order to set initial state for `allowTouches` property in Handler component\n  if (DEV_ON_ANDROID) {\n    _reactNative.DeviceEventEmitter.addListener('toggleElementInspector', function () {\n      allowTouches = !allowTouches;\n    });\n  }\n  function hasUnresolvedRefs(props) {\n    // TODO(TS) - add type for extract arg\n    var extract = function extract(refs) {\n      if (!Array.isArray(refs)) {\n        return refs && refs.current === null;\n      }\n      return refs.some(function (r) {\n        return r && r.current === null;\n      });\n    };\n    return extract(props['simultaneousHandlers']) || extract(props['waitFor']);\n  }\n  var stateToPropMappings = (0, _defineProperty2.default)((0, _defineProperty2.default)((0, _defineProperty2.default)((0, _defineProperty2.default)((0, _defineProperty2.default)((0, _defineProperty2.default)({}, _$$_REQUIRE(_dependencyMap[15], \"../State\").State.UNDETERMINED, undefined), _$$_REQUIRE(_dependencyMap[15], \"../State\").State.BEGAN, 'onBegan'), _$$_REQUIRE(_dependencyMap[15], \"../State\").State.FAILED, 'onFailed'), _$$_REQUIRE(_dependencyMap[15], \"../State\").State.CANCELLED, 'onCancelled'), _$$_REQUIRE(_dependencyMap[15], \"../State\").State.ACTIVE, 'onActivated'), _$$_REQUIRE(_dependencyMap[15], \"../State\").State.END, 'onEnded');\n\n  // TODO(TS) fix event types\n\n  var UNRESOLVED_REFS_RETRY_LIMIT = 1;\n\n  // TODO(TS) - make sure that BaseGestureHandlerProps doesn't need other generic parameter to work with custom properties.\n  function createHandler(_ref) {\n    var name = _ref.name,\n      _ref$allowedProps = _ref.allowedProps,\n      allowedProps = _ref$allowedProps === void 0 ? [] : _ref$allowedProps,\n      _ref$config = _ref.config,\n      config = _ref$config === void 0 ? {} : _ref$config,\n      transformProps = _ref.transformProps,\n      _ref$customNativeProp = _ref.customNativeProps,\n      customNativeProps = _ref$customNativeProp === void 0 ? [] : _ref$customNativeProp;\n    var Handler = /*#__PURE__*/function (_React$Component) {\n      function Handler(props) {\n        var _this;\n        (0, _classCallCheck2.default)(this, Handler);\n        _this = _callSuper(this, Handler, [props]);\n        _this.onGestureHandlerEvent = function (event) {\n          if (event.nativeEvent.handlerTag === _this.handlerTag) {\n            if (typeof _this.props.onGestureEvent === 'function') {\n              _this.props.onGestureEvent == null || _this.props.onGestureEvent(event);\n            }\n          } else {\n            _this.props.onGestureHandlerEvent == null || _this.props.onGestureHandlerEvent(event);\n          }\n        };\n        // TODO(TS) - make sure this is right type for event\n        _this.onGestureHandlerStateChange = function (event) {\n          if (event.nativeEvent.handlerTag === _this.handlerTag) {\n            if (typeof _this.props.onHandlerStateChange === 'function') {\n              _this.props.onHandlerStateChange == null || _this.props.onHandlerStateChange(event);\n            }\n            var state = event.nativeEvent.state;\n            var stateEventName = stateToPropMappings[state];\n            var eventHandler = stateEventName && _this.props[stateEventName];\n            if (eventHandler && typeof eventHandler === 'function') {\n              eventHandler(event);\n            }\n          } else {\n            _this.props.onGestureHandlerStateChange == null || _this.props.onGestureHandlerStateChange(event);\n          }\n        };\n        _this.refHandler = function (node) {\n          _this.viewNode = node;\n          var child = React.Children.only(_this.props.children);\n          // TODO(TS) fix ref type\n          var ref = child.ref;\n          if (ref !== null) {\n            if (typeof ref === 'function') {\n              ref(node);\n            } else {\n              ref.current = node;\n            }\n          }\n        };\n        _this.createGestureHandler = function (newConfig) {\n          _this.config = newConfig;\n          _RNGestureHandlerModule.default.createGestureHandler(name, _this.handlerTag, newConfig);\n        };\n        _this.attachGestureHandler = function (newViewTag) {\n          _this.viewTag = newViewTag;\n          if (_reactNative.Platform.OS === 'web') {\n            // Typecast due to dynamic resolution, attachGestureHandler should have web version signature in this branch\n            _RNGestureHandlerModule.default.attachGestureHandler(_this.handlerTag, newViewTag, _$$_REQUIRE(_dependencyMap[16], \"../ActionType\").ActionType.JS_FUNCTION_OLD_API,\n            // ignored on web\n            _this.propsRef);\n          } else {\n            (0, _$$_REQUIRE(_dependencyMap[17], \"./handlersRegistry\").registerOldGestureHandler)(_this.handlerTag, {\n              onGestureEvent: _this.onGestureHandlerEvent,\n              onGestureStateChange: _this.onGestureHandlerStateChange\n            });\n            var actionType = function (_this$props, _this$props2) {\n              var onGestureEvent = (_this$props = _this.props) == null ? void 0 : _this$props.onGestureEvent;\n              var isGestureHandlerWorklet = onGestureEvent && ('current' in onGestureEvent || 'workletEventHandler' in onGestureEvent);\n              var onHandlerStateChange = (_this$props2 = _this.props) == null ? void 0 : _this$props2.onHandlerStateChange;\n              var isStateChangeHandlerWorklet = onHandlerStateChange && ('current' in onHandlerStateChange || 'workletEventHandler' in onHandlerStateChange);\n              var isReanimatedHandler = isGestureHandlerWorklet || isStateChangeHandlerWorklet;\n              if (isReanimatedHandler) {\n                // Reanimated worklet\n                return _$$_REQUIRE(_dependencyMap[16], \"../ActionType\").ActionType.REANIMATED_WORKLET;\n              } else if (onGestureEvent && '__isNative' in onGestureEvent) {\n                // Animated.event with useNativeDriver: true\n                return _$$_REQUIRE(_dependencyMap[16], \"../ActionType\").ActionType.NATIVE_ANIMATED_EVENT;\n              } else {\n                // JS callback or Animated.event with useNativeDriver: false\n                return _$$_REQUIRE(_dependencyMap[16], \"../ActionType\").ActionType.JS_FUNCTION_OLD_API;\n              }\n            }();\n            _RNGestureHandlerModule.default.attachGestureHandler(_this.handlerTag, newViewTag, actionType);\n          }\n          (0, _$$_REQUIRE(_dependencyMap[18], \"./utils\").scheduleFlushOperations)();\n        };\n        _this.updateGestureHandler = function (newConfig) {\n          _this.config = newConfig;\n          _RNGestureHandlerModule.default.updateGestureHandler(_this.handlerTag, newConfig);\n          (0, _$$_REQUIRE(_dependencyMap[18], \"./utils\").scheduleFlushOperations)();\n        };\n        _this.handlerTag = (0, _$$_REQUIRE(_dependencyMap[19], \"./getNextHandlerTag\").getNextHandlerTag)();\n        _this.config = {};\n        _this.propsRef = React.createRef();\n        _this.isMountedRef = React.createRef();\n        _this.state = {\n          allowTouches: allowTouches\n        };\n        if (props.id) {\n          if (_$$_REQUIRE(_dependencyMap[17], \"./handlersRegistry\").handlerIDToTag[props.id] !== undefined) {\n            throw new Error(`Handler with ID \"${props.id}\" already registered`);\n          }\n          _$$_REQUIRE(_dependencyMap[17], \"./handlersRegistry\").handlerIDToTag[props.id] = _this.handlerTag;\n        }\n        return _this;\n      }\n      (0, _inherits2.default)(Handler, _React$Component);\n      return (0, _createClass2.default)(Handler, [{\n        key: \"componentDidMount\",\n        value: function componentDidMount() {\n          var _this2 = this;\n          var props = this.props;\n          this.isMountedRef.current = true;\n          if (DEV_ON_ANDROID) {\n            this.inspectorToggleListener = _reactNative.DeviceEventEmitter.addListener('toggleElementInspector', function () {\n              _this2.setState(function (_) {\n                return {\n                  allowTouches: allowTouches\n                };\n              });\n              _this2.update(UNRESOLVED_REFS_RETRY_LIMIT);\n            });\n          }\n          if (hasUnresolvedRefs(props)) {\n            // If there are unresolved refs (e.g. \".current\" has not yet been set)\n            // passed as `simultaneousHandlers` or `waitFor`, we enqueue a call to\n            // _update method that will try to update native handler props using\n            // queueMicrotask. This makes it so update() function gets called after all\n            // react components are mounted and we expect the missing ref object to\n            // be resolved by then.\n            (0, _$$_REQUIRE(_dependencyMap[20], \"../ghQueueMicrotask\").ghQueueMicrotask)(function () {\n              _this2.update(UNRESOLVED_REFS_RETRY_LIMIT);\n            });\n          }\n          this.createGestureHandler((0, _$$_REQUIRE(_dependencyMap[18], \"./utils\").filterConfig)(transformProps ? transformProps(this.props) : this.props, [].concat((0, _toConsumableArray2.default)(allowedProps), (0, _toConsumableArray2.default)(customNativeProps)), config));\n          this.attachGestureHandler((0, _$$_REQUIRE(_dependencyMap[18], \"./utils\").findNodeHandle)(this.viewNode)); // TODO(TS) - check if this can be null\n        }\n      }, {\n        key: \"componentDidUpdate\",\n        value: function componentDidUpdate() {\n          var viewTag = (0, _$$_REQUIRE(_dependencyMap[18], \"./utils\").findNodeHandle)(this.viewNode);\n          if (this.viewTag !== viewTag) {\n            this.attachGestureHandler(viewTag); // TODO(TS) - check interaction between _viewTag & findNodeHandle\n          }\n          this.update(UNRESOLVED_REFS_RETRY_LIMIT);\n        }\n      }, {\n        key: \"componentWillUnmount\",\n        value: function componentWillUnmount() {\n          var _this$inspectorToggle;\n          (_this$inspectorToggle = this.inspectorToggleListener) == null || _this$inspectorToggle.remove();\n          this.isMountedRef.current = false;\n          _RNGestureHandlerModule.default.dropGestureHandler(this.handlerTag);\n          (0, _$$_REQUIRE(_dependencyMap[18], \"./utils\").scheduleFlushOperations)();\n          // We can't use this.props.id directly due to TS generic type narrowing bug, see https://github.com/microsoft/TypeScript/issues/13995 for more context\n          var handlerID = this.props.id;\n          if (handlerID) {\n            // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n            delete _$$_REQUIRE(_dependencyMap[17], \"./handlersRegistry\").handlerIDToTag[handlerID];\n          }\n        }\n      }, {\n        key: \"update\",\n        value: function update(remainingTries) {\n          var _this3 = this;\n          if (!this.isMountedRef.current) {\n            return;\n          }\n          var props = this.props;\n\n          // When ref is set via a function i.e. `ref={(r) => refObject.current = r}` instead of\n          // `ref={refObject}` it's possible that it won't be resolved in time. Seems like trying\n          // again is easy enough fix.\n          if (hasUnresolvedRefs(props) && remainingTries > 0) {\n            (0, _$$_REQUIRE(_dependencyMap[20], \"../ghQueueMicrotask\").ghQueueMicrotask)(function () {\n              _this3.update(remainingTries - 1);\n            });\n          } else {\n            var newConfig = (0, _$$_REQUIRE(_dependencyMap[18], \"./utils\").filterConfig)(transformProps ? transformProps(this.props) : this.props, [].concat((0, _toConsumableArray2.default)(allowedProps), (0, _toConsumableArray2.default)(customNativeProps)), config);\n            if (!(0, _$$_REQUIRE(_dependencyMap[14], \"../utils\").deepEqual)(this.config, newConfig)) {\n              this.updateGestureHandler(newConfig);\n            }\n          }\n        }\n      }, {\n        key: \"setNativeProps\",\n        value: function setNativeProps(updates) {\n          var mergedProps = Object.assign({}, this.props, updates);\n          var newConfig = (0, _$$_REQUIRE(_dependencyMap[18], \"./utils\").filterConfig)(transformProps ? transformProps(mergedProps) : mergedProps, [].concat((0, _toConsumableArray2.default)(allowedProps), (0, _toConsumableArray2.default)(customNativeProps)), config);\n          this.updateGestureHandler(newConfig);\n        }\n      }, {\n        key: \"render\",\n        value: function render() {\n          var _this$props$testID;\n          if (__DEV__ && !this.context && !(0, _$$_REQUIRE(_dependencyMap[14], \"../utils\").isJestEnv)() && _reactNative.Platform.OS !== 'web') {\n            throw new Error(name + ' must be used as a descendant of GestureHandlerRootView. Otherwise the gestures will not be recognized. See https://docs.swmansion.com/react-native-gesture-handler/docs/installation for more details.');\n          }\n          var gestureEventHandler = this.onGestureHandlerEvent;\n          // Another instance of https://github.com/microsoft/TypeScript/issues/13995\n\n          var _this$props3 = this.props,\n            onGestureEvent = _this$props3.onGestureEvent,\n            onGestureHandlerEvent = _this$props3.onGestureHandlerEvent;\n          if (onGestureEvent && typeof onGestureEvent !== 'function') {\n            // If it's not a method it should be an native Animated.event\n            // object. We set it directly as the handler for the view\n            // In this case nested handlers are not going to be supported\n            if (onGestureHandlerEvent) {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n            gestureEventHandler = onGestureEvent;\n          } else {\n            if (onGestureHandlerEvent && typeof onGestureHandlerEvent !== 'function') {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n          }\n          var gestureStateEventHandler = this.onGestureHandlerStateChange;\n          // Another instance of https://github.com/microsoft/TypeScript/issues/13995\n\n          var _this$props4 = this.props,\n            onHandlerStateChange = _this$props4.onHandlerStateChange,\n            onGestureHandlerStateChange = _this$props4.onGestureHandlerStateChange;\n          if (onHandlerStateChange && typeof onHandlerStateChange !== 'function') {\n            // If it's not a method it should be an native Animated.event\n            // object. We set it directly as the handler for the view\n            // In this case nested handlers are not going to be supported\n            if (onGestureHandlerStateChange) {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n            gestureStateEventHandler = onHandlerStateChange;\n          } else {\n            if (onGestureHandlerStateChange && typeof onGestureHandlerStateChange !== 'function') {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n          }\n          var events = {\n            onGestureHandlerEvent: this.state.allowTouches ? gestureEventHandler : undefined,\n            onGestureHandlerStateChange: this.state.allowTouches ? gestureStateEventHandler : undefined\n          };\n          this.propsRef.current = events;\n          var child = null;\n          try {\n            child = React.Children.only(this.props.children);\n          } catch (e) {\n            throw new Error((0, _$$_REQUIRE(_dependencyMap[14], \"../utils\").tagMessage)(`${name} got more than one view as a child. If you want the gesture to work on multiple views, wrap them with a common parent and attach the gesture to that view.`));\n          }\n          var grandChildren = child.props.children;\n          if (__DEV__ && child.type && (child.type === 'RNGestureHandlerButton' || child.type.name === 'View' || child.type.displayName === 'View')) {\n            grandChildren = React.Children.toArray(grandChildren);\n            grandChildren.push(/*#__PURE__*/(0, _jsxRuntime.jsx)(_$$_REQUIRE(_dependencyMap[21], \"./PressabilityDebugView\").PressabilityDebugView, {\n              color: \"mediumspringgreen\",\n              hitSlop: child.props.hitSlop\n            }, \"pressabilityDebugView\"));\n          }\n          return React.cloneElement(child, Object.assign({\n            ref: this.refHandler,\n            collapsable: false\n          }, (0, _$$_REQUIRE(_dependencyMap[14], \"../utils\").isJestEnv)() ? {\n            handlerType: name,\n            handlerTag: this.handlerTag,\n            enabled: this.props.enabled\n          } : {}, {\n            testID: (_this$props$testID = this.props.testID) != null ? _this$props$testID : child.props.testID\n          }, events), grandChildren);\n        }\n      }]);\n    }(React.Component);\n    Handler.displayName = name;\n    Handler.contextType = _GestureHandlerRootViewContext.default;\n    return Handler;\n  }\n});","lineCount":379,"map":[[14,2,1,0],[14,6,1,0,"React"],[14,11,1,0],[14,14,1,0,"_interopRequireWildcard"],[14,37,1,0],[14,38,1,0,"_$$_REQUIRE"],[14,49,1,0],[14,50,1,0,"_dependencyMap"],[14,64,1,0],[15,2,2,0],[15,6,2,0,"_reactNative"],[15,18,2,0],[15,21,2,0,"_$$_REQUIRE"],[15,32,2,0],[15,33,2,0,"_dependencyMap"],[15,47,2,0],[16,2,9,0],[16,6,9,0,"_RNGestureHandlerModule"],[16,29,9,0],[16,32,9,0,"_interopRequireDefault"],[16,54,9,0],[16,55,9,0,"_$$_REQUIRE"],[16,66,9,0],[16,67,9,0,"_dependencyMap"],[16,81,9,0],[17,2,24,0],[17,6,24,0,"_GestureHandlerRootViewContext"],[17,36,24,0],[17,39,24,0,"_interopRequireDefault"],[17,61,24,0],[17,62,24,0,"_$$_REQUIRE"],[17,73,24,0],[17,74,24,0,"_dependencyMap"],[17,88,24,0],[18,2,24,77],[18,6,24,77,"_jsxRuntime"],[18,17,24,77],[18,20,24,77,"_$$_REQUIRE"],[18,31,24,77],[18,32,24,77,"_dependencyMap"],[18,46,24,77],[19,2,24,77],[19,6,24,77,"_UIManagerAny$getView"],[19,27,24,77],[20,4,24,77,"_jsxFileName"],[20,16,24,77],[21,2,24,77],[21,11,24,77,"_getRequireWildcardCache"],[21,36,24,77,"e"],[21,37,24,77],[21,66,24,77,"WeakMap"],[21,73,24,77],[21,92,24,77,"r"],[21,93,24,77],[21,100,24,77,"WeakMap"],[21,107,24,77],[21,111,24,77,"t"],[21,112,24,77],[21,119,24,77,"WeakMap"],[21,126,24,77],[21,138,24,77,"_getRequireWildcardCache"],[21,162,24,77],[21,174,24,77,"_getRequireWildcardCache"],[21,199,24,77,"e"],[21,200,24,77],[21,211,24,77,"e"],[21,212,24,77],[21,215,24,77,"t"],[21,216,24,77],[21,219,24,77,"r"],[21,220,24,77],[21,225,24,77,"e"],[21,226,24,77],[22,2,24,77],[22,11,24,77,"_interopRequireWildcard"],[22,35,24,77,"e"],[22,36,24,77],[22,38,24,77,"r"],[22,39,24,77],[22,48,24,77,"r"],[22,49,24,77],[22,53,24,77,"e"],[22,54,24,77],[22,58,24,77,"e"],[22,59,24,77],[22,60,24,77,"__esModule"],[22,70,24,77],[22,79,24,77,"e"],[22,80,24,77],[22,95,24,77,"e"],[22,96,24,77],[22,119,24,77,"e"],[22,120,24,77],[22,145,24,77,"e"],[22,146,24,77],[22,157,24,77,"default"],[22,164,24,77],[22,166,24,77,"e"],[22,167,24,77],[22,175,24,77,"t"],[22,176,24,77],[22,179,24,77,"_getRequireWildcardCache"],[22,203,24,77],[22,204,24,77,"r"],[22,205,24,77],[22,212,24,77,"t"],[22,213,24,77],[22,217,24,77,"t"],[22,218,24,77],[22,219,24,77,"has"],[22,222,24,77],[22,223,24,77,"e"],[22,224,24,77],[22,234,24,77,"t"],[22,235,24,77],[22,236,24,77,"get"],[22,239,24,77],[22,240,24,77,"e"],[22,241,24,77],[22,248,24,77,"n"],[22,249,24,77],[22,254,24,77,"__proto__"],[22,263,24,77],[22,273,24,77,"a"],[22,274,24,77],[22,277,24,77,"Object"],[22,283,24,77],[22,284,24,77,"defineProperty"],[22,298,24,77],[22,302,24,77,"Object"],[22,308,24,77],[22,309,24,77,"getOwnPropertyDescriptor"],[22,333,24,77],[22,344,24,77,"u"],[22,345,24,77],[22,349,24,77,"e"],[22,350,24,77],[22,370,24,77,"u"],[22,371,24,77],[22,378,24,77,"hasOwnProperty"],[22,392,24,77],[22,393,24,77,"call"],[22,397,24,77],[22,398,24,77,"e"],[22,399,24,77],[22,401,24,77,"u"],[22,402,24,77],[22,411,24,77,"i"],[22,412,24,77],[22,415,24,77,"a"],[22,416,24,77],[22,419,24,77,"Object"],[22,425,24,77],[22,426,24,77,"getOwnPropertyDescriptor"],[22,450,24,77],[22,451,24,77,"e"],[22,452,24,77],[22,454,24,77,"u"],[22,455,24,77],[22,465,24,77,"i"],[22,466,24,77],[22,471,24,77,"i"],[22,472,24,77],[22,473,24,77,"get"],[22,476,24,77],[22,480,24,77,"i"],[22,481,24,77],[22,482,24,77,"set"],[22,485,24,77],[22,489,24,77,"Object"],[22,495,24,77],[22,496,24,77,"defineProperty"],[22,510,24,77],[22,511,24,77,"n"],[22,512,24,77],[22,514,24,77,"u"],[22,515,24,77],[22,517,24,77,"i"],[22,518,24,77],[22,522,24,77,"n"],[22,523,24,77],[22,524,24,77,"u"],[22,525,24,77],[22,529,24,77,"e"],[22,530,24,77],[22,531,24,77,"u"],[22,532,24,77],[22,544,24,77,"n"],[22,545,24,77],[22,546,24,77,"default"],[22,553,24,77],[22,556,24,77,"e"],[22,557,24,77],[22,559,24,77,"t"],[22,560,24,77],[22,564,24,77,"t"],[22,565,24,77],[22,566,24,77,"set"],[22,569,24,77],[22,570,24,77,"e"],[22,571,24,77],[22,573,24,77,"n"],[22,574,24,77],[22,577,24,77,"n"],[22,578,24,77],[23,2,24,77],[23,11,24,77,"_callSuper"],[23,22,24,77,"t"],[23,23,24,77],[23,25,24,77,"o"],[23,26,24,77],[23,28,24,77,"e"],[23,29,24,77],[23,40,24,77,"o"],[23,41,24,77],[23,48,24,77,"_getPrototypeOf2"],[23,64,24,77],[23,65,24,77,"default"],[23,72,24,77],[23,74,24,77,"o"],[23,75,24,77],[23,82,24,77,"_possibleConstructorReturn2"],[23,109,24,77],[23,110,24,77,"default"],[23,117,24,77],[23,119,24,77,"t"],[23,120,24,77],[23,122,24,77,"_isNativeReflectConstruct"],[23,147,24,77],[23,152,24,77,"Reflect"],[23,159,24,77],[23,160,24,77,"construct"],[23,169,24,77],[23,170,24,77,"o"],[23,171,24,77],[23,173,24,77,"e"],[23,174,24,77],[23,186,24,77,"_getPrototypeOf2"],[23,202,24,77],[23,203,24,77,"default"],[23,210,24,77],[23,212,24,77,"t"],[23,213,24,77],[23,215,24,77,"constructor"],[23,226,24,77],[23,230,24,77,"o"],[23,231,24,77],[23,232,24,77,"apply"],[23,237,24,77],[23,238,24,77,"t"],[23,239,24,77],[23,241,24,77,"e"],[23,242,24,77],[24,2,24,77],[24,11,24,77,"_isNativeReflectConstruct"],[24,37,24,77],[24,51,24,77,"t"],[24,52,24,77],[24,56,24,77,"Boolean"],[24,63,24,77],[24,64,24,77,"prototype"],[24,73,24,77],[24,74,24,77,"valueOf"],[24,81,24,77],[24,82,24,77,"call"],[24,86,24,77],[24,87,24,77,"Reflect"],[24,94,24,77],[24,95,24,77,"construct"],[24,104,24,77],[24,105,24,77,"Boolean"],[24,112,24,77],[24,145,24,77,"t"],[24,146,24,77],[24,159,24,77,"_isNativeReflectConstruct"],[24,184,24,77],[24,196,24,77,"_isNativeReflectConstruct"],[24,222,24,77],[24,235,24,77,"t"],[24,236,24,77],[25,2,27,0],[25,6,27,6,"UIManagerAny"],[25,18,27,18],[25,21,27,21,"UIManager"],[25,43,27,37],[26,2,29,0,"customDirectEventTypes"],[26,33,29,0],[26,34,29,0,"customDirectEventTypes"],[26,84,29,22],[26,85,29,23,"topGestureHandlerEvent"],[26,107,29,45],[26,110,29,48],[27,4,30,2,"registrationName"],[27,20,30,18],[27,22,30,20],[28,2,31,0],[28,3,31,1],[29,2,33,0],[29,6,33,6,"customGHEventsConfigFabricAndroid"],[29,39,33,39],[29,42,33,42],[30,4,34,2,"topOnGestureHandlerEvent"],[30,28,34,26],[30,30,34,28],[31,6,34,30,"registrationName"],[31,22,34,46],[31,24,34,48],[32,4,34,72],[32,5,34,73],[33,4,35,2,"topOnGestureHandlerStateChange"],[33,34,35,32],[33,36,35,34],[34,6,36,4,"registrationName"],[34,22,36,20],[34,24,36,22],[35,4,37,2],[36,2,38,0],[36,3,38,1],[37,2,40,0],[37,6,40,6,"customGHEventsConfig"],[37,26,40,26],[37,29,40,26,"Object"],[37,35,40,26],[37,36,40,26,"assign"],[37,42,40,26],[38,4,41,2,"onGestureHandlerEvent"],[38,25,41,23],[38,27,41,25],[39,6,41,27,"registrationName"],[39,22,41,43],[39,24,41,45],[40,4,41,69],[40,5,41,70],[41,4,42,2,"onGestureHandlerStateChange"],[41,31,42,29],[41,33,42,31],[42,6,43,4,"registrationName"],[42,22,43,20],[42,24,43,22],[43,4,44,2],[44,2,44,3],[44,5,54,6],[44,9,54,6,"isFabric"],[44,40,54,6],[44,41,54,6,"isFabric"],[44,61,54,14],[44,63,54,15],[44,64,54,16],[44,68,55,4,"Platform"],[44,89,55,12],[44,90,55,13,"OS"],[44,92,55,15],[44,97,55,20],[44,106,55,29],[44,110,56,4,"customGHEventsConfigFabricAndroid"],[44,143,56,37],[44,144,57,1],[46,2,59,0],[47,2,60,0],[48,2,61,0],[49,2,62,0],[50,2,63,0,"UIManagerAny"],[50,14,63,12],[50,15,63,13,"genericDirectEventTypes"],[50,38,63,36],[50,41,63,36,"Object"],[50,47,63,36],[50,48,63,36,"assign"],[50,54,63,36],[50,59,64,5,"UIManagerAny"],[50,71,64,17],[50,72,64,18,"genericDirectEventTypes"],[50,95,64,41],[50,97,65,5,"customGHEventsConfig"],[50,117,65,25],[50,118,66,1],[51,2,67,0],[52,2,68,0],[53,2,69,0],[54,2,70,0],[54,6,70,6,"UIManagerConstants"],[54,24,70,24],[54,28,70,24,"_UIManagerAny$getView"],[54,49,70,24],[54,52,71,2,"UIManagerAny"],[54,64,71,14],[54,65,71,15,"getViewManagerConfig"],[54,85,71,35],[54,105,71,2,"UIManagerAny"],[54,117,71,14],[54,118,71,15,"getViewManagerConfig"],[54,138,71,35],[54,139,71,38],[54,153,71,52],[54,154,71,53],[54,166,71,53,"_UIManagerAny$getView"],[54,187,71,53],[54,190,72,2,"UIManagerAny"],[54,202,72,14],[54,203,72,15,"getConstants"],[54,215,72,27],[54,235,72,2,"UIManagerAny"],[54,247,72,14],[54,248,72,15,"getConstants"],[54,260,72,27],[54,261,72,30],[54,262,72,31],[55,2,74,0],[55,6,74,4,"UIManagerConstants"],[55,24,74,22],[55,26,74,24],[56,4,75,2,"UIManagerConstants"],[56,22,75,20],[56,23,75,21,"genericDirectEventTypes"],[56,46,75,44],[56,49,75,44,"Object"],[56,55,75,44],[56,56,75,44,"assign"],[56,62,75,44],[56,67,76,7,"UIManagerConstants"],[56,85,76,25],[56,86,76,26,"genericDirectEventTypes"],[56,109,76,49],[56,111,77,7,"customGHEventsConfig"],[56,131,77,27],[56,132,78,3],[57,2,79,0],[59,2,81,0],[60,2,82,0],[60,6,82,0,"_UIManagerAny$setJSRe"],[60,27,82,0],[60,30,89,4,"UIManagerAny"],[60,42,89,16],[60,43,83,2,"setJSResponder"],[60,57,83,16],[61,4,83,18,"oldSetJSResponder"],[61,21,83,35],[61,24,83,35,"_UIManagerAny$setJSRe"],[61,45,83,35],[61,59,83,38],[61,71,83,44],[62,6,84,4],[63,4,84,4],[63,5,85,3],[63,8,85,3,"_UIManagerAny$setJSRe"],[63,29,85,3],[64,4,85,3,"_UIManagerAny$clearJS"],[64,25,85,3],[64,28,89,4,"UIManagerAny"],[64,40,89,16],[64,41,86,2,"clearJSResponder"],[64,57,86,18],[65,4,86,20,"oldClearJSResponder"],[65,23,86,39],[65,26,86,39,"_UIManagerAny$clearJS"],[65,47,86,39],[65,61,86,42],[65,73,86,48],[66,6,87,4],[67,4,87,4],[67,5,88,3],[67,8,88,3,"_UIManagerAny$clearJS"],[67,29,88,3],[68,2,90,0,"UIManagerAny"],[68,14,90,12],[68,15,90,13,"setJSResponder"],[68,29,90,27],[68,32,90,30],[68,42,90,31,"tag"],[68,45,90,42],[68,47,90,44,"blockNativeResponder"],[68,67,90,73],[68,69,90,78],[69,4,91,2,"RNGestureHandlerModule"],[69,35,91,24],[69,36,91,25,"handleSetJSResponder"],[69,56,91,45],[69,57,91,46,"tag"],[69,60,91,49],[69,62,91,51,"blockNativeResponder"],[69,82,91,71],[69,83,91,72],[70,4,92,2,"oldSetJSResponder"],[70,21,92,19],[70,22,92,20,"tag"],[70,25,92,23],[70,27,92,25,"blockNativeResponder"],[70,47,92,45],[70,48,92,46],[71,2,93,0],[71,3,93,1],[72,2,94,0,"UIManagerAny"],[72,14,94,12],[72,15,94,13,"clearJSResponder"],[72,31,94,29],[72,34,94,32],[72,46,94,38],[73,4,95,2,"RNGestureHandlerModule"],[73,35,95,24],[73,36,95,25,"handleClearJSResponder"],[73,58,95,47],[73,59,95,48],[73,60,95,49],[74,4,96,2,"oldClearJSResponder"],[74,23,96,21],[74,24,96,22],[74,25,96,23],[75,2,97,0],[75,3,97,1],[76,2,99,0],[76,6,99,4,"allowTouches"],[76,18,99,16],[76,21,99,19],[76,25,99,23],[77,2,100,0],[77,6,100,6,"DEV_ON_ANDROID"],[77,20,100,20],[77,23,100,23,"__DEV__"],[77,30,100,30],[77,34,100,34,"Platform"],[77,55,100,42],[77,56,100,43,"OS"],[77,58,100,45],[77,63,100,50],[77,72,100,59],[78,2,101,0],[79,2,102,0],[80,2,103,0],[80,6,103,4,"DEV_ON_ANDROID"],[80,20,103,18],[80,22,103,20],[81,4,104,2,"DeviceEventEmitter"],[81,35,104,20],[81,36,104,21,"addListener"],[81,47,104,32],[81,48,104,33],[81,72,104,57],[81,74,104,59],[81,86,104,65],[82,6,105,4,"allowTouches"],[82,18,105,16],[82,21,105,19],[82,22,105,20,"allowTouches"],[82,34,105,32],[83,4,106,2],[83,5,106,3],[83,6,106,4],[84,2,107,0],[85,2,112,0],[85,11,112,9,"hasUnresolvedRefs"],[85,28,112,26,"hasUnresolvedRefs"],[85,29,113,2,"props"],[85,34,113,24],[85,36,114,2],[86,4,115,2],[87,4,116,2],[87,8,116,8,"extract"],[87,15,116,15],[87,18,116,18],[87,27,116,8,"extract"],[87,34,116,15,"extract"],[87,35,116,19,"refs"],[87,39,116,36],[87,41,116,41],[88,6,117,4],[88,10,117,8],[88,11,117,9,"Array"],[88,16,117,14],[88,17,117,15,"isArray"],[88,24,117,22],[88,25,117,23,"refs"],[88,29,117,27],[88,30,117,28],[88,32,117,30],[89,8,118,6],[89,15,118,13,"refs"],[89,19,118,17],[89,23,118,21,"refs"],[89,27,118,25],[89,28,118,26,"current"],[89,35,118,33],[89,40,118,38],[89,44,118,42],[90,6,119,4],[91,6,120,4],[91,13,120,11,"refs"],[91,17,120,15],[91,18,120,16,"some"],[91,22,120,20],[91,23,120,21],[91,33,120,22,"r"],[91,34,120,23],[92,8,120,23],[92,15,120,28,"r"],[92,16,120,29],[92,20,120,33,"r"],[92,21,120,34],[92,22,120,35,"current"],[92,29,120,42],[92,34,120,47],[92,38,120,51],[93,6,120,51],[93,8,120,52],[94,4,121,2],[94,5,121,3],[95,4,122,2],[95,11,122,9,"extract"],[95,18,122,16],[95,19,122,17,"props"],[95,24,122,22],[95,25,122,23],[95,47,122,45],[95,48,122,46],[95,49,122,47],[95,53,122,51,"extract"],[95,60,122,58],[95,61,122,59,"props"],[95,66,122,64],[95,67,122,65],[95,76,122,74],[95,77,122,75],[95,78,122,76],[96,2,123,0],[97,2,125,0],[97,6,125,6,"stateToPropMappings"],[97,25,125,25],[97,32,125,25,"_defineProperty2"],[97,48,125,25],[97,49,125,25,"default"],[97,56,125,25],[97,62,125,25,"_defineProperty2"],[97,78,125,25],[97,79,125,25,"default"],[97,86,125,25],[97,92,125,25,"_defineProperty2"],[97,108,125,25],[97,109,125,25,"default"],[97,116,125,25],[97,122,125,25,"_defineProperty2"],[97,138,125,25],[97,139,125,25,"default"],[97,146,125,25],[97,152,125,25,"_defineProperty2"],[97,168,125,25],[97,169,125,25,"default"],[97,176,125,25],[97,182,125,25,"_defineProperty2"],[97,198,125,25],[97,199,125,25,"default"],[97,206,125,25],[97,212,126,3,"State"],[97,243,126,3],[97,244,126,3,"State"],[97,261,126,8],[97,262,126,9,"UNDETERMINED"],[97,274,126,21],[97,276,126,24,"undefined"],[97,285,126,33],[97,288,127,3,"State"],[97,319,127,3],[97,320,127,3,"State"],[97,337,127,8],[97,338,127,9,"BEGAN"],[97,343,127,14],[97,345,127,17],[97,354,127,26],[97,357,128,3,"State"],[97,388,128,3],[97,389,128,3,"State"],[97,406,128,8],[97,407,128,9,"FAILED"],[97,413,128,15],[97,415,128,18],[97,425,128,28],[97,428,129,3,"State"],[97,459,129,3],[97,460,129,3,"State"],[97,477,129,8],[97,478,129,9,"CANCELLED"],[97,487,129,18],[97,489,129,21],[97,502,129,34],[97,505,130,3,"State"],[97,536,130,3],[97,537,130,3,"State"],[97,554,130,8],[97,555,130,9,"ACTIVE"],[97,561,130,15],[97,563,130,18],[97,576,130,31],[97,579,131,3,"State"],[97,610,131,3],[97,611,131,3,"State"],[97,628,131,8],[97,629,131,9,"END"],[97,632,131,12],[97,634,131,15],[97,643,131,24],[97,644,132,10],[99,2,143,0],[101,2,157,0],[101,6,157,6,"UNRESOLVED_REFS_RETRY_LIMIT"],[101,33,157,33],[101,36,157,36],[101,37,157,37],[103,2,159,0],[104,2,160,15],[104,11,160,24,"createHandler"],[104,24,160,37,"createHandler"],[104,25,160,37,"_ref"],[104,29,160,37],[104,31,169,76],[105,4,169,76],[105,8,164,2,"name"],[105,12,164,6],[105,15,164,6,"_ref"],[105,19,164,6],[105,20,164,2,"name"],[105,24,164,6],[106,6,164,6,"_ref$allowedProps"],[106,23,164,6],[106,26,164,6,"_ref"],[106,30,164,6],[106,31,165,2,"allowedProps"],[106,43,165,14],[107,6,165,2,"allowedProps"],[107,18,165,14],[107,21,165,14,"_ref$allowedProps"],[107,38,165,14],[107,52,165,17],[107,54,165,19],[107,57,165,19,"_ref$allowedProps"],[107,74,165,19],[108,6,165,19,"_ref$config"],[108,17,165,19],[108,20,165,19,"_ref"],[108,24,165,19],[108,25,166,2,"config"],[108,31,166,8],[109,6,166,2,"config"],[109,12,166,8],[109,15,166,8,"_ref$config"],[109,26,166,8],[109,40,166,11],[109,41,166,12],[109,42,166,13],[109,45,166,13,"_ref$config"],[109,56,166,13],[110,6,167,2,"transformProps"],[110,20,167,16],[110,23,167,16,"_ref"],[110,27,167,16],[110,28,167,2,"transformProps"],[110,42,167,16],[111,6,167,16,"_ref$customNativeProp"],[111,27,167,16],[111,30,167,16,"_ref"],[111,34,167,16],[111,35,168,2,"customNativeProps"],[111,52,168,19],[112,6,168,2,"customNativeProps"],[112,23,168,19],[112,26,168,19,"_ref$customNativeProp"],[112,47,168,19],[112,61,168,22],[112,63,168,24],[112,66,168,24,"_ref$customNativeProp"],[112,87,168,24],[113,4,168,24],[113,8,173,8,"Handler"],[113,15,173,15],[113,41,173,15,"_React$Component"],[113,57,173,15],[114,6,188,4],[114,15,188,4,"Handler"],[114,23,188,16,"props"],[114,28,188,48],[114,30,188,50],[115,8,188,50],[115,12,188,50,"_this"],[115,17,188,50],[116,8,188,50],[116,12,188,50,"_classCallCheck2"],[116,28,188,50],[116,29,188,50,"default"],[116,36,188,50],[116,44,188,50,"Handler"],[116,51,188,50],[117,8,189,6,"_this"],[117,13,189,6],[117,16,189,6,"_callSuper"],[117,26,189,6],[117,33,189,6,"Handler"],[117,40,189,6],[117,43,189,12,"props"],[117,48,189,17],[118,8,189,19,"_this"],[118,13,189,19],[118,14,260,12,"onGestureHandlerEvent"],[118,35,260,33],[118,38,260,36],[118,48,260,37,"event"],[118,53,260,59],[118,55,260,64],[119,10,261,6],[119,14,261,10,"event"],[119,19,261,15],[119,20,261,16,"nativeEvent"],[119,31,261,27],[119,32,261,28,"handlerTag"],[119,42,261,38],[119,47,261,43,"_this"],[119,52,261,43],[119,53,261,48,"handlerTag"],[119,63,261,58],[119,65,261,60],[120,12,262,8],[120,16,262,12],[120,23,262,19,"_this"],[120,28,262,19],[120,29,262,24,"props"],[120,34,262,29],[120,35,262,30,"onGestureEvent"],[120,49,262,44],[120,54,262,49],[120,64,262,59],[120,66,262,61],[121,14,263,10,"_this"],[121,19,263,10],[121,20,263,15,"props"],[121,25,263,20],[121,26,263,21,"onGestureEvent"],[121,40,263,35],[121,52,263,10,"_this"],[121,57,263,10],[121,58,263,15,"props"],[121,63,263,20],[121,64,263,21,"onGestureEvent"],[121,78,263,35],[121,79,263,38,"event"],[121,84,263,43],[121,85,263,44],[122,12,264,8],[123,10,265,6],[123,11,265,7],[123,17,265,13],[124,12,266,8,"_this"],[124,17,266,8],[124,18,266,13,"props"],[124,23,266,18],[124,24,266,19,"onGestureHandlerEvent"],[124,45,266,40],[124,57,266,8,"_this"],[124,62,266,8],[124,63,266,13,"props"],[124,68,266,18],[124,69,266,19,"onGestureHandlerEvent"],[124,90,266,40],[124,91,266,43,"event"],[124,96,266,48],[124,97,266,49],[125,10,267,6],[126,8,268,4],[126,9,268,5],[127,8,270,4],[128,8,270,4,"_this"],[128,13,270,4],[128,14,271,12,"onGestureHandlerStateChange"],[128,41,271,39],[128,44,271,42],[128,54,272,6,"event"],[128,59,272,39],[128,61,273,9],[129,10,274,6],[129,14,274,10,"event"],[129,19,274,15],[129,20,274,16,"nativeEvent"],[129,31,274,27],[129,32,274,28,"handlerTag"],[129,42,274,38],[129,47,274,43,"_this"],[129,52,274,43],[129,53,274,48,"handlerTag"],[129,63,274,58],[129,65,274,60],[130,12,275,8],[130,16,275,12],[130,23,275,19,"_this"],[130,28,275,19],[130,29,275,24,"props"],[130,34,275,29],[130,35,275,30,"onHandlerStateChange"],[130,55,275,50],[130,60,275,55],[130,70,275,65],[130,72,275,67],[131,14,276,10,"_this"],[131,19,276,10],[131,20,276,15,"props"],[131,25,276,20],[131,26,276,21,"onHandlerStateChange"],[131,46,276,41],[131,58,276,10,"_this"],[131,63,276,10],[131,64,276,15,"props"],[131,69,276,20],[131,70,276,21,"onHandlerStateChange"],[131,90,276,41],[131,91,276,44,"event"],[131,96,276,49],[131,97,276,50],[132,12,277,8],[133,12,279,8],[133,16,279,14,"state"],[133,21,279,42],[133,24,279,45,"event"],[133,29,279,50],[133,30,279,51,"nativeEvent"],[133,41,279,62],[133,42,279,63,"state"],[133,47,279,68],[134,12,280,8],[134,16,280,14,"stateEventName"],[134,30,280,28],[134,33,280,31,"stateToPropMappings"],[134,52,280,50],[134,53,280,51,"state"],[134,58,280,56],[134,59,280,57],[135,12,281,8],[135,16,281,14,"eventHandler"],[135,28,281,26],[135,31,281,29,"stateEventName"],[135,45,281,43],[135,49,281,47,"_this"],[135,54,281,47],[135,55,281,52,"props"],[135,60,281,57],[135,61,281,58,"stateEventName"],[135,75,281,72],[135,76,281,73],[136,12,282,8],[136,16,282,12,"eventHandler"],[136,28,282,24],[136,32,282,28],[136,39,282,35,"eventHandler"],[136,51,282,47],[136,56,282,52],[136,66,282,62],[136,68,282,64],[137,14,283,10,"eventHandler"],[137,26,283,22],[137,27,283,23,"event"],[137,32,283,28],[137,33,283,29],[138,12,284,8],[139,10,285,6],[139,11,285,7],[139,17,285,13],[140,12,286,8,"_this"],[140,17,286,8],[140,18,286,13,"props"],[140,23,286,18],[140,24,286,19,"onGestureHandlerStateChange"],[140,51,286,46],[140,63,286,8,"_this"],[140,68,286,8],[140,69,286,13,"props"],[140,74,286,18],[140,75,286,19,"onGestureHandlerStateChange"],[140,102,286,46],[140,103,286,49,"event"],[140,108,286,54],[140,109,286,55],[141,10,287,6],[142,8,288,4],[142,9,288,5],[143,8,288,5,"_this"],[143,13,288,5],[143,14,290,12,"refHandler"],[143,24,290,22],[143,27,290,25],[143,37,290,26,"node"],[143,41,290,35],[143,43,290,40],[144,10,291,6,"_this"],[144,15,291,6],[144,16,291,11,"viewNode"],[144,24,291,19],[144,27,291,22,"node"],[144,31,291,26],[145,10,293,6],[145,14,293,12,"child"],[145,19,293,17],[145,22,293,20,"React"],[145,27,293,25],[145,28,293,26,"Children"],[145,36,293,34],[145,37,293,35,"only"],[145,41,293,39],[145,42,293,40,"_this"],[145,47,293,40],[145,48,293,45,"props"],[145,53,293,50],[145,54,293,51,"children"],[145,62,293,59],[145,63,293,60],[146,10,294,6],[147,10,295,6],[147,14,295,14,"ref"],[147,17,295,17],[147,20,295,27,"child"],[147,25,295,32],[147,26,295,14,"ref"],[147,29,295,17],[148,10,296,6],[148,14,296,10,"ref"],[148,17,296,13],[148,22,296,18],[148,26,296,22],[148,28,296,24],[149,12,297,8],[149,16,297,12],[149,23,297,19,"ref"],[149,26,297,22],[149,31,297,27],[149,41,297,37],[149,43,297,39],[150,14,298,10,"ref"],[150,17,298,13],[150,18,298,14,"node"],[150,22,298,18],[150,23,298,19],[151,12,299,8],[151,13,299,9],[151,19,299,15],[152,14,300,10,"ref"],[152,17,300,13],[152,18,300,14,"current"],[152,25,300,21],[152,28,300,24,"node"],[152,32,300,28],[153,12,301,8],[154,10,302,6],[155,8,303,4],[155,9,303,5],[156,8,303,5,"_this"],[156,13,303,5],[156,14,305,12,"createGestureHandler"],[156,34,305,32],[156,37,305,35],[156,47,306,6,"newConfig"],[156,56,306,50],[156,58,307,9],[157,10,308,6,"_this"],[157,15,308,6],[157,16,308,11,"config"],[157,22,308,17],[157,25,308,20,"newConfig"],[157,34,308,29],[158,10,310,6,"RNGestureHandlerModule"],[158,41,310,28],[158,42,310,29,"createGestureHandler"],[158,62,310,49],[158,63,311,8,"name"],[158,67,311,12],[158,69,312,8,"_this"],[158,74,312,8],[158,75,312,13,"handlerTag"],[158,85,312,23],[158,87,313,8,"newConfig"],[158,96,314,6],[158,97,314,7],[159,8,315,4],[159,9,315,5],[160,8,315,5,"_this"],[160,13,315,5],[160,14,317,12,"attachGestureHandler"],[160,34,317,32],[160,37,317,35],[160,47,317,36,"newViewTag"],[160,57,317,54],[160,59,317,59],[161,10,318,6,"_this"],[161,15,318,6],[161,16,318,11,"viewTag"],[161,23,318,18],[161,26,318,21,"newViewTag"],[161,36,318,31],[162,10,320,6],[162,14,320,10,"Platform"],[162,35,320,18],[162,36,320,19,"OS"],[162,38,320,21],[162,43,320,26],[162,48,320,31],[162,50,320,33],[163,12,321,8],[164,12,323,10,"RNGestureHandlerModule"],[164,43,323,32],[164,44,323,33,"attachGestureHandler"],[164,64,323,53],[164,65,325,10,"_this"],[164,70,325,10],[164,71,325,15,"handlerTag"],[164,81,325,25],[164,83,326,10,"newViewTag"],[164,93,326,20],[164,95,327,10,"ActionType"],[164,126,327,10],[164,127,327,10,"ActionType"],[164,154,327,20],[164,155,327,21,"JS_FUNCTION_OLD_API"],[164,174,327,40],[165,12,327,42],[166,12,328,10,"_this"],[166,17,328,10],[166,18,328,15,"propsRef"],[166,26,329,8],[166,27,329,9],[167,10,330,6],[167,11,330,7],[167,17,330,13],[168,12,331,8],[168,16,331,8,"registerOldGestureHandler"],[168,47,331,8],[168,48,331,8,"registerOldGestureHandler"],[168,95,331,33],[168,97,331,34,"_this"],[168,102,331,34],[168,103,331,39,"handlerTag"],[168,113,331,49],[168,115,331,51],[169,14,332,10,"onGestureEvent"],[169,28,332,24],[169,30,332,26,"_this"],[169,35,332,26],[169,36,332,31,"onGestureHandlerEvent"],[169,57,332,52],[170,14,333,10,"onGestureStateChange"],[170,34,333,30],[170,36,333,32,"_this"],[170,41,333,32],[170,42,333,37,"onGestureHandlerStateChange"],[171,12,334,8],[171,13,334,9],[171,14,334,10],[172,12,336,8],[172,16,336,14,"actionType"],[172,26,336,24],[172,29,336,28],[172,39,336,28,"_this$props"],[172,50,336,28],[172,52,336,28,"_this$props2"],[172,64,336,28],[172,66,336,34],[173,14,337,10],[173,18,337,16,"onGestureEvent"],[173,32,337,30],[173,36,337,30,"_this$props"],[173,47,337,30],[173,50,337,33,"_this"],[173,55,337,33],[173,56,337,38,"props"],[173,61,337,43],[173,82,337,33,"_this$props"],[173,93,337,33],[173,94,337,45,"onGestureEvent"],[173,108,337,59],[174,14,338,10],[174,18,338,16,"isGestureHandlerWorklet"],[174,41,338,39],[174,44,339,12,"onGestureEvent"],[174,58,339,26],[174,63,340,13],[174,72,340,22],[174,76,340,26,"onGestureEvent"],[174,90,340,40],[174,94,341,14],[174,115,341,35],[174,119,341,39,"onGestureEvent"],[174,133,341,53],[174,134,341,54],[175,14,342,10],[175,18,342,16,"onHandlerStateChange"],[175,38,342,36],[175,42,342,36,"_this$props2"],[175,54,342,36],[175,57,342,39,"_this"],[175,62,342,39],[175,63,342,44,"props"],[175,68,342,49],[175,89,342,39,"_this$props2"],[175,101,342,39],[175,102,342,51,"onHandlerStateChange"],[175,122,342,71],[176,14,343,10],[176,18,343,16,"isStateChangeHandlerWorklet"],[176,45,343,43],[176,48,344,12,"onHandlerStateChange"],[176,68,344,32],[176,73,345,13],[176,82,345,22],[176,86,345,26,"onHandlerStateChange"],[176,106,345,46],[176,110,346,14],[176,131,346,35],[176,135,346,39,"onHandlerStateChange"],[176,155,346,59],[176,156,346,60],[177,14,347,10],[177,18,347,16,"isReanimatedHandler"],[177,37,347,35],[177,40,348,12,"isGestureHandlerWorklet"],[177,63,348,35],[177,67,348,39,"isStateChangeHandlerWorklet"],[177,94,348,66],[178,14,349,10],[178,18,349,14,"isReanimatedHandler"],[178,37,349,33],[178,39,349,35],[179,16,350,12],[180,16,351,12],[180,23,351,19,"ActionType"],[180,54,351,19],[180,55,351,19,"ActionType"],[180,82,351,29],[180,83,351,30,"REANIMATED_WORKLET"],[180,101,351,48],[181,14,352,10],[181,15,352,11],[181,21,352,17],[181,25,352,21,"onGestureEvent"],[181,39,352,35],[181,43,352,39],[181,55,352,51],[181,59,352,55,"onGestureEvent"],[181,73,352,69],[181,75,352,71],[182,16,353,12],[183,16,354,12],[183,23,354,19,"ActionType"],[183,54,354,19],[183,55,354,19,"ActionType"],[183,82,354,29],[183,83,354,30,"NATIVE_ANIMATED_EVENT"],[183,104,354,51],[184,14,355,10],[184,15,355,11],[184,21,355,17],[185,16,356,12],[186,16,357,12],[186,23,357,19,"ActionType"],[186,54,357,19],[186,55,357,19,"ActionType"],[186,82,357,29],[186,83,357,30,"JS_FUNCTION_OLD_API"],[186,102,357,49],[187,14,358,10],[188,12,359,8],[188,13,359,9],[188,14,359,11],[188,15,359,12],[189,12,361,8,"RNGestureHandlerModule"],[189,43,361,30],[189,44,361,31,"attachGestureHandler"],[189,64,361,51],[189,65,362,10,"_this"],[189,70,362,10],[189,71,362,15,"handlerTag"],[189,81,362,25],[189,83,363,10,"newViewTag"],[189,93,363,20],[189,95,364,10,"actionType"],[189,105,365,8],[189,106,365,9],[190,10,366,6],[191,10,368,6],[191,14,368,6,"scheduleFlushOperations"],[191,45,368,6],[191,46,368,6,"scheduleFlushOperations"],[191,80,368,29],[191,82,368,30],[191,83,368,31],[192,8,369,4],[192,9,369,5],[193,8,369,5,"_this"],[193,13,369,5],[193,14,371,12,"updateGestureHandler"],[193,34,371,32],[193,37,371,35],[193,47,372,6,"newConfig"],[193,56,372,50],[193,58,373,9],[194,10,374,6,"_this"],[194,15,374,6],[194,16,374,11,"config"],[194,22,374,17],[194,25,374,20,"newConfig"],[194,34,374,29],[195,10,376,6,"RNGestureHandlerModule"],[195,41,376,28],[195,42,376,29,"updateGestureHandler"],[195,62,376,49],[195,63,376,50,"_this"],[195,68,376,50],[195,69,376,55,"handlerTag"],[195,79,376,65],[195,81,376,67,"newConfig"],[195,90,376,76],[195,91,376,77],[196,10,377,6],[196,14,377,6,"scheduleFlushOperations"],[196,45,377,6],[196,46,377,6,"scheduleFlushOperations"],[196,80,377,29],[196,82,377,30],[196,83,377,31],[197,8,378,4],[197,9,378,5],[198,8,190,6,"_this"],[198,13,190,6],[198,14,190,11,"handlerTag"],[198,24,190,21],[198,27,190,24],[198,31,190,24,"getNextHandlerTag"],[198,62,190,24],[198,63,190,24,"getNextHandlerTag"],[198,103,190,41],[198,105,190,42],[198,106,190,43],[199,8,191,6,"_this"],[199,13,191,6],[199,14,191,11,"config"],[199,20,191,17],[199,23,191,20],[199,24,191,21],[199,25,191,22],[200,8,192,6,"_this"],[200,13,192,6],[200,14,192,11,"propsRef"],[200,22,192,19],[200,25,192,22,"React"],[200,30,192,27],[200,31,192,28,"createRef"],[200,40,192,37],[200,41,192,38],[200,42,192,39],[201,8,193,6,"_this"],[201,13,193,6],[201,14,193,11,"isMountedRef"],[201,26,193,23],[201,29,193,26,"React"],[201,34,193,31],[201,35,193,32,"createRef"],[201,44,193,41],[201,45,193,42],[201,46,193,43],[202,8,194,6,"_this"],[202,13,194,6],[202,14,194,11,"state"],[202,19,194,16],[202,22,194,19],[203,10,194,21,"allowTouches"],[203,22,194,33],[203,24,194,21,"allowTouches"],[204,8,194,34],[204,9,194,35],[205,8,195,6],[205,12,195,10,"props"],[205,17,195,15],[205,18,195,16,"id"],[205,20,195,18],[205,22,195,20],[206,10,196,8],[206,14,196,12,"handlerIDToTag"],[206,45,196,12],[206,46,196,12,"handlerIDToTag"],[206,82,196,26],[206,83,196,27,"props"],[206,88,196,32],[206,89,196,33,"id"],[206,91,196,35],[206,92,196,36],[206,97,196,41,"undefined"],[206,106,196,50],[206,108,196,52],[207,12,197,10],[207,18,197,16],[207,22,197,20,"Error"],[207,27,197,25],[207,28,197,26],[207,48,197,46,"props"],[207,53,197,51],[207,54,197,52,"id"],[207,56,197,54],[207,78,197,76],[207,79,197,77],[208,10,198,8],[209,10,199,8,"handlerIDToTag"],[209,41,199,8],[209,42,199,8,"handlerIDToTag"],[209,78,199,22],[209,79,199,23,"props"],[209,84,199,28],[209,85,199,29,"id"],[209,87,199,31],[209,88,199,32],[209,91,199,35,"_this"],[209,96,199,35],[209,97,199,40,"handlerTag"],[209,107,199,50],[210,8,200,6],[211,8,200,7],[211,15,200,7,"_this"],[211,20,200,7],[212,6,201,4],[213,6,201,5],[213,10,201,5,"_inherits2"],[213,20,201,5],[213,21,201,5,"default"],[213,28,201,5],[213,30,201,5,"Handler"],[213,37,201,5],[213,39,201,5,"_React$Component"],[213,55,201,5],[214,6,201,5],[214,17,201,5,"_createClass2"],[214,30,201,5],[214,31,201,5,"default"],[214,38,201,5],[214,40,201,5,"Handler"],[214,47,201,5],[215,8,201,5,"key"],[215,11,201,5],[216,8,201,5,"value"],[216,13,201,5],[216,15,203,4],[216,24,203,4,"componentDidMount"],[216,41,203,21,"componentDidMount"],[216,42,203,21],[216,44,203,24],[217,10,203,24],[217,14,203,24,"_this2"],[217,20,203,24],[218,10,204,6],[218,14,204,12,"props"],[218,19,204,34],[218,22,204,37],[218,26,204,41],[218,27,204,42,"props"],[218,32,204,47],[219,10,205,6],[219,14,205,10],[219,15,205,11,"isMountedRef"],[219,27,205,23],[219,28,205,24,"current"],[219,35,205,31],[219,38,205,34],[219,42,205,38],[220,10,207,6],[220,14,207,10,"DEV_ON_ANDROID"],[220,28,207,24],[220,30,207,26],[221,12,208,8],[221,16,208,12],[221,17,208,13,"inspectorToggleListener"],[221,40,208,36],[221,43,208,39,"DeviceEventEmitter"],[221,74,208,57],[221,75,208,58,"addListener"],[221,86,208,69],[221,87,209,10],[221,111,209,34],[221,113,210,10],[221,125,210,16],[222,14,211,12,"_this2"],[222,20,211,16],[222,21,211,17,"setState"],[222,29,211,25],[222,30,211,26],[222,40,211,27,"_"],[222,41,211,28],[223,16,211,28],[223,23,211,34],[224,18,211,36,"allowTouches"],[224,30,211,48],[224,32,211,36,"allowTouches"],[225,16,211,49],[225,17,211,50],[226,14,211,50],[226,15,211,51],[226,16,211,52],[227,14,212,12,"_this2"],[227,20,212,16],[227,21,212,17,"update"],[227,27,212,23],[227,28,212,24,"UNRESOLVED_REFS_RETRY_LIMIT"],[227,55,212,51],[227,56,212,52],[228,12,213,10],[228,13,214,8],[228,14,214,9],[229,10,215,6],[230,10,216,6],[230,14,216,10,"hasUnresolvedRefs"],[230,31,216,27],[230,32,216,28,"props"],[230,37,216,33],[230,38,216,34],[230,40,216,36],[231,12,217,8],[232,12,218,8],[233,12,219,8],[234,12,220,8],[235,12,221,8],[236,12,222,8],[237,12,223,8],[237,16,223,8,"ghQueueMicrotask"],[237,47,223,8],[237,48,223,8,"ghQueueMicrotask"],[237,87,223,24],[237,89,223,25],[237,101,223,31],[238,14,224,10,"_this2"],[238,20,224,14],[238,21,224,15,"update"],[238,27,224,21],[238,28,224,22,"UNRESOLVED_REFS_RETRY_LIMIT"],[238,55,224,49],[238,56,224,50],[239,12,225,8],[239,13,225,9],[239,14,225,10],[240,10,226,6],[241,10,228,6],[241,14,228,10],[241,15,228,11,"createGestureHandler"],[241,35,228,31],[241,36,229,8],[241,40,229,8,"filterConfig"],[241,71,229,8],[241,72,229,8,"filterConfig"],[241,95,229,20],[241,97,230,10,"transformProps"],[241,111,230,24],[241,114,230,27,"transformProps"],[241,128,230,41],[241,129,230,42],[241,133,230,46],[241,134,230,47,"props"],[241,139,230,52],[241,140,230,53],[241,143,230,56],[241,147,230,60],[241,148,230,61,"props"],[241,153,230,66],[241,158,230,66,"concat"],[241,164,230,66],[241,169,230,66,"_toConsumableArray2"],[241,188,230,66],[241,189,230,66,"default"],[241,196,230,66],[241,198,231,14,"allowedProps"],[241,210,231,26],[241,217,231,26,"_toConsumableArray2"],[241,236,231,26],[241,237,231,26,"default"],[241,244,231,26],[241,246,231,31,"customNativeProps"],[241,263,231,48],[241,267,232,10,"config"],[241,273,233,8],[241,274,234,6],[241,275,234,7],[242,10,236,6],[242,14,236,10],[242,15,236,11,"attachGestureHandler"],[242,35,236,31],[242,36,236,32],[242,40,236,32,"findNodeHandle"],[242,71,236,32],[242,72,236,32,"findNodeHandle"],[242,97,236,46],[242,99,236,47],[242,103,236,51],[242,104,236,52,"viewNode"],[242,112,236,60],[242,113,236,71],[242,114,236,72],[242,115,236,73],[242,116,236,74],[243,8,237,4],[244,6,237,5],[245,8,237,5,"key"],[245,11,237,5],[246,8,237,5,"value"],[246,13,237,5],[246,15,239,4],[246,24,239,4,"componentDidUpdate"],[246,42,239,22,"componentDidUpdate"],[246,43,239,22],[246,45,239,25],[247,10,240,6],[247,14,240,12,"viewTag"],[247,21,240,19],[247,24,240,22],[247,28,240,22,"findNodeHandle"],[247,59,240,22],[247,60,240,22,"findNodeHandle"],[247,85,240,36],[247,87,240,37],[247,91,240,41],[247,92,240,42,"viewNode"],[247,100,240,50],[247,101,240,51],[248,10,241,6],[248,14,241,10],[248,18,241,14],[248,19,241,15,"viewTag"],[248,26,241,22],[248,31,241,27,"viewTag"],[248,38,241,34],[248,40,241,36],[249,12,242,8],[249,16,242,12],[249,17,242,13,"attachGestureHandler"],[249,37,242,33],[249,38,242,34,"viewTag"],[249,45,242,51],[249,46,242,52],[249,47,242,53],[249,48,242,54],[250,10,243,6],[251,10,244,6],[251,14,244,10],[251,15,244,11,"update"],[251,21,244,17],[251,22,244,18,"UNRESOLVED_REFS_RETRY_LIMIT"],[251,49,244,45],[251,50,244,46],[252,8,245,4],[253,6,245,5],[254,8,245,5,"key"],[254,11,245,5],[255,8,245,5,"value"],[255,13,245,5],[255,15,247,4],[255,24,247,4,"componentWillUnmount"],[255,44,247,24,"componentWillUnmount"],[255,45,247,24],[255,47,247,27],[256,10,247,27],[256,14,247,27,"_this$inspectorToggle"],[256,35,247,27],[257,10,248,6],[257,11,248,6,"_this$inspectorToggle"],[257,32,248,6],[257,39,248,10],[257,40,248,11,"inspectorToggleListener"],[257,63,248,34],[257,76,248,6,"_this$inspectorToggle"],[257,97,248,6],[257,98,248,36,"remove"],[257,104,248,42],[257,105,248,43],[257,106,248,44],[258,10,249,6],[258,14,249,10],[258,15,249,11,"isMountedRef"],[258,27,249,23],[258,28,249,24,"current"],[258,35,249,31],[258,38,249,34],[258,43,249,39],[259,10,250,6,"RNGestureHandlerModule"],[259,41,250,28],[259,42,250,29,"dropGestureHandler"],[259,60,250,47],[259,61,250,48],[259,65,250,52],[259,66,250,53,"handlerTag"],[259,76,250,63],[259,77,250,64],[260,10,251,6],[260,14,251,6,"scheduleFlushOperations"],[260,45,251,6],[260,46,251,6,"scheduleFlushOperations"],[260,80,251,29],[260,82,251,30],[260,83,251,31],[261,10,252,6],[262,10,253,6],[262,14,253,12,"handlerID"],[262,23,253,41],[262,26,253,44],[262,30,253,48],[262,31,253,49,"props"],[262,36,253,54],[262,37,253,55,"id"],[262,39,253,57],[263,10,254,6],[263,14,254,10,"handlerID"],[263,23,254,19],[263,25,254,21],[264,12,255,8],[265,12,256,8],[265,19,256,15,"handlerIDToTag"],[265,50,256,15],[265,51,256,15,"handlerIDToTag"],[265,87,256,29],[265,88,256,30,"handlerID"],[265,97,256,39],[265,98,256,40],[266,10,257,6],[267,8,258,4],[268,6,258,5],[269,8,258,5,"key"],[269,11,258,5],[270,8,258,5,"value"],[270,13,258,5],[270,15,380,4],[270,24,380,12,"update"],[270,30,380,18,"update"],[270,31,380,19,"remainingTries"],[270,45,380,41],[270,47,380,43],[271,10,380,43],[271,14,380,43,"_this3"],[271,20,380,43],[272,10,381,6],[272,14,381,10],[272,15,381,11],[272,19,381,15],[272,20,381,16,"isMountedRef"],[272,32,381,28],[272,33,381,29,"current"],[272,40,381,36],[272,42,381,38],[273,12,382,8],[274,10,383,6],[275,10,385,6],[275,14,385,12,"props"],[275,19,385,34],[275,22,385,37],[275,26,385,41],[275,27,385,42,"props"],[275,32,385,47],[277,10,387,6],[278,10,388,6],[279,10,389,6],[280,10,390,6],[280,14,390,10,"hasUnresolvedRefs"],[280,31,390,27],[280,32,390,28,"props"],[280,37,390,33],[280,38,390,34],[280,42,390,38,"remainingTries"],[280,56,390,52],[280,59,390,55],[280,60,390,56],[280,62,390,58],[281,12,391,8],[281,16,391,8,"ghQueueMicrotask"],[281,47,391,8],[281,48,391,8,"ghQueueMicrotask"],[281,87,391,24],[281,89,391,25],[281,101,391,31],[282,14,392,10,"_this3"],[282,20,392,14],[282,21,392,15,"update"],[282,27,392,21],[282,28,392,22,"remainingTries"],[282,42,392,36],[282,45,392,39],[282,46,392,40],[282,47,392,41],[283,12,393,8],[283,13,393,9],[283,14,393,10],[284,10,394,6],[284,11,394,7],[284,17,394,13],[285,12,395,8],[285,16,395,14,"newConfig"],[285,25,395,23],[285,28,395,26],[285,32,395,26,"filterConfig"],[285,63,395,26],[285,64,395,26,"filterConfig"],[285,87,395,38],[285,89,396,10,"transformProps"],[285,103,396,24],[285,106,396,27,"transformProps"],[285,120,396,41],[285,121,396,42],[285,125,396,46],[285,126,396,47,"props"],[285,131,396,52],[285,132,396,53],[285,135,396,56],[285,139,396,60],[285,140,396,61,"props"],[285,145,396,66],[285,150,396,66,"concat"],[285,156,396,66],[285,161,396,66,"_toConsumableArray2"],[285,180,396,66],[285,181,396,66,"default"],[285,188,396,66],[285,190,397,14,"allowedProps"],[285,202,397,26],[285,209,397,26,"_toConsumableArray2"],[285,228,397,26],[285,229,397,26,"default"],[285,236,397,26],[285,238,397,31,"customNativeProps"],[285,255,397,48],[285,259,398,10,"config"],[285,265,399,8],[285,266,399,9],[286,12,400,8],[286,16,400,12],[286,17,400,13],[286,21,400,13,"deepEqual"],[286,52,400,13],[286,53,400,13,"deepEqual"],[286,74,400,22],[286,76,400,23],[286,80,400,27],[286,81,400,28,"config"],[286,87,400,34],[286,89,400,36,"newConfig"],[286,98,400,45],[286,99,400,46],[286,101,400,48],[287,14,401,10],[287,18,401,14],[287,19,401,15,"updateGestureHandler"],[287,39,401,35],[287,40,401,36,"newConfig"],[287,49,401,45],[287,50,401,46],[288,12,402,8],[289,10,403,6],[290,8,404,4],[291,6,404,5],[292,8,404,5,"key"],[292,11,404,5],[293,8,404,5,"value"],[293,13,404,5],[293,15,406,4],[293,24,406,4,"setNativeProps"],[293,38,406,18,"setNativeProps"],[293,39,406,19,"updates"],[293,46,406,31],[293,48,406,33],[294,10,407,6],[294,14,407,12,"mergedProps"],[294,25,407,23],[294,28,407,23,"Object"],[294,34,407,23],[294,35,407,23,"assign"],[294,41,407,23],[294,46,407,31],[294,50,407,35],[294,51,407,36,"props"],[294,56,407,41],[294,58,407,46,"updates"],[294,65,407,53],[294,66,407,55],[295,10,408,6],[295,14,408,12,"newConfig"],[295,23,408,21],[295,26,408,24],[295,30,408,24,"filterConfig"],[295,61,408,24],[295,62,408,24,"filterConfig"],[295,85,408,36],[295,87,409,8,"transformProps"],[295,101,409,22],[295,104,409,25,"transformProps"],[295,118,409,39],[295,119,409,40,"mergedProps"],[295,130,409,51],[295,131,409,52],[295,134,409,55,"mergedProps"],[295,145,409,66],[295,150,409,66,"concat"],[295,156,409,66],[295,161,409,66,"_toConsumableArray2"],[295,180,409,66],[295,181,409,66,"default"],[295,188,409,66],[295,190,410,12,"allowedProps"],[295,202,410,24],[295,209,410,24,"_toConsumableArray2"],[295,228,410,24],[295,229,410,24,"default"],[295,236,410,24],[295,238,410,29,"customNativeProps"],[295,255,410,46],[295,259,411,8,"config"],[295,265,412,6],[295,266,412,7],[296,10,413,6],[296,14,413,10],[296,15,413,11,"updateGestureHandler"],[296,35,413,31],[296,36,413,32,"newConfig"],[296,45,413,41],[296,46,413,42],[297,8,414,4],[298,6,414,5],[299,8,414,5,"key"],[299,11,414,5],[300,8,414,5,"value"],[300,13,414,5],[300,15,416,4],[300,24,416,4,"render"],[300,30,416,10,"render"],[300,31,416,10],[300,33,416,13],[301,10,416,13],[301,14,416,13,"_this$props$testID"],[301,32,416,13],[302,10,417,6],[302,14,417,10,"__DEV__"],[302,21,417,17],[302,25,417,21],[302,26,417,22],[302,30,417,26],[302,31,417,27,"context"],[302,38,417,34],[302,42,417,38],[302,43,417,39],[302,47,417,39,"isJestEnv"],[302,78,417,39],[302,79,417,39,"isJestEnv"],[302,100,417,48],[302,102,417,49],[302,103,417,50],[302,107,417,54,"Platform"],[302,128,417,62],[302,129,417,63,"OS"],[302,131,417,65],[302,136,417,70],[302,141,417,75],[302,143,417,77],[303,12,418,8],[303,18,418,14],[303,22,418,18,"Error"],[303,27,418,23],[303,28,419,10,"name"],[303,32,419,14],[303,35,420,12],[303,236,421,8],[303,237,421,9],[304,10,422,6],[305,10,424,6],[305,14,424,10,"gestureEventHandler"],[305,33,424,29],[305,36,424,32],[305,40,424,36],[305,41,424,37,"onGestureHandlerEvent"],[305,62,424,58],[306,10,425,6],[308,10,430,6],[308,14,430,6,"_this$props3"],[308,26,430,6],[308,29,431,8],[308,33,431,12],[308,34,431,13,"props"],[308,39,431,18],[309,12,430,14,"onGestureEvent"],[309,26,430,28],[309,29,430,28,"_this$props3"],[309,41,430,28],[309,42,430,14,"onGestureEvent"],[309,56,430,28],[310,12,430,30,"onGestureHandlerEvent"],[310,33,430,51],[310,36,430,51,"_this$props3"],[310,48,430,51],[310,49,430,30,"onGestureHandlerEvent"],[310,70,430,51],[311,10,432,6],[311,14,432,10,"onGestureEvent"],[311,28,432,24],[311,32,432,28],[311,39,432,35,"onGestureEvent"],[311,53,432,49],[311,58,432,54],[311,68,432,64],[311,70,432,66],[312,12,433,8],[313,12,434,8],[314,12,435,8],[315,12,436,8],[315,16,436,12,"onGestureHandlerEvent"],[315,37,436,33],[315,39,436,35],[316,14,437,10],[316,20,437,16],[316,24,437,20,"Error"],[316,29,437,25],[316,30,438,12],[316,103,439,10],[316,104,439,11],[317,12,440,8],[318,12,441,8,"gestureEventHandler"],[318,31,441,27],[318,34,441,30,"onGestureEvent"],[318,48,441,44],[319,10,442,6],[319,11,442,7],[319,17,442,13],[320,12,443,8],[320,16,444,10,"onGestureHandlerEvent"],[320,37,444,31],[320,41,445,10],[320,48,445,17,"onGestureHandlerEvent"],[320,69,445,38],[320,74,445,43],[320,84,445,53],[320,86,446,10],[321,14,447,10],[321,20,447,16],[321,24,447,20,"Error"],[321,29,447,25],[321,30,448,12],[321,103,449,10],[321,104,449,11],[322,12,450,8],[323,10,451,6],[324,10,453,6],[324,14,453,10,"gestureStateEventHandler"],[324,38,453,34],[324,41,453,37],[324,45,453,41],[324,46,453,42,"onGestureHandlerStateChange"],[324,73,453,69],[325,10,454,6],[327,10,459,6],[327,14,459,6,"_this$props4"],[327,26,459,6],[327,29,462,40],[327,33,462,44],[327,34,462,45,"props"],[327,39,462,50],[328,12,460,8,"onHandlerStateChange"],[328,32,460,28],[328,35,460,28,"_this$props4"],[328,47,460,28],[328,48,460,8,"onHandlerStateChange"],[328,68,460,28],[329,12,461,8,"onGestureHandlerStateChange"],[329,39,461,35],[329,42,461,35,"_this$props4"],[329,54,461,35],[329,55,461,8,"onGestureHandlerStateChange"],[329,82,461,35],[330,10,463,6],[330,14,463,10,"onHandlerStateChange"],[330,34,463,30],[330,38,463,34],[330,45,463,41,"onHandlerStateChange"],[330,65,463,61],[330,70,463,66],[330,80,463,76],[330,82,463,78],[331,12,464,8],[332,12,465,8],[333,12,466,8],[334,12,467,8],[334,16,467,12,"onGestureHandlerStateChange"],[334,43,467,39],[334,45,467,41],[335,14,468,10],[335,20,468,16],[335,24,468,20,"Error"],[335,29,468,25],[335,30,469,12],[335,103,470,10],[335,104,470,11],[336,12,471,8],[337,12,472,8,"gestureStateEventHandler"],[337,36,472,32],[337,39,472,35,"onHandlerStateChange"],[337,59,472,55],[338,10,473,6],[338,11,473,7],[338,17,473,13],[339,12,474,8],[339,16,475,10,"onGestureHandlerStateChange"],[339,43,475,37],[339,47,476,10],[339,54,476,17,"onGestureHandlerStateChange"],[339,81,476,44],[339,86,476,49],[339,96,476,59],[339,98,477,10],[340,14,478,10],[340,20,478,16],[340,24,478,20,"Error"],[340,29,478,25],[340,30,479,12],[340,103,480,10],[340,104,480,11],[341,12,481,8],[342,10,482,6],[343,10,483,6],[343,14,483,12,"events"],[343,20,483,18],[343,23,483,21],[344,12,484,8,"onGestureHandlerEvent"],[344,33,484,29],[344,35,484,31],[344,39,484,35],[344,40,484,36,"state"],[344,45,484,41],[344,46,484,42,"allowTouches"],[344,58,484,54],[344,61,485,12,"gestureEventHandler"],[344,80,485,31],[344,83,486,12,"undefined"],[344,92,486,21],[345,12,487,8,"onGestureHandlerStateChange"],[345,39,487,35],[345,41,487,37],[345,45,487,41],[345,46,487,42,"state"],[345,51,487,47],[345,52,487,48,"allowTouches"],[345,64,487,60],[345,67,488,12,"gestureStateEventHandler"],[345,91,488,36],[345,94,489,12,"undefined"],[346,10,490,6],[346,11,490,7],[347,10,492,6],[347,14,492,10],[347,15,492,11,"propsRef"],[347,23,492,19],[347,24,492,20,"current"],[347,31,492,27],[347,34,492,30,"events"],[347,40,492,36],[348,10,494,6],[348,14,494,10,"child"],[348,19,494,20],[348,22,494,23],[348,26,494,27],[349,10,495,6],[349,14,495,10],[350,12,496,8,"child"],[350,17,496,13],[350,20,496,16,"React"],[350,25,496,21],[350,26,496,22,"Children"],[350,34,496,30],[350,35,496,31,"only"],[350,39,496,35],[350,40,496,36],[350,44,496,40],[350,45,496,41,"props"],[350,50,496,46],[350,51,496,47,"children"],[350,59,496,55],[350,60,496,56],[351,10,497,6],[351,11,497,7],[351,12,497,8],[351,19,497,15,"e"],[351,20,497,16],[351,22,497,18],[352,12,498,8],[352,18,498,14],[352,22,498,18,"Error"],[352,27,498,23],[352,28,499,10],[352,32,499,10,"tagMessage"],[352,63,499,10],[352,64,499,10,"tagMessage"],[352,86,499,20],[352,88,500,12],[352,91,500,15,"name"],[352,95,500,19],[352,251,501,10],[352,252,502,8],[352,253,502,9],[353,10,503,6],[354,10,505,6],[354,14,505,10,"grandChildren"],[354,27,505,23],[354,30,505,26,"child"],[354,35,505,31],[354,36,505,32,"props"],[354,41,505,37],[354,42,505,38,"children"],[354,50,505,46],[355,10,506,6],[355,14,507,8,"__DEV__"],[355,21,507,15],[355,25,508,8,"child"],[355,30,508,13],[355,31,508,14,"type"],[355,35,508,18],[355,40,509,9,"child"],[355,45,509,14],[355,46,509,15,"type"],[355,50,509,19],[355,55,509,24],[355,79,509,48],[355,83,510,10,"child"],[355,88,510,15],[355,89,510,16,"type"],[355,93,510,20],[355,94,510,21,"name"],[355,98,510,25],[355,103,510,30],[355,109,510,36],[355,113,511,10,"child"],[355,118,511,15],[355,119,511,16,"type"],[355,123,511,20],[355,124,511,21,"displayName"],[355,135,511,32],[355,140,511,37],[355,146,511,43],[355,147,511,44],[355,149,512,8],[356,12,513,8,"grandChildren"],[356,25,513,21],[356,28,513,24,"React"],[356,33,513,29],[356,34,513,30,"Children"],[356,42,513,38],[356,43,513,39,"toArray"],[356,50,513,46],[356,51,513,47,"grandChildren"],[356,64,513,60],[356,65,513,61],[357,12,514,8,"grandChildren"],[357,25,514,21],[357,26,514,22,"push"],[357,30,514,26],[357,44,515,10],[357,48,515,10,"_jsxRuntime"],[357,59,515,10],[357,60,515,10,"jsx"],[357,63,515,10],[357,65,515,11,"_$$_REQUIRE"],[357,76,515,11],[357,77,515,11,"_dependencyMap"],[357,91,515,11],[357,124,515,11,"PressabilityDebugView"],[357,145,515,32],[358,14,517,12,"color"],[358,19,517,17],[358,21,517,18],[358,40,517,37],[359,14,518,12,"hitSlop"],[359,21,518,19],[359,23,518,21,"child"],[359,28,518,26],[359,29,518,27,"props"],[359,34,518,32],[359,35,518,33,"hitSlop"],[360,12,518,41],[360,15,516,16],[360,38,519,11],[360,39,520,8],[360,40,520,9],[361,10,521,6],[362,10,523,6],[362,17,523,13,"React"],[362,22,523,18],[362,23,523,19,"cloneElement"],[362,35,523,31],[362,36,524,8,"child"],[362,41,524,13],[362,43,524,13,"Object"],[362,49,524,13],[362,50,524,13,"assign"],[362,56,524,13],[363,12,526,10,"ref"],[363,15,526,13],[363,17,526,15],[363,21,526,19],[363,22,526,20,"refHandler"],[363,32,526,30],[364,12,527,10,"collapsable"],[364,23,527,21],[364,25,527,23],[365,10,527,28],[365,13,528,14],[365,17,528,14,"isJestEnv"],[365,48,528,14],[365,49,528,14,"isJestEnv"],[365,70,528,23],[365,72,528,24],[365,73,528,25],[365,76,529,14],[366,12,530,16,"handlerType"],[366,23,530,27],[366,25,530,29,"name"],[366,29,530,33],[367,12,531,16,"handlerTag"],[367,22,531,26],[367,24,531,28],[367,28,531,32],[367,29,531,33,"handlerTag"],[367,39,531,43],[368,12,532,16,"enabled"],[368,19,532,23],[368,21,532,25],[368,25,532,29],[368,26,532,30,"props"],[368,31,532,35],[368,32,532,36,"enabled"],[369,10,533,14],[369,11,533,15],[369,14,534,14],[369,15,534,15],[369,16,534,16],[370,12,535,10,"testID"],[370,18,535,16],[370,21,535,16,"_this$props$testID"],[370,39,535,16],[370,42,535,18],[370,46,535,22],[370,47,535,23,"props"],[370,52,535,28],[370,53,535,29,"testID"],[370,59,535,35],[370,71,535,35,"_this$props$testID"],[370,89,535,35],[370,92,535,39,"child"],[370,97,535,44],[370,98,535,45,"props"],[370,103,535,50],[370,104,535,51,"testID"],[371,10,535,57],[371,13,536,13,"events"],[371,19,536,19],[371,22,538,8,"grandChildren"],[371,35,539,6],[371,36,539,7],[372,8,540,4],[373,6,540,5],[374,4,540,5],[374,6,173,24,"React"],[374,11,173,29],[374,12,173,30,"Component"],[374,21,173,39],[375,4,173,8,"Handler"],[375,11,173,15],[375,12,177,11,"displayName"],[375,23,177,22],[375,26,177,25,"name"],[375,30,177,29],[376,4,173,8,"Handler"],[376,11,173,15],[376,12,178,11,"contextType"],[376,23,178,22],[376,26,178,25,"GestureHandlerRootViewContext"],[376,64,178,54],[377,4,542,2],[377,11,542,9,"Handler"],[377,18,542,16],[378,2,543,0],[379,0,543,1],[379,3]],"functionMap":{"names":["<global>","<anonymous>","UIManagerAny.setJSResponder","UIManagerAny.clearJSResponder","DeviceEventEmitter.addListener$argument_1","hasUnresolvedRefs","extract","refs.some$argument_0","createHandler","Handler","Handler#constructor","Handler#componentDidMount","setState$argument_0","ghQueueMicrotask$argument_0","Handler#componentDidUpdate","Handler#componentWillUnmount","Handler#onGestureHandlerEvent","Handler#onGestureHandlerStateChange","Handler#refHandler","Handler#createGestureHandler","Handler#attachGestureHandler","Handler#updateGestureHandler","Handler#update","Handler#setNativeProps","Handler#render"],"mappings":"AAA;sCCkF;GDE;0CCC;GDE;8BEE;CFG;gCGC;CHG;2DIO;GJE;AKM;kBCI;qBCI,8BD;GDC;CLE;eQqC;ECa;ICe;KDa;IEE;UPO;0BQC,yBR;WOE;yBEU;SFE;KFY;IKE;KLM;IME;KNW;oCOE;KPQ;0CQG;KRiB;yBSE;KTa;mCUE;KVU;mCWE;4BnBmB;SmBuB;KXU;mCYE;KZO;IaE;yBTW;SSE;KbW;IcE;KdQ;IeE;Kf4H;GDC;CRE"}},"type":"js/module"}]}