{"dependencies":[{"name":"react-native","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":45,"index":45}}],"key":"XEo4Z+Aarw9Y7I7ZLBt66vGLAVQ="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.shouldFallbackToLegacyNativeModule = shouldFallbackToLegacyNativeModule;\n  var _reactNative = _$$_REQUIRE(_dependencyMap[0], \"react-native\");\n  function shouldFallbackToLegacyNativeModule() {\n    var _NativeModules$Native;\n    var expoConstants = (_NativeModules$Native = _reactNative.NativeModules[\"NativeUnimoduleProxy\"]) == null || (_NativeModules$Native = _NativeModules$Native.modulesConstants) == null ? void 0 : _NativeModules$Native.ExponentConstants;\n    if (expoConstants) {\n      /**\n       * In SDK <= 39, appOwnership is defined in managed apps but executionEnvironment is not.\n       * In bare React Native apps using expo-constants, appOwnership is never defined, so\n       * isLegacySdkVersion will be false in that context.\n       */\n      var isLegacySdkVersion = expoConstants.appOwnership && !expoConstants.executionEnvironment;\n\n      /**\n       * Expo managed apps don't include the @react-native-async-storage/async-storage\n       * native modules yet, but the API interface is the same, so we can use the version\n       * exported from React Native still.\n       *\n       * If in future releases (eg: @react-native-async-storage/async-storage >= 2.0.0) this\n       * will likely not be valid anymore, and the package will need to be included in the Expo SDK\n       * to continue to work.\n       */\n      if (isLegacySdkVersion || [\"storeClient\", \"standalone\"].includes(expoConstants.executionEnvironment)) {\n        return true;\n      }\n    }\n    return false;\n  }\n});","lineCount":33,"map":[[6,2,1,0],[6,6,1,0,"_reactNative"],[6,18,1,0],[6,21,1,0,"_$$_REQUIRE"],[6,32,1,0],[6,33,1,0,"_dependencyMap"],[6,47,1,0],[7,2,3,7],[7,11,3,16,"shouldFallbackToLegacyNativeModule"],[7,45,3,50,"shouldFallbackToLegacyNativeModule"],[7,46,3,50],[7,48,3,62],[8,4,3,62],[8,8,3,62,"_NativeModules$Native"],[8,29,3,62],[9,4,4,2],[9,8,4,8,"expoConstants"],[9,21,4,21],[9,25,4,21,"_NativeModules$Native"],[9,46,4,21],[9,49,5,4,"NativeModules"],[9,75,5,17],[9,76,5,18],[9,98,5,40],[9,99,5,41],[9,113,5,41,"_NativeModules$Native"],[9,134,5,41],[9,137,5,4,"_NativeModules$Native"],[9,158,5,4],[9,159,5,43,"modulesConstants"],[9,175,5,59],[9,196,5,4,"_NativeModules$Native"],[9,217,5,4],[9,218,5,61,"ExponentConstants"],[9,235,5,78],[10,4,7,2],[10,8,7,6,"expoConstants"],[10,21,7,19],[10,23,7,21],[11,6,8,4],[12,0,9,0],[13,0,10,0],[14,0,11,0],[15,0,12,0],[16,6,13,4],[16,10,13,10,"isLegacySdkVersion"],[16,28,13,28],[16,31,14,6,"expoConstants"],[16,44,14,19],[16,45,14,20,"appOwnership"],[16,57,14,32],[16,61,14,36],[16,62,14,37,"expoConstants"],[16,75,14,50],[16,76,14,51,"executionEnvironment"],[16,96,14,71],[18,6,16,4],[19,0,17,0],[20,0,18,0],[21,0,19,0],[22,0,20,0],[23,0,21,0],[24,0,22,0],[25,0,23,0],[26,0,24,0],[27,6,25,4],[27,10,26,6,"isLegacySdkVersion"],[27,28,26,24],[27,32,27,6],[27,33,27,7],[27,46,27,20],[27,48,27,22],[27,60,27,34],[27,61,27,35],[27,62,27,36,"includes"],[27,70,27,44],[27,71,27,45,"expoConstants"],[27,84,27,58],[27,85,27,59,"executionEnvironment"],[27,105,27,79],[27,106,27,80],[27,108,28,6],[28,8,29,6],[28,15,29,13],[28,19,29,17],[29,6,30,4],[30,4,31,2],[31,4,33,2],[31,11,33,9],[31,16,33,14],[32,2,34,0],[33,0,34,1],[33,3]],"functionMap":{"names":["<global>","shouldFallbackToLegacyNativeModule"],"mappings":"AAA;OCE;CD+B"}},"type":"js/module"}]}