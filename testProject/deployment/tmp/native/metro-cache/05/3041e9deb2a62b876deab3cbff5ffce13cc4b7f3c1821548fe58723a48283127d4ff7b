{"dependencies":[],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = checkDuplicateRouteNames;\n  function checkDuplicateRouteNames(state) {\n    var duplicates = [];\n    var _getRouteNames = function getRouteNames(location, state) {\n      state.routes.forEach(function (route) {\n        var _route$state;\n        var currentLocation = location ? `${location} > ${route.name}` : route.name;\n        (_route$state = route.state) == null || (_route$state = _route$state.routeNames) == null || _route$state.forEach(function (routeName) {\n          if (routeName === route.name) {\n            duplicates.push([currentLocation, `${currentLocation} > ${route.name}`]);\n          }\n        });\n        if (route.state) {\n          _getRouteNames(currentLocation, route.state);\n        }\n      });\n    };\n    _getRouteNames('', state);\n    return duplicates;\n  }\n});","lineCount":25,"map":[[6,2,3,15],[6,11,3,24,"checkDuplicateRouteNames"],[6,35,3,48,"checkDuplicateRouteNames"],[6,36,3,49,"state"],[6,41,3,71],[6,43,3,73],[7,4,4,2],[7,8,4,8,"duplicates"],[7,18,4,30],[7,21,4,33],[7,23,4,35],[8,4,6,2],[8,8,6,8,"getRouteNames"],[8,22,6,21],[8,25,6,24],[8,34,6,8,"getRouteNames"],[8,47,6,21,"getRouteNames"],[8,48,7,4,"location"],[8,56,7,20],[8,58,8,4,"state"],[8,63,8,58],[8,65,9,7],[9,6,10,4,"state"],[9,11,10,9],[9,12,10,10,"routes"],[9,18,10,16],[9,19,10,17,"forEach"],[9,26,10,24],[9,27,10,25],[9,37,10,26,"route"],[9,42,10,57],[9,44,10,62],[10,8,10,62],[10,12,10,62,"_route$state"],[10,24,10,62],[11,8,11,6],[11,12,11,12,"currentLocation"],[11,27,11,27],[11,30,11,30,"location"],[11,38,11,38],[11,41,12,10],[11,44,12,13,"location"],[11,52,12,21],[11,58,12,27,"route"],[11,63,12,32],[11,64,12,33,"name"],[11,68,12,37],[11,70,12,39],[11,73,13,10,"route"],[11,78,13,15],[11,79,13,16,"name"],[11,83,13,20],[12,8,15,6],[12,9,15,6,"_route$state"],[12,21,15,6],[12,24,15,6,"route"],[12,29,15,11],[12,30,15,12,"state"],[12,35,15,17],[12,49,15,17,"_route$state"],[12,61,15,17],[12,64,15,6,"_route$state"],[12,76,15,6],[12,77,15,19,"routeNames"],[12,87,15,29],[12,100,15,6,"_route$state"],[12,112,15,6],[12,113,15,31,"forEach"],[12,120,15,38],[12,121,15,39],[12,131,15,40,"routeName"],[12,140,15,49],[12,142,15,54],[13,10,16,8],[13,14,16,12,"routeName"],[13,23,16,21],[13,28,16,26,"route"],[13,33,16,31],[13,34,16,32,"name"],[13,38,16,36],[13,40,16,38],[14,12,17,10,"duplicates"],[14,22,17,20],[14,23,17,21,"push"],[14,27,17,25],[14,28,17,26],[14,29,18,12,"currentLocation"],[14,44,18,27],[14,46,19,12],[14,49,19,15,"currentLocation"],[14,64,19,30],[14,70,19,36,"route"],[14,75,19,41],[14,76,19,42,"name"],[14,80,19,46],[14,82,19,48],[14,83,20,11],[14,84,20,12],[15,10,21,8],[16,8,22,6],[16,9,22,7],[16,10,22,8],[17,8,24,6],[17,12,24,10,"route"],[17,17,24,15],[17,18,24,16,"state"],[17,23,24,21],[17,25,24,23],[18,10,25,8,"getRouteNames"],[18,24,25,21],[18,25,25,22,"currentLocation"],[18,40,25,37],[18,42,25,39,"route"],[18,47,25,44],[18,48,25,45,"state"],[18,53,25,50],[18,54,25,51],[19,8,26,6],[20,6,27,4],[20,7,27,5],[20,8,27,6],[21,4,28,2],[21,5,28,3],[22,4,30,2,"getRouteNames"],[22,18,30,15],[22,19,30,16],[22,21,30,18],[22,23,30,20,"state"],[22,28,30,25],[22,29,30,26],[23,4,32,2],[23,11,32,9,"duplicates"],[23,21,32,19],[24,2,33,0],[25,0,33,1],[25,3]],"functionMap":{"names":["<global>","checkDuplicateRouteNames","getRouteNames","state.routes.forEach$argument_0","route.state.routeNames.forEach$argument_0"],"mappings":"AAA;eCE;wBCG;yBCI;uCCK;ODO;KDK;GDC;CDK"}},"type":"js/module"}]}