{"dependencies":[],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * @format\n   * \n   */\n\n  'use strict';\n\n  var logListeners;\n  function unstable_setLogListeners(listeners) {\n    logListeners = listeners;\n  }\n\n  /*\n   * @returns {bool} true if different, false if equal\n   */\n  var _deepDiffer = function deepDiffer(one, two) {\n    var maxDepthOrOptions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : -1;\n    var maybeOptions = arguments.length > 3 ? arguments[3] : undefined;\n    var options = typeof maxDepthOrOptions === 'number' ? maybeOptions : maxDepthOrOptions;\n    var maxDepth = typeof maxDepthOrOptions === 'number' ? maxDepthOrOptions : -1;\n    if (maxDepth === 0) {\n      return true;\n    }\n    if (one === two) {\n      // Short circuit on identical object references instead of traversing them.\n      return false;\n    }\n    if (typeof one === 'function' && typeof two === 'function') {\n      // We consider all functions equal unless explicitly configured otherwise\n      var unsafelyIgnoreFunctions = options == null ? void 0 : options.unsafelyIgnoreFunctions;\n      if (unsafelyIgnoreFunctions == null) {\n        if (logListeners && logListeners.onDifferentFunctionsIgnored && (!options || !('unsafelyIgnoreFunctions' in options))) {\n          logListeners.onDifferentFunctionsIgnored(one.name, two.name);\n        }\n        unsafelyIgnoreFunctions = true;\n      }\n      return !unsafelyIgnoreFunctions;\n    }\n    if (typeof one !== 'object' || one === null) {\n      // Primitives can be directly compared\n      return one !== two;\n    }\n    if (typeof two !== 'object' || two === null) {\n      // We know they are different because the previous case would have triggered\n      // otherwise.\n      return true;\n    }\n    if (one.constructor !== two.constructor) {\n      return true;\n    }\n    if (Array.isArray(one)) {\n      // We know two is also an array because the constructors are equal\n      var len = one.length;\n      if (two.length !== len) {\n        return true;\n      }\n      for (var ii = 0; ii < len; ii++) {\n        if (_deepDiffer(one[ii], two[ii], maxDepth - 1, options)) {\n          return true;\n        }\n      }\n    } else {\n      for (var key in one) {\n        if (_deepDiffer(one[key], two[key], maxDepth - 1, options)) {\n          return true;\n        }\n      }\n      for (var twoKey in two) {\n        // The only case we haven't checked yet is keys that are in two but aren't\n        // in one, which means they are different.\n        if (one[twoKey] === undefined && two[twoKey] !== undefined) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n  _deepDiffer.unstable_setLogListeners = unstable_setLogListeners;\n  module.exports = _deepDiffer;\n});","lineCount":86,"map":[[2,2,1,0],[3,0,2,0],[4,0,3,0],[5,0,4,0],[6,0,5,0],[7,0,6,0],[8,0,7,0],[9,0,8,0],[10,0,9,0],[12,2,11,0],[12,14,11,12],[14,2,13,0],[14,6,13,4,"logListeners"],[14,18,13,16],[15,2,21,0],[15,11,21,9,"unstable_setLogListeners"],[15,35,21,33,"unstable_setLogListeners"],[15,36,21,34,"listeners"],[15,45,21,58],[15,47,21,60],[16,4,22,2,"logListeners"],[16,16,22,14],[16,19,22,17,"listeners"],[16,28,22,26],[17,2,23,0],[19,2,25,0],[20,0,26,0],[21,0,27,0],[22,2,28,0],[22,6,28,6,"deepDiffer"],[22,17,28,16],[22,20,28,19],[22,29,28,6,"deepDiffer"],[22,39,28,16,"deepDiffer"],[22,40,29,2,"one"],[22,43,29,10],[22,45,30,2,"two"],[22,48,30,10],[22,50,33,11],[23,4,33,11],[23,8,31,2,"maxDepthOrOptions"],[23,25,31,37],[23,28,31,37,"arguments"],[23,37,31,37],[23,38,31,37,"length"],[23,44,31,37],[23,52,31,37,"arguments"],[23,61,31,37],[23,69,31,37,"undefined"],[23,78,31,37],[23,81,31,37,"arguments"],[23,90,31,37],[23,96,31,40],[23,97,31,41],[23,98,31,42],[24,4,31,42],[24,8,32,2,"maybeOptions"],[24,20,32,24],[24,23,32,24,"arguments"],[24,32,32,24],[24,33,32,24,"length"],[24,39,32,24],[24,46,32,24,"arguments"],[24,55,32,24],[24,61,32,24,"undefined"],[24,70,32,24],[25,4,34,2],[25,8,34,8,"options"],[25,15,34,15],[25,18,35,4],[25,25,35,11,"maxDepthOrOptions"],[25,42,35,28],[25,47,35,33],[25,55,35,41],[25,58,35,44,"maybeOptions"],[25,70,35,56],[25,73,35,59,"maxDepthOrOptions"],[25,90,35,76],[26,4,36,2],[26,8,36,8,"maxDepth"],[26,16,36,16],[26,19,37,4],[26,26,37,11,"maxDepthOrOptions"],[26,43,37,28],[26,48,37,33],[26,56,37,41],[26,59,37,44,"maxDepthOrOptions"],[26,76,37,61],[26,79,37,64],[26,80,37,65],[26,81,37,66],[27,4,38,2],[27,8,38,6,"maxDepth"],[27,16,38,14],[27,21,38,19],[27,22,38,20],[27,24,38,22],[28,6,39,4],[28,13,39,11],[28,17,39,15],[29,4,40,2],[30,4,41,2],[30,8,41,6,"one"],[30,11,41,9],[30,16,41,14,"two"],[30,19,41,17],[30,21,41,19],[31,6,42,4],[32,6,43,4],[32,13,43,11],[32,18,43,16],[33,4,44,2],[34,4,45,2],[34,8,45,6],[34,15,45,13,"one"],[34,18,45,16],[34,23,45,21],[34,33,45,31],[34,37,45,35],[34,44,45,42,"two"],[34,47,45,45],[34,52,45,50],[34,62,45,60],[34,64,45,62],[35,6,46,4],[36,6,47,4],[36,10,47,8,"unsafelyIgnoreFunctions"],[36,33,47,31],[36,36,47,34,"options"],[36,43,47,41],[36,63,47,34,"options"],[36,70,47,41],[36,71,47,43,"unsafelyIgnoreFunctions"],[36,94,47,66],[37,6,48,4],[37,10,48,8,"unsafelyIgnoreFunctions"],[37,33,48,31],[37,37,48,35],[37,41,48,39],[37,43,48,41],[38,8,49,6],[38,12,50,8,"logListeners"],[38,24,50,20],[38,28,51,8,"logListeners"],[38,40,51,20],[38,41,51,21,"onDifferentFunctionsIgnored"],[38,68,51,48],[38,73,52,9],[38,74,52,10,"options"],[38,81,52,17],[38,85,52,21],[38,87,52,23],[38,112,52,48],[38,116,52,52,"options"],[38,123,52,59],[38,124,52,60],[38,125,52,61],[38,127,53,8],[39,10,54,8,"logListeners"],[39,22,54,20],[39,23,54,21,"onDifferentFunctionsIgnored"],[39,50,54,48],[39,51,54,49,"one"],[39,54,54,52],[39,55,54,53,"name"],[39,59,54,57],[39,61,54,59,"two"],[39,64,54,62],[39,65,54,63,"name"],[39,69,54,67],[39,70,54,68],[40,8,55,6],[41,8,56,6,"unsafelyIgnoreFunctions"],[41,31,56,29],[41,34,56,32],[41,38,56,36],[42,6,57,4],[43,6,58,4],[43,13,58,11],[43,14,58,12,"unsafelyIgnoreFunctions"],[43,37,58,35],[44,4,59,2],[45,4,60,2],[45,8,60,6],[45,15,60,13,"one"],[45,18,60,16],[45,23,60,21],[45,31,60,29],[45,35,60,33,"one"],[45,38,60,36],[45,43,60,41],[45,47,60,45],[45,49,60,47],[46,6,61,4],[47,6,62,4],[47,13,62,11,"one"],[47,16,62,14],[47,21,62,19,"two"],[47,24,62,22],[48,4,63,2],[49,4,64,2],[49,8,64,6],[49,15,64,13,"two"],[49,18,64,16],[49,23,64,21],[49,31,64,29],[49,35,64,33,"two"],[49,38,64,36],[49,43,64,41],[49,47,64,45],[49,49,64,47],[50,6,65,4],[51,6,66,4],[52,6,67,4],[52,13,67,11],[52,17,67,15],[53,4,68,2],[54,4,69,2],[54,8,69,6,"one"],[54,11,69,9],[54,12,69,10,"constructor"],[54,23,69,21],[54,28,69,26,"two"],[54,31,69,29],[54,32,69,30,"constructor"],[54,43,69,41],[54,45,69,43],[55,6,70,4],[55,13,70,11],[55,17,70,15],[56,4,71,2],[57,4,72,2],[57,8,72,6,"Array"],[57,13,72,11],[57,14,72,12,"isArray"],[57,21,72,19],[57,22,72,20,"one"],[57,25,72,23],[57,26,72,24],[57,28,72,26],[58,6,73,4],[59,6,74,4],[59,10,74,10,"len"],[59,13,74,13],[59,16,74,16,"one"],[59,19,74,19],[59,20,74,20,"length"],[59,26,74,26],[60,6,75,4],[60,10,75,8,"two"],[60,13,75,11],[60,14,75,12,"length"],[60,20,75,18],[60,25,75,23,"len"],[60,28,75,26],[60,30,75,28],[61,8,76,6],[61,15,76,13],[61,19,76,17],[62,6,77,4],[63,6,78,4],[63,11,78,9],[63,15,78,13,"ii"],[63,17,78,15],[63,20,78,18],[63,21,78,19],[63,23,78,21,"ii"],[63,25,78,23],[63,28,78,26,"len"],[63,31,78,29],[63,33,78,31,"ii"],[63,35,78,33],[63,37,78,35],[63,39,78,37],[64,8,79,6],[64,12,79,10,"deepDiffer"],[64,23,79,20],[64,24,79,21,"one"],[64,27,79,24],[64,28,79,25,"ii"],[64,30,79,27],[64,31,79,28],[64,33,79,30,"two"],[64,36,79,33],[64,37,79,34,"ii"],[64,39,79,36],[64,40,79,37],[64,42,79,39,"maxDepth"],[64,50,79,47],[64,53,79,50],[64,54,79,51],[64,56,79,53,"options"],[64,63,79,60],[64,64,79,61],[64,66,79,63],[65,10,80,8],[65,17,80,15],[65,21,80,19],[66,8,81,6],[67,6,82,4],[68,4,83,2],[68,5,83,3],[68,11,83,9],[69,6,84,4],[69,11,84,9],[69,15,84,15,"key"],[69,18,84,18],[69,22,84,22,"one"],[69,25,84,25],[69,27,84,27],[70,8,85,6],[70,12,85,10,"deepDiffer"],[70,23,85,20],[70,24,85,21,"one"],[70,27,85,24],[70,28,85,25,"key"],[70,31,85,28],[70,32,85,29],[70,34,85,31,"two"],[70,37,85,34],[70,38,85,35,"key"],[70,41,85,38],[70,42,85,39],[70,44,85,41,"maxDepth"],[70,52,85,49],[70,55,85,52],[70,56,85,53],[70,58,85,55,"options"],[70,65,85,62],[70,66,85,63],[70,68,85,65],[71,10,86,8],[71,17,86,15],[71,21,86,19],[72,8,87,6],[73,6,88,4],[74,6,89,4],[74,11,89,9],[74,15,89,15,"twoKey"],[74,21,89,21],[74,25,89,25,"two"],[74,28,89,28],[74,30,89,30],[75,8,90,6],[76,8,91,6],[77,8,92,6],[77,12,92,10,"one"],[77,15,92,13],[77,16,92,14,"twoKey"],[77,22,92,20],[77,23,92,21],[77,28,92,26,"undefined"],[77,37,92,35],[77,41,92,39,"two"],[77,44,92,42],[77,45,92,43,"twoKey"],[77,51,92,49],[77,52,92,50],[77,57,92,55,"undefined"],[77,66,92,64],[77,68,92,66],[78,10,93,8],[78,17,93,15],[78,21,93,19],[79,8,94,6],[80,6,95,4],[81,4,96,2],[82,4,97,2],[82,11,97,9],[82,16,97,14],[83,2,98,0],[83,3,98,1],[84,2,100,0,"deepDiffer"],[84,13,100,10],[84,14,100,11,"unstable_setLogListeners"],[84,38,100,35],[84,41,100,38,"unstable_setLogListeners"],[84,65,100,62],[85,2,101,0,"module"],[85,8,101,6],[85,9,101,7,"exports"],[85,16,101,14],[85,19,101,17,"deepDiffer"],[85,30,101,27],[86,0,101,28],[86,3]],"functionMap":{"names":["<global>","unstable_setLogListeners","deepDiffer"],"mappings":"AAA;ACoB;CDE;mBEK;CFsE"}},"type":"js/module"}]}