{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":473,"column":0,"index":15938}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":473,"column":0,"index":15938}}],"key":"rcd0dMwf8BS2g+8U1wyhIOxtYEo="}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":473,"column":0,"index":15938}}],"key":"4pxOr+e+5cSZAdeEKxSt3F7LoKY="}},{"name":"@babel/runtime/helpers/inherits","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":473,"column":0,"index":15938}}],"key":"EDnOjopp9yNVawSzfBRsy2dq5dM="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":473,"column":0,"index":15938}}],"key":"V6GYoXnblvuuGHJNMy7MHyaunsU="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":473,"column":0,"index":15938}}],"key":"ohGilxjVqjyE1GooDVDt9OYg9x0="}},{"name":"../getNextHandlerTag","data":{"asyncType":null,"locs":[{"start":{"line":10,"column":0,"index":178},"end":{"line":10,"column":57,"index":235}}],"key":"lv4k2Pqx9peNbeP+FInMe+AnXfg="}},{"name":"../../utils","data":{"asyncType":null,"locs":[{"start":{"line":23,"column":0,"index":678},"end":{"line":23,"column":55,"index":733}}],"key":"dxL+BeUilKexbwMi0xaswBTAv3A="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.Gesture = exports.ContinousBaseGesture = exports.CALLBACK_TYPE = exports.BaseGesture = void 0;\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/getPrototypeOf\"));\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/inherits\"));\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/createClass\"));\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/classCallCheck\"));\n  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }\n  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\n  // Allow adding a ref to a gesture handler\n\n  var CALLBACK_TYPE = exports.CALLBACK_TYPE = {\n    UNDEFINED: 0,\n    BEGAN: 1,\n    START: 2,\n    UPDATE: 3,\n    CHANGE: 4,\n    END: 5,\n    FINALIZE: 6,\n    TOUCHES_DOWN: 7,\n    TOUCHES_MOVE: 8,\n    TOUCHES_UP: 9,\n    TOUCHES_CANCELLED: 10\n  };\n\n  // Allow using CALLBACK_TYPE as object and type\n  // eslint-disable-next-line @typescript-eslint/no-redeclare\n  var Gesture = exports.Gesture = /*#__PURE__*/(0, _createClass2.default)(function Gesture() {\n    (0, _classCallCheck2.default)(this, Gesture);\n  });\n  var nextGestureId = 0;\n  var BaseGesture = exports.BaseGesture = /*#__PURE__*/function (_Gesture) {\n    function BaseGesture() {\n      var _this;\n      (0, _classCallCheck2.default)(this, BaseGesture);\n      _this = _callSuper(this, BaseGesture);\n\n      // Used to check whether the gesture config has been updated when wrapping it\n      // with `useMemo`. Since every config will have a unique id, when the dependencies\n      // don't change, the config won't be recreated and the id will stay the same.\n      // If the id is different, it means that the config has changed and the gesture\n      // needs to be updated.\n      _this.gestureId = -1;\n      _this.handlerTag = -1;\n      _this.handlerName = '';\n      _this.config = {};\n      _this.handlers = {\n        gestureId: -1,\n        handlerTag: -1,\n        isWorklet: []\n      };\n      _this.gestureId = nextGestureId++;\n      _this.handlers.gestureId = _this.gestureId;\n      return _this;\n    }\n    (0, _inherits2.default)(BaseGesture, _Gesture);\n    return (0, _createClass2.default)(BaseGesture, [{\n      key: \"addDependency\",\n      value: function addDependency(key, gesture) {\n        var value = this.config[key];\n        this.config[key] = value ? Array().concat(value, gesture) : [gesture];\n      }\n\n      /**\n       * Sets a `ref` to the gesture object, allowing for interoperability with the old API.\n       * @param ref\n       */\n    }, {\n      key: \"withRef\",\n      value: function withRef(ref) {\n        this.config.ref = ref;\n        return this;\n      }\n\n      // eslint-disable-next-line @typescript-eslint/ban-types\n    }, {\n      key: \"isWorklet\",\n      value: function isWorklet(callback) {\n        // @ts-ignore if callback is a worklet, the property will be available, if not then the check will return false\n        return callback.__workletHash !== undefined;\n      }\n\n      /**\n       * Set the callback that is being called when given gesture handler starts receiving touches.\n       * At the moment of this callback the handler is in `BEGAN` state and we don't know yet if it will recognize the gesture at all.\n       * @param callback\n       */\n    }, {\n      key: \"onBegin\",\n      value: function onBegin(callback) {\n        this.handlers.onBegin = callback;\n        this.handlers.isWorklet[CALLBACK_TYPE.BEGAN] = this.isWorklet(callback);\n        return this;\n      }\n\n      /**\n       * Set the callback that is being called when the gesture is recognized by the handler and it transitions to the `ACTIVE` state.\n       * @param callback\n       */\n    }, {\n      key: \"onStart\",\n      value: function onStart(callback) {\n        this.handlers.onStart = callback;\n        this.handlers.isWorklet[CALLBACK_TYPE.START] = this.isWorklet(callback);\n        return this;\n      }\n\n      /**\n       * Set the callback that is being called when the gesture that was recognized by the handler finishes and handler reaches `END` state.\n       * It will be called only if the handler was previously in the `ACTIVE` state.\n       * @param callback\n       */\n    }, {\n      key: \"onEnd\",\n      value: function onEnd(callback) {\n        this.handlers.onEnd = callback;\n        // @ts-ignore if callback is a worklet, the property will be available, if not then the check will return false\n        this.handlers.isWorklet[CALLBACK_TYPE.END] = this.isWorklet(callback);\n        return this;\n      }\n\n      /**\n       * Set the callback that is being called when the handler finalizes handling gesture - the gesture was recognized and has finished or it failed to recognize.\n       * @param callback\n       */\n    }, {\n      key: \"onFinalize\",\n      value: function onFinalize(callback) {\n        this.handlers.onFinalize = callback;\n        // @ts-ignore if callback is a worklet, the property will be available, if not then the check will return false\n        this.handlers.isWorklet[CALLBACK_TYPE.FINALIZE] = this.isWorklet(callback);\n        return this;\n      }\n\n      /**\n       * Set the `onTouchesDown` callback which is called every time a pointer is placed on the screen.\n       * @param callback\n       */\n    }, {\n      key: \"onTouchesDown\",\n      value: function onTouchesDown(callback) {\n        this.config.needsPointerData = true;\n        this.handlers.onTouchesDown = callback;\n        this.handlers.isWorklet[CALLBACK_TYPE.TOUCHES_DOWN] = this.isWorklet(callback);\n        return this;\n      }\n\n      /**\n       * Set the `onTouchesMove` callback which is called every time a pointer is moved on the screen.\n       * @param callback\n       */\n    }, {\n      key: \"onTouchesMove\",\n      value: function onTouchesMove(callback) {\n        this.config.needsPointerData = true;\n        this.handlers.onTouchesMove = callback;\n        this.handlers.isWorklet[CALLBACK_TYPE.TOUCHES_MOVE] = this.isWorklet(callback);\n        return this;\n      }\n\n      /**\n       * Set the `onTouchesUp` callback which is called every time a pointer is lifted from the screen.\n       * @param callback\n       */\n    }, {\n      key: \"onTouchesUp\",\n      value: function onTouchesUp(callback) {\n        this.config.needsPointerData = true;\n        this.handlers.onTouchesUp = callback;\n        this.handlers.isWorklet[CALLBACK_TYPE.TOUCHES_UP] = this.isWorklet(callback);\n        return this;\n      }\n\n      /**\n       * Set the `onTouchesCancelled` callback which is called every time a pointer stops being tracked, for example when the gesture finishes.\n       * @param callback\n       */\n    }, {\n      key: \"onTouchesCancelled\",\n      value: function onTouchesCancelled(callback) {\n        this.config.needsPointerData = true;\n        this.handlers.onTouchesCancelled = callback;\n        this.handlers.isWorklet[CALLBACK_TYPE.TOUCHES_CANCELLED] = this.isWorklet(callback);\n        return this;\n      }\n\n      /**\n       * Indicates whether the given handler should be analyzing stream of touch events or not.\n       * @param enabled\n       * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pan-gesture#enabledvalue-boolean\n       */\n    }, {\n      key: \"enabled\",\n      value: function enabled(_enabled) {\n        this.config.enabled = _enabled;\n        return this;\n      }\n\n      /**\n       * When true the handler will cancel or fail recognition (depending on its current state) whenever the finger leaves the area of the connected view.\n       * @param value\n       * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pan-gesture#shouldcancelwhenoutsidevalue-boolean\n       */\n    }, {\n      key: \"shouldCancelWhenOutside\",\n      value: function shouldCancelWhenOutside(value) {\n        this.config.shouldCancelWhenOutside = value;\n        return this;\n      }\n\n      /**\n       * This parameter enables control over what part of the connected view area can be used to begin recognizing the gesture.\n       * When a negative number is provided the bounds of the view will reduce the area by the given number of points in each of the sides evenly.\n       * @param hitSlop\n       * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pan-gesture#hitslopsettings\n       */\n    }, {\n      key: \"hitSlop\",\n      value: function hitSlop(_hitSlop) {\n        this.config.hitSlop = _hitSlop;\n        return this;\n      }\n\n      /**\n       * #### Web only\n       * This parameter allows to specify which `cursor` should be used when gesture activates.\n       * Supports all CSS cursor values (e.g. `\"grab\"`, `\"zoom-in\"`). Default value is set to `\"auto\"`.\n       * @param activeCursor\n       */\n    }, {\n      key: \"activeCursor\",\n      value: function activeCursor(_activeCursor) {\n        this.config.activeCursor = _activeCursor;\n        return this;\n      }\n\n      /**\n       * #### Web & Android only\n       * Allows users to choose which mouse button should handler respond to.\n       * Arguments can be combined using `|` operator, e.g. `mouseButton(MouseButton.LEFT | MouseButton.RIGHT)`.\n       * Default value is set to `MouseButton.LEFT`.\n       * @param mouseButton\n       * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pan-gesture#mousebuttonvalue-mousebutton-web--android-only\n       */\n    }, {\n      key: \"mouseButton\",\n      value: function mouseButton(_mouseButton) {\n        this.config.mouseButton = _mouseButton;\n        return this;\n      }\n\n      /**\n       * When `react-native-reanimated` is installed, the callbacks passed to the gestures are automatically workletized and run on the UI thread when called.\n       * This option allows for changing this behavior: when `true`, all the callbacks will be run on the JS thread instead of the UI thread, regardless of whether they are worklets or not.\n       * Defaults to `false`.\n       * @param runOnJS\n       */\n    }, {\n      key: \"runOnJS\",\n      value: function runOnJS(_runOnJS) {\n        this.config.runOnJS = _runOnJS;\n        return this;\n      }\n\n      /**\n       * Allows gestures across different components to be recognized simultaneously.\n       * @param gestures\n       * @see https://docs.swmansion.com/react-native-gesture-handler/docs/fundamentals/gesture-composition/#simultaneouswithexternalgesture\n       */\n    }, {\n      key: \"simultaneousWithExternalGesture\",\n      value: function simultaneousWithExternalGesture() {\n        for (var _len = arguments.length, gestures = new Array(_len), _key = 0; _key < _len; _key++) {\n          gestures[_key] = arguments[_key];\n        }\n        for (var gesture of gestures) {\n          this.addDependency('simultaneousWith', gesture);\n        }\n        return this;\n      }\n\n      /**\n       * Allows to delay activation of the handler until all handlers passed as arguments to this method fail (or don't begin at all).\n       * @param gestures\n       * @see https://docs.swmansion.com/react-native-gesture-handler/docs/fundamentals/gesture-composition/#requireexternalgesturetofail\n       */\n    }, {\n      key: \"requireExternalGestureToFail\",\n      value: function requireExternalGestureToFail() {\n        for (var _len2 = arguments.length, gestures = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n          gestures[_key2] = arguments[_key2];\n        }\n        for (var gesture of gestures) {\n          this.addDependency('requireToFail', gesture);\n        }\n        return this;\n      }\n\n      /**\n       * Works similarily to `requireExternalGestureToFail` but the direction of the relation is reversed - instead of being one-to-many relation, it's many-to-one.\n       * @param gestures\n       * @see https://docs.swmansion.com/react-native-gesture-handler/docs/fundamentals/gesture-composition/#blocksexternalgesture\n       */\n    }, {\n      key: \"blocksExternalGesture\",\n      value: function blocksExternalGesture() {\n        for (var _len3 = arguments.length, gestures = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n          gestures[_key3] = arguments[_key3];\n        }\n        for (var gesture of gestures) {\n          this.addDependency('blocksHandlers', gesture);\n        }\n        return this;\n      }\n\n      /**\n       * Sets a `testID` property for gesture object, allowing for querying for it in tests.\n       * @param id\n       */\n    }, {\n      key: \"withTestId\",\n      value: function withTestId(id) {\n        this.config.testId = id;\n        return this;\n      }\n\n      /**\n       * #### iOS only\n       * When `true`, the handler will cancel touches for native UI components (`UIButton`, `UISwitch`, etc) it's attached to when it becomes `ACTIVE`.\n       * Default value is `true`.\n       * @param value\n       */\n    }, {\n      key: \"cancelsTouchesInView\",\n      value: function cancelsTouchesInView(value) {\n        this.config.cancelsTouchesInView = value;\n        return this;\n      }\n    }, {\n      key: \"initialize\",\n      value: function initialize() {\n        this.handlerTag = (0, _$$_REQUIRE(_dependencyMap[6], \"../getNextHandlerTag\").getNextHandlerTag)();\n        this.handlers = Object.assign({}, this.handlers, {\n          handlerTag: this.handlerTag\n        });\n        if (this.config.ref) {\n          this.config.ref.current = this;\n        }\n      }\n    }, {\n      key: \"toGestureArray\",\n      value: function toGestureArray() {\n        return [this];\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-empty-function\n    }, {\n      key: \"prepare\",\n      value: function prepare() {}\n    }, {\n      key: \"shouldUseReanimated\",\n      get: function get() {\n        // Use Reanimated when runOnJS isn't set explicitly,\n        // all defined callbacks are worklets\n        // and remote debugging is disabled\n        return this.config.runOnJS !== true && !this.handlers.isWorklet.includes(false) && !(0, _$$_REQUIRE(_dependencyMap[7], \"../../utils\").isRemoteDebuggingEnabled)();\n      }\n    }]);\n  }(Gesture);\n  var ContinousBaseGesture = exports.ContinousBaseGesture = /*#__PURE__*/function (_BaseGesture2) {\n    function ContinousBaseGesture() {\n      (0, _classCallCheck2.default)(this, ContinousBaseGesture);\n      return _callSuper(this, ContinousBaseGesture, arguments);\n    }\n    (0, _inherits2.default)(ContinousBaseGesture, _BaseGesture2);\n    return (0, _createClass2.default)(ContinousBaseGesture, [{\n      key: \"onUpdate\",\n      value:\n      /**\n       * Set the callback that is being called every time the gesture receives an update while it's active.\n       * @param callback\n       */\n      function onUpdate(callback) {\n        this.handlers.onUpdate = callback;\n        this.handlers.isWorklet[CALLBACK_TYPE.UPDATE] = this.isWorklet(callback);\n        return this;\n      }\n\n      /**\n       * Set the callback that is being called every time the gesture receives an update while it's active.\n       * This callback will receive information about change in value in relation to the last received event.\n       * @param callback\n       */\n    }, {\n      key: \"onChange\",\n      value: function onChange(callback) {\n        this.handlers.onChange = callback;\n        this.handlers.isWorklet[CALLBACK_TYPE.CHANGE] = this.isWorklet(callback);\n        return this;\n      }\n\n      /**\n       * When `true` the handler will not activate by itself even if its activation criteria are met.\n       * Instead you can manipulate its state using state manager.\n       * @param manualActivation\n       */\n    }, {\n      key: \"manualActivation\",\n      value: function manualActivation(_manualActivation) {\n        this.config.manualActivation = _manualActivation;\n        return this;\n      }\n    }]);\n  }(BaseGesture);\n});","lineCount":419,"map":[[14,2,42,54],[16,2,88,7],[16,6,88,13,"CALLBACK_TYPE"],[16,19,88,26],[16,22,88,26,"exports"],[16,29,88,26],[16,30,88,26,"CALLBACK_TYPE"],[16,43,88,26],[16,46,88,29],[17,4,89,2,"UNDEFINED"],[17,13,89,11],[17,15,89,13],[17,16,89,14],[18,4,90,2,"BEGAN"],[18,9,90,7],[18,11,90,9],[18,12,90,10],[19,4,91,2,"START"],[19,9,91,7],[19,11,91,9],[19,12,91,10],[20,4,92,2,"UPDATE"],[20,10,92,8],[20,12,92,10],[20,13,92,11],[21,4,93,2,"CHANGE"],[21,10,93,8],[21,12,93,10],[21,13,93,11],[22,4,94,2,"END"],[22,7,94,5],[22,9,94,7],[22,10,94,8],[23,4,95,2,"FINALIZE"],[23,12,95,10],[23,14,95,12],[23,15,95,13],[24,4,96,2,"TOUCHES_DOWN"],[24,16,96,14],[24,18,96,16],[24,19,96,17],[25,4,97,2,"TOUCHES_MOVE"],[25,16,97,14],[25,18,97,16],[25,19,97,17],[26,4,98,2,"TOUCHES_UP"],[26,14,98,12],[26,16,98,14],[26,17,98,15],[27,4,99,2,"TOUCHES_CANCELLED"],[27,21,99,19],[27,23,99,21],[28,2,100,0],[28,3,100,10],[30,2,102,0],[31,2,103,0],[32,2,103,0],[32,6,106,22,"Gesture"],[32,13,106,29],[32,16,106,29,"exports"],[32,23,106,29],[32,24,106,29,"Gesture"],[32,31,106,29],[32,51,106,29,"_createClass2"],[32,64,106,29],[32,65,106,29,"default"],[32,72,106,29],[32,83,106,29,"Gesture"],[32,91,106,29],[33,4,106,29],[33,8,106,29,"_classCallCheck2"],[33,24,106,29],[33,25,106,29,"default"],[33,32,106,29],[33,40,106,29,"Gesture"],[33,47,106,29],[34,2,106,29],[35,2,126,0],[35,6,126,4,"nextGestureId"],[35,19,126,17],[35,22,126,20],[35,23,126,21],[36,2,126,22],[36,6,127,22,"BaseGesture"],[36,17,127,33],[36,20,127,33,"exports"],[36,27,127,33],[36,28,127,33,"BaseGesture"],[36,39,127,33],[36,65,127,33,"_Gesture"],[36,73,127,33],[37,4,140,2],[37,13,140,2,"BaseGesture"],[37,25,140,2],[37,27,140,16],[38,6,140,16],[38,10,140,16,"_this"],[38,15,140,16],[39,6,140,16],[39,10,140,16,"_classCallCheck2"],[39,26,140,16],[39,27,140,16,"default"],[39,34,140,16],[39,42,140,16,"BaseGesture"],[39,53,140,16],[40,6,141,4,"_this"],[40,11,141,4],[40,14,141,4,"_callSuper"],[40,24,141,4],[40,31,141,4,"BaseGesture"],[40,42,141,4],[42,6,143,4],[43,6,144,4],[44,6,145,4],[45,6,146,4],[46,6,147,4],[47,6,147,4,"_this"],[47,11,147,4],[47,12,130,10,"gestureId"],[47,21,130,19],[47,24,130,22],[47,25,130,23],[47,26,130,24],[48,6,130,24,"_this"],[48,11,130,24],[48,12,131,9,"handlerTag"],[48,22,131,19],[48,25,131,22],[48,26,131,23],[48,27,131,24],[49,6,131,24,"_this"],[49,11,131,24],[49,12,132,9,"handlerName"],[49,23,132,20],[49,26,132,23],[49,28,132,25],[50,6,132,25,"_this"],[50,11,132,25],[50,12,133,9,"config"],[50,18,133,15],[50,21,133,37],[50,22,133,38],[50,23,133,39],[51,6,133,39,"_this"],[51,11,133,39],[51,12,134,9,"handlers"],[51,20,134,17],[51,23,134,53],[52,8,135,4,"gestureId"],[52,17,135,13],[52,19,135,15],[52,20,135,16],[52,21,135,17],[53,8,136,4,"handlerTag"],[53,18,136,14],[53,20,136,16],[53,21,136,17],[53,22,136,18],[54,8,137,4,"isWorklet"],[54,17,137,13],[54,19,137,15],[55,6,138,2],[55,7,138,3],[56,6,148,4,"_this"],[56,11,148,4],[56,12,148,9,"gestureId"],[56,21,148,18],[56,24,148,21,"nextGestureId"],[56,37,148,34],[56,39,148,36],[57,6,149,4,"_this"],[57,11,149,4],[57,12,149,9,"handlers"],[57,20,149,17],[57,21,149,18,"gestureId"],[57,30,149,27],[57,33,149,30,"_this"],[57,38,149,30],[57,39,149,35,"gestureId"],[57,48,149,44],[58,6,149,45],[58,13,149,45,"_this"],[58,18,149,45],[59,4,150,2],[60,4,150,3],[60,8,150,3,"_inherits2"],[60,18,150,3],[60,19,150,3,"default"],[60,26,150,3],[60,28,150,3,"BaseGesture"],[60,39,150,3],[60,41,150,3,"_Gesture"],[60,49,150,3],[61,4,150,3],[61,15,150,3,"_createClass2"],[61,28,150,3],[61,29,150,3,"default"],[61,36,150,3],[61,38,150,3,"BaseGesture"],[61,49,150,3],[62,6,150,3,"key"],[62,9,150,3],[63,6,150,3,"value"],[63,11,150,3],[63,13,152,2],[63,22,152,10,"addDependency"],[63,35,152,23,"addDependency"],[63,36,153,4,"key"],[63,39,153,64],[63,41,154,4,"gesture"],[63,48,154,40],[63,50,155,4],[64,8,156,4],[64,12,156,10,"value"],[64,17,156,15],[64,20,156,18],[64,24,156,22],[64,25,156,23,"config"],[64,31,156,29],[64,32,156,30,"key"],[64,35,156,33],[64,36,156,34],[65,8,157,4],[65,12,157,8],[65,13,157,9,"config"],[65,19,157,15],[65,20,157,16,"key"],[65,23,157,19],[65,24,157,20],[65,27,157,23,"value"],[65,32,157,28],[65,35,158,8,"Array"],[65,40,158,13],[65,41,158,26],[65,42,158,27],[65,43,158,28,"concat"],[65,49,158,34],[65,50,158,35,"value"],[65,55,158,40],[65,57,158,42,"gesture"],[65,64,158,49],[65,65,158,50],[65,68,159,8],[65,69,159,9,"gesture"],[65,76,159,16],[65,77,159,17],[66,6,160,2],[68,6,162,2],[69,0,163,0],[70,0,164,0],[71,0,165,0],[72,4,162,2],[73,6,162,2,"key"],[73,9,162,2],[74,6,162,2,"value"],[74,11,162,2],[74,13,166,2],[74,22,166,2,"withRef"],[74,29,166,9,"withRef"],[74,30,166,10,"ref"],[74,33,166,62],[74,35,166,64],[75,8,167,4],[75,12,167,8],[75,13,167,9,"config"],[75,19,167,15],[75,20,167,16,"ref"],[75,23,167,19],[75,26,167,22,"ref"],[75,29,167,25],[76,8,168,4],[76,15,168,11],[76,19,168,15],[77,6,169,2],[79,6,171,2],[80,4,171,2],[81,6,171,2,"key"],[81,9,171,2],[82,6,171,2,"value"],[82,11,171,2],[82,13,172,2],[82,22,172,12,"isWorklet"],[82,31,172,21,"isWorklet"],[82,32,172,22,"callback"],[82,40,172,40],[82,42,172,42],[83,8,173,4],[84,8,174,4],[84,15,174,11,"callback"],[84,23,174,19],[84,24,174,20,"__workletHash"],[84,37,174,33],[84,42,174,38,"undefined"],[84,51,174,47],[85,6,175,2],[87,6,177,2],[88,0,178,0],[89,0,179,0],[90,0,180,0],[91,0,181,0],[92,4,177,2],[93,6,177,2,"key"],[93,9,177,2],[94,6,177,2,"value"],[94,11,177,2],[94,13,182,2],[94,22,182,2,"onBegin"],[94,29,182,9,"onBegin"],[94,30,182,10,"callback"],[94,38,182,75],[94,40,182,77],[95,8,183,4],[95,12,183,8],[95,13,183,9,"handlers"],[95,21,183,17],[95,22,183,18,"onBegin"],[95,29,183,25],[95,32,183,28,"callback"],[95,40,183,36],[96,8,184,4],[96,12,184,8],[96,13,184,9,"handlers"],[96,21,184,17],[96,22,184,18,"isWorklet"],[96,31,184,27],[96,32,184,28,"CALLBACK_TYPE"],[96,45,184,41],[96,46,184,42,"BEGAN"],[96,51,184,47],[96,52,184,48],[96,55,184,51],[96,59,184,55],[96,60,184,56,"isWorklet"],[96,69,184,65],[96,70,184,66,"callback"],[96,78,184,74],[96,79,184,75],[97,8,185,4],[97,15,185,11],[97,19,185,15],[98,6,186,2],[100,6,188,2],[101,0,189,0],[102,0,190,0],[103,0,191,0],[104,4,188,2],[105,6,188,2,"key"],[105,9,188,2],[106,6,188,2,"value"],[106,11,188,2],[106,13,192,2],[106,22,192,2,"onStart"],[106,29,192,9,"onStart"],[106,30,192,10,"callback"],[106,38,192,75],[106,40,192,77],[107,8,193,4],[107,12,193,8],[107,13,193,9,"handlers"],[107,21,193,17],[107,22,193,18,"onStart"],[107,29,193,25],[107,32,193,28,"callback"],[107,40,193,36],[108,8,194,4],[108,12,194,8],[108,13,194,9,"handlers"],[108,21,194,17],[108,22,194,18,"isWorklet"],[108,31,194,27],[108,32,194,28,"CALLBACK_TYPE"],[108,45,194,41],[108,46,194,42,"START"],[108,51,194,47],[108,52,194,48],[108,55,194,51],[108,59,194,55],[108,60,194,56,"isWorklet"],[108,69,194,65],[108,70,194,66,"callback"],[108,78,194,74],[108,79,194,75],[109,8,195,4],[109,15,195,11],[109,19,195,15],[110,6,196,2],[112,6,198,2],[113,0,199,0],[114,0,200,0],[115,0,201,0],[116,0,202,0],[117,4,198,2],[118,6,198,2,"key"],[118,9,198,2],[119,6,198,2,"value"],[119,11,198,2],[119,13,203,2],[119,22,203,2,"onEnd"],[119,27,203,7,"onEnd"],[119,28,204,4,"callback"],[119,36,207,13],[119,38,208,4],[120,8,209,4],[120,12,209,8],[120,13,209,9,"handlers"],[120,21,209,17],[120,22,209,18,"onEnd"],[120,27,209,23],[120,30,209,26,"callback"],[120,38,209,34],[121,8,210,4],[122,8,211,4],[122,12,211,8],[122,13,211,9,"handlers"],[122,21,211,17],[122,22,211,18,"isWorklet"],[122,31,211,27],[122,32,211,28,"CALLBACK_TYPE"],[122,45,211,41],[122,46,211,42,"END"],[122,49,211,45],[122,50,211,46],[122,53,211,49],[122,57,211,53],[122,58,211,54,"isWorklet"],[122,67,211,63],[122,68,211,64,"callback"],[122,76,211,72],[122,77,211,73],[123,8,212,4],[123,15,212,11],[123,19,212,15],[124,6,213,2],[126,6,215,2],[127,0,216,0],[128,0,217,0],[129,0,218,0],[130,4,215,2],[131,6,215,2,"key"],[131,9,215,2],[132,6,215,2,"value"],[132,11,215,2],[132,13,219,2],[132,22,219,2,"onFinalize"],[132,32,219,12,"onFinalize"],[132,33,220,4,"callback"],[132,41,223,13],[132,43,224,4],[133,8,225,4],[133,12,225,8],[133,13,225,9,"handlers"],[133,21,225,17],[133,22,225,18,"onFinalize"],[133,32,225,28],[133,35,225,31,"callback"],[133,43,225,39],[134,8,226,4],[135,8,227,4],[135,12,227,8],[135,13,227,9,"handlers"],[135,21,227,17],[135,22,227,18,"isWorklet"],[135,31,227,27],[135,32,227,28,"CALLBACK_TYPE"],[135,45,227,41],[135,46,227,42,"FINALIZE"],[135,54,227,50],[135,55,227,51],[135,58,227,54],[135,62,227,58],[135,63,227,59,"isWorklet"],[135,72,227,68],[135,73,227,69,"callback"],[135,81,227,77],[135,82,227,78],[136,8,228,4],[136,15,228,11],[136,19,228,15],[137,6,229,2],[139,6,231,2],[140,0,232,0],[141,0,233,0],[142,0,234,0],[143,4,231,2],[144,6,231,2,"key"],[144,9,231,2],[145,6,231,2,"value"],[145,11,231,2],[145,13,235,2],[145,22,235,2,"onTouchesDown"],[145,35,235,15,"onTouchesDown"],[145,36,235,16,"callback"],[145,44,235,47],[145,46,235,49],[146,8,236,4],[146,12,236,8],[146,13,236,9,"config"],[146,19,236,15],[146,20,236,16,"needsPointerData"],[146,36,236,32],[146,39,236,35],[146,43,236,39],[147,8,237,4],[147,12,237,8],[147,13,237,9,"handlers"],[147,21,237,17],[147,22,237,18,"onTouchesDown"],[147,35,237,31],[147,38,237,34,"callback"],[147,46,237,42],[148,8,238,4],[148,12,238,8],[148,13,238,9,"handlers"],[148,21,238,17],[148,22,238,18,"isWorklet"],[148,31,238,27],[148,32,238,28,"CALLBACK_TYPE"],[148,45,238,41],[148,46,238,42,"TOUCHES_DOWN"],[148,58,238,54],[148,59,238,55],[148,62,239,6],[148,66,239,10],[148,67,239,11,"isWorklet"],[148,76,239,20],[148,77,239,21,"callback"],[148,85,239,29],[148,86,239,30],[149,8,241,4],[149,15,241,11],[149,19,241,15],[150,6,242,2],[152,6,244,2],[153,0,245,0],[154,0,246,0],[155,0,247,0],[156,4,244,2],[157,6,244,2,"key"],[157,9,244,2],[158,6,244,2,"value"],[158,11,244,2],[158,13,248,2],[158,22,248,2,"onTouchesMove"],[158,35,248,15,"onTouchesMove"],[158,36,248,16,"callback"],[158,44,248,47],[158,46,248,49],[159,8,249,4],[159,12,249,8],[159,13,249,9,"config"],[159,19,249,15],[159,20,249,16,"needsPointerData"],[159,36,249,32],[159,39,249,35],[159,43,249,39],[160,8,250,4],[160,12,250,8],[160,13,250,9,"handlers"],[160,21,250,17],[160,22,250,18,"onTouchesMove"],[160,35,250,31],[160,38,250,34,"callback"],[160,46,250,42],[161,8,251,4],[161,12,251,8],[161,13,251,9,"handlers"],[161,21,251,17],[161,22,251,18,"isWorklet"],[161,31,251,27],[161,32,251,28,"CALLBACK_TYPE"],[161,45,251,41],[161,46,251,42,"TOUCHES_MOVE"],[161,58,251,54],[161,59,251,55],[161,62,252,6],[161,66,252,10],[161,67,252,11,"isWorklet"],[161,76,252,20],[161,77,252,21,"callback"],[161,85,252,29],[161,86,252,30],[162,8,254,4],[162,15,254,11],[162,19,254,15],[163,6,255,2],[165,6,257,2],[166,0,258,0],[167,0,259,0],[168,0,260,0],[169,4,257,2],[170,6,257,2,"key"],[170,9,257,2],[171,6,257,2,"value"],[171,11,257,2],[171,13,261,2],[171,22,261,2,"onTouchesUp"],[171,33,261,13,"onTouchesUp"],[171,34,261,14,"callback"],[171,42,261,45],[171,44,261,47],[172,8,262,4],[172,12,262,8],[172,13,262,9,"config"],[172,19,262,15],[172,20,262,16,"needsPointerData"],[172,36,262,32],[172,39,262,35],[172,43,262,39],[173,8,263,4],[173,12,263,8],[173,13,263,9,"handlers"],[173,21,263,17],[173,22,263,18,"onTouchesUp"],[173,33,263,29],[173,36,263,32,"callback"],[173,44,263,40],[174,8,264,4],[174,12,264,8],[174,13,264,9,"handlers"],[174,21,264,17],[174,22,264,18,"isWorklet"],[174,31,264,27],[174,32,264,28,"CALLBACK_TYPE"],[174,45,264,41],[174,46,264,42,"TOUCHES_UP"],[174,56,264,52],[174,57,264,53],[174,60,265,6],[174,64,265,10],[174,65,265,11,"isWorklet"],[174,74,265,20],[174,75,265,21,"callback"],[174,83,265,29],[174,84,265,30],[175,8,267,4],[175,15,267,11],[175,19,267,15],[176,6,268,2],[178,6,270,2],[179,0,271,0],[180,0,272,0],[181,0,273,0],[182,4,270,2],[183,6,270,2,"key"],[183,9,270,2],[184,6,270,2,"value"],[184,11,270,2],[184,13,274,2],[184,22,274,2,"onTouchesCancelled"],[184,40,274,20,"onTouchesCancelled"],[184,41,274,21,"callback"],[184,49,274,52],[184,51,274,54],[185,8,275,4],[185,12,275,8],[185,13,275,9,"config"],[185,19,275,15],[185,20,275,16,"needsPointerData"],[185,36,275,32],[185,39,275,35],[185,43,275,39],[186,8,276,4],[186,12,276,8],[186,13,276,9,"handlers"],[186,21,276,17],[186,22,276,18,"onTouchesCancelled"],[186,40,276,36],[186,43,276,39,"callback"],[186,51,276,47],[187,8,277,4],[187,12,277,8],[187,13,277,9,"handlers"],[187,21,277,17],[187,22,277,18,"isWorklet"],[187,31,277,27],[187,32,277,28,"CALLBACK_TYPE"],[187,45,277,41],[187,46,277,42,"TOUCHES_CANCELLED"],[187,63,277,59],[187,64,277,60],[187,67,278,6],[187,71,278,10],[187,72,278,11,"isWorklet"],[187,81,278,20],[187,82,278,21,"callback"],[187,90,278,29],[187,91,278,30],[188,8,280,4],[188,15,280,11],[188,19,280,15],[189,6,281,2],[191,6,283,2],[192,0,284,0],[193,0,285,0],[194,0,286,0],[195,0,287,0],[196,4,283,2],[197,6,283,2,"key"],[197,9,283,2],[198,6,283,2,"value"],[198,11,283,2],[198,13,288,2],[198,22,288,2,"enabled"],[198,29,288,9,"enabled"],[198,30,288,10,"enabled"],[198,38,288,26],[198,40,288,28],[199,8,289,4],[199,12,289,8],[199,13,289,9,"config"],[199,19,289,15],[199,20,289,16,"enabled"],[199,27,289,23],[199,30,289,26,"enabled"],[199,38,289,33],[200,8,290,4],[200,15,290,11],[200,19,290,15],[201,6,291,2],[203,6,293,2],[204,0,294,0],[205,0,295,0],[206,0,296,0],[207,0,297,0],[208,4,293,2],[209,6,293,2,"key"],[209,9,293,2],[210,6,293,2,"value"],[210,11,293,2],[210,13,298,2],[210,22,298,2,"shouldCancelWhenOutside"],[210,45,298,25,"shouldCancelWhenOutside"],[210,46,298,26,"value"],[210,51,298,40],[210,53,298,42],[211,8,299,4],[211,12,299,8],[211,13,299,9,"config"],[211,19,299,15],[211,20,299,16,"shouldCancelWhenOutside"],[211,43,299,39],[211,46,299,42,"value"],[211,51,299,47],[212,8,300,4],[212,15,300,11],[212,19,300,15],[213,6,301,2],[215,6,303,2],[216,0,304,0],[217,0,305,0],[218,0,306,0],[219,0,307,0],[220,0,308,0],[221,4,303,2],[222,6,303,2,"key"],[222,9,303,2],[223,6,303,2,"value"],[223,11,303,2],[223,13,309,2],[223,22,309,2,"hitSlop"],[223,29,309,9,"hitSlop"],[223,30,309,10,"hitSlop"],[223,38,309,26],[223,40,309,28],[224,8,310,4],[224,12,310,8],[224,13,310,9,"config"],[224,19,310,15],[224,20,310,16,"hitSlop"],[224,27,310,23],[224,30,310,26,"hitSlop"],[224,38,310,33],[225,8,311,4],[225,15,311,11],[225,19,311,15],[226,6,312,2],[228,6,314,2],[229,0,315,0],[230,0,316,0],[231,0,317,0],[232,0,318,0],[233,0,319,0],[234,4,314,2],[235,6,314,2,"key"],[235,9,314,2],[236,6,314,2,"value"],[236,11,314,2],[236,13,320,2],[236,22,320,2,"activeCursor"],[236,34,320,14,"activeCursor"],[236,35,320,15,"activeCursor"],[236,48,320,41],[236,50,320,43],[237,8,321,4],[237,12,321,8],[237,13,321,9,"config"],[237,19,321,15],[237,20,321,16,"activeCursor"],[237,32,321,28],[237,35,321,31,"activeCursor"],[237,48,321,43],[238,8,322,4],[238,15,322,11],[238,19,322,15],[239,6,323,2],[241,6,325,2],[242,0,326,0],[243,0,327,0],[244,0,328,0],[245,0,329,0],[246,0,330,0],[247,0,331,0],[248,0,332,0],[249,4,325,2],[250,6,325,2,"key"],[250,9,325,2],[251,6,325,2,"value"],[251,11,325,2],[251,13,333,2],[251,22,333,2,"mouseButton"],[251,33,333,13,"mouseButton"],[251,34,333,14,"mouseButton"],[251,46,333,38],[251,48,333,40],[252,8,334,4],[252,12,334,8],[252,13,334,9,"config"],[252,19,334,15],[252,20,334,16,"mouseButton"],[252,31,334,27],[252,34,334,30,"mouseButton"],[252,46,334,41],[253,8,335,4],[253,15,335,11],[253,19,335,15],[254,6,336,2],[256,6,338,2],[257,0,339,0],[258,0,340,0],[259,0,341,0],[260,0,342,0],[261,0,343,0],[262,4,338,2],[263,6,338,2,"key"],[263,9,338,2],[264,6,338,2,"value"],[264,11,338,2],[264,13,344,2],[264,22,344,2,"runOnJS"],[264,29,344,9,"runOnJS"],[264,30,344,10,"runOnJS"],[264,38,344,26],[264,40,344,28],[265,8,345,4],[265,12,345,8],[265,13,345,9,"config"],[265,19,345,15],[265,20,345,16,"runOnJS"],[265,27,345,23],[265,30,345,26,"runOnJS"],[265,38,345,33],[266,8,346,4],[266,15,346,11],[266,19,346,15],[267,6,347,2],[269,6,349,2],[270,0,350,0],[271,0,351,0],[272,0,352,0],[273,0,353,0],[274,4,349,2],[275,6,349,2,"key"],[275,9,349,2],[276,6,349,2,"value"],[276,11,349,2],[276,13,354,2],[276,22,354,2,"simultaneousWithExternalGesture"],[276,53,354,33,"simultaneousWithExternalGesture"],[276,54,354,33],[276,56,354,78],[277,8,354,78],[277,17,354,78,"_len"],[277,21,354,78],[277,24,354,78,"arguments"],[277,33,354,78],[277,34,354,78,"length"],[277,40,354,78],[277,42,354,37,"gestures"],[277,50,354,45],[277,57,354,45,"Array"],[277,62,354,45],[277,63,354,45,"_len"],[277,67,354,45],[277,70,354,45,"_key"],[277,74,354,45],[277,80,354,45,"_key"],[277,84,354,45],[277,87,354,45,"_len"],[277,91,354,45],[277,93,354,45,"_key"],[277,97,354,45],[278,10,354,37,"gestures"],[278,18,354,45],[278,19,354,45,"_key"],[278,23,354,45],[278,27,354,45,"arguments"],[278,36,354,45],[278,37,354,45,"_key"],[278,41,354,45],[279,8,354,45],[280,8,355,4],[280,13,355,9],[280,17,355,15,"gesture"],[280,24,355,22],[280,28,355,26,"gestures"],[280,36,355,34],[280,38,355,36],[281,10,356,6],[281,14,356,10],[281,15,356,11,"addDependency"],[281,28,356,24],[281,29,356,25],[281,47,356,43],[281,49,356,45,"gesture"],[281,56,356,52],[281,57,356,53],[282,8,357,4],[283,8,358,4],[283,15,358,11],[283,19,358,15],[284,6,359,2],[286,6,361,2],[287,0,362,0],[288,0,363,0],[289,0,364,0],[290,0,365,0],[291,4,361,2],[292,6,361,2,"key"],[292,9,361,2],[293,6,361,2,"value"],[293,11,361,2],[293,13,366,2],[293,22,366,2,"requireExternalGestureToFail"],[293,50,366,30,"requireExternalGestureToFail"],[293,51,366,30],[293,53,366,75],[294,8,366,75],[294,17,366,75,"_len2"],[294,22,366,75],[294,25,366,75,"arguments"],[294,34,366,75],[294,35,366,75,"length"],[294,41,366,75],[294,43,366,34,"gestures"],[294,51,366,42],[294,58,366,42,"Array"],[294,63,366,42],[294,64,366,42,"_len2"],[294,69,366,42],[294,72,366,42,"_key2"],[294,77,366,42],[294,83,366,42,"_key2"],[294,88,366,42],[294,91,366,42,"_len2"],[294,96,366,42],[294,98,366,42,"_key2"],[294,103,366,42],[295,10,366,34,"gestures"],[295,18,366,42],[295,19,366,42,"_key2"],[295,24,366,42],[295,28,366,42,"arguments"],[295,37,366,42],[295,38,366,42,"_key2"],[295,43,366,42],[296,8,366,42],[297,8,367,4],[297,13,367,9],[297,17,367,15,"gesture"],[297,24,367,22],[297,28,367,26,"gestures"],[297,36,367,34],[297,38,367,36],[298,10,368,6],[298,14,368,10],[298,15,368,11,"addDependency"],[298,28,368,24],[298,29,368,25],[298,44,368,40],[298,46,368,42,"gesture"],[298,53,368,49],[298,54,368,50],[299,8,369,4],[300,8,370,4],[300,15,370,11],[300,19,370,15],[301,6,371,2],[303,6,373,2],[304,0,374,0],[305,0,375,0],[306,0,376,0],[307,0,377,0],[308,4,373,2],[309,6,373,2,"key"],[309,9,373,2],[310,6,373,2,"value"],[310,11,373,2],[310,13,378,2],[310,22,378,2,"blocksExternalGesture"],[310,43,378,23,"blocksExternalGesture"],[310,44,378,23],[310,46,378,68],[311,8,378,68],[311,17,378,68,"_len3"],[311,22,378,68],[311,25,378,68,"arguments"],[311,34,378,68],[311,35,378,68,"length"],[311,41,378,68],[311,43,378,27,"gestures"],[311,51,378,35],[311,58,378,35,"Array"],[311,63,378,35],[311,64,378,35,"_len3"],[311,69,378,35],[311,72,378,35,"_key3"],[311,77,378,35],[311,83,378,35,"_key3"],[311,88,378,35],[311,91,378,35,"_len3"],[311,96,378,35],[311,98,378,35,"_key3"],[311,103,378,35],[312,10,378,27,"gestures"],[312,18,378,35],[312,19,378,35,"_key3"],[312,24,378,35],[312,28,378,35,"arguments"],[312,37,378,35],[312,38,378,35,"_key3"],[312,43,378,35],[313,8,378,35],[314,8,379,4],[314,13,379,9],[314,17,379,15,"gesture"],[314,24,379,22],[314,28,379,26,"gestures"],[314,36,379,34],[314,38,379,36],[315,10,380,6],[315,14,380,10],[315,15,380,11,"addDependency"],[315,28,380,24],[315,29,380,25],[315,45,380,41],[315,47,380,43,"gesture"],[315,54,380,50],[315,55,380,51],[316,8,381,4],[317,8,382,4],[317,15,382,11],[317,19,382,15],[318,6,383,2],[320,6,385,2],[321,0,386,0],[322,0,387,0],[323,0,388,0],[324,4,385,2],[325,6,385,2,"key"],[325,9,385,2],[326,6,385,2,"value"],[326,11,385,2],[326,13,389,2],[326,22,389,2,"withTestId"],[326,32,389,12,"withTestId"],[326,33,389,13,"id"],[326,35,389,23],[326,37,389,25],[327,8,390,4],[327,12,390,8],[327,13,390,9,"config"],[327,19,390,15],[327,20,390,16,"testId"],[327,26,390,22],[327,29,390,25,"id"],[327,31,390,27],[328,8,391,4],[328,15,391,11],[328,19,391,15],[329,6,392,2],[331,6,394,2],[332,0,395,0],[333,0,396,0],[334,0,397,0],[335,0,398,0],[336,0,399,0],[337,4,394,2],[338,6,394,2,"key"],[338,9,394,2],[339,6,394,2,"value"],[339,11,394,2],[339,13,400,2],[339,22,400,2,"cancelsTouchesInView"],[339,42,400,22,"cancelsTouchesInView"],[339,43,400,23,"value"],[339,48,400,37],[339,50,400,39],[340,8,401,4],[340,12,401,8],[340,13,401,9,"config"],[340,19,401,15],[340,20,401,16,"cancelsTouchesInView"],[340,40,401,36],[340,43,401,39,"value"],[340,48,401,44],[341,8,402,4],[341,15,402,11],[341,19,402,15],[342,6,403,2],[343,4,403,3],[344,6,403,3,"key"],[344,9,403,3],[345,6,403,3,"value"],[345,11,403,3],[345,13,405,2],[345,22,405,2,"initialize"],[345,32,405,12,"initialize"],[345,33,405,12],[345,35,405,15],[346,8,406,4],[346,12,406,8],[346,13,406,9,"handlerTag"],[346,23,406,19],[346,26,406,22],[346,30,406,22,"getNextHandlerTag"],[346,60,406,22],[346,61,406,22,"getNextHandlerTag"],[346,102,406,39],[346,104,406,40],[346,105,406,41],[347,8,408,4],[347,12,408,8],[347,13,408,9,"handlers"],[347,21,408,17],[347,24,408,17,"Object"],[347,30,408,17],[347,31,408,17,"assign"],[347,37,408,17],[347,42,408,25],[347,46,408,29],[347,47,408,30,"handlers"],[347,55,408,38],[348,10,408,40,"handlerTag"],[348,20,408,50],[348,22,408,52],[348,26,408,56],[348,27,408,57,"handlerTag"],[349,8,408,67],[349,10,408,69],[350,8,410,4],[350,12,410,8],[350,16,410,12],[350,17,410,13,"config"],[350,23,410,19],[350,24,410,20,"ref"],[350,27,410,23],[350,29,410,25],[351,10,411,6],[351,14,411,10],[351,15,411,11,"config"],[351,21,411,17],[351,22,411,18,"ref"],[351,25,411,21],[351,26,411,22,"current"],[351,33,411,29],[351,36,411,32],[351,40,411,51],[352,8,412,4],[353,6,413,2],[354,4,413,3],[355,6,413,3,"key"],[355,9,413,3],[356,6,413,3,"value"],[356,11,413,3],[356,13,415,2],[356,22,415,2,"toGestureArray"],[356,36,415,16,"toGestureArray"],[356,37,415,16],[356,39,415,34],[357,8,416,4],[357,15,416,11],[357,16,416,12],[357,20,416,16],[357,21,416,32],[358,6,417,2],[360,6,419,2],[361,4,419,2],[362,6,419,2,"key"],[362,9,419,2],[363,6,419,2,"value"],[363,11,419,2],[363,13,420,2],[363,22,420,2,"prepare"],[363,29,420,9,"prepare"],[363,30,420,9],[363,32,420,12],[363,33,420,13],[364,4,420,14],[365,6,420,14,"key"],[365,9,420,14],[366,6,420,14,"get"],[366,9,420,14],[366,11,422,2],[366,20,422,2,"get"],[366,24,422,2],[366,26,422,37],[367,8,423,4],[368,8,424,4],[369,8,425,4],[370,8,426,4],[370,15,427,6],[370,19,427,10],[370,20,427,11,"config"],[370,26,427,17],[370,27,427,18,"runOnJS"],[370,34,427,25],[370,39,427,30],[370,43,427,34],[370,47,428,6],[370,48,428,7],[370,52,428,11],[370,53,428,12,"handlers"],[370,61,428,20],[370,62,428,21,"isWorklet"],[370,71,428,30],[370,72,428,31,"includes"],[370,80,428,39],[370,81,428,40],[370,86,428,45],[370,87,428,46],[370,91,429,6],[370,92,429,7],[370,96,429,7,"isRemoteDebuggingEnabled"],[370,126,429,7],[370,127,429,7,"isRemoteDebuggingEnabled"],[370,166,429,31],[370,168,429,32],[370,169,429,33],[371,6,431,2],[372,4,431,3],[373,2,431,3],[373,4,129,10,"Gesture"],[373,11,129,17],[374,2,129,17],[374,6,434,22,"ContinousBaseGesture"],[374,26,434,42],[374,29,434,42,"exports"],[374,36,434,42],[374,37,434,42,"ContinousBaseGesture"],[374,57,434,42],[374,83,434,42,"_BaseGesture2"],[374,96,434,42],[375,4,434,42],[375,13,434,42,"ContinousBaseGesture"],[375,34,434,42],[376,6,434,42],[376,10,434,42,"_classCallCheck2"],[376,26,434,42],[376,27,434,42,"default"],[376,34,434,42],[376,42,434,42,"ContinousBaseGesture"],[376,62,434,42],[377,6,434,42],[377,13,434,42,"_callSuper"],[377,23,434,42],[377,30,434,42,"ContinousBaseGesture"],[377,50,434,42],[377,52,434,42,"arguments"],[377,61,434,42],[378,4,434,42],[379,4,434,42],[379,8,434,42,"_inherits2"],[379,18,434,42],[379,19,434,42,"default"],[379,26,434,42],[379,28,434,42,"ContinousBaseGesture"],[379,48,434,42],[379,50,434,42,"_BaseGesture2"],[379,63,434,42],[380,4,434,42],[380,15,434,42,"_createClass2"],[380,28,434,42],[380,29,434,42,"default"],[380,36,434,42],[380,38,434,42,"ContinousBaseGesture"],[380,58,434,42],[381,6,434,42,"key"],[381,9,434,42],[382,6,434,42,"value"],[382,11,434,42],[383,6,438,2],[384,0,439,0],[385,0,440,0],[386,0,441,0],[387,6,442,2],[387,15,442,2,"onUpdate"],[387,23,442,10,"onUpdate"],[387,24,442,11,"callback"],[387,32,442,71],[387,34,442,73],[388,8,443,4],[388,12,443,8],[388,13,443,9,"handlers"],[388,21,443,17],[388,22,443,18,"onUpdate"],[388,30,443,26],[388,33,443,29,"callback"],[388,41,443,37],[389,8,444,4],[389,12,444,8],[389,13,444,9,"handlers"],[389,21,444,17],[389,22,444,18,"isWorklet"],[389,31,444,27],[389,32,444,28,"CALLBACK_TYPE"],[389,45,444,41],[389,46,444,42,"UPDATE"],[389,52,444,48],[389,53,444,49],[389,56,444,52],[389,60,444,56],[389,61,444,57,"isWorklet"],[389,70,444,66],[389,71,444,67,"callback"],[389,79,444,75],[389,80,444,76],[390,8,445,4],[390,15,445,11],[390,19,445,15],[391,6,446,2],[393,6,448,2],[394,0,449,0],[395,0,450,0],[396,0,451,0],[397,0,452,0],[398,4,448,2],[399,6,448,2,"key"],[399,9,448,2],[400,6,448,2,"value"],[400,11,448,2],[400,13,453,2],[400,22,453,2,"onChange"],[400,30,453,10,"onChange"],[400,31,454,4,"callback"],[400,39,456,13],[400,41,457,4],[401,8,458,4],[401,12,458,8],[401,13,458,9,"handlers"],[401,21,458,17],[401,22,458,18,"onChange"],[401,30,458,26],[401,33,458,29,"callback"],[401,41,458,37],[402,8,459,4],[402,12,459,8],[402,13,459,9,"handlers"],[402,21,459,17],[402,22,459,18,"isWorklet"],[402,31,459,27],[402,32,459,28,"CALLBACK_TYPE"],[402,45,459,41],[402,46,459,42,"CHANGE"],[402,52,459,48],[402,53,459,49],[402,56,459,52],[402,60,459,56],[402,61,459,57,"isWorklet"],[402,70,459,66],[402,71,459,67,"callback"],[402,79,459,75],[402,80,459,76],[403,8,460,4],[403,15,460,11],[403,19,460,15],[404,6,461,2],[406,6,463,2],[407,0,464,0],[408,0,465,0],[409,0,466,0],[410,0,467,0],[411,4,463,2],[412,6,463,2,"key"],[412,9,463,2],[413,6,463,2,"value"],[413,11,463,2],[413,13,468,2],[413,22,468,2,"manualActivation"],[413,38,468,18,"manualActivation"],[413,39,468,19,"manualActivation"],[413,56,468,44],[413,58,468,46],[414,8,469,4],[414,12,469,8],[414,13,469,9,"config"],[414,19,469,15],[414,20,469,16,"manualActivation"],[414,36,469,32],[414,39,469,35,"manualActivation"],[414,56,469,51],[415,8,470,4],[415,15,470,11],[415,19,470,15],[416,6,471,2],[417,4,471,3],[418,2,471,3],[418,4,437,10,"BaseGesture"],[418,15,437,21],[419,0,437,21],[419,3]],"functionMap":{"names":["<global>","Gesture","BaseGesture","BaseGesture#constructor","BaseGesture#addDependency","BaseGesture#withRef","BaseGesture#isWorklet","BaseGesture#onBegin","BaseGesture#onStart","BaseGesture#onEnd","BaseGesture#onFinalize","BaseGesture#onTouchesDown","BaseGesture#onTouchesMove","BaseGesture#onTouchesUp","BaseGesture#onTouchesCancelled","BaseGesture#enabled","BaseGesture#shouldCancelWhenOutside","BaseGesture#hitSlop","BaseGesture#activeCursor","BaseGesture#mouseButton","BaseGesture#runOnJS","BaseGesture#simultaneousWithExternalGesture","BaseGesture#requireExternalGestureToFail","BaseGesture#blocksExternalGesture","BaseGesture#withTestId","BaseGesture#cancelsTouchesInView","BaseGesture#initialize","BaseGesture#toGestureArray","BaseGesture#prepare","BaseGesture#get__shouldUseReanimated","ContinousBaseGesture","ContinousBaseGesture#onUpdate","ContinousBaseGesture#onChange","ContinousBaseGesture#manualActivation"],"mappings":"AAA;OCyG;CDkB;OEG;ECa;GDU;EEE;GFQ;EGM;GHG;EIG;GJG;EKO;GLI;EMM;GNI;EOO;GPU;EQM;GRU;ESM;GTO;EUM;GVO;EWM;GXO;EYM;GZO;EaO;GbG;EcO;GdG;EeQ;GfG;EgBQ;GhBG;EiBU;GjBG;EkBQ;GlBG;EmBO;GnBK;EoBO;GpBK;EqBO;GrBK;EsBM;GtBG;EuBQ;GvBG;EwBE;GxBQ;EyBE;GzBE;E0BG,Y1B;E2BE;G3BS;CFC;O8BE;ECQ;GDI;EEO;GFQ;EGO;GHG;C9BC"}},"type":"js/module"}]}