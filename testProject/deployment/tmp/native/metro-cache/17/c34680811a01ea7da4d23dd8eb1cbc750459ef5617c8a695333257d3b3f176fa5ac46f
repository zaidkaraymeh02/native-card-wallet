{"dependencies":[],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * @format\n   * \n   */\n\n  'use strict';\n\n  /**\n   * If your application is accepting different values for the same field over\n   * time and is doing a diff on them, you can either (1) create a copy or\n   * (2) ensure that those values are not mutated behind two passes.\n   * This function helps you with (2) by freezing the object and throwing if\n   * the user subsequently modifies the value.\n   *\n   * There are two caveats with this function:\n   *   - If the call site is not in strict mode, it will only throw when\n   *     mutating existing fields, adding a new one\n   *     will unfortunately fail silently :(\n   *   - If the object is already frozen or sealed, it will not continue the\n   *     deep traversal and will leave leaf nodes unfrozen.\n   *\n   * Freezing the object and adding the throw mechanism is expensive and will\n   * only be used in DEV.\n   */\n  function deepFreezeAndThrowOnMutationInDev(object) {\n    if (__DEV__) {\n      if (typeof object !== 'object' || object === null || Object.isFrozen(object) || Object.isSealed(object)) {\n        return object;\n      }\n\n      // $FlowFixMe[not-an-object] `object` can be an array, but Object.keys works with arrays too\n      var keys = Object.keys(object);\n      // $FlowFixMe[method-unbinding] added when improving typing for this parameters\n      var _hasOwnProperty = Object.prototype.hasOwnProperty;\n      for (var i = 0; i < keys.length; i++) {\n        var key = keys[i];\n        if (_hasOwnProperty.call(object, key)) {\n          Object.defineProperty(object, key, {\n            get: identity.bind(null, object[key])\n          });\n          Object.defineProperty(object, key, {\n            set: throwOnImmutableMutation.bind(null, key)\n          });\n        }\n      }\n      Object.freeze(object);\n      Object.seal(object);\n      for (var _i = 0; _i < keys.length; _i++) {\n        var _key = keys[_i];\n        if (_hasOwnProperty.call(object, _key)) {\n          deepFreezeAndThrowOnMutationInDev(object[_key]);\n        }\n      }\n    }\n    return object;\n  }\n\n  /* $FlowFixMe[missing-local-annot] The type annotation(s) required by Flow's\n   * LTI update could not be added via codemod */\n  function throwOnImmutableMutation(key, value) {\n    throw Error('You attempted to set the key `' + key + '` with the value `' + JSON.stringify(value) + '` on an object that is meant to be immutable ' + 'and has been frozen.');\n  }\n  function identity(value) {\n    return value;\n  }\n  module.exports = deepFreezeAndThrowOnMutationInDev;\n});","lineCount":73,"map":[[2,2,1,0],[3,0,2,0],[4,0,3,0],[5,0,4,0],[6,0,5,0],[7,0,6,0],[8,0,7,0],[9,0,8,0],[10,0,9,0],[12,2,11,0],[12,14,11,12],[14,2,13,0],[15,0,14,0],[16,0,15,0],[17,0,16,0],[18,0,17,0],[19,0,18,0],[20,0,19,0],[21,0,20,0],[22,0,21,0],[23,0,22,0],[24,0,23,0],[25,0,24,0],[26,0,25,0],[27,0,26,0],[28,0,27,0],[29,0,28,0],[30,0,29,0],[31,2,30,0],[31,11,30,9,"deepFreezeAndThrowOnMutationInDev"],[31,44,30,42,"deepFreezeAndThrowOnMutationInDev"],[31,45,31,2,"object"],[31,51,31,11],[31,53,32,5],[32,4,33,2],[32,8,33,6,"__DEV__"],[32,15,33,13],[32,17,33,15],[33,6,34,4],[33,10,35,6],[33,17,35,13,"object"],[33,23,35,19],[33,28,35,24],[33,36,35,32],[33,40,36,6,"object"],[33,46,36,12],[33,51,36,17],[33,55,36,21],[33,59,37,6,"Object"],[33,65,37,12],[33,66,37,13,"isFrozen"],[33,74,37,21],[33,75,37,22,"object"],[33,81,37,28],[33,82,37,29],[33,86,38,6,"Object"],[33,92,38,12],[33,93,38,13,"isSealed"],[33,101,38,21],[33,102,38,22,"object"],[33,108,38,28],[33,109,38,29],[33,111,39,6],[34,8,40,6],[34,15,40,13,"object"],[34,21,40,19],[35,6,41,4],[37,6,43,4],[38,6,44,4],[38,10,44,10,"keys"],[38,14,44,14],[38,17,44,17,"Object"],[38,23,44,23],[38,24,44,24,"keys"],[38,28,44,28],[38,29,44,30,"object"],[38,35,44,59],[38,36,44,60],[39,6,45,4],[40,6,46,4],[40,10,46,10,"hasOwnProperty"],[40,25,46,24],[40,28,46,27,"Object"],[40,34,46,33],[40,35,46,34,"prototype"],[40,44,46,43],[40,45,46,44,"hasOwnProperty"],[40,59,46,58],[41,6,48,4],[41,11,48,9],[41,15,48,13,"i"],[41,16,48,14],[41,19,48,17],[41,20,48,18],[41,22,48,20,"i"],[41,23,48,21],[41,26,48,24,"keys"],[41,30,48,28],[41,31,48,29,"length"],[41,37,48,35],[41,39,48,37,"i"],[41,40,48,38],[41,42,48,40],[41,44,48,42],[42,8,49,6],[42,12,49,12,"key"],[42,15,49,15],[42,18,49,18,"keys"],[42,22,49,22],[42,23,49,23,"i"],[42,24,49,24],[42,25,49,25],[43,8,50,6],[43,12,50,10,"hasOwnProperty"],[43,27,50,24],[43,28,50,25,"call"],[43,32,50,29],[43,33,50,30,"object"],[43,39,50,36],[43,41,50,38,"key"],[43,44,50,41],[43,45,50,42],[43,47,50,44],[44,10,51,8,"Object"],[44,16,51,14],[44,17,51,15,"defineProperty"],[44,31,51,29],[44,32,51,30,"object"],[44,38,51,36],[44,40,51,38,"key"],[44,43,51,41],[44,45,51,43],[45,12,52,10,"get"],[45,15,52,13],[45,17,52,15,"identity"],[45,25,52,23],[45,26,52,24,"bind"],[45,30,52,28],[45,31,52,29],[45,35,52,33],[45,37,52,35,"object"],[45,43,52,41],[45,44,52,42,"key"],[45,47,52,45],[45,48,52,46],[46,10,53,8],[46,11,53,9],[46,12,53,10],[47,10,54,8,"Object"],[47,16,54,14],[47,17,54,15,"defineProperty"],[47,31,54,29],[47,32,54,30,"object"],[47,38,54,36],[47,40,54,38,"key"],[47,43,54,41],[47,45,54,43],[48,12,55,10,"set"],[48,15,55,13],[48,17,55,15,"throwOnImmutableMutation"],[48,41,55,39],[48,42,55,40,"bind"],[48,46,55,44],[48,47,55,45],[48,51,55,49],[48,53,55,51,"key"],[48,56,55,54],[49,10,56,8],[49,11,56,9],[49,12,56,10],[50,8,57,6],[51,6,58,4],[52,6,60,4,"Object"],[52,12,60,10],[52,13,60,11,"freeze"],[52,19,60,17],[52,20,60,18,"object"],[52,26,60,24],[52,27,60,25],[53,6,61,4,"Object"],[53,12,61,10],[53,13,61,11,"seal"],[53,17,61,15],[53,18,61,16,"object"],[53,24,61,22],[53,25,61,23],[54,6,63,4],[54,11,63,9],[54,15,63,13,"i"],[54,17,63,14],[54,20,63,17],[54,21,63,18],[54,23,63,20,"i"],[54,25,63,21],[54,28,63,24,"keys"],[54,32,63,28],[54,33,63,29,"length"],[54,39,63,35],[54,41,63,37,"i"],[54,43,63,38],[54,45,63,40],[54,47,63,42],[55,8,64,6],[55,12,64,12,"key"],[55,16,64,15],[55,19,64,18,"keys"],[55,23,64,22],[55,24,64,23,"i"],[55,26,64,24],[55,27,64,25],[56,8,65,6],[56,12,65,10,"hasOwnProperty"],[56,27,65,24],[56,28,65,25,"call"],[56,32,65,29],[56,33,65,30,"object"],[56,39,65,36],[56,41,65,38,"key"],[56,45,65,41],[56,46,65,42],[56,48,65,44],[57,10,66,8,"deepFreezeAndThrowOnMutationInDev"],[57,43,66,41],[57,44,66,42,"object"],[57,50,66,48],[57,51,66,49,"key"],[57,55,66,52],[57,56,66,53],[57,57,66,54],[58,8,67,6],[59,6,68,4],[60,4,69,2],[61,4,70,2],[61,11,70,9,"object"],[61,17,70,15],[62,2,71,0],[64,2,73,0],[65,0,74,0],[66,2,75,0],[66,11,75,9,"throwOnImmutableMutation"],[66,35,75,33,"throwOnImmutableMutation"],[66,36,75,34,"key"],[66,39,75,44],[66,41,75,46,"value"],[66,46,75,51],[66,48,75,53],[67,4,76,2],[67,10,76,8,"Error"],[67,15,76,13],[67,16,77,4],[67,48,77,36],[67,51,78,6,"key"],[67,54,78,9],[67,57,79,6],[67,77,79,26],[67,80,80,6,"JSON"],[67,84,80,10],[67,85,80,11,"stringify"],[67,94,80,20],[67,95,80,21,"value"],[67,100,80,26],[67,101,80,27],[67,104,81,6],[67,151,81,53],[67,154,82,6],[67,176,83,2],[67,177,83,3],[68,2,84,0],[69,2,86,0],[69,11,86,9,"identity"],[69,19,86,17,"identity"],[69,20,86,18,"value"],[69,25,86,30],[69,27,86,32],[70,4,87,2],[70,11,87,9,"value"],[70,16,87,14],[71,2,88,0],[72,2,90,0,"module"],[72,8,90,6],[72,9,90,7,"exports"],[72,16,90,14],[72,19,90,17,"deepFreezeAndThrowOnMutationInDev"],[72,52,90,50],[73,0,90,51],[73,3]],"functionMap":{"names":["<global>","deepFreezeAndThrowOnMutationInDev","throwOnImmutableMutation","identity"],"mappings":"AAA;AC6B;CDyC;AEI;CFS;AGE;CHE"}},"type":"js/module"}]}