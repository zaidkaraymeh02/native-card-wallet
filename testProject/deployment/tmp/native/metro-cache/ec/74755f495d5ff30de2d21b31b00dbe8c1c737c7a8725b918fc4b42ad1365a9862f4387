{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":36,"column":0,"index":1166}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/defineProperty","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":36,"column":0,"index":1166}}],"key":"RY2z4+Bdq4bpTD/1b+1jGPWZdgA="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _default;\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/defineProperty\"));\n  /**\n   * Merge 2 objects\n   * This function will look at every object property of the second object and will override the matching property in the first object\n   *\n   * @param   {object[]}    sources   Array of 2 objects\n   *\n   * @return  {object} Returns merged object\n   *\n   */\n  function _default() {\n    function mergeDeep(target) {\n      function isObject(item) {\n        return item && typeof item === \"object\" && !Array.isArray(item);\n      }\n      for (var _len2 = arguments.length, sources = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        sources[_key2 - 1] = arguments[_key2];\n      }\n      if (!sources.length) {\n        return target;\n      }\n      var source = sources.shift();\n      if (isObject(target) && isObject(source)) {\n        Object.keys(source).forEach(function (key) {\n          if (isObject(source[key])) {\n            if (!target[key]) {\n              Object.assign(target, (0, _defineProperty2.default)({}, key, {}));\n            }\n            mergeDeep(target[key], source[key]);\n          } else {\n            Object.assign(target, (0, _defineProperty2.default)({}, key, source[key] || target[key]));\n          }\n        });\n      }\n      return mergeDeep.apply(void 0, [target].concat(sources));\n    }\n    for (var _len = arguments.length, sources = new Array(_len), _key = 0; _key < _len; _key++) {\n      sources[_key] = arguments[_key];\n    }\n    return mergeDeep.apply(void 0, [{}].concat(sources));\n  }\n});","lineCount":48,"map":[[8,2,1,0],[9,0,2,0],[10,0,3,0],[11,0,4,0],[12,0,5,0],[13,0,6,0],[14,0,7,0],[15,0,8,0],[16,0,9,0],[17,2,10,15],[17,11,10,15,"_default"],[17,20,10,15],[17,22,10,37],[18,4,11,4],[18,13,11,13,"mergeDeep"],[18,22,11,22,"mergeDeep"],[18,23,11,23,"target"],[18,29,11,29],[18,31,11,43],[19,6,12,8],[19,15,12,17,"isObject"],[19,23,12,25,"isObject"],[19,24,12,26,"item"],[19,28,12,30],[19,30,12,32],[20,8,13,12],[20,15,13,19,"item"],[20,19,13,23],[20,23,13,27],[20,30,13,34,"item"],[20,34,13,38],[20,39,13,43],[20,47,13,51],[20,51,13,55],[20,52,13,56,"Array"],[20,57,13,61],[20,58,13,62,"isArray"],[20,65,13,69],[20,66,13,70,"item"],[20,70,13,74],[20,71,13,75],[21,6,14,8],[22,6,14,9],[22,15,14,9,"_len2"],[22,20,14,9],[22,23,14,9,"arguments"],[22,32,14,9],[22,33,14,9,"length"],[22,39,14,9],[22,41,11,34,"sources"],[22,48,11,41],[22,55,11,41,"Array"],[22,60,11,41],[22,61,11,41,"_len2"],[22,66,11,41],[22,73,11,41,"_len2"],[22,78,11,41],[22,89,11,41,"_key2"],[22,94,11,41],[22,100,11,41,"_key2"],[22,105,11,41],[22,108,11,41,"_len2"],[22,113,11,41],[22,115,11,41,"_key2"],[22,120,11,41],[23,8,11,34,"sources"],[23,15,11,41],[23,16,11,41,"_key2"],[23,21,11,41],[23,29,11,41,"arguments"],[23,38,11,41],[23,39,11,41,"_key2"],[23,44,11,41],[24,6,11,41],[25,6,15,8],[25,10,15,12],[25,11,15,13,"sources"],[25,18,15,20],[25,19,15,21,"length"],[25,25,15,27],[25,27,15,29],[26,8,16,12],[26,15,16,19,"target"],[26,21,16,25],[27,6,17,8],[28,6,18,8],[28,10,18,14,"source"],[28,16,18,20],[28,19,18,23,"sources"],[28,26,18,30],[28,27,18,31,"shift"],[28,32,18,36],[28,33,18,37],[28,34,18,38],[29,6,19,8],[29,10,19,12,"isObject"],[29,18,19,20],[29,19,19,21,"target"],[29,25,19,27],[29,26,19,28],[29,30,19,32,"isObject"],[29,38,19,40],[29,39,19,41,"source"],[29,45,19,47],[29,46,19,48],[29,48,19,50],[30,8,20,12,"Object"],[30,14,20,18],[30,15,20,19,"keys"],[30,19,20,23],[30,20,20,24,"source"],[30,26,20,30],[30,27,20,31],[30,28,20,32,"forEach"],[30,35,20,39],[30,36,20,40],[30,46,20,40,"key"],[30,49,20,43],[30,51,20,47],[31,10,21,16],[31,14,21,20,"isObject"],[31,22,21,28],[31,23,21,29,"source"],[31,29,21,35],[31,30,21,36,"key"],[31,33,21,39],[31,34,21,40],[31,35,21,41],[31,37,21,43],[32,12,22,20],[32,16,22,24],[32,17,22,25,"target"],[32,23,22,31],[32,24,22,32,"key"],[32,27,22,35],[32,28,22,36],[32,30,22,38],[33,14,23,24,"Object"],[33,20,23,30],[33,21,23,31,"assign"],[33,27,23,37],[33,28,23,38,"target"],[33,34,23,44],[33,40,23,44,"_defineProperty2"],[33,56,23,44],[33,57,23,44,"default"],[33,64,23,44],[33,70,23,49,"key"],[33,73,23,52],[33,75,23,55],[33,76,23,56],[33,77,23,57],[33,78,23,59],[33,79,23,60],[34,12,24,20],[35,12,25,20,"mergeDeep"],[35,21,25,29],[35,22,25,30,"target"],[35,28,25,36],[35,29,25,37,"key"],[35,32,25,40],[35,33,25,41],[35,35,25,43,"source"],[35,41,25,49],[35,42,25,50,"key"],[35,45,25,53],[35,46,25,54],[35,47,25,55],[36,10,26,16],[36,11,26,17],[36,17,27,21],[37,12,28,20,"Object"],[37,18,28,26],[37,19,28,27,"assign"],[37,25,28,33],[37,26,28,34,"target"],[37,32,28,40],[37,38,28,40,"_defineProperty2"],[37,54,28,40],[37,55,28,40,"default"],[37,62,28,40],[37,68,28,45,"key"],[37,71,28,48],[37,73,28,51,"source"],[37,79,28,57],[37,80,28,58,"key"],[37,83,28,61],[37,84,28,62],[37,88,28,66,"target"],[37,94,28,72],[37,95,28,73,"key"],[37,98,28,76],[37,99,28,77],[37,100,28,79],[37,101,28,80],[38,10,29,16],[39,8,30,12],[39,9,30,13],[39,10,30,14],[40,6,31,8],[41,6,32,8],[41,13,32,15,"mergeDeep"],[41,22,32,24],[41,23,32,24,"apply"],[41,28,32,24],[41,38,32,25,"target"],[41,44,32,31],[41,46,32,31,"concat"],[41,52,32,31],[41,53,32,36,"sources"],[41,60,32,43],[41,62,32,44],[42,4,33,4],[43,4,33,5],[43,13,33,5,"_len"],[43,17,33,5],[43,20,33,5,"arguments"],[43,29,33,5],[43,30,33,5,"length"],[43,36,33,5],[43,38,10,28,"sources"],[43,45,10,35],[43,52,10,35,"Array"],[43,57,10,35],[43,58,10,35,"_len"],[43,62,10,35],[43,65,10,35,"_key"],[43,69,10,35],[43,75,10,35,"_key"],[43,79,10,35],[43,82,10,35,"_len"],[43,86,10,35],[43,88,10,35,"_key"],[43,92,10,35],[44,6,10,28,"sources"],[44,13,10,35],[44,14,10,35,"_key"],[44,18,10,35],[44,22,10,35,"arguments"],[44,31,10,35],[44,32,10,35,"_key"],[44,36,10,35],[45,4,10,35],[46,4,34,4],[46,11,34,11,"mergeDeep"],[46,20,34,20],[46,21,34,20,"apply"],[46,26,34,20],[46,36,34,21],[46,37,34,22],[46,38,34,23],[46,40,34,23,"concat"],[46,46,34,23],[46,47,34,28,"sources"],[46,54,34,35],[46,56,34,36],[47,2,35,0],[48,0,35,1],[48,3]],"functionMap":{"names":["<global>","default","mergeDeep","isObject","Object.keys.forEach$argument_0"],"mappings":"AAA;eCS;ICC;QCC;SDE;wCEM;aFU;KDG;CDE"}},"type":"js/module"}]}