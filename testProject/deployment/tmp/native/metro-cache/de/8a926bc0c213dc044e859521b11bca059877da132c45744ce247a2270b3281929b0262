{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":134,"column":0,"index":3687}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":134,"column":0,"index":3687}}],"key":"ohGilxjVqjyE1GooDVDt9OYg9x0="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":134,"column":0,"index":3687}}],"key":"V6GYoXnblvuuGHJNMy7MHyaunsU="}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":134,"column":0,"index":3687}}],"key":"rcd0dMwf8BS2g+8U1wyhIOxtYEo="}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":134,"column":0,"index":3687}}],"key":"4pxOr+e+5cSZAdeEKxSt3F7LoKY="}},{"name":"@babel/runtime/helpers/inherits","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":134,"column":0,"index":3687}}],"key":"EDnOjopp9yNVawSzfBRsy2dq5dM="}},{"name":"../EventEmitter/NativeEventEmitter","data":{"asyncType":null,"locs":[{"start":{"line":13,"column":0,"index":300},"end":{"line":13,"column":68,"index":368}}],"key":"FxUYVDH3eq4FUmUOIfY0RLK75tc="}},{"name":"../Utilities/Platform","data":{"asyncType":null,"locs":[{"start":{"line":14,"column":0,"index":369},"end":{"line":14,"column":45,"index":414}}],"key":"3JpW2lByst9OohsYWa25ZOinj2I="}},{"name":"./NativeIntentAndroid","data":{"asyncType":null,"locs":[{"start":{"line":15,"column":0,"index":415},"end":{"line":15,"column":56,"index":471}}],"key":"EfutOvh8LBxg20WgvOtCRMg1gOY="}},{"name":"./NativeLinkingManager","data":{"asyncType":null,"locs":[{"start":{"line":16,"column":0,"index":472},"end":{"line":16,"column":58,"index":530}}],"key":"Vh03zqRMdPDBgLxWsoiPiqdaAAE="}},{"name":"invariant","data":{"asyncType":null,"locs":[{"start":{"line":17,"column":0,"index":531},"end":{"line":17,"column":34,"index":565}}],"key":"Fzi/BpZws2YooIGJ9b6u0HJtuks="}},{"name":"nullthrows","data":{"asyncType":null,"locs":[{"start":{"line":18,"column":0,"index":566},"end":{"line":18,"column":36,"index":602}}],"key":"3yYZ/IFwZXE7GnlKPSAzr74cRoo="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/getPrototypeOf\"));\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/inherits\"));\n  var _NativeEventEmitter2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"../EventEmitter/NativeEventEmitter\"));\n  var _Platform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"../Utilities/Platform\"));\n  var _NativeIntentAndroid = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"./NativeIntentAndroid\"));\n  var _NativeLinkingManager = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9], \"./NativeLinkingManager\"));\n  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10], \"invariant\"));\n  var _nullthrows = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11], \"nullthrows\"));\n  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }\n  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); } /**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n */\n  /**\n   * `Linking` gives you a general interface to interact with both incoming\n   * and outgoing app links.\n   *\n   * See https://reactnative.dev/docs/linking\n   */\n  var Linking = /*#__PURE__*/function (_NativeEventEmitter) {\n    function Linking() {\n      (0, _classCallCheck2.default)(this, Linking);\n      return _callSuper(this, Linking, [_Platform.default.OS === 'ios' ? (0, _nullthrows.default)(_NativeLinkingManager.default) : undefined]);\n    }\n\n    /**\n     * Add a handler to Linking changes by listening to the `url` event type\n     * and providing the handler\n     *\n     * See https://reactnative.dev/docs/linking#addeventlistener\n     */\n    (0, _inherits2.default)(Linking, _NativeEventEmitter);\n    return (0, _createClass2.default)(Linking, [{\n      key: \"addEventListener\",\n      value: function addEventListener(eventType, listener, context) {\n        return this.addListener(eventType, listener);\n      }\n\n      /**\n       * Try to open the given `url` with any of the installed apps.\n       *\n       * See https://reactnative.dev/docs/linking#openurl\n       */\n    }, {\n      key: \"openURL\",\n      value: function openURL(url) {\n        this._validateURL(url);\n        if (_Platform.default.OS === 'android') {\n          return (0, _nullthrows.default)(_NativeIntentAndroid.default).openURL(url);\n        } else {\n          return (0, _nullthrows.default)(_NativeLinkingManager.default).openURL(url);\n        }\n      }\n\n      /**\n       * Determine whether or not an installed app can handle a given URL.\n       *\n       * See https://reactnative.dev/docs/linking#canopenurl\n       */\n    }, {\n      key: \"canOpenURL\",\n      value: function canOpenURL(url) {\n        this._validateURL(url);\n        if (_Platform.default.OS === 'android') {\n          return (0, _nullthrows.default)(_NativeIntentAndroid.default).canOpenURL(url);\n        } else {\n          return (0, _nullthrows.default)(_NativeLinkingManager.default).canOpenURL(url);\n        }\n      }\n\n      /**\n       * Open app settings.\n       *\n       * See https://reactnative.dev/docs/linking#opensettings\n       */\n    }, {\n      key: \"openSettings\",\n      value: function openSettings() {\n        if (_Platform.default.OS === 'android') {\n          return (0, _nullthrows.default)(_NativeIntentAndroid.default).openSettings();\n        } else {\n          return (0, _nullthrows.default)(_NativeLinkingManager.default).openSettings();\n        }\n      }\n\n      /**\n       * If the app launch was triggered by an app link,\n       * it will give the link url, otherwise it will give `null`\n       *\n       * See https://reactnative.dev/docs/linking#getinitialurl\n       */\n    }, {\n      key: \"getInitialURL\",\n      value: function getInitialURL() {\n        return _Platform.default.OS === 'android' ? (0, _nullthrows.default)(_NativeIntentAndroid.default).getInitialURL() : (0, _nullthrows.default)(_NativeLinkingManager.default).getInitialURL();\n      }\n\n      /*\n       * Launch an Android intent with extras (optional)\n       *\n       * @platform android\n       *\n       * See https://reactnative.dev/docs/linking#sendintent\n       */\n    }, {\n      key: \"sendIntent\",\n      value: function sendIntent(action, extras) {\n        if (_Platform.default.OS === 'android') {\n          return (0, _nullthrows.default)(_NativeIntentAndroid.default).sendIntent(action, extras);\n        } else {\n          return new Promise(function (resolve, reject) {\n            return reject(new Error('Unsupported'));\n          });\n        }\n      }\n    }, {\n      key: \"_validateURL\",\n      value: function _validateURL(url) {\n        (0, _invariant.default)(typeof url === 'string', 'Invalid URL: should be a string. Was: ' + url);\n        (0, _invariant.default)(url, 'Invalid URL: cannot be empty');\n      }\n    }]);\n  }(_NativeEventEmitter2.default);\n  module.exports = new Linking();\n});","lineCount":135,"map":[[8,2,13,0],[8,6,13,0,"_NativeEventEmitter2"],[8,26,13,0],[8,29,13,0,"_interopRequireDefault"],[8,51,13,0],[8,52,13,0,"_$$_REQUIRE"],[8,63,13,0],[8,64,13,0,"_dependencyMap"],[8,78,13,0],[9,2,14,0],[9,6,14,0,"_Platform"],[9,15,14,0],[9,18,14,0,"_interopRequireDefault"],[9,40,14,0],[9,41,14,0,"_$$_REQUIRE"],[9,52,14,0],[9,53,14,0,"_dependencyMap"],[9,67,14,0],[10,2,15,0],[10,6,15,0,"_NativeIntentAndroid"],[10,26,15,0],[10,29,15,0,"_interopRequireDefault"],[10,51,15,0],[10,52,15,0,"_$$_REQUIRE"],[10,63,15,0],[10,64,15,0,"_dependencyMap"],[10,78,15,0],[11,2,16,0],[11,6,16,0,"_NativeLinkingManager"],[11,27,16,0],[11,30,16,0,"_interopRequireDefault"],[11,52,16,0],[11,53,16,0,"_$$_REQUIRE"],[11,64,16,0],[11,65,16,0,"_dependencyMap"],[11,79,16,0],[12,2,17,0],[12,6,17,0,"_invariant"],[12,16,17,0],[12,19,17,0,"_interopRequireDefault"],[12,41,17,0],[12,42,17,0,"_$$_REQUIRE"],[12,53,17,0],[12,54,17,0,"_dependencyMap"],[12,68,17,0],[13,2,18,0],[13,6,18,0,"_nullthrows"],[13,17,18,0],[13,20,18,0,"_interopRequireDefault"],[13,42,18,0],[13,43,18,0,"_$$_REQUIRE"],[13,54,18,0],[13,55,18,0,"_dependencyMap"],[13,69,18,0],[14,2,18,36],[14,11,18,36,"_callSuper"],[14,22,18,36,"t"],[14,23,18,36],[14,25,18,36,"o"],[14,26,18,36],[14,28,18,36,"e"],[14,29,18,36],[14,40,18,36,"o"],[14,41,18,36],[14,48,18,36,"_getPrototypeOf2"],[14,64,18,36],[14,65,18,36,"default"],[14,72,18,36],[14,74,18,36,"o"],[14,75,18,36],[14,82,18,36,"_possibleConstructorReturn2"],[14,109,18,36],[14,110,18,36,"default"],[14,117,18,36],[14,119,18,36,"t"],[14,120,18,36],[14,122,18,36,"_isNativeReflectConstruct"],[14,147,18,36],[14,152,18,36,"Reflect"],[14,159,18,36],[14,160,18,36,"construct"],[14,169,18,36],[14,170,18,36,"o"],[14,171,18,36],[14,173,18,36,"e"],[14,174,18,36],[14,186,18,36,"_getPrototypeOf2"],[14,202,18,36],[14,203,18,36,"default"],[14,210,18,36],[14,212,18,36,"t"],[14,213,18,36],[14,215,18,36,"constructor"],[14,226,18,36],[14,230,18,36,"o"],[14,231,18,36],[14,232,18,36,"apply"],[14,237,18,36],[14,238,18,36,"t"],[14,239,18,36],[14,241,18,36,"e"],[14,242,18,36],[15,2,18,36],[15,11,18,36,"_isNativeReflectConstruct"],[15,37,18,36],[15,51,18,36,"t"],[15,52,18,36],[15,56,18,36,"Boolean"],[15,63,18,36],[15,64,18,36,"prototype"],[15,73,18,36],[15,74,18,36,"valueOf"],[15,81,18,36],[15,82,18,36,"call"],[15,86,18,36],[15,87,18,36,"Reflect"],[15,94,18,36],[15,95,18,36,"construct"],[15,104,18,36],[15,105,18,36,"Boolean"],[15,112,18,36],[15,145,18,36,"t"],[15,146,18,36],[15,159,18,36,"_isNativeReflectConstruct"],[15,184,18,36],[15,196,18,36,"_isNativeReflectConstruct"],[15,222,18,36],[15,235,18,36,"t"],[15,236,18,36],[15,246,1,0],[16,0,2,0],[17,0,3,0],[18,0,4,0],[19,0,5,0],[20,0,6,0],[21,0,7,0],[22,0,8,0],[23,0,9,0],[24,2,24,0],[25,0,25,0],[26,0,26,0],[27,0,27,0],[28,0,28,0],[29,0,29,0],[30,2,24,0],[30,6,30,6,"Linking"],[30,13,30,13],[30,39,30,13,"_NativeEventEmitter"],[30,58,30,13],[31,4,31,2],[31,13,31,2,"Linking"],[31,21,31,2],[31,23,31,16],[32,6,31,16],[32,10,31,16,"_classCallCheck2"],[32,26,31,16],[32,27,31,16,"default"],[32,34,31,16],[32,42,31,16,"Linking"],[32,49,31,16],[33,6,31,16],[33,13,31,16,"_callSuper"],[33,23,31,16],[33,30,31,16,"Linking"],[33,37,31,16],[33,40,32,10,"Platform"],[33,57,32,18],[33,58,32,19,"OS"],[33,60,32,21],[33,65,32,26],[33,70,32,31],[33,73,32,34],[33,77,32,34,"nullthrows"],[33,96,32,44],[33,98,32,45,"NativeLinkingManager"],[33,127,32,65],[33,128,32,66],[33,131,32,69,"undefined"],[33,140,32,78],[34,4,33,2],[36,4,35,2],[37,0,36,0],[38,0,37,0],[39,0,38,0],[40,0,39,0],[41,0,40,0],[42,4,35,2],[42,8,35,2,"_inherits2"],[42,18,35,2],[42,19,35,2,"default"],[42,26,35,2],[42,28,35,2,"Linking"],[42,35,35,2],[42,37,35,2,"_NativeEventEmitter"],[42,56,35,2],[43,4,35,2],[43,15,35,2,"_createClass2"],[43,28,35,2],[43,29,35,2,"default"],[43,36,35,2],[43,38,35,2,"Linking"],[43,45,35,2],[44,6,35,2,"key"],[44,9,35,2],[45,6,35,2,"value"],[45,11,35,2],[45,13,41,2],[45,22,41,2,"addEventListener"],[45,38,41,18,"addEventListener"],[45,39,42,4,"eventType"],[45,48,42,16],[45,50,43,4,"listener"],[45,58,43,68],[45,60,44,4,"context"],[45,67,44,23],[45,69,45,23],[46,8,46,4],[46,15,46,11],[46,19,46,15],[46,20,46,16,"addListener"],[46,31,46,27],[46,32,46,28,"eventType"],[46,41,46,37],[46,43,46,39,"listener"],[46,51,46,47],[46,52,46,48],[47,6,47,2],[49,6,49,2],[50,0,50,0],[51,0,51,0],[52,0,52,0],[53,0,53,0],[54,4,49,2],[55,6,49,2,"key"],[55,9,49,2],[56,6,49,2,"value"],[56,11,49,2],[56,13,54,2],[56,22,54,2,"openURL"],[56,29,54,9,"openURL"],[56,30,54,10,"url"],[56,33,54,21],[56,35,54,38],[57,8,55,4],[57,12,55,8],[57,13,55,9,"_validateURL"],[57,25,55,21],[57,26,55,22,"url"],[57,29,55,25],[57,30,55,26],[58,8,56,4],[58,12,56,8,"Platform"],[58,29,56,16],[58,30,56,17,"OS"],[58,32,56,19],[58,37,56,24],[58,46,56,33],[58,48,56,35],[59,10,57,6],[59,17,57,13],[59,21,57,13,"nullthrows"],[59,40,57,23],[59,42,57,24,"NativeIntentAndroid"],[59,70,57,43],[59,71,57,44],[59,72,57,45,"openURL"],[59,79,57,52],[59,80,57,53,"url"],[59,83,57,56],[59,84,57,57],[60,8,58,4],[60,9,58,5],[60,15,58,11],[61,10,59,6],[61,17,59,13],[61,21,59,13,"nullthrows"],[61,40,59,23],[61,42,59,24,"NativeLinkingManager"],[61,71,59,44],[61,72,59,45],[61,73,59,46,"openURL"],[61,80,59,53],[61,81,59,54,"url"],[61,84,59,57],[61,85,59,58],[62,8,60,4],[63,6,61,2],[65,6,63,2],[66,0,64,0],[67,0,65,0],[68,0,66,0],[69,0,67,0],[70,4,63,2],[71,6,63,2,"key"],[71,9,63,2],[72,6,63,2,"value"],[72,11,63,2],[72,13,68,2],[72,22,68,2,"canOpenURL"],[72,32,68,12,"canOpenURL"],[72,33,68,13,"url"],[72,36,68,24],[72,38,68,44],[73,8,69,4],[73,12,69,8],[73,13,69,9,"_validateURL"],[73,25,69,21],[73,26,69,22,"url"],[73,29,69,25],[73,30,69,26],[74,8,70,4],[74,12,70,8,"Platform"],[74,29,70,16],[74,30,70,17,"OS"],[74,32,70,19],[74,37,70,24],[74,46,70,33],[74,48,70,35],[75,10,71,6],[75,17,71,13],[75,21,71,13,"nullthrows"],[75,40,71,23],[75,42,71,24,"NativeIntentAndroid"],[75,70,71,43],[75,71,71,44],[75,72,71,45,"canOpenURL"],[75,82,71,55],[75,83,71,56,"url"],[75,86,71,59],[75,87,71,60],[76,8,72,4],[76,9,72,5],[76,15,72,11],[77,10,73,6],[77,17,73,13],[77,21,73,13,"nullthrows"],[77,40,73,23],[77,42,73,24,"NativeLinkingManager"],[77,71,73,44],[77,72,73,45],[77,73,73,46,"canOpenURL"],[77,83,73,56],[77,84,73,57,"url"],[77,87,73,60],[77,88,73,61],[78,8,74,4],[79,6,75,2],[81,6,77,2],[82,0,78,0],[83,0,79,0],[84,0,80,0],[85,0,81,0],[86,4,77,2],[87,6,77,2,"key"],[87,9,77,2],[88,6,77,2,"value"],[88,11,77,2],[88,13,82,2],[88,22,82,2,"openSettings"],[88,34,82,14,"openSettings"],[88,35,82,14],[88,37,82,32],[89,8,83,4],[89,12,83,8,"Platform"],[89,29,83,16],[89,30,83,17,"OS"],[89,32,83,19],[89,37,83,24],[89,46,83,33],[89,48,83,35],[90,10,84,6],[90,17,84,13],[90,21,84,13,"nullthrows"],[90,40,84,23],[90,42,84,24,"NativeIntentAndroid"],[90,70,84,43],[90,71,84,44],[90,72,84,45,"openSettings"],[90,84,84,57],[90,85,84,58],[90,86,84,59],[91,8,85,4],[91,9,85,5],[91,15,85,11],[92,10,86,6],[92,17,86,13],[92,21,86,13,"nullthrows"],[92,40,86,23],[92,42,86,24,"NativeLinkingManager"],[92,71,86,44],[92,72,86,45],[92,73,86,46,"openSettings"],[92,85,86,58],[92,86,86,59],[92,87,86,60],[93,8,87,4],[94,6,88,2],[96,6,90,2],[97,0,91,0],[98,0,92,0],[99,0,93,0],[100,0,94,0],[101,0,95,0],[102,4,90,2],[103,6,90,2,"key"],[103,9,90,2],[104,6,90,2,"value"],[104,11,90,2],[104,13,96,2],[104,22,96,2,"getInitialURL"],[104,35,96,15,"getInitialURL"],[104,36,96,15],[104,38,96,36],[105,8,97,4],[105,15,97,11,"Platform"],[105,32,97,19],[105,33,97,20,"OS"],[105,35,97,22],[105,40,97,27],[105,49,97,36],[105,52,98,8],[105,56,98,8,"nullthrows"],[105,75,98,18],[105,77,98,19,"NativeIntentAndroid"],[105,105,98,38],[105,106,98,39],[105,107,98,40,"getInitialURL"],[105,120,98,53],[105,121,98,54],[105,122,98,55],[105,125,99,8],[105,129,99,8,"nullthrows"],[105,148,99,18],[105,150,99,19,"NativeLinkingManager"],[105,179,99,39],[105,180,99,40],[105,181,99,41,"getInitialURL"],[105,194,99,54],[105,195,99,55],[105,196,99,56],[106,6,100,2],[108,6,102,2],[109,0,103,0],[110,0,104,0],[111,0,105,0],[112,0,106,0],[113,0,107,0],[114,0,108,0],[115,4,102,2],[116,6,102,2,"key"],[116,9,102,2],[117,6,102,2,"value"],[117,11,102,2],[117,13,109,2],[117,22,109,2,"sendIntent"],[117,32,109,12,"sendIntent"],[117,33,110,4,"action"],[117,39,110,18],[117,41,111,4,"extras"],[117,47,115,6],[117,49,116,19],[118,8,117,4],[118,12,117,8,"Platform"],[118,29,117,16],[118,30,117,17,"OS"],[118,32,117,19],[118,37,117,24],[118,46,117,33],[118,48,117,35],[119,10,118,6],[119,17,118,13],[119,21,118,13,"nullthrows"],[119,40,118,23],[119,42,118,24,"NativeIntentAndroid"],[119,70,118,43],[119,71,118,44],[119,72,118,45,"sendIntent"],[119,82,118,55],[119,83,118,56,"action"],[119,89,118,62],[119,91,118,64,"extras"],[119,97,118,70],[119,98,118,71],[120,8,119,4],[120,9,119,5],[120,15,119,11],[121,10,120,6],[121,17,120,13],[121,21,120,17,"Promise"],[121,28,120,24],[121,29,120,25],[121,39,120,26,"resolve"],[121,46,120,33],[121,48,120,35,"reject"],[121,54,120,41],[122,12,120,41],[122,19,120,46,"reject"],[122,25,120,52],[122,26,120,53],[122,30,120,57,"Error"],[122,35,120,62],[122,36,120,63],[122,49,120,76],[122,50,120,77],[122,51,120,78],[123,10,120,78],[123,12,120,79],[124,8,121,4],[125,6,122,2],[126,4,122,3],[127,6,122,3,"key"],[127,9,122,3],[128,6,122,3,"value"],[128,11,122,3],[128,13,124,2],[128,22,124,2,"_validateURL"],[128,34,124,14,"_validateURL"],[128,35,124,15,"url"],[128,38,124,26],[128,40,124,34],[129,8,125,4],[129,12,125,4,"invariant"],[129,30,125,13],[129,32,126,6],[129,39,126,13,"url"],[129,42,126,16],[129,47,126,21],[129,55,126,29],[129,57,127,6],[129,97,127,46],[129,100,127,49,"url"],[129,103,128,4],[129,104,128,5],[130,8,129,4],[130,12,129,4,"invariant"],[130,30,129,13],[130,32,129,14,"url"],[130,35,129,17],[130,37,129,19],[130,67,129,49],[130,68,129,50],[131,6,130,2],[132,4,130,3],[133,2,130,3],[133,4,30,22,"NativeEventEmitter"],[133,32,30,40],[134,2,133,0,"module"],[134,8,133,6],[134,9,133,7,"exports"],[134,16,133,14],[134,19,133,18],[134,23,133,22,"Linking"],[134,30,133,29],[134,31,133,30],[134,32,133,41],[135,0,133,42],[135,3]],"functionMap":{"names":["<global>","Linking","constructor","addEventListener","openURL","canOpenURL","openSettings","getInitialURL","sendIntent","Promise$argument_0","_validateURL"],"mappings":"AAA;AC6B;ECC;GDE;EEQ;GFM;EGO;GHO;EIO;GJO;EKO;GLM;EMQ;GNI;EOS;yBCW,qDD;GPE;ESE;GTM;CDC"}},"type":"js/module"}]}