{"dependencies":[],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * @format\n   * \n   */\n\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = queueMicrotask;\n  var resolvedPromise;\n\n  /**\n   * Polyfill for the microtask queueing API defined by WHATWG HTML spec.\n   * https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#dom-queuemicrotask\n   *\n   * The method must queue a microtask to invoke @param {function} callback, and\n   * if the callback throws an exception, report the exception.\n   */\n  function queueMicrotask(callback) {\n    if (arguments.length < 1) {\n      throw new TypeError('queueMicrotask must be called with at least one argument (a function to call)');\n    }\n    if (typeof callback !== 'function') {\n      throw new TypeError('The argument to queueMicrotask must be a function.');\n    }\n\n    // Try to reuse a lazily allocated resolved promise from closure.\n    (resolvedPromise || (resolvedPromise = Promise.resolve())).then(callback).catch(function (error) {\n      return (\n        // Report the exception until the next tick.\n        setTimeout(function () {\n          throw error;\n        }, 0)\n      );\n    });\n  }\n});","lineCount":45,"map":[[2,2,1,0],[3,0,2,0],[4,0,3,0],[5,0,4,0],[6,0,5,0],[7,0,6,0],[8,0,7,0],[9,0,8,0],[10,0,9,0],[12,2,11,0],[12,14,11,12],[14,2,11,13,"Object"],[14,8,11,13],[14,9,11,13,"defineProperty"],[14,23,11,13],[14,24,11,13,"exports"],[14,31,11,13],[15,4,11,13,"value"],[15,9,11,13],[16,2,11,13],[17,2,11,13,"exports"],[17,9,11,13],[17,10,11,13,"default"],[17,17,11,13],[17,20,11,13,"queueMicrotask"],[17,34,11,13],[18,2,13,0],[18,6,13,4,"resolvedPromise"],[18,21,13,19],[20,2,15,0],[21,0,16,0],[22,0,17,0],[23,0,18,0],[24,0,19,0],[25,0,20,0],[26,0,21,0],[27,2,22,15],[27,11,22,24,"queueMicrotask"],[27,25,22,38,"queueMicrotask"],[27,26,22,39,"callback"],[27,34,22,57],[27,36,22,59],[28,4,23,2],[28,8,23,6,"arguments"],[28,17,23,15],[28,18,23,16,"length"],[28,24,23,22],[28,27,23,25],[28,28,23,26],[28,30,23,28],[29,6,24,4],[29,12,24,10],[29,16,24,14,"TypeError"],[29,25,24,23],[29,26,25,6],[29,105,26,4],[29,106,26,5],[30,4,27,2],[31,4,28,2],[31,8,28,6],[31,15,28,13,"callback"],[31,23,28,21],[31,28,28,26],[31,38,28,36],[31,40,28,38],[32,6,29,4],[32,12,29,10],[32,16,29,14,"TypeError"],[32,25,29,23],[32,26,29,24],[32,78,29,76],[32,79,29,77],[33,4,30,2],[35,4,32,2],[36,4,33,2],[36,5,33,3,"resolvedPromise"],[36,20,33,18],[36,25,33,23,"resolvedPromise"],[36,40,33,38],[36,43,33,41,"Promise"],[36,50,33,48],[36,51,33,49,"resolve"],[36,58,33,56],[36,59,33,57],[36,60,33,58],[36,61,33,59],[36,63,34,5,"then"],[36,67,34,9],[36,68,34,10,"callback"],[36,76,34,18],[36,77,34,19],[36,78,35,5,"catch"],[36,83,35,10],[36,84,35,11],[36,94,35,11,"error"],[36,99,35,16],[37,6,35,16],[38,8,36,6],[39,8,37,6,"setTimeout"],[39,18,37,16],[39,19,37,17],[39,31,37,23],[40,10,38,8],[40,16,38,14,"error"],[40,21,38,19],[41,8,39,6],[41,9,39,7],[41,11,39,9],[41,12,39,10],[42,6,39,11],[43,4,39,11],[43,5,40,4],[43,6,40,5],[44,2,41,0],[45,0,41,1],[45,3]],"functionMap":{"names":["<global>","queueMicrotask","then._catch$argument_0","setTimeout$argument_0"],"mappings":"AAA;eCqB;WCa;iBCE;ODE,ID;CDE"}},"type":"js/module"}]}