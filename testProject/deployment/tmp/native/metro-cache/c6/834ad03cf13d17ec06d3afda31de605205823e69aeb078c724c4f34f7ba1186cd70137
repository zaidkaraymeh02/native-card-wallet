{"dependencies":[{"name":"./defineLazyObjectProperty","data":{"asyncType":null,"locs":[{"start":{"line":13,"column":33,"index":270},"end":{"line":13,"column":70,"index":307}}],"key":"si3wLA5qWctDtfrWoi9ZntyXGBU="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * \n   * @format\n   */\n\n  'use strict';\n\n  /**\n   * Sets an object's property. If a property with the same name exists, this will\n   * replace it but maintain its descriptor configuration. The property will be\n   * replaced with a lazy getter.\n   *\n   * In DEV mode the original property value will be preserved as `original[PropertyName]`\n   * so that, if necessary, it can be restored. For example, if you want to route\n   * network requests through DevTools (to trace them):\n   *\n   *   global.XMLHttpRequest = global.originalXMLHttpRequest;\n   *\n   * @see https://github.com/facebook/react-native/issues/934\n   */\n  function polyfillObjectProperty(object, name, getValue) {\n    var descriptor = Object.getOwnPropertyDescriptor(object, name);\n    if (__DEV__ && descriptor) {\n      var backupName = `original${name[0].toUpperCase()}${name.slice(1)}`;\n      Object.defineProperty(object, backupName, descriptor);\n    }\n    var _ref = descriptor || {},\n      enumerable = _ref.enumerable,\n      writable = _ref.writable,\n      _ref$configurable = _ref.configurable,\n      configurable = _ref$configurable === void 0 ? false : _ref$configurable;\n    if (descriptor && !configurable) {\n      console.error('Failed to set polyfill. ' + name + ' is not configurable.');\n      return;\n    }\n    _$$_REQUIRE(_dependencyMap[0], \"./defineLazyObjectProperty\")(object, name, {\n      get: getValue,\n      enumerable: enumerable !== false,\n      writable: writable !== false\n    });\n  }\n  function polyfillGlobal(name, getValue) {\n    polyfillObjectProperty(global, name, getValue);\n  }\n  module.exports = {\n    polyfillObjectProperty: polyfillObjectProperty,\n    polyfillGlobal: polyfillGlobal\n  };\n});","lineCount":55,"map":[[2,2,1,0],[3,0,2,0],[4,0,3,0],[5,0,4,0],[6,0,5,0],[7,0,6,0],[8,0,7,0],[9,0,8,0],[10,0,9,0],[12,2,11,0],[12,14,11,12],[14,2,15,0],[15,0,16,0],[16,0,17,0],[17,0,18,0],[18,0,19,0],[19,0,20,0],[20,0,21,0],[21,0,22,0],[22,0,23,0],[23,0,24,0],[24,0,25,0],[25,0,26,0],[26,0,27,0],[27,2,28,0],[27,11,28,9,"polyfillObjectProperty"],[27,33,28,31,"polyfillObjectProperty"],[27,34,29,2,"object"],[27,40,29,15],[27,42,30,2,"name"],[27,46,30,14],[27,48,31,2,"getValue"],[27,56,31,19],[27,58,32,8],[28,4,33,2],[28,8,33,8,"descriptor"],[28,18,33,18],[28,21,33,21,"Object"],[28,27,33,27],[28,28,33,28,"getOwnPropertyDescriptor"],[28,52,33,52],[28,53,33,65,"object"],[28,59,33,71],[28,61,33,73,"name"],[28,65,33,77],[28,66,33,78],[29,4,34,2],[29,8,34,6,"__DEV__"],[29,15,34,13],[29,19,34,17,"descriptor"],[29,29,34,27],[29,31,34,29],[30,6,35,4],[30,10,35,10,"backupName"],[30,20,35,20],[30,23,35,23],[30,34,35,34,"name"],[30,38,35,38],[30,39,35,39],[30,40,35,40],[30,41,35,41],[30,42,35,42,"toUpperCase"],[30,53,35,53],[30,54,35,54],[30,55,35,55],[30,58,35,58,"name"],[30,62,35,62],[30,63,35,63,"slice"],[30,68,35,68],[30,69,35,69],[30,70,35,70],[30,71,35,71],[30,73,35,73],[31,6,36,4,"Object"],[31,12,36,10],[31,13,36,11,"defineProperty"],[31,27,36,25],[31,28,36,26,"object"],[31,34,36,32],[31,36,36,34,"backupName"],[31,46,36,44],[31,48,36,46,"descriptor"],[31,58,36,56],[31,59,36,57],[32,4,37,2],[33,4,39,2],[33,8,39,2,"_ref"],[33,12,39,2],[33,15,39,55,"descriptor"],[33,25,39,65],[33,29,39,69],[33,30,39,70],[33,31,39,71],[34,6,39,9,"enumerable"],[34,16,39,19],[34,19,39,19,"_ref"],[34,23,39,19],[34,24,39,9,"enumerable"],[34,34,39,19],[35,6,39,21,"writable"],[35,14,39,29],[35,17,39,29,"_ref"],[35,21,39,29],[35,22,39,21,"writable"],[35,30,39,29],[36,6,39,29,"_ref$configurable"],[36,23,39,29],[36,26,39,29,"_ref"],[36,30,39,29],[36,31,39,31,"configurable"],[36,43,39,43],[37,6,39,31,"configurable"],[37,18,39,43],[37,21,39,43,"_ref$configurable"],[37,38,39,43],[37,52,39,46],[37,57,39,51],[37,60,39,51,"_ref$configurable"],[37,77,39,51],[38,4,40,2],[38,8,40,6,"descriptor"],[38,18,40,16],[38,22,40,20],[38,23,40,21,"configurable"],[38,35,40,33],[38,37,40,35],[39,6,41,4,"console"],[39,13,41,11],[39,14,41,12,"error"],[39,19,41,17],[39,20,41,18],[39,46,41,44],[39,49,41,47,"name"],[39,53,41,51],[39,56,41,54],[39,79,41,77],[39,80,41,78],[40,6,42,4],[41,4,43,2],[42,4,45,2,"_$$_REQUIRE"],[42,15,45,2],[42,16,45,2,"_dependencyMap"],[42,30,45,2],[42,65,45,27,"object"],[42,71,45,33],[42,73,45,35,"name"],[42,77,45,39],[42,79,45,41],[43,6,46,4,"get"],[43,9,46,7],[43,11,46,9,"getValue"],[43,19,46,17],[44,6,47,4,"enumerable"],[44,16,47,14],[44,18,47,16,"enumerable"],[44,28,47,26],[44,33,47,31],[44,38,47,36],[45,6,48,4,"writable"],[45,14,48,12],[45,16,48,14,"writable"],[45,24,48,22],[45,29,48,27],[46,4,49,2],[46,5,49,3],[46,6,49,4],[47,2,50,0],[48,2,52,0],[48,11,52,9,"polyfillGlobal"],[48,25,52,23,"polyfillGlobal"],[48,26,52,27,"name"],[48,30,52,39],[48,32,52,41,"getValue"],[48,40,52,58],[48,42,52,66],[49,4,53,2,"polyfillObjectProperty"],[49,26,53,24],[49,27,53,25,"global"],[49,33,53,31],[49,35,53,33,"name"],[49,39,53,37],[49,41,53,39,"getValue"],[49,49,53,47],[49,50,53,48],[50,2,54,0],[51,2,56,0,"module"],[51,8,56,6],[51,9,56,7,"exports"],[51,16,56,14],[51,19,56,17],[52,4,56,18,"polyfillObjectProperty"],[52,26,56,40],[52,28,56,18,"polyfillObjectProperty"],[52,50,56,40],[53,4,56,42,"polyfillGlobal"],[53,18,56,56],[53,20,56,42,"polyfillGlobal"],[54,2,56,56],[54,3,56,57],[55,0,56,58],[55,3]],"functionMap":{"names":["<global>","polyfillObjectProperty","polyfillGlobal"],"mappings":"AAA;AC2B;CDsB;AEE;CFE"}},"type":"js/module"}]}