{"dependencies":[{"name":"react","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":31,"index":31}}],"key":"a4EMkKqamYWCMMPV7UeQlqGQ+ks="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.ScheduleUpdateContext = void 0;\n  exports.default = useScheduleUpdate;\n  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0], \"react\"));\n  function _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\n  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\n  var MISSING_CONTEXT_ERROR = \"Couldn't find a schedule context.\";\n  var ScheduleUpdateContext = exports.ScheduleUpdateContext = React.createContext({\n    scheduleUpdate: function scheduleUpdate() {\n      throw new Error(MISSING_CONTEXT_ERROR);\n    },\n    flushUpdates: function flushUpdates() {\n      throw new Error(MISSING_CONTEXT_ERROR);\n    }\n  });\n\n  /**\n   * When screen config changes, we want to update the navigator in the same update phase.\n   * However, navigation state is in the root component and React won't let us update it from a child.\n   * This is a workaround for that, the scheduled update is stored in the ref without actually calling setState.\n   * It lets all subsequent updates access the latest state so it stays correct.\n   * Then we call setState during after the component updates.\n   */\n  function useScheduleUpdate(callback) {\n    var _React$useContext = React.useContext(ScheduleUpdateContext),\n      scheduleUpdate = _React$useContext.scheduleUpdate,\n      flushUpdates = _React$useContext.flushUpdates;\n    scheduleUpdate(callback);\n    React.useEffect(flushUpdates);\n  }\n});","lineCount":34,"map":[[7,2,1,0],[7,6,1,0,"React"],[7,11,1,0],[7,14,1,0,"_interopRequireWildcard"],[7,37,1,0],[7,38,1,0,"_$$_REQUIRE"],[7,49,1,0],[7,50,1,0,"_dependencyMap"],[7,64,1,0],[8,2,1,31],[8,11,1,31,"_getRequireWildcardCache"],[8,36,1,31,"e"],[8,37,1,31],[8,66,1,31,"WeakMap"],[8,73,1,31],[8,92,1,31,"r"],[8,93,1,31],[8,100,1,31,"WeakMap"],[8,107,1,31],[8,111,1,31,"t"],[8,112,1,31],[8,119,1,31,"WeakMap"],[8,126,1,31],[8,138,1,31,"_getRequireWildcardCache"],[8,162,1,31],[8,174,1,31,"_getRequireWildcardCache"],[8,199,1,31,"e"],[8,200,1,31],[8,211,1,31,"e"],[8,212,1,31],[8,215,1,31,"t"],[8,216,1,31],[8,219,1,31,"r"],[8,220,1,31],[8,225,1,31,"e"],[8,226,1,31],[9,2,1,31],[9,11,1,31,"_interopRequireWildcard"],[9,35,1,31,"e"],[9,36,1,31],[9,38,1,31,"r"],[9,39,1,31],[9,48,1,31,"r"],[9,49,1,31],[9,53,1,31,"e"],[9,54,1,31],[9,58,1,31,"e"],[9,59,1,31],[9,60,1,31,"__esModule"],[9,70,1,31],[9,79,1,31,"e"],[9,80,1,31],[9,95,1,31,"e"],[9,96,1,31],[9,119,1,31,"e"],[9,120,1,31],[9,145,1,31,"e"],[9,146,1,31],[9,157,1,31,"default"],[9,164,1,31],[9,166,1,31,"e"],[9,167,1,31],[9,175,1,31,"t"],[9,176,1,31],[9,179,1,31,"_getRequireWildcardCache"],[9,203,1,31],[9,204,1,31,"r"],[9,205,1,31],[9,212,1,31,"t"],[9,213,1,31],[9,217,1,31,"t"],[9,218,1,31],[9,219,1,31,"has"],[9,222,1,31],[9,223,1,31,"e"],[9,224,1,31],[9,234,1,31,"t"],[9,235,1,31],[9,236,1,31,"get"],[9,239,1,31],[9,240,1,31,"e"],[9,241,1,31],[9,248,1,31,"n"],[9,249,1,31],[9,254,1,31,"__proto__"],[9,263,1,31],[9,273,1,31,"a"],[9,274,1,31],[9,277,1,31,"Object"],[9,283,1,31],[9,284,1,31,"defineProperty"],[9,298,1,31],[9,302,1,31,"Object"],[9,308,1,31],[9,309,1,31,"getOwnPropertyDescriptor"],[9,333,1,31],[9,344,1,31,"u"],[9,345,1,31],[9,349,1,31,"e"],[9,350,1,31],[9,370,1,31,"u"],[9,371,1,31],[9,378,1,31,"hasOwnProperty"],[9,392,1,31],[9,393,1,31,"call"],[9,397,1,31],[9,398,1,31,"e"],[9,399,1,31],[9,401,1,31,"u"],[9,402,1,31],[9,411,1,31,"i"],[9,412,1,31],[9,415,1,31,"a"],[9,416,1,31],[9,419,1,31,"Object"],[9,425,1,31],[9,426,1,31,"getOwnPropertyDescriptor"],[9,450,1,31],[9,451,1,31,"e"],[9,452,1,31],[9,454,1,31,"u"],[9,455,1,31],[9,465,1,31,"i"],[9,466,1,31],[9,471,1,31,"i"],[9,472,1,31],[9,473,1,31,"get"],[9,476,1,31],[9,480,1,31,"i"],[9,481,1,31],[9,482,1,31,"set"],[9,485,1,31],[9,489,1,31,"Object"],[9,495,1,31],[9,496,1,31,"defineProperty"],[9,510,1,31],[9,511,1,31,"n"],[9,512,1,31],[9,514,1,31,"u"],[9,515,1,31],[9,517,1,31,"i"],[9,518,1,31],[9,522,1,31,"n"],[9,523,1,31],[9,524,1,31,"u"],[9,525,1,31],[9,529,1,31,"e"],[9,530,1,31],[9,531,1,31,"u"],[9,532,1,31],[9,544,1,31,"n"],[9,545,1,31],[9,546,1,31,"default"],[9,553,1,31],[9,556,1,31,"e"],[9,557,1,31],[9,559,1,31,"t"],[9,560,1,31],[9,564,1,31,"t"],[9,565,1,31],[9,566,1,31,"set"],[9,569,1,31],[9,570,1,31,"e"],[9,571,1,31],[9,573,1,31,"n"],[9,574,1,31],[9,577,1,31,"n"],[9,578,1,31],[10,2,3,0],[10,6,3,6,"MISSING_CONTEXT_ERROR"],[10,27,3,27],[10,30,3,30],[10,65,3,65],[11,2,5,7],[11,6,5,13,"ScheduleUpdateContext"],[11,27,5,34],[11,30,5,34,"exports"],[11,37,5,34],[11,38,5,34,"ScheduleUpdateContext"],[11,59,5,34],[11,62,5,37,"React"],[11,67,5,42],[11,68,5,43,"createContext"],[11,81,5,56],[11,82,8,3],[12,4,9,2,"scheduleUpdate"],[12,18,9,16],[12,29,9,2,"scheduleUpdate"],[12,43,9,16,"scheduleUpdate"],[12,44,9,16],[12,46,9,19],[13,6,10,4],[13,12,10,10],[13,16,10,14,"Error"],[13,21,10,19],[13,22,10,20,"MISSING_CONTEXT_ERROR"],[13,43,10,41],[13,44,10,42],[14,4,11,2],[14,5,11,3],[15,4,12,2,"flushUpdates"],[15,16,12,14],[15,27,12,2,"flushUpdates"],[15,39,12,14,"flushUpdates"],[15,40,12,14],[15,42,12,17],[16,6,13,4],[16,12,13,10],[16,16,13,14,"Error"],[16,21,13,19],[16,22,13,20,"MISSING_CONTEXT_ERROR"],[16,43,13,41],[16,44,13,42],[17,4,14,2],[18,2,15,0],[18,3,15,1],[18,4,15,2],[20,2,17,0],[21,0,18,0],[22,0,19,0],[23,0,20,0],[24,0,21,0],[25,0,22,0],[26,0,23,0],[27,2,24,15],[27,11,24,24,"useScheduleUpdate"],[27,28,24,41,"useScheduleUpdate"],[27,29,24,42,"callback"],[27,37,24,62],[27,39,24,64],[28,4,25,2],[28,8,25,2,"_React$useContext"],[28,25,25,2],[28,28,25,43,"React"],[28,33,25,48],[28,34,25,49,"useContext"],[28,44,25,59],[28,45,26,4,"ScheduleUpdateContext"],[28,66,27,2],[28,67,27,3],[29,6,25,10,"scheduleUpdate"],[29,20,25,24],[29,23,25,24,"_React$useContext"],[29,40,25,24],[29,41,25,10,"scheduleUpdate"],[29,55,25,24],[30,6,25,26,"flushUpdates"],[30,18,25,38],[30,21,25,38,"_React$useContext"],[30,38,25,38],[30,39,25,26,"flushUpdates"],[30,51,25,38],[31,4,29,2,"scheduleUpdate"],[31,18,29,16],[31,19,29,17,"callback"],[31,27,29,25],[31,28,29,26],[32,4,31,2,"React"],[32,9,31,7],[32,10,31,8,"useEffect"],[32,19,31,17],[32,20,31,18,"flushUpdates"],[32,32,31,30],[32,33,31,31],[33,2,32,0],[34,0,32,1],[34,3]],"functionMap":{"names":["<global>","React.createContext$argument_0.scheduleUpdate","React.createContext$argument_0.flushUpdates","useScheduleUpdate"],"mappings":"AAA;ECQ;GDE;EEC;GFE;eGU;CHQ"}},"type":"js/module"}]}