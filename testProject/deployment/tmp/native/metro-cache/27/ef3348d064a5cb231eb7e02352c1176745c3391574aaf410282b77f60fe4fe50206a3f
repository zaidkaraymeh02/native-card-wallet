{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":33,"column":0,"index":908}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":33,"column":0,"index":908}}],"key":"ohGilxjVqjyE1GooDVDt9OYg9x0="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":33,"column":0,"index":908}}],"key":"V6GYoXnblvuuGHJNMy7MHyaunsU="}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":33,"column":0,"index":908}}],"key":"rcd0dMwf8BS2g+8U1wyhIOxtYEo="}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":33,"column":0,"index":908}}],"key":"4pxOr+e+5cSZAdeEKxSt3F7LoKY="}},{"name":"@babel/runtime/helpers/inherits","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":33,"column":0,"index":908}}],"key":"EDnOjopp9yNVawSzfBRsy2dq5dM="}},{"name":"fbjs/lib/invariant","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":43,"index":43}}],"key":"avnjoAx2FQYjx6eZ7ALk+OuZk68="}},{"name":"./AnimatedNode","data":{"asyncType":null,"locs":[{"start":{"line":3,"column":0,"index":91},"end":{"line":3,"column":42,"index":133}}],"key":"3roa5JYtcfxCkpexJXwVNW3mWv0="}},{"name":"../val","data":{"asyncType":null,"locs":[{"start":{"line":4,"column":0,"index":134},"end":{"line":4,"column":29,"index":163}}],"key":"CDlYAz5y1JiXWGTtKqaFUSMXIf0="}},{"name":"../core/AnimatedBlock","data":{"asyncType":null,"locs":[{"start":{"line":2,"column":0,"index":44},"end":{"line":2,"column":46,"index":90}}],"key":"6gyDiq4QU4flc8Or/XN5uYrwPPw="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.createAnimatedConcat = createAnimatedConcat;\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/getPrototypeOf\"));\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/inherits\"));\n  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"fbjs/lib/invariant\"));\n  var _AnimatedNode2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"./AnimatedNode\"));\n  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }\n  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\n  var AnimatedConcat = /*#__PURE__*/function (_AnimatedNode) {\n    function AnimatedConcat(input) {\n      var _this;\n      (0, _classCallCheck2.default)(this, AnimatedConcat);\n      (0, _invariant.default)(input.every(function (el) {\n        return el instanceof _AnimatedNode2.default || typeof el === 'number' || typeof el === 'string';\n      }), `Reanimated: Animated.concat node arguments should be of type AnimatedNode or String or Number. One or more of them are not of that type. Node: ${input}`);\n      _this = _callSuper(this, AnimatedConcat, [{\n        type: 'concat',\n        input: input\n      }, input]);\n      _this._input = input;\n      return _this;\n    }\n    (0, _inherits2.default)(AnimatedConcat, _AnimatedNode);\n    return (0, _createClass2.default)(AnimatedConcat, [{\n      key: \"__onEvaluate\",\n      value: function __onEvaluate() {\n        return this._input.reduce(function (prev, current) {\n          return prev + (0, _$$_REQUIRE(_dependencyMap[8], \"../val\").val)(current);\n        }, '');\n      }\n    }, {\n      key: \"toString\",\n      value: function toString() {\n        return `AnimatedConcat, id: ${this.__nodeID}`;\n      }\n    }]);\n  }(_AnimatedNode2.default);\n  function createAnimatedConcat() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    return new AnimatedConcat(args.map(_$$_REQUIRE(_dependencyMap[9], \"../core/AnimatedBlock\").adapt));\n  }\n});","lineCount":51,"map":[[12,2,1,0],[12,6,1,0,"_invariant"],[12,16,1,0],[12,19,1,0,"_interopRequireDefault"],[12,41,1,0],[12,42,1,0,"_$$_REQUIRE"],[12,53,1,0],[12,54,1,0,"_dependencyMap"],[12,68,1,0],[13,2,3,0],[13,6,3,0,"_AnimatedNode2"],[13,20,3,0],[13,23,3,0,"_interopRequireDefault"],[13,45,3,0],[13,46,3,0,"_$$_REQUIRE"],[13,57,3,0],[13,58,3,0,"_dependencyMap"],[13,72,3,0],[14,2,3,42],[14,11,3,42,"_callSuper"],[14,22,3,42,"t"],[14,23,3,42],[14,25,3,42,"o"],[14,26,3,42],[14,28,3,42,"e"],[14,29,3,42],[14,40,3,42,"o"],[14,41,3,42],[14,48,3,42,"_getPrototypeOf2"],[14,64,3,42],[14,65,3,42,"default"],[14,72,3,42],[14,74,3,42,"o"],[14,75,3,42],[14,82,3,42,"_possibleConstructorReturn2"],[14,109,3,42],[14,110,3,42,"default"],[14,117,3,42],[14,119,3,42,"t"],[14,120,3,42],[14,122,3,42,"_isNativeReflectConstruct"],[14,147,3,42],[14,152,3,42,"Reflect"],[14,159,3,42],[14,160,3,42,"construct"],[14,169,3,42],[14,170,3,42,"o"],[14,171,3,42],[14,173,3,42,"e"],[14,174,3,42],[14,186,3,42,"_getPrototypeOf2"],[14,202,3,42],[14,203,3,42,"default"],[14,210,3,42],[14,212,3,42,"t"],[14,213,3,42],[14,215,3,42,"constructor"],[14,226,3,42],[14,230,3,42,"o"],[14,231,3,42],[14,232,3,42,"apply"],[14,237,3,42],[14,238,3,42,"t"],[14,239,3,42],[14,241,3,42,"e"],[14,242,3,42],[15,2,3,42],[15,11,3,42,"_isNativeReflectConstruct"],[15,37,3,42],[15,51,3,42,"t"],[15,52,3,42],[15,56,3,42,"Boolean"],[15,63,3,42],[15,64,3,42,"prototype"],[15,73,3,42],[15,74,3,42,"valueOf"],[15,81,3,42],[15,82,3,42,"call"],[15,86,3,42],[15,87,3,42,"Reflect"],[15,94,3,42],[15,95,3,42,"construct"],[15,104,3,42],[15,105,3,42,"Boolean"],[15,112,3,42],[15,145,3,42,"t"],[15,146,3,42],[15,159,3,42,"_isNativeReflectConstruct"],[15,184,3,42],[15,196,3,42,"_isNativeReflectConstruct"],[15,222,3,42],[15,235,3,42,"t"],[15,236,3,42],[16,2,3,42],[16,6,6,6,"AnimatedConcat"],[16,20,6,20],[16,46,6,20,"_AnimatedNode"],[16,59,6,20],[17,4,7,2],[17,13,7,2,"AnimatedConcat"],[17,28,7,14,"input"],[17,33,7,19],[17,35,7,21],[18,6,7,21],[18,10,7,21,"_this"],[18,15,7,21],[19,6,7,21],[19,10,7,21,"_classCallCheck2"],[19,26,7,21],[19,27,7,21,"default"],[19,34,7,21],[19,42,7,21,"AnimatedConcat"],[19,56,7,21],[20,6,8,4],[20,10,8,4,"invariant"],[20,28,8,13],[20,30,9,6,"input"],[20,35,9,11],[20,36,9,12,"every"],[20,41,9,17],[20,42,10,8],[20,52,10,8,"el"],[20,54,10,10],[21,8,10,10],[21,15,11,10,"el"],[21,17,11,12],[21,29,11,24,"AnimatedNode"],[21,51,11,36],[21,55,12,10],[21,62,12,17,"el"],[21,64,12,19],[21,69,12,24],[21,77,12,32],[21,81,13,10],[21,88,13,17,"el"],[21,90,13,19],[21,95,13,24],[21,103,13,32],[22,6,13,32],[22,7,14,6],[22,8,14,7],[22,10,15,6],[22,156,15,152,"input"],[22,161,15,157],[22,163,16,4],[22,164,16,5],[23,6,17,4,"_this"],[23,11,17,4],[23,14,17,4,"_callSuper"],[23,24,17,4],[23,31,17,4,"AnimatedConcat"],[23,45,17,4],[23,48,17,10],[24,8,17,12,"type"],[24,12,17,16],[24,14,17,18],[24,22,17,26],[25,8,17,28,"input"],[25,13,17,33],[25,15,17,28,"input"],[26,6,17,34],[26,7,17,35],[26,9,17,37,"input"],[26,14,17,42],[27,6,18,4,"_this"],[27,11,18,4],[27,12,18,9,"_input"],[27,18,18,15],[27,21,18,18,"input"],[27,26,18,23],[28,6,18,24],[28,13,18,24,"_this"],[28,18,18,24],[29,4,19,2],[30,4,19,3],[30,8,19,3,"_inherits2"],[30,18,19,3],[30,19,19,3,"default"],[30,26,19,3],[30,28,19,3,"AnimatedConcat"],[30,42,19,3],[30,44,19,3,"_AnimatedNode"],[30,57,19,3],[31,4,19,3],[31,15,19,3,"_createClass2"],[31,28,19,3],[31,29,19,3,"default"],[31,36,19,3],[31,38,19,3,"AnimatedConcat"],[31,52,19,3],[32,6,19,3,"key"],[32,9,19,3],[33,6,19,3,"value"],[33,11,19,3],[33,13,21,2],[33,22,21,2,"__onEvaluate"],[33,34,21,14,"__onEvaluate"],[33,35,21,14],[33,37,21,17],[34,8,22,4],[34,15,22,11],[34,19,22,15],[34,20,22,16,"_input"],[34,26,22,22],[34,27,22,23,"reduce"],[34,33,22,29],[34,34,22,30],[34,44,22,31,"prev"],[34,48,22,35],[34,50,22,37,"current"],[34,57,22,44],[35,10,22,44],[35,17,22,49,"prev"],[35,21,22,53],[35,24,22,56],[35,28,22,56,"val"],[35,58,22,56],[35,59,22,56,"val"],[35,72,22,59],[35,74,22,60,"current"],[35,81,22,67],[35,82,22,68],[36,8,22,68],[36,11,22,70],[36,13,22,72],[36,14,22,73],[37,6,23,2],[38,4,23,3],[39,6,23,3,"key"],[39,9,23,3],[40,6,23,3,"value"],[40,11,23,3],[40,13,25,2],[40,22,25,2,"toString"],[40,30,25,10,"toString"],[40,31,25,10],[40,33,25,13],[41,8,26,4],[41,15,26,11],[41,38,26,34],[41,42,26,38],[41,43,26,39,"__nodeID"],[41,51,26,47],[41,53,26,49],[42,6,27,2],[43,4,27,3],[44,2,27,3],[44,4,6,29,"AnimatedNode"],[44,26,6,41],[45,2,30,7],[45,11,30,16,"createAnimatedConcat"],[45,31,30,36,"createAnimatedConcat"],[45,32,30,36],[45,34,30,46],[46,4,30,46],[46,13,30,46,"_len"],[46,17,30,46],[46,20,30,46,"arguments"],[46,29,30,46],[46,30,30,46,"length"],[46,36,30,46],[46,38,30,40,"args"],[46,42,30,44],[46,49,30,44,"Array"],[46,54,30,44],[46,55,30,44,"_len"],[46,59,30,44],[46,62,30,44,"_key"],[46,66,30,44],[46,72,30,44,"_key"],[46,76,30,44],[46,79,30,44,"_len"],[46,83,30,44],[46,85,30,44,"_key"],[46,89,30,44],[47,6,30,40,"args"],[47,10,30,44],[47,11,30,44,"_key"],[47,15,30,44],[47,19,30,44,"arguments"],[47,28,30,44],[47,29,30,44,"_key"],[47,33,30,44],[48,4,30,44],[49,4,31,2],[49,11,31,9],[49,15,31,13,"AnimatedConcat"],[49,29,31,27],[49,30,31,28,"args"],[49,34,31,32],[49,35,31,33,"map"],[49,38,31,36],[49,39,31,37,"adapt"],[49,69,31,37],[49,70,31,37,"adapt"],[49,100,31,42],[49,101,31,43],[49,102,31,44],[50,2,32,0],[51,0,32,1],[51,3]],"functionMap":{"names":["<global>","AnimatedConcat","constructor","input.every$argument_0","__onEvaluate","_input.reduce$argument_0","toString","createAnimatedConcat"],"mappings":"AAA;ACK;ECC;QCG;gCDG;GDM;EGE;8BCC,sCD;GHC;EKE;GLE;CDC;OOE;CPE"}},"type":"js/module"}]}