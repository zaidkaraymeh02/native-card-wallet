{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":73,"column":0,"index":2248}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"./NativeFrameRateLogger","data":{"asyncType":null,"locs":[{"start":{"line":11,"column":0,"index":228},"end":{"line":11,"column":60,"index":288}}],"key":"L+awpgm2JLReD6/QhgABtnIN3WU="}},{"name":"invariant","data":{"asyncType":null,"locs":[{"start":{"line":13,"column":18,"index":308},"end":{"line":13,"column":38,"index":328}}],"key":"Fzi/BpZws2YooIGJ9b6u0HJtuks="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  var _NativeFrameRateLogger = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"./NativeFrameRateLogger\")); /**\n                                                                                                                   * Copyright (c) Meta Platforms, Inc. and affiliates.\n                                                                                                                   *\n                                                                                                                   * This source code is licensed under the MIT license found in the\n                                                                                                                   * LICENSE file in the root directory of this source tree.\n                                                                                                                   *\n                                                                                                                   * @format\n                                                                                                                   * \n                                                                                                                   */\n\n  /**\n   * Flow API for native FrameRateLogger module. If the native module is not installed, function calls\n   * are just no-ops.\n   *\n   * Typical behavior is that `setContext` is called when a new screen is loaded (e.g. via a\n   * navigation integration), and then `beginScroll` is called by `ScrollResponder` at which point the\n   * native module then begins tracking frame drops. When `ScrollResponder` calls `endScroll`, the\n   * native module gathers up all it's frame drop data and reports it via an analytics pipeline for\n   * analysis.\n   *\n   * Note that `beginScroll` may be called multiple times by `ScrollResponder` - unclear if that's a\n   * bug, but the native module should be robust to that.\n   *\n   * In the future we may add support for tracking frame drops in other types of interactions beyond\n   * scrolling.\n   */\n  var FrameRateLogger = {\n    /**\n     * Enable `debug` to see local logs of what's going on.\n     */\n    setGlobalOptions: function setGlobalOptions(options) {\n      if (options.debug !== undefined) {\n        _$$_REQUIRE(_dependencyMap[2], \"invariant\")(_NativeFrameRateLogger.default, 'Trying to debug FrameRateLogger without the native module!');\n      }\n      _NativeFrameRateLogger.default == null || _NativeFrameRateLogger.default.setGlobalOptions({\n        debug: !!options.debug\n      });\n    },\n    /**\n     * Must call `setContext` before any events can be properly tracked, which is done automatically\n     * in `AppRegistry`, but navigation is also a common place to hook in.\n     */\n    setContext: function setContext(context) {\n      _NativeFrameRateLogger.default == null || _NativeFrameRateLogger.default.setContext(context);\n    },\n    /**\n     * Called in `ScrollResponder` so any component that uses that module will handle this\n     * automatically.\n     */\n    beginScroll: function beginScroll() {\n      _NativeFrameRateLogger.default == null || _NativeFrameRateLogger.default.beginScroll();\n    },\n    /**\n     * Called in `ScrollResponder` so any component that uses that module will handle this\n     * automatically.\n     */\n    endScroll: function endScroll() {\n      _NativeFrameRateLogger.default == null || _NativeFrameRateLogger.default.endScroll();\n    }\n  };\n  module.exports = FrameRateLogger;\n});","lineCount":64,"map":[[3,2,11,0],[3,6,11,0,"_NativeFrameRateLogger"],[3,28,11,0],[3,31,11,0,"_interopRequireDefault"],[3,53,11,0],[3,54,11,0,"_$$_REQUIRE"],[3,65,11,0],[3,66,11,0,"_dependencyMap"],[3,80,11,0],[3,113,11,60],[3,114,1,0],[4,0,2,0],[5,0,3,0],[6,0,4,0],[7,0,5,0],[8,0,6,0],[9,0,7,0],[10,0,8,0],[11,0,9,0],[13,2,15,0],[14,0,16,0],[15,0,17,0],[16,0,18,0],[17,0,19,0],[18,0,20,0],[19,0,21,0],[20,0,22,0],[21,0,23,0],[22,0,24,0],[23,0,25,0],[24,0,26,0],[25,0,27,0],[26,0,28,0],[27,0,29,0],[28,0,30,0],[29,2,31,0],[29,6,31,6,"FrameRateLogger"],[29,21,31,21],[29,24,31,24],[30,4,32,2],[31,0,33,0],[32,0,34,0],[33,4,35,2,"setGlobalOptions"],[33,20,35,18],[33,22,35,20],[33,31,35,2,"setGlobalOptions"],[33,47,35,18,"setGlobalOptions"],[33,48,35,30,"options"],[33,55,35,61],[33,57,35,63],[34,6,36,4],[34,10,36,8,"options"],[34,17,36,15],[34,18,36,16,"debug"],[34,23,36,21],[34,28,36,26,"undefined"],[34,37,36,35],[34,39,36,37],[35,8,37,6,"_$$_REQUIRE"],[35,19,37,6],[35,20,37,6,"_dependencyMap"],[35,34,37,6],[35,52,38,8,"NativeFrameRateLogger"],[35,82,38,29],[35,84,39,8],[35,144,40,6],[35,145,40,7],[36,6,41,4],[37,6,42,4,"NativeFrameRateLogger"],[37,36,42,25],[37,48,42,4,"NativeFrameRateLogger"],[37,78,42,25],[37,79,42,27,"setGlobalOptions"],[37,95,42,43],[37,96,42,44],[38,8,43,6,"debug"],[38,13,43,11],[38,15,43,13],[38,16,43,14],[38,17,43,15,"options"],[38,24,43,22],[38,25,43,23,"debug"],[39,6,44,4],[39,7,44,5],[39,8,44,6],[40,4,45,2],[40,5,45,3],[41,4,47,2],[42,0,48,0],[43,0,49,0],[44,0,50,0],[45,4,51,2,"setContext"],[45,14,51,12],[45,16,51,14],[45,25,51,2,"setContext"],[45,35,51,12,"setContext"],[45,36,51,24,"context"],[45,43,51,39],[45,45,51,41],[46,6,52,4,"NativeFrameRateLogger"],[46,36,52,25],[46,48,52,4,"NativeFrameRateLogger"],[46,78,52,25],[46,79,52,27,"setContext"],[46,89,52,37],[46,90,52,38,"context"],[46,97,52,45],[46,98,52,46],[47,4,53,2],[47,5,53,3],[48,4,55,2],[49,0,56,0],[50,0,57,0],[51,0,58,0],[52,4,59,2,"beginScroll"],[52,15,59,13],[52,26,59,2,"beginScroll"],[52,37,59,13,"beginScroll"],[52,38,59,13],[52,40,59,16],[53,6,60,4,"NativeFrameRateLogger"],[53,36,60,25],[53,48,60,4,"NativeFrameRateLogger"],[53,78,60,25],[53,79,60,27,"beginScroll"],[53,90,60,38],[53,91,60,39],[53,92,60,40],[54,4,61,2],[54,5,61,3],[55,4,63,2],[56,0,64,0],[57,0,65,0],[58,0,66,0],[59,4,67,2,"endScroll"],[59,13,67,11],[59,24,67,2,"endScroll"],[59,33,67,11,"endScroll"],[59,34,67,11],[59,36,67,14],[60,6,68,4,"NativeFrameRateLogger"],[60,36,68,25],[60,48,68,4,"NativeFrameRateLogger"],[60,78,68,25],[60,79,68,27,"endScroll"],[60,88,68,36],[60,89,68,37],[60,90,68,38],[61,4,69,2],[62,2,70,0],[62,3,70,1],[63,2,72,0,"module"],[63,8,72,6],[63,9,72,7,"exports"],[63,16,72,14],[63,19,72,17,"FrameRateLogger"],[63,34,72,32],[64,0,72,33],[64,3]],"functionMap":{"names":["<global>","setGlobalOptions","setContext","beginScroll","endScroll"],"mappings":"AAA;oBCkC;GDU;cEM;GFE;EGM;GHE;EIM;GJE"}},"type":"js/module"}]}