{"dependencies":[{"name":"../Utilities/FeatureDetection","data":{"asyncType":null,"locs":[{"start":{"line":13,"column":0,"index":243},"end":{"line":13,"column":72,"index":315}}],"key":"uU8h72YmSFVdrXroJeXTyUR7tDQ=","isOptional":true}},{"name":"../Utilities/PolyfillFunctions","data":{"asyncType":null,"locs":[{"start":{"line":14,"column":0,"index":316},"end":{"line":14,"column":67,"index":383}}],"key":"bSgRQQ9QDEdIjWyT7jUaxVhiO2E="}},{"name":"regenerator-runtime/runtime","data":{"asyncType":null,"locs":[{"start":{"line":44,"column":11,"index":1366},"end":{"line":44,"column":49,"index":1404}}],"key":"kSsp9fD897oZTawU6cQoasib54I="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * \n   * @format\n   */\n\n  'use strict';\n\n  /**\n   * Set up regenerator.\n   * You can use this module directly, or just require InitializeCore.\n   */\n\n  var hasNativeGenerator;\n  try {\n    // If this function was lowered by regenerator-transform, it will try to\n    // access `global.regeneratorRuntime` which doesn't exist yet and will throw.\n    hasNativeGenerator = _$$_REQUIRE(_dependencyMap[0], \"../Utilities/FeatureDetection\").hasNativeConstructor(function* () {}, 'GeneratorFunction');\n  } catch (_unused) {\n    // In this case, we know generators are not provided natively.\n    hasNativeGenerator = false;\n  }\n\n  // If generators are provided natively, which suggests that there was no\n  // regenerator-transform, then there is no need to set up the runtime.\n  if (!hasNativeGenerator) {\n    _$$_REQUIRE(_dependencyMap[1], \"../Utilities/PolyfillFunctions\").polyfillGlobal('regeneratorRuntime', function () {\n      // The require just sets up the global, so make sure when we first\n      // invoke it the global does not exist\n      delete global.regeneratorRuntime;\n\n      // regenerator-runtime/runtime exports the regeneratorRuntime object, so we\n      // can return it safely.\n      return _$$_REQUIRE(_dependencyMap[2], \"regenerator-runtime/runtime\"); // flowlint-line untyped-import:off\n    });\n  }\n});","lineCount":42,"map":[[2,2,1,0],[3,0,2,0],[4,0,3,0],[5,0,4,0],[6,0,5,0],[7,0,6,0],[8,0,7,0],[9,0,8,0],[10,0,9,0],[12,2,11,0],[12,14,11,12],[14,2,16,0],[15,0,17,0],[16,0,18,0],[17,0,19,0],[19,2,21,0],[19,6,21,4,"hasNativeGenerator"],[19,24,21,22],[20,2,22,0],[20,6,22,4],[21,4,23,2],[22,4,24,2],[23,4,25,2,"hasNativeGenerator"],[23,22,25,20],[23,25,25,23,"_$$_REQUIRE"],[23,36,25,23],[23,37,25,23,"_dependencyMap"],[23,51,25,23],[23,89,25,23,"hasNativeConstructor"],[23,109,25,23],[23,110,26,4],[23,123,26,17],[23,124,26,18],[23,125,26,19],[23,127,27,4],[23,146,28,2],[23,147,28,3],[24,2,29,0],[24,3,29,1],[24,4,29,2],[24,11,29,2,"_unused"],[24,18,29,2],[24,20,29,8],[25,4,30,2],[26,4,31,2,"hasNativeGenerator"],[26,22,31,20],[26,25,31,23],[26,30,31,28],[27,2,32,0],[29,2,34,0],[30,2,35,0],[31,2,36,0],[31,6,36,4],[31,7,36,5,"hasNativeGenerator"],[31,25,36,23],[31,27,36,25],[32,4,37,2,"_$$_REQUIRE"],[32,15,37,2],[32,16,37,2,"_dependencyMap"],[32,30,37,2],[32,69,37,2,"polyfillGlobal"],[32,83,37,2],[32,84,37,17],[32,104,37,37],[32,106,37,39],[32,118,37,45],[33,6,38,4],[34,6,39,4],[35,6,40,4],[35,13,40,11,"global"],[35,19,40,17],[35,20,40,18,"regeneratorRuntime"],[35,38,40,36],[37,6,42,4],[38,6,43,4],[39,6,44,4],[39,13,44,11,"require"],[39,24,44,18],[39,25,44,18,"_dependencyMap"],[39,39,44,18],[39,73,44,48],[39,74,44,49],[39,75,44,50],[39,76,44,51],[40,4,45,2],[40,5,45,3],[40,6,45,4],[41,2,46,0],[42,0,46,1],[42,3]],"functionMap":{"names":["<global>","hasNativeConstructor$argument_0","polyfillGlobal$argument_1"],"mappings":"AAA;ICyB,eD;uCEW;GFQ"}},"type":"js/module"}]}