{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":33,"column":0,"index":813}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"../derived/useCode","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":41,"index":41}}],"key":"Sx7166sjUfFjC6bpznIYMFlWzDM="}},{"name":"./AnimatedNode","data":{"asyncType":null,"locs":[{"start":{"line":2,"column":0,"index":42},"end":{"line":2,"column":42,"index":84}}],"key":"3roa5JYtcfxCkpexJXwVNW3mWv0="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _useCode = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"../derived/useCode\"));\n  var _AnimatedNode = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"./AnimatedNode\"));\n  function assertNodesNotNull(code, children, exec) {\n    if (!code) {\n      var error = !children ? `Got \"${typeof children}\" type passed to children` : `Got \"${typeof exec}\" type passed to exec`;\n      throw new Error(`<Animated.Code /> expects the 'exec' prop or children to be an animated node or a function returning an animated node. ${error}`);\n    }\n  }\n  function Code(_ref) {\n    var exec = _ref.exec,\n      children = _ref.children,\n      dependencies = _ref.dependencies;\n    var nodes = children || exec;\n    var code = null;\n    if (nodes instanceof _AnimatedNode.default) {\n      code = function code() {\n        return nodes;\n      };\n    } else if (typeof nodes === 'function') {\n      code = nodes;\n    }\n    assertNodesNotNull(code, children, exec);\n    (0, _useCode.default)(code, dependencies);\n    return null;\n  }\n  var _default = exports.default = Code;\n});","lineCount":33,"map":[[7,2,1,0],[7,6,1,0,"_useCode"],[7,14,1,0],[7,17,1,0,"_interopRequireDefault"],[7,39,1,0],[7,40,1,0,"_$$_REQUIRE"],[7,51,1,0],[7,52,1,0,"_dependencyMap"],[7,66,1,0],[8,2,2,0],[8,6,2,0,"_AnimatedNode"],[8,19,2,0],[8,22,2,0,"_interopRequireDefault"],[8,44,2,0],[8,45,2,0,"_$$_REQUIRE"],[8,56,2,0],[8,57,2,0,"_dependencyMap"],[8,71,2,0],[9,2,4,0],[9,11,4,9,"assertNodesNotNull"],[9,29,4,27,"assertNodesNotNull"],[9,30,4,28,"code"],[9,34,4,32],[9,36,4,34,"children"],[9,44,4,42],[9,46,4,44,"exec"],[9,50,4,48],[9,52,4,50],[10,4,5,2],[10,8,5,6],[10,9,5,7,"code"],[10,13,5,11],[10,15,5,13],[11,6,6,4],[11,10,6,10,"error"],[11,15,6,15],[11,18,6,18],[11,19,6,19,"children"],[11,27,6,27],[11,30,7,8],[11,38,7,16],[11,45,7,23,"children"],[11,53,7,31],[11,80,7,58],[11,83,8,8],[11,91,8,16],[11,98,8,23,"exec"],[11,102,8,27],[11,125,8,50],[12,6,10,4],[12,12,10,10],[12,16,10,14,"Error"],[12,21,10,19],[12,22,11,6],[12,144,11,128,"error"],[12,149,11,133],[12,151,12,4],[12,152,12,5],[13,4,13,2],[14,2,14,0],[15,2,16,0],[15,11,16,9,"Code"],[15,15,16,13,"Code"],[15,16,16,13,"_ref"],[15,20,16,13],[15,22,16,48],[16,4,16,48],[16,8,16,16,"exec"],[16,12,16,20],[16,15,16,20,"_ref"],[16,19,16,20],[16,20,16,16,"exec"],[16,24,16,20],[17,6,16,22,"children"],[17,14,16,30],[17,17,16,30,"_ref"],[17,21,16,30],[17,22,16,22,"children"],[17,30,16,30],[18,6,16,32,"dependencies"],[18,18,16,44],[18,21,16,44,"_ref"],[18,25,16,44],[18,26,16,32,"dependencies"],[18,38,16,44],[19,4,17,2],[19,8,17,8,"nodes"],[19,13,17,13],[19,16,17,16,"children"],[19,24,17,24],[19,28,17,28,"exec"],[19,32,17,32],[20,4,19,2],[20,8,19,6,"code"],[20,12,19,10],[20,15,19,13],[20,19,19,17],[21,4,20,2],[21,8,20,6,"nodes"],[21,13,20,11],[21,25,20,23,"AnimatedNode"],[21,46,20,35],[21,48,20,37],[22,6,21,4,"code"],[22,10,21,8],[22,13,21,11],[22,22,21,4,"code"],[22,26,21,8,"code"],[22,27,21,8],[23,8,21,8],[23,15,21,17,"nodes"],[23,20,21,22],[24,6,21,22],[25,4,22,2],[25,5,22,3],[25,11,22,9],[25,15,22,13],[25,22,22,20,"nodes"],[25,27,22,25],[25,32,22,30],[25,42,22,40],[25,44,22,42],[26,6,23,4,"code"],[26,10,23,8],[26,13,23,11,"nodes"],[26,18,23,16],[27,4,24,2],[28,4,26,2,"assertNodesNotNull"],[28,22,26,20],[28,23,26,21,"code"],[28,27,26,25],[28,29,26,27,"children"],[28,37,26,35],[28,39,26,37,"exec"],[28,43,26,41],[28,44,26,42],[29,4,28,2],[29,8,28,2,"useCode"],[29,24,28,9],[29,26,28,10,"code"],[29,30,28,14],[29,32,28,16,"dependencies"],[29,44,28,28],[29,45,28,29],[30,4,29,2],[30,11,29,9],[30,15,29,13],[31,2,30,0],[32,2,30,1],[32,6,30,1,"_default"],[32,14,30,1],[32,17,30,1,"exports"],[32,24,30,1],[32,25,30,1,"default"],[32,32,30,1],[32,35,32,15,"Code"],[32,39,32,19],[33,0,32,19],[33,3]],"functionMap":{"names":["<global>","assertNodesNotNull","Code","code"],"mappings":"AAA;ACG;CDU;AEE;WCK,WD;CFS"}},"type":"js/module"}]}