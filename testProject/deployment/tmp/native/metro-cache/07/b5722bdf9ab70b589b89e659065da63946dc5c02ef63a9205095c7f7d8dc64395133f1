{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":63,"column":0,"index":1597}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"react-native","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":44,"index":44}}],"key":"XEo4Z+Aarw9Y7I7ZLBt66vGLAVQ="}},{"name":"./color","data":{"asyncType":null,"locs":[{"start":{"line":3,"column":0,"index":78},"end":{"line":3,"column":28,"index":106}}],"key":"bMhBAPHZtA/GH2kW5KGCVVR4omA="}},{"name":"./interpolate","data":{"asyncType":null,"locs":[{"start":{"line":4,"column":0,"index":107},"end":{"line":4,"column":57,"index":164}}],"key":"rtOG4MTcLZUKgOYVWN23fZ0qyBU="}},{"name":"../base","data":{"asyncType":null,"locs":[{"start":{"line":2,"column":0,"index":45},"end":{"line":2,"column":32,"index":77}},{"start":{"line":2,"column":0,"index":45},"end":{"line":2,"column":32,"index":77}},{"start":{"line":2,"column":0,"index":45},"end":{"line":2,"column":32,"index":77}}],"key":"AtuUvSinYmn6DuSpemc2hb6pTbk="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = interpolateColors;\n  var _reactNative = _$$_REQUIRE(_dependencyMap[1], \"react-native\");\n  var _color = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"./color\"));\n  var _interpolate = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[3], \"./interpolate\"));\n  function _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\n  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\n  function red(c) {\n    return c >> 16 & 255;\n  }\n  function green(c) {\n    return c >> 8 & 255;\n  }\n  function blue(c) {\n    return c & 255;\n  }\n  function opacity(c) {\n    return (c >> 24 & 255) / 255;\n  }\n\n  /**\n   * Use this if you want to interpolate an `Animated.Value` into color values.\n   *\n   * #### Why is this needed?\n   *\n   * Unfortunately, if you'll pass color values directly into the `outputRange` option\n   * of `interpolate()` function, that won't really work (at least at the moment).\n   * See https://github.com/software-mansion/react-native-reanimated/issues/181 .\n   *\n   * So, for now you can just use this helper instead.\n   */\n  function interpolateColors(animationValue, options) {\n    var inputRange = options.inputRange,\n      outputColorRange = options.outputColorRange;\n    var colors = outputColorRange.map(_reactNative.processColor);\n    var r = (0, _$$_REQUIRE(_dependencyMap[4], \"../base\").round)((0, _interpolate.default)(animationValue, {\n      inputRange: inputRange,\n      outputRange: colors.map(red),\n      extrapolate: _interpolate.Extrapolate.CLAMP\n    }));\n    var g = (0, _$$_REQUIRE(_dependencyMap[4], \"../base\").round)((0, _interpolate.default)(animationValue, {\n      inputRange: inputRange,\n      outputRange: colors.map(green),\n      extrapolate: _interpolate.Extrapolate.CLAMP\n    }));\n    var b = (0, _$$_REQUIRE(_dependencyMap[4], \"../base\").round)((0, _interpolate.default)(animationValue, {\n      inputRange: inputRange,\n      outputRange: colors.map(blue),\n      extrapolate: _interpolate.Extrapolate.CLAMP\n    }));\n    var a = (0, _interpolate.default)(animationValue, {\n      inputRange: inputRange,\n      outputRange: colors.map(opacity),\n      extrapolate: _interpolate.Extrapolate.CLAMP\n    });\n    return (0, _color.default)(r, g, b, a);\n  }\n});","lineCount":62,"map":[[7,2,1,0],[7,6,1,0,"_reactNative"],[7,18,1,0],[7,21,1,0,"_$$_REQUIRE"],[7,32,1,0],[7,33,1,0,"_dependencyMap"],[7,47,1,0],[8,2,3,0],[8,6,3,0,"_color"],[8,12,3,0],[8,15,3,0,"_interopRequireDefault"],[8,37,3,0],[8,38,3,0,"_$$_REQUIRE"],[8,49,3,0],[8,50,3,0,"_dependencyMap"],[8,64,3,0],[9,2,4,0],[9,6,4,0,"_interpolate"],[9,18,4,0],[9,21,4,0,"_interopRequireWildcard"],[9,44,4,0],[9,45,4,0,"_$$_REQUIRE"],[9,56,4,0],[9,57,4,0,"_dependencyMap"],[9,71,4,0],[10,2,4,57],[10,11,4,57,"_getRequireWildcardCache"],[10,36,4,57,"e"],[10,37,4,57],[10,66,4,57,"WeakMap"],[10,73,4,57],[10,92,4,57,"r"],[10,93,4,57],[10,100,4,57,"WeakMap"],[10,107,4,57],[10,111,4,57,"t"],[10,112,4,57],[10,119,4,57,"WeakMap"],[10,126,4,57],[10,138,4,57,"_getRequireWildcardCache"],[10,162,4,57],[10,174,4,57,"_getRequireWildcardCache"],[10,199,4,57,"e"],[10,200,4,57],[10,211,4,57,"e"],[10,212,4,57],[10,215,4,57,"t"],[10,216,4,57],[10,219,4,57,"r"],[10,220,4,57],[10,225,4,57,"e"],[10,226,4,57],[11,2,4,57],[11,11,4,57,"_interopRequireWildcard"],[11,35,4,57,"e"],[11,36,4,57],[11,38,4,57,"r"],[11,39,4,57],[11,48,4,57,"r"],[11,49,4,57],[11,53,4,57,"e"],[11,54,4,57],[11,58,4,57,"e"],[11,59,4,57],[11,60,4,57,"__esModule"],[11,70,4,57],[11,79,4,57,"e"],[11,80,4,57],[11,95,4,57,"e"],[11,96,4,57],[11,119,4,57,"e"],[11,120,4,57],[11,145,4,57,"e"],[11,146,4,57],[11,157,4,57,"default"],[11,164,4,57],[11,166,4,57,"e"],[11,167,4,57],[11,175,4,57,"t"],[11,176,4,57],[11,179,4,57,"_getRequireWildcardCache"],[11,203,4,57],[11,204,4,57,"r"],[11,205,4,57],[11,212,4,57,"t"],[11,213,4,57],[11,217,4,57,"t"],[11,218,4,57],[11,219,4,57,"has"],[11,222,4,57],[11,223,4,57,"e"],[11,224,4,57],[11,234,4,57,"t"],[11,235,4,57],[11,236,4,57,"get"],[11,239,4,57],[11,240,4,57,"e"],[11,241,4,57],[11,248,4,57,"n"],[11,249,4,57],[11,254,4,57,"__proto__"],[11,263,4,57],[11,273,4,57,"a"],[11,274,4,57],[11,277,4,57,"Object"],[11,283,4,57],[11,284,4,57,"defineProperty"],[11,298,4,57],[11,302,4,57,"Object"],[11,308,4,57],[11,309,4,57,"getOwnPropertyDescriptor"],[11,333,4,57],[11,344,4,57,"u"],[11,345,4,57],[11,349,4,57,"e"],[11,350,4,57],[11,370,4,57,"u"],[11,371,4,57],[11,378,4,57,"hasOwnProperty"],[11,392,4,57],[11,393,4,57,"call"],[11,397,4,57],[11,398,4,57,"e"],[11,399,4,57],[11,401,4,57,"u"],[11,402,4,57],[11,411,4,57,"i"],[11,412,4,57],[11,415,4,57,"a"],[11,416,4,57],[11,419,4,57,"Object"],[11,425,4,57],[11,426,4,57,"getOwnPropertyDescriptor"],[11,450,4,57],[11,451,4,57,"e"],[11,452,4,57],[11,454,4,57,"u"],[11,455,4,57],[11,465,4,57,"i"],[11,466,4,57],[11,471,4,57,"i"],[11,472,4,57],[11,473,4,57,"get"],[11,476,4,57],[11,480,4,57,"i"],[11,481,4,57],[11,482,4,57,"set"],[11,485,4,57],[11,489,4,57,"Object"],[11,495,4,57],[11,496,4,57,"defineProperty"],[11,510,4,57],[11,511,4,57,"n"],[11,512,4,57],[11,514,4,57,"u"],[11,515,4,57],[11,517,4,57,"i"],[11,518,4,57],[11,522,4,57,"n"],[11,523,4,57],[11,524,4,57,"u"],[11,525,4,57],[11,529,4,57,"e"],[11,530,4,57],[11,531,4,57,"u"],[11,532,4,57],[11,544,4,57,"n"],[11,545,4,57],[11,546,4,57,"default"],[11,553,4,57],[11,556,4,57,"e"],[11,557,4,57],[11,559,4,57,"t"],[11,560,4,57],[11,564,4,57,"t"],[11,565,4,57],[11,566,4,57,"set"],[11,569,4,57],[11,570,4,57,"e"],[11,571,4,57],[11,573,4,57,"n"],[11,574,4,57],[11,577,4,57,"n"],[11,578,4,57],[12,2,6,0],[12,11,6,9,"red"],[12,14,6,12,"red"],[12,15,6,13,"c"],[12,16,6,14],[12,18,6,16],[13,4,7,2],[13,11,7,10,"c"],[13,12,7,11],[13,16,7,15],[13,18,7,17],[13,21,7,21],[13,24,7,24],[14,2,8,0],[15,2,9,0],[15,11,9,9,"green"],[15,16,9,14,"green"],[15,17,9,15,"c"],[15,18,9,16],[15,20,9,18],[16,4,10,2],[16,11,10,10,"c"],[16,12,10,11],[16,16,10,15],[16,17,10,16],[16,20,10,20],[16,23,10,23],[17,2,11,0],[18,2,12,0],[18,11,12,9,"blue"],[18,15,12,13,"blue"],[18,16,12,14,"c"],[18,17,12,15],[18,19,12,17],[19,4,13,2],[19,11,13,9,"c"],[19,12,13,10],[19,15,13,13],[19,18,13,16],[20,2,14,0],[21,2,15,0],[21,11,15,9,"opacity"],[21,18,15,16,"opacity"],[21,19,15,17,"c"],[21,20,15,18],[21,22,15,20],[22,4,16,2],[22,11,16,9],[22,12,16,11,"c"],[22,13,16,12],[22,17,16,16],[22,19,16,18],[22,22,16,22],[22,25,16,25],[22,29,16,29],[22,32,16,32],[23,2,17,0],[25,2,19,0],[26,0,20,0],[27,0,21,0],[28,0,22,0],[29,0,23,0],[30,0,24,0],[31,0,25,0],[32,0,26,0],[33,0,27,0],[34,0,28,0],[35,0,29,0],[36,2,30,15],[36,11,30,24,"interpolateColors"],[36,28,30,41,"interpolateColors"],[36,29,30,42,"animationValue"],[36,43,30,56],[36,45,30,58,"options"],[36,52,30,65],[36,54,30,67],[37,4,31,2],[37,8,31,10,"inputRange"],[37,18,31,20],[37,21,31,43,"options"],[37,28,31,50],[37,29,31,10,"inputRange"],[37,39,31,20],[38,6,31,22,"outputColorRange"],[38,22,31,38],[38,25,31,43,"options"],[38,32,31,50],[38,33,31,22,"outputColorRange"],[38,49,31,38],[39,4,32,2],[39,8,32,8,"colors"],[39,14,32,14],[39,17,32,17,"outputColorRange"],[39,33,32,33],[39,34,32,34,"map"],[39,37,32,37],[39,38,32,38,"processColor"],[39,63,32,50],[39,64,32,51],[40,4,34,2],[40,8,34,8,"r"],[40,9,34,9],[40,12,34,12],[40,16,34,12,"round"],[40,46,34,12],[40,47,34,12,"round"],[40,63,34,17],[40,65,35,4],[40,69,35,4,"interpolate"],[40,89,35,15],[40,91,35,16,"animationValue"],[40,105,35,30],[40,107,35,32],[41,6,36,6,"inputRange"],[41,16,36,16],[41,18,36,6,"inputRange"],[41,28,36,16],[42,6,37,6,"outputRange"],[42,17,37,17],[42,19,37,19,"colors"],[42,25,37,25],[42,26,37,26,"map"],[42,29,37,29],[42,30,37,30,"red"],[42,33,37,33],[42,34,37,34],[43,6,38,6,"extrapolate"],[43,17,38,17],[43,19,38,19,"Extrapolate"],[43,43,38,30],[43,44,38,31,"CLAMP"],[44,4,39,4],[44,5,39,5],[44,6,40,2],[44,7,40,3],[45,4,41,2],[45,8,41,8,"g"],[45,9,41,9],[45,12,41,12],[45,16,41,12,"round"],[45,46,41,12],[45,47,41,12,"round"],[45,63,41,17],[45,65,42,4],[45,69,42,4,"interpolate"],[45,89,42,15],[45,91,42,16,"animationValue"],[45,105,42,30],[45,107,42,32],[46,6,43,6,"inputRange"],[46,16,43,16],[46,18,43,6,"inputRange"],[46,28,43,16],[47,6,44,6,"outputRange"],[47,17,44,17],[47,19,44,19,"colors"],[47,25,44,25],[47,26,44,26,"map"],[47,29,44,29],[47,30,44,30,"green"],[47,35,44,35],[47,36,44,36],[48,6,45,6,"extrapolate"],[48,17,45,17],[48,19,45,19,"Extrapolate"],[48,43,45,30],[48,44,45,31,"CLAMP"],[49,4,46,4],[49,5,46,5],[49,6,47,2],[49,7,47,3],[50,4,48,2],[50,8,48,8,"b"],[50,9,48,9],[50,12,48,12],[50,16,48,12,"round"],[50,46,48,12],[50,47,48,12,"round"],[50,63,48,17],[50,65,49,4],[50,69,49,4,"interpolate"],[50,89,49,15],[50,91,49,16,"animationValue"],[50,105,49,30],[50,107,49,32],[51,6,50,6,"inputRange"],[51,16,50,16],[51,18,50,6,"inputRange"],[51,28,50,16],[52,6,51,6,"outputRange"],[52,17,51,17],[52,19,51,19,"colors"],[52,25,51,25],[52,26,51,26,"map"],[52,29,51,29],[52,30,51,30,"blue"],[52,34,51,34],[52,35,51,35],[53,6,52,6,"extrapolate"],[53,17,52,17],[53,19,52,19,"Extrapolate"],[53,43,52,30],[53,44,52,31,"CLAMP"],[54,4,53,4],[54,5,53,5],[54,6,54,2],[54,7,54,3],[55,4,55,2],[55,8,55,8,"a"],[55,9,55,9],[55,12,55,12],[55,16,55,12,"interpolate"],[55,36,55,23],[55,38,55,24,"animationValue"],[55,52,55,38],[55,54,55,40],[56,6,56,4,"inputRange"],[56,16,56,14],[56,18,56,4,"inputRange"],[56,28,56,14],[57,6,57,4,"outputRange"],[57,17,57,15],[57,19,57,17,"colors"],[57,25,57,23],[57,26,57,24,"map"],[57,29,57,27],[57,30,57,28,"opacity"],[57,37,57,35],[57,38,57,36],[58,6,58,4,"extrapolate"],[58,17,58,15],[58,19,58,17,"Extrapolate"],[58,43,58,28],[58,44,58,29,"CLAMP"],[59,4,59,2],[59,5,59,3],[59,6,59,4],[60,4,61,2],[60,11,61,9],[60,15,61,9,"color"],[60,29,61,14],[60,31,61,15,"r"],[60,32,61,16],[60,34,61,18,"g"],[60,35,61,19],[60,37,61,21,"b"],[60,38,61,22],[60,40,61,24,"a"],[60,41,61,25],[60,42,61,26],[61,2,62,0],[62,0,62,1],[62,3]],"functionMap":{"names":["<global>","red","green","blue","opacity","interpolateColors"],"mappings":"AAA;ACK;CDE;AEC;CFE;AGC;CHE;AIC;CJE;eKa;CLgC"}},"type":"js/module"}]}