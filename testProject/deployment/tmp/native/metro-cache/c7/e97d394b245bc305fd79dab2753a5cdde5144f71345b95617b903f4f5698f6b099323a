{"dependencies":[{"name":"react","data":{"asyncType":null,"locs":[{"start":{"line":11,"column":0,"index":222},"end":{"line":11,"column":31,"index":253}}],"key":"a4EMkKqamYWCMMPV7UeQlqGQ+ks="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = useMergeRefs;\n  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0], \"react\"));\n  var React = _react;\n  function _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\n  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * \n   * @format\n   */\n\n  /**\n   * Constructs a new ref that forwards new values to each of the given refs. The\n   * given refs will always be invoked in the order that they are supplied.\n   *\n   * WARNING: A known problem of merging refs using this approach is that if any\n   * of the given refs change, the returned callback ref will also be changed. If\n   * the returned callback ref is supplied as a `ref` to a React element, this may\n   * lead to problems with the given refs being invoked more times than desired.\n   */\n  function useMergeRefs() {\n    for (var _len = arguments.length, refs = new Array(_len), _key = 0; _key < _len; _key++) {\n      refs[_key] = arguments[_key];\n    }\n    return (0, _react.useCallback)(function (current) {\n      for (var ref of refs) {\n        if (ref != null) {\n          if (typeof ref === 'function') {\n            ref(current);\n          } else {\n            ref.current = current;\n          }\n        }\n      }\n    }, [].concat(refs) // eslint-disable-line react-hooks/exhaustive-deps\n    );\n  }\n});","lineCount":46,"map":[[6,2,11,0],[6,6,11,0,"_react"],[6,12,11,0],[6,15,11,0,"_interopRequireWildcard"],[6,38,11,0],[6,39,11,0,"_$$_REQUIRE"],[6,50,11,0],[6,51,11,0,"_dependencyMap"],[6,65,11,0],[7,2,11,31],[7,6,11,31,"React"],[7,11,11,31],[7,14,11,31,"_react"],[7,20,11,31],[8,2,11,31],[8,11,11,31,"_getRequireWildcardCache"],[8,36,11,31,"e"],[8,37,11,31],[8,66,11,31,"WeakMap"],[8,73,11,31],[8,92,11,31,"r"],[8,93,11,31],[8,100,11,31,"WeakMap"],[8,107,11,31],[8,111,11,31,"t"],[8,112,11,31],[8,119,11,31,"WeakMap"],[8,126,11,31],[8,138,11,31,"_getRequireWildcardCache"],[8,162,11,31],[8,174,11,31,"_getRequireWildcardCache"],[8,199,11,31,"e"],[8,200,11,31],[8,211,11,31,"e"],[8,212,11,31],[8,215,11,31,"t"],[8,216,11,31],[8,219,11,31,"r"],[8,220,11,31],[8,225,11,31,"e"],[8,226,11,31],[9,2,11,31],[9,11,11,31,"_interopRequireWildcard"],[9,35,11,31,"e"],[9,36,11,31],[9,38,11,31,"r"],[9,39,11,31],[9,48,11,31,"r"],[9,49,11,31],[9,53,11,31,"e"],[9,54,11,31],[9,58,11,31,"e"],[9,59,11,31],[9,60,11,31,"__esModule"],[9,70,11,31],[9,79,11,31,"e"],[9,80,11,31],[9,95,11,31,"e"],[9,96,11,31],[9,119,11,31,"e"],[9,120,11,31],[9,145,11,31,"e"],[9,146,11,31],[9,157,11,31,"default"],[9,164,11,31],[9,166,11,31,"e"],[9,167,11,31],[9,175,11,31,"t"],[9,176,11,31],[9,179,11,31,"_getRequireWildcardCache"],[9,203,11,31],[9,204,11,31,"r"],[9,205,11,31],[9,212,11,31,"t"],[9,213,11,31],[9,217,11,31,"t"],[9,218,11,31],[9,219,11,31,"has"],[9,222,11,31],[9,223,11,31,"e"],[9,224,11,31],[9,234,11,31,"t"],[9,235,11,31],[9,236,11,31,"get"],[9,239,11,31],[9,240,11,31,"e"],[9,241,11,31],[9,248,11,31,"n"],[9,249,11,31],[9,254,11,31,"__proto__"],[9,263,11,31],[9,273,11,31,"a"],[9,274,11,31],[9,277,11,31,"Object"],[9,283,11,31],[9,284,11,31,"defineProperty"],[9,298,11,31],[9,302,11,31,"Object"],[9,308,11,31],[9,309,11,31,"getOwnPropertyDescriptor"],[9,333,11,31],[9,344,11,31,"u"],[9,345,11,31],[9,349,11,31,"e"],[9,350,11,31],[9,370,11,31,"u"],[9,371,11,31],[9,378,11,31,"hasOwnProperty"],[9,392,11,31],[9,393,11,31,"call"],[9,397,11,31],[9,398,11,31,"e"],[9,399,11,31],[9,401,11,31,"u"],[9,402,11,31],[9,411,11,31,"i"],[9,412,11,31],[9,415,11,31,"a"],[9,416,11,31],[9,419,11,31,"Object"],[9,425,11,31],[9,426,11,31,"getOwnPropertyDescriptor"],[9,450,11,31],[9,451,11,31,"e"],[9,452,11,31],[9,454,11,31,"u"],[9,455,11,31],[9,465,11,31,"i"],[9,466,11,31],[9,471,11,31,"i"],[9,472,11,31],[9,473,11,31,"get"],[9,476,11,31],[9,480,11,31,"i"],[9,481,11,31],[9,482,11,31,"set"],[9,485,11,31],[9,489,11,31,"Object"],[9,495,11,31],[9,496,11,31,"defineProperty"],[9,510,11,31],[9,511,11,31,"n"],[9,512,11,31],[9,514,11,31,"u"],[9,515,11,31],[9,517,11,31,"i"],[9,518,11,31],[9,522,11,31,"n"],[9,523,11,31],[9,524,11,31,"u"],[9,525,11,31],[9,529,11,31,"e"],[9,530,11,31],[9,531,11,31,"u"],[9,532,11,31],[9,544,11,31,"n"],[9,545,11,31],[9,546,11,31,"default"],[9,553,11,31],[9,556,11,31,"e"],[9,557,11,31],[9,559,11,31,"t"],[9,560,11,31],[9,564,11,31,"t"],[9,565,11,31],[9,566,11,31,"set"],[9,569,11,31],[9,570,11,31,"e"],[9,571,11,31],[9,573,11,31,"n"],[9,574,11,31],[9,577,11,31,"n"],[9,578,11,31],[10,2,1,0],[11,0,2,0],[12,0,3,0],[13,0,4,0],[14,0,5,0],[15,0,6,0],[16,0,7,0],[17,0,8,0],[18,0,9,0],[20,2,14,0],[21,0,15,0],[22,0,16,0],[23,0,17,0],[24,0,18,0],[25,0,19,0],[26,0,20,0],[27,0,21,0],[28,0,22,0],[29,2,23,15],[29,11,23,24,"useMergeRefs"],[29,23,23,36,"useMergeRefs"],[29,24,23,36],[29,26,25,29],[30,4,25,29],[30,13,25,29,"_len"],[30,17,25,29],[30,20,25,29,"arguments"],[30,29,25,29],[30,30,25,29,"length"],[30,36,25,29],[30,38,24,5,"refs"],[30,42,24,9],[30,49,24,9,"Array"],[30,54,24,9],[30,55,24,9,"_len"],[30,59,24,9],[30,62,24,9,"_key"],[30,66,24,9],[30,72,24,9,"_key"],[30,76,24,9],[30,79,24,9,"_len"],[30,83,24,9],[30,85,24,9,"_key"],[30,89,24,9],[31,6,24,5,"refs"],[31,10,24,9],[31,11,24,9,"_key"],[31,15,24,9],[31,19,24,9,"arguments"],[31,28,24,9],[31,29,24,9,"_key"],[31,33,24,9],[32,4,24,9],[33,4,26,2],[33,11,26,9],[33,15,26,9,"useCallback"],[33,33,26,20],[33,35,27,4],[33,45,27,5,"current"],[33,52,27,29],[33,54,27,34],[34,6,28,6],[34,11,28,11],[34,15,28,17,"ref"],[34,18,28,20],[34,22,28,24,"refs"],[34,26,28,28],[34,28,28,30],[35,8,29,8],[35,12,29,12,"ref"],[35,15,29,15],[35,19,29,19],[35,23,29,23],[35,25,29,25],[36,10,30,10],[36,14,30,14],[36,21,30,21,"ref"],[36,24,30,24],[36,29,30,29],[36,39,30,39],[36,41,30,41],[37,12,31,12,"ref"],[37,15,31,15],[37,16,31,16,"current"],[37,23,31,23],[37,24,31,24],[38,10,32,10],[38,11,32,11],[38,17,32,17],[39,12,33,12,"ref"],[39,15,33,15],[39,16,33,16,"current"],[39,23,33,23],[39,26,33,26,"current"],[39,33,33,33],[40,10,34,10],[41,8,35,8],[42,6,36,6],[43,4,37,4],[43,5,37,5],[43,10,37,5,"concat"],[43,16,37,5],[43,17,38,8,"refs"],[43,21,38,12],[43,23,38,15],[44,4,39,2],[44,5,39,3],[45,2,40,0],[46,0,40,1],[46,3]],"functionMap":{"names":["<global>","useMergeRefs","<anonymous>"],"mappings":"AAA;eCsB;ICI;KDU;CDG"}},"type":"js/module"}]}