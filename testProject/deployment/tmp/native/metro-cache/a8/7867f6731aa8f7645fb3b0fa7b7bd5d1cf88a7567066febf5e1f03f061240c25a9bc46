{"dependencies":[{"name":"./useRouteCache","data":{"asyncType":null,"locs":[{"start":{"line":3,"column":0,"index":57},"end":{"line":3,"column":46,"index":103}}],"key":"0x2Ri1pmPX140KCPHftfgCdnnso="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = getFocusedRouteNameFromRoute;\n  function getFocusedRouteNameFromRoute(route) {\n    var _route$CHILD_STATE, _state$index;\n    // @ts-expect-error: this isn't in type definitions coz we want this private\n    var state = (_route$CHILD_STATE = route[_$$_REQUIRE(_dependencyMap[0], \"./useRouteCache\").CHILD_STATE]) != null ? _route$CHILD_STATE : route.state;\n    var params = route.params;\n    var routeName = state ?\n    // Get the currently active route name in the nested navigator\n    state.routes[// If we have a partial state without index, for tab/drawer, first screen will be focused one, and last for stack\n    // The type property will only exist for rehydrated state and not for state from deep link\n    (_state$index = state.index) != null ? _state$index : typeof state.type === 'string' && state.type !== 'stack' ? 0 : state.routes.length - 1].name :\n    // If state doesn't exist, we need to default to `screen` param if available\n    typeof (params == null ? void 0 : params.screen) === 'string' ? params.screen : undefined;\n    return routeName;\n  }\n});","lineCount":20,"map":[[6,2,5,15],[6,11,5,24,"getFocusedRouteNameFromRoute"],[6,39,5,52,"getFocusedRouteNameFromRoute"],[6,40,6,2,"route"],[6,45,6,31],[6,47,7,22],[7,4,7,22],[7,8,7,22,"_route$CHILD_STATE"],[7,26,7,22],[7,28,7,22,"_state$index"],[7,40,7,22],[8,4,8,2],[9,4,9,2],[9,8,9,8,"state"],[9,13,9,13],[9,17,9,13,"_route$CHILD_STATE"],[9,35,9,13],[9,38,9,16,"route"],[9,43,9,21],[9,44,9,22,"CHILD_STATE"],[9,74,9,22],[9,75,9,22,"CHILD_STATE"],[9,105,9,33],[9,106,9,34],[9,118,9,34,"_route$CHILD_STATE"],[9,136,9,34],[9,139,9,38,"route"],[9,144,9,43],[9,145,9,44,"state"],[9,150,9,49],[10,4,10,2],[10,8,10,8,"params"],[10,14,10,14],[10,17,10,17,"route"],[10,22,10,22],[10,23,10,23,"params"],[10,29,10,65],[11,4,12,2],[11,8,12,8,"routeName"],[11,17,12,17],[11,20,12,20,"state"],[11,25,12,25],[12,4,13,6],[13,4,14,6,"state"],[13,9,14,11],[13,10,14,12,"routes"],[13,16,14,18],[13,17,15,8],[14,4,16,8],[15,4,16,8],[15,5,16,8,"_state$index"],[15,17,16,8],[15,20,17,8,"state"],[15,25,17,13],[15,26,17,14,"index"],[15,31,17,19],[15,43,17,19,"_state$index"],[15,55,17,19],[15,58,18,11],[15,65,18,18,"state"],[15,70,18,23],[15,71,18,24,"type"],[15,75,18,28],[15,80,18,33],[15,88,18,41],[15,92,18,45,"state"],[15,97,18,50],[15,98,18,51,"type"],[15,102,18,55],[15,107,18,60],[15,114,18,67],[15,117,19,14],[15,118,19,15],[15,121,20,14,"state"],[15,126,20,19],[15,127,20,20,"routes"],[15,133,20,26],[15,134,20,27,"length"],[15,140,20,33],[15,143,20,36],[15,144,20,37],[15,145,21,7],[15,146,21,8,"name"],[15,150,21,12],[16,4,22,6],[17,4,23,4],[17,12,23,11,"params"],[17,18,23,17],[17,38,23,11,"params"],[17,44,23,17],[17,45,23,19,"screen"],[17,51,23,25],[17,57,23,30],[17,65,23,38],[17,68,24,6,"params"],[17,74,24,12],[17,75,24,13,"screen"],[17,81,24,19],[17,84,25,6,"undefined"],[17,93,25,15],[18,4,27,2],[18,11,27,9,"routeName"],[18,20,27,18],[19,2,28,0],[20,0,28,1],[20,3]],"functionMap":{"names":["<global>","getFocusedRouteNameFromRoute"],"mappings":"AAA;eCI;CDuB"}},"type":"js/module"}]}