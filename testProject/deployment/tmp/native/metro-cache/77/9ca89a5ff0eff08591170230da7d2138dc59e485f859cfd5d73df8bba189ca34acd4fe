{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":260,"column":0,"index":8008}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":260,"column":0,"index":8008}}],"key":"XnmB3YjhLQUu4Gtg+kalDAx6bCo="}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":260,"column":0,"index":8008}}],"key":"EU+qeBIKi4KcIzPeK4PbkLqFqVY="}},{"name":"./colorwords","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":34,"index":34}}],"key":"SgPe+Vszul1PymhL5fPycHYpols="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.anyColorToRgbString = anyColorToRgbString;\n  exports.setColorBasedOnBackground = setColorBasedOnBackground;\n  exports.setContrastScale = setContrastScale;\n  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/toConsumableArray\"));\n  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/slicedToArray\"));\n  var _colorwords = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"./colorwords\"));\n  /**\n   *\n   * Converts RGB color to HEX\n   *\n   * @param   {number || string}    r   Accepts RGB as string || Accepts R as string or number\n   * @param   {number || string}    g   Accepts G as string or number\n   * @param   {number || string}    b   Accepts B as string or number\n   *\n   * @return  {string} Returns HEX color\n   */\n  function RgbToHex(r, g, b) {\n    if (typeof r === \"string\" && !g && !b) {\n      var color = r.replace(/rgb[(]|[)]/gm, \"\");\n      var _color$split = color.split(\",\");\n      var _color$split2 = (0, _slicedToArray2.default)(_color$split, 3);\n      r = _color$split2[0];\n      g = _color$split2[1];\n      b = _color$split2[2];\n    }\n    // eslint-disable-next-line no-bitwise\n    return \"#\" + ((1 << 24) + (Number(r) << 16) + (Number(g) << 8) + Number(b)).toString(16).slice(1);\n  }\n  /**\n   *\n   * Converts HEX or HEX Alpha to RGB\n   *\n   * @param   {string}    hex   Accepts HEX color\n   *\n   * @return  {object} Returns RGB color; {r,g,b}\n   */\n  _c = RgbToHex;\n  function hexToRgb(hex) {\n    hex = hex.substring(1);\n    hex = hex.length === 3 || hex.length === 4 ? (0, _toConsumableArray2.default)(hex).map(function (x) {\n      return x + x;\n    }).join(\"\") : hex;\n    return rgbaToRgb({\n      r: parseInt(\"0x\" + hex[0] + hex[1], 16),\n      g: parseInt(\"0x\" + hex[2] + hex[3], 16),\n      b: parseInt(\"0x\" + hex[4] + hex[5], 16),\n      a: parseInt(\"0x\" + hex[6] + hex[7], 16) / 255 || 1\n    });\n  }\n  /**\n   *\n   * Converts any color format to RGB string\n   *\n   * @param   {string}    anyColor   Accepts any color format\n   *\n   * @return  {string} Returns RGB color; `r,g,b`\n   */\n  function anyColorToRgbString(anyColor) {\n    var _checkColor = checkColor(anyColor),\n      r = _checkColor.r,\n      g = _checkColor.g,\n      b = _checkColor.b;\n    return [r, g, b].join(\",\");\n  }\n  /**\n   *\n   * Converts HSL to RGB color\n   *\n   * @param   {string}    hsl   Accepts HSL color\n   *\n   * @return  {object} Returns RGB color; {r,g,b}\n   */\n  function hslToRgb(hsl) {\n    var hslArray = hsl.replace(/hsla?[(]|[%]|[)]/gm, \"\").split(\",\").map(function (x) {\n      return x.trim();\n    });\n    var h = hslArray[0];\n    var s = Number(hslArray[1]) / 100;\n    var l = Number(hslArray[2]) / 100;\n    var a = 1;\n    // Strip label and convert to degrees (if necessary)\n    // eslint-disable-next-line no-bitwise\n    if (~h.indexOf(\"deg\")) {\n      h = h.substr(0, h.length - 3);\n      // eslint-disable-next-line no-bitwise\n    } else if (~h.indexOf(\"rad\")) {\n      h = Math.round(Number(h.substr(0, h.length - 3)) * (180 / Math.PI));\n      // eslint-disable-next-line no-bitwise\n    } else if (~h.indexOf(\"turn\")) {\n      h = Math.round(Number(h.substr(0, h.length - 4)) * 360);\n    }\n    h = Number(h);\n    if (h >= 360) {\n      h %= 360;\n    } // Keep hue fraction of 360 if h is higher than 360\n    var r = 255;\n    var g = 255;\n    var b = 255;\n    var c = (1 - Math.abs(2 * l - 1)) * s; // chroma -> color intensity\n    var x = c * (1 - Math.abs(h / 60 % 2 - 1)); // Second largest component (first being chroma)\n    var m = l - c / 2; // Amount to add to each channel to match lightness\n    if (0 <= h && h < 60) {\n      r = c;\n      g = x;\n      b = 0;\n    } else if (60 <= h && h < 120) {\n      r = x;\n      g = c;\n      b = 0;\n    } else if (120 <= h && h < 180) {\n      r = 0;\n      g = c;\n      b = x;\n    } else if (180 <= h && h < 240) {\n      r = 0;\n      g = x;\n      b = c;\n    } else if (240 <= h && h < 300) {\n      r = x;\n      g = 0;\n      b = c;\n    } else if (300 <= h && h < 360) {\n      r = c;\n      g = 0;\n      b = x;\n    }\n    return rgbaToRgb({\n      r: Math.round((r + m) * 255),\n      g: Math.round((g + m) * 255),\n      b: Math.round((b + m) * 255),\n      a: a\n    });\n  }\n  /**\n   *\n   * Convert RGB string with HEX or Word inside to RGB object\n   *\n   * @param   {string}    rgb   Accepts RGB color as string\n   *\n   * @return  {object} Returns RGB color; {r,g,b}\n   */\n  function rgbStringToRgb(rgb) {\n    var color = rgb.replace(/rgb[(]|[)]/gm, \"\");\n    // if RGB has hex color definition\n    // eslint-disable-next-line no-bitwise\n    if (~rgb.indexOf(\"#\")) {\n      return hexToRgb(color);\n    }\n    // if RGB has word color definition\n    else if (!/\\d/.test(rgb)) {\n      return _colorwords.default[color.toLowerCase()];\n    }\n    // if RGB has RGB color definition\n    else {\n      var _color$split3 = color.split(\",\"),\n        _color$split4 = (0, _slicedToArray2.default)(_color$split3, 3),\n        r = _color$split4[0],\n        g = _color$split4[1],\n        b = _color$split4[2];\n      [r, g, b].forEach(function (x) {\n        return x.trim();\n      });\n      return {\n        r: Number(r),\n        g: Number(g),\n        b: Number(b)\n      };\n    }\n  }\n  /**\n   *\n   * Converts RGB Alpha to RGB object\n   *\n   * @param   {string}    rgba   Accepts RGB Alpha color\n   *\n   * @return  {object} Returns RGB color; {r,g,b}\n   */\n  function rgbaToRgb(rgba) {\n    var newAlpha = 1;\n    var RGB = typeof rgba === \"object\" ? rgba : {\n      r: 255,\n      g: 255,\n      b: 255\n    };\n    var calc = function calc(val) {\n      return Math.round(newAlpha * (val / 255) * 255);\n    }; // Calc best color contrast values\n    // const calc = val => Math.round((RGB.a * (val / 255) + (RGB.a * ( 0 / 255))) * 255); // Calc best color contrast values\n    if (typeof rgba === \"string\") {\n      var val = rgba.replace(/rgba[(]|[)]/gm, \"\");\n      var color = val.slice(0, val.lastIndexOf(\",\")).trim();\n      var alpha = Number(val.slice(val.lastIndexOf(\",\") + 1).trim());\n      // if RGBA has HEX color definition\n      if (color[0] === \"#\") {\n        RGB = hexToRgb(color);\n      }\n      // if RGBA has word color definition\n      else if (!/\\d/.test(color)) {\n        RGB = _colorwords.default[color.toLowerCase()];\n      }\n      // if RGBA has RGB color definition\n      else {\n        var _color$split5 = color.split(\",\"),\n          _color$split6 = (0, _slicedToArray2.default)(_color$split5, 3),\n          r = _color$split6[0],\n          g = _color$split6[1],\n          b = _color$split6[2];\n        [r, g, b].forEach(function (x) {\n          return Number(x.trim());\n        });\n        RGB = {\n          r: Number(r),\n          g: Number(g),\n          b: Number(b)\n        };\n      }\n      // RGB.a = alpha;\n      newAlpha = alpha === 1 ? 1 : Number((1 - alpha).toPrecision(2));\n    }\n    return {\n      r: calc(RGB.r),\n      g: calc(RGB.g),\n      b: calc(RGB.b)\n    };\n  }\n  /**\n   *\n   * Check what color format is being used.\n   *\n   * @param   {string}    color   Accepts any color format\n   *\n   * @return  {object} Returns RGB color; {r,g,b}\n   */\n  function checkColor(color) {\n    if (color in _colorwords.default) {\n      return _colorwords.default[color.toLowerCase()];\n    } else if (color[0] === \"#\") {\n      return hexToRgb(color);\n      // eslint-disable-next-line no-bitwise\n    } else if (~color.indexOf(\"hsl\")) {\n      return hslToRgb(color);\n      // eslint-disable-next-line no-bitwise\n    } else if (~color.indexOf(\"rgba\")) {\n      return rgbaToRgb(color);\n      // eslint-disable-next-line no-bitwise\n    } else if (~color.indexOf(\"rgb\")) {\n      return rgbStringToRgb(color);\n    }\n    return {\n      r: 255,\n      g: 255,\n      b: 255\n    };\n  }\n  /**\n   *\n   * Set best contrast color based on a (background) color\n   *\n   * @param   {string}    color   Accepts any color format\n   *\n   * @return  {string} Returns RGB Alpha color\n   */\n  function setColorBasedOnBackground(color) {\n    var c = checkColor(color);\n    var RGB = typeof c === \"object\" ? c : {\n      r: 255,\n      g: 255,\n      b: 255\n    };\n    // https://www.w3.org/TR/AERT/#color-contrast\n    var o = Math.round((RGB.r * 299 + RGB.g * 587 + RGB.b * 114) / 1000);\n    return o > 125 ? \"rgba(0,0,0,.87)\" : \"rgba(255,255,255,.87)\";\n  }\n  /**\n   *\n   * Expects a color and a contrast value between 0 and 1.'\n   * It will look at the supplied color's brightness and will start the contrast scale either from #000 (black) or #FFF (white).\n   * This function will work best when you supply a very dark or very bright color.\n   * It will return a gray color with the desired contrast which is based on the specified color.\n   *\n   * @param   {string}    color   Accepts any color format\n   * @param   {number}    contrast   Accepts a value between 0 and 1\n   *\n   * @return  {string} Returns HEX color\n   */\n  function setContrastScale(contrast, color) {\n    if (contrast > 1) {\n      contrast = 1;\n    }\n    if (contrast < 0) {\n      contrast = 0;\n    }\n    var max = 256;\n    var c = checkColor(color);\n    var _ref = typeof c === \"object\" ? c : {\n        r: 255,\n        g: 255,\n        b: 255\n      },\n      r = _ref.r,\n      g = _ref.g,\n      b = _ref.b;\n    // https://www.w3.org/TR/AERT/#color-contrast\n    var brightness = Math.round((r * 299 + g * 587 + b * 114) / 1000);\n    var value = Math.round(brightness > max / 2 ? max - max * contrast : max * contrast);\n    return RgbToHex(value, value, value);\n  }\n  var _c;\n  $RefreshReg$(_c, \"RgbToHex\");\n});","lineCount":315,"map":[[11,2,1,0],[11,6,1,0,"_colorwords"],[11,17,1,0],[11,20,1,0,"_interopRequireDefault"],[11,42,1,0],[11,43,1,0,"_$$_REQUIRE"],[11,54,1,0],[11,55,1,0,"_dependencyMap"],[11,69,1,0],[12,2,2,0],[13,0,3,0],[14,0,4,0],[15,0,5,0],[16,0,6,0],[17,0,7,0],[18,0,8,0],[19,0,9,0],[20,0,10,0],[21,0,11,0],[22,2,12,0],[22,11,12,9,"RgbToHex"],[22,19,12,17,"RgbToHex"],[22,20,12,18,"r"],[22,21,12,19],[22,23,12,21,"g"],[22,24,12,22],[22,26,12,24,"b"],[22,27,12,25],[22,29,12,27],[23,4,13,4],[23,8,13,8],[23,15,13,15,"r"],[23,16,13,16],[23,21,13,21],[23,29,13,29],[23,33,13,33],[23,34,13,34,"g"],[23,35,13,35],[23,39,13,39],[23,40,13,40,"b"],[23,41,13,41],[23,43,13,43],[24,6,14,8],[24,10,14,14,"color"],[24,15,14,19],[24,18,14,22,"r"],[24,19,14,23],[24,20,14,24,"replace"],[24,27,14,31],[24,28,14,32],[24,42,14,46],[24,44,14,48],[24,46,14,50],[24,47,14,51],[25,6,14,52],[25,10,14,52,"_color$split"],[25,22,14,52],[25,25,15,20,"color"],[25,30,15,25],[25,31,15,26,"split"],[25,36,15,31],[25,37,15,32],[25,40,15,35],[25,41,15,36],[26,6,15,36],[26,10,15,36,"_color$split2"],[26,23,15,36],[26,30,15,36,"_slicedToArray2"],[26,45,15,36],[26,46,15,36,"default"],[26,53,15,36],[26,55,15,36,"_color$split"],[26,67,15,36],[27,6,15,9,"r"],[27,7,15,10],[27,10,15,10,"_color$split2"],[27,23,15,10],[28,6,15,12,"g"],[28,7,15,13],[28,10,15,13,"_color$split2"],[28,23,15,13],[29,6,15,15,"b"],[29,7,15,16],[29,10,15,16,"_color$split2"],[29,23,15,16],[30,4,16,4],[31,4,17,4],[32,4,18,4],[32,11,18,11],[32,14,18,14],[32,17,18,17],[32,18,18,18],[32,19,18,19],[32,20,18,20],[32,24,18,24],[32,26,18,26],[32,31,18,31,"Number"],[32,37,18,37],[32,38,18,38,"r"],[32,39,18,39],[32,40,18,40],[32,44,18,44],[32,46,18,46],[32,47,18,47],[32,51,18,51,"Number"],[32,57,18,57],[32,58,18,58,"g"],[32,59,18,59],[32,60,18,60],[32,64,18,64],[32,65,18,65],[32,66,18,66],[32,69,18,69,"Number"],[32,75,18,75],[32,76,18,76,"b"],[32,77,18,77],[32,78,18,78],[32,80,18,80,"toString"],[32,88,18,88],[32,89,18,89],[32,91,18,91],[32,92,18,92],[32,93,18,93,"slice"],[32,98,18,98],[32,99,18,99],[32,100,18,100],[32,101,18,101],[33,2,19,0],[34,2,20,0],[35,0,21,0],[36,0,22,0],[37,0,23,0],[38,0,24,0],[39,0,25,0],[40,0,26,0],[41,0,27,0],[42,2,20,0,"_c"],[42,4,20,0],[42,7,12,9,"RgbToHex"],[42,15,12,17],[43,2,28,0],[43,11,28,9,"hexToRgb"],[43,19,28,17,"hexToRgb"],[43,20,28,18,"hex"],[43,23,28,21],[43,25,28,23],[44,4,29,4,"hex"],[44,7,29,7],[44,10,29,10,"hex"],[44,13,29,13],[44,14,29,14,"substring"],[44,23,29,23],[44,24,29,24],[44,25,29,25],[44,26,29,26],[45,4,30,4,"hex"],[45,7,30,7],[45,10,30,10,"hex"],[45,13,30,13],[45,14,30,14,"length"],[45,20,30,20],[45,25,30,25],[45,26,30,26],[45,30,30,30,"hex"],[45,33,30,33],[45,34,30,34,"length"],[45,40,30,40],[45,45,30,45],[45,46,30,46],[45,49,30,49],[45,53,30,49,"_toConsumableArray2"],[45,72,30,49],[45,73,30,49,"default"],[45,80,30,49],[45,82,30,53,"hex"],[45,85,30,56],[45,87,30,58,"map"],[45,90,30,61],[45,91,30,62],[45,101,30,62,"x"],[45,102,30,63],[46,6,30,63],[46,13,30,67,"x"],[46,14,30,68],[46,17,30,71,"x"],[46,18,30,72],[47,4,30,72],[47,6,30,73],[47,7,30,74,"join"],[47,11,30,78],[47,12,30,79],[47,14,30,81],[47,15,30,82],[47,18,30,85,"hex"],[47,21,30,88],[48,4,31,4],[48,11,31,11,"rgbaToRgb"],[48,20,31,20],[48,21,31,21],[49,6,32,8,"r"],[49,7,32,9],[49,9,32,11,"parseInt"],[49,17,32,19],[49,18,32,20],[49,22,32,24],[49,25,32,27,"hex"],[49,28,32,30],[49,29,32,31],[49,30,32,32],[49,31,32,33],[49,34,32,36,"hex"],[49,37,32,39],[49,38,32,40],[49,39,32,41],[49,40,32,42],[49,42,32,44],[49,44,32,46],[49,45,32,47],[50,6,33,8,"g"],[50,7,33,9],[50,9,33,11,"parseInt"],[50,17,33,19],[50,18,33,20],[50,22,33,24],[50,25,33,27,"hex"],[50,28,33,30],[50,29,33,31],[50,30,33,32],[50,31,33,33],[50,34,33,36,"hex"],[50,37,33,39],[50,38,33,40],[50,39,33,41],[50,40,33,42],[50,42,33,44],[50,44,33,46],[50,45,33,47],[51,6,34,8,"b"],[51,7,34,9],[51,9,34,11,"parseInt"],[51,17,34,19],[51,18,34,20],[51,22,34,24],[51,25,34,27,"hex"],[51,28,34,30],[51,29,34,31],[51,30,34,32],[51,31,34,33],[51,34,34,36,"hex"],[51,37,34,39],[51,38,34,40],[51,39,34,41],[51,40,34,42],[51,42,34,44],[51,44,34,46],[51,45,34,47],[52,6,35,8,"a"],[52,7,35,9],[52,9,35,11,"parseInt"],[52,17,35,19],[52,18,35,20],[52,22,35,24],[52,25,35,27,"hex"],[52,28,35,30],[52,29,35,31],[52,30,35,32],[52,31,35,33],[52,34,35,36,"hex"],[52,37,35,39],[52,38,35,40],[52,39,35,41],[52,40,35,42],[52,42,35,44],[52,44,35,46],[52,45,35,47],[52,48,35,50],[52,51,35,53],[52,55,35,57],[53,4,36,4],[53,5,36,5],[53,6,36,6],[54,2,37,0],[55,2,38,0],[56,0,39,0],[57,0,40,0],[58,0,41,0],[59,0,42,0],[60,0,43,0],[61,0,44,0],[62,0,45,0],[63,2,46,7],[63,11,46,16,"anyColorToRgbString"],[63,30,46,35,"anyColorToRgbString"],[63,31,46,36,"anyColor"],[63,39,46,44],[63,41,46,46],[64,4,47,4],[64,8,47,4,"_checkColor"],[64,19,47,4],[64,22,47,24,"checkColor"],[64,32,47,34],[64,33,47,35,"anyColor"],[64,41,47,43],[64,42,47,44],[65,6,47,12,"r"],[65,7,47,13],[65,10,47,13,"_checkColor"],[65,21,47,13],[65,22,47,12,"r"],[65,23,47,13],[66,6,47,15,"g"],[66,7,47,16],[66,10,47,16,"_checkColor"],[66,21,47,16],[66,22,47,15,"g"],[66,23,47,16],[67,6,47,18,"b"],[67,7,47,19],[67,10,47,19,"_checkColor"],[67,21,47,19],[67,22,47,18,"b"],[67,23,47,19],[68,4,48,4],[68,11,48,11],[68,12,48,12,"r"],[68,13,48,13],[68,15,48,15,"g"],[68,16,48,16],[68,18,48,18,"b"],[68,19,48,19],[68,20,48,20],[68,21,48,21,"join"],[68,25,48,25],[68,26,48,26],[68,29,48,29],[68,30,48,30],[69,2,49,0],[70,2,50,0],[71,0,51,0],[72,0,52,0],[73,0,53,0],[74,0,54,0],[75,0,55,0],[76,0,56,0],[77,0,57,0],[78,2,58,0],[78,11,58,9,"hslToRgb"],[78,19,58,17,"hslToRgb"],[78,20,58,18,"hsl"],[78,23,58,21],[78,25,58,23],[79,4,59,4],[79,8,59,10,"hslArray"],[79,16,59,18],[79,19,59,21,"hsl"],[79,22,59,24],[79,23,60,9,"replace"],[79,30,60,16],[79,31,60,17],[79,51,60,37],[79,53,60,39],[79,55,60,41],[79,56,60,42],[79,57,61,9,"split"],[79,62,61,14],[79,63,61,15],[79,66,61,18],[79,67,61,19],[79,68,62,9,"map"],[79,71,62,12],[79,72,62,13],[79,82,62,13,"x"],[79,83,62,14],[80,6,62,14],[80,13,62,18,"x"],[80,14,62,19],[80,15,62,20,"trim"],[80,19,62,24],[80,20,62,25],[80,21,62,26],[81,4,62,26],[81,6,62,27],[82,4,63,4],[82,8,63,8,"h"],[82,9,63,9],[82,12,63,12,"hslArray"],[82,20,63,20],[82,21,63,21],[82,22,63,22],[82,23,63,23],[83,4,64,4],[83,8,64,10,"s"],[83,9,64,11],[83,12,64,14,"Number"],[83,18,64,20],[83,19,64,21,"hslArray"],[83,27,64,29],[83,28,64,30],[83,29,64,31],[83,30,64,32],[83,31,64,33],[83,34,64,36],[83,37,64,39],[84,4,65,4],[84,8,65,10,"l"],[84,9,65,11],[84,12,65,14,"Number"],[84,18,65,20],[84,19,65,21,"hslArray"],[84,27,65,29],[84,28,65,30],[84,29,65,31],[84,30,65,32],[84,31,65,33],[84,34,65,36],[84,37,65,39],[85,4,66,4],[85,8,66,10,"a"],[85,9,66,11],[85,12,66,14],[85,13,66,15],[86,4,67,4],[87,4,68,4],[88,4,69,4],[88,8,69,8],[88,9,69,9,"h"],[88,10,69,10],[88,11,69,11,"indexOf"],[88,18,69,18],[88,19,69,19],[88,24,69,24],[88,25,69,25],[88,27,69,27],[89,6,70,8,"h"],[89,7,70,9],[89,10,70,12,"h"],[89,11,70,13],[89,12,70,14,"substr"],[89,18,70,20],[89,19,70,21],[89,20,70,22],[89,22,70,24,"h"],[89,23,70,25],[89,24,70,26,"length"],[89,30,70,32],[89,33,70,35],[89,34,70,36],[89,35,70,37],[90,6,71,8],[91,4,72,4],[91,5,72,5],[91,11,73,9],[91,15,73,13],[91,16,73,14,"h"],[91,17,73,15],[91,18,73,16,"indexOf"],[91,25,73,23],[91,26,73,24],[91,31,73,29],[91,32,73,30],[91,34,73,32],[92,6,74,8,"h"],[92,7,74,9],[92,10,74,12,"Math"],[92,14,74,16],[92,15,74,17,"round"],[92,20,74,22],[92,21,74,23,"Number"],[92,27,74,29],[92,28,74,30,"h"],[92,29,74,31],[92,30,74,32,"substr"],[92,36,74,38],[92,37,74,39],[92,38,74,40],[92,40,74,42,"h"],[92,41,74,43],[92,42,74,44,"length"],[92,48,74,50],[92,51,74,53],[92,52,74,54],[92,53,74,55],[92,54,74,56],[92,58,74,60],[92,61,74,63],[92,64,74,66,"Math"],[92,68,74,70],[92,69,74,71,"PI"],[92,71,74,73],[92,72,74,74],[92,73,74,75],[93,6,75,8],[94,4,76,4],[94,5,76,5],[94,11,77,9],[94,15,77,13],[94,16,77,14,"h"],[94,17,77,15],[94,18,77,16,"indexOf"],[94,25,77,23],[94,26,77,24],[94,32,77,30],[94,33,77,31],[94,35,77,33],[95,6,78,8,"h"],[95,7,78,9],[95,10,78,12,"Math"],[95,14,78,16],[95,15,78,17,"round"],[95,20,78,22],[95,21,78,23,"Number"],[95,27,78,29],[95,28,78,30,"h"],[95,29,78,31],[95,30,78,32,"substr"],[95,36,78,38],[95,37,78,39],[95,38,78,40],[95,40,78,42,"h"],[95,41,78,43],[95,42,78,44,"length"],[95,48,78,50],[95,51,78,53],[95,52,78,54],[95,53,78,55],[95,54,78,56],[95,57,78,59],[95,60,78,62],[95,61,78,63],[96,4,79,4],[97,4,80,4,"h"],[97,5,80,5],[97,8,80,8,"Number"],[97,14,80,14],[97,15,80,15,"h"],[97,16,80,16],[97,17,80,17],[98,4,81,4],[98,8,81,8,"h"],[98,9,81,9],[98,13,81,13],[98,16,81,16],[98,18,81,18],[99,6,82,8,"h"],[99,7,82,9],[99,11,82,13],[99,14,82,16],[100,4,83,4],[100,5,83,5],[100,6,83,6],[101,4,84,4],[101,8,84,8,"r"],[101,9,84,9],[101,12,84,12],[101,15,84,15],[102,4,85,4],[102,8,85,8,"g"],[102,9,85,9],[102,12,85,12],[102,15,85,15],[103,4,86,4],[103,8,86,8,"b"],[103,9,86,9],[103,12,86,12],[103,15,86,15],[104,4,87,4],[104,8,87,10,"c"],[104,9,87,11],[104,12,87,14],[104,13,87,15],[104,14,87,16],[104,17,87,19,"Math"],[104,21,87,23],[104,22,87,24,"abs"],[104,25,87,27],[104,26,87,28],[104,27,87,29],[104,30,87,32,"l"],[104,31,87,33],[104,34,87,36],[104,35,87,37],[104,36,87,38],[104,40,87,42,"s"],[104,41,87,43],[104,42,87,44],[104,43,87,45],[105,4,88,4],[105,8,88,10,"x"],[105,9,88,11],[105,12,88,14,"c"],[105,13,88,15],[105,17,88,19],[105,18,88,20],[105,21,88,23,"Math"],[105,25,88,27],[105,26,88,28,"abs"],[105,29,88,31],[105,30,88,34,"h"],[105,31,88,35],[105,34,88,38],[105,36,88,40],[105,39,88,44],[105,40,88,45],[105,43,88,49],[105,44,88,50],[105,45,88,51],[105,46,88,52],[105,47,88,53],[105,48,88,54],[106,4,89,4],[106,8,89,10,"m"],[106,9,89,11],[106,12,89,14,"l"],[106,13,89,15],[106,16,89,18,"c"],[106,17,89,19],[106,20,89,22],[106,21,89,23],[106,22,89,24],[106,23,89,25],[107,4,90,4],[107,8,90,8],[107,9,90,9],[107,13,90,13,"h"],[107,14,90,14],[107,18,90,18,"h"],[107,19,90,19],[107,22,90,22],[107,24,90,24],[107,26,90,26],[108,6,91,8,"r"],[108,7,91,9],[108,10,91,12,"c"],[108,11,91,13],[109,6,92,8,"g"],[109,7,92,9],[109,10,92,12,"x"],[109,11,92,13],[110,6,93,8,"b"],[110,7,93,9],[110,10,93,12],[110,11,93,13],[111,4,94,4],[111,5,94,5],[111,11,95,9],[111,15,95,13],[111,17,95,15],[111,21,95,19,"h"],[111,22,95,20],[111,26,95,24,"h"],[111,27,95,25],[111,30,95,28],[111,33,95,31],[111,35,95,33],[112,6,96,8,"r"],[112,7,96,9],[112,10,96,12,"x"],[112,11,96,13],[113,6,97,8,"g"],[113,7,97,9],[113,10,97,12,"c"],[113,11,97,13],[114,6,98,8,"b"],[114,7,98,9],[114,10,98,12],[114,11,98,13],[115,4,99,4],[115,5,99,5],[115,11,100,9],[115,15,100,13],[115,18,100,16],[115,22,100,20,"h"],[115,23,100,21],[115,27,100,25,"h"],[115,28,100,26],[115,31,100,29],[115,34,100,32],[115,36,100,34],[116,6,101,8,"r"],[116,7,101,9],[116,10,101,12],[116,11,101,13],[117,6,102,8,"g"],[117,7,102,9],[117,10,102,12,"c"],[117,11,102,13],[118,6,103,8,"b"],[118,7,103,9],[118,10,103,12,"x"],[118,11,103,13],[119,4,104,4],[119,5,104,5],[119,11,105,9],[119,15,105,13],[119,18,105,16],[119,22,105,20,"h"],[119,23,105,21],[119,27,105,25,"h"],[119,28,105,26],[119,31,105,29],[119,34,105,32],[119,36,105,34],[120,6,106,8,"r"],[120,7,106,9],[120,10,106,12],[120,11,106,13],[121,6,107,8,"g"],[121,7,107,9],[121,10,107,12,"x"],[121,11,107,13],[122,6,108,8,"b"],[122,7,108,9],[122,10,108,12,"c"],[122,11,108,13],[123,4,109,4],[123,5,109,5],[123,11,110,9],[123,15,110,13],[123,18,110,16],[123,22,110,20,"h"],[123,23,110,21],[123,27,110,25,"h"],[123,28,110,26],[123,31,110,29],[123,34,110,32],[123,36,110,34],[124,6,111,8,"r"],[124,7,111,9],[124,10,111,12,"x"],[124,11,111,13],[125,6,112,8,"g"],[125,7,112,9],[125,10,112,12],[125,11,112,13],[126,6,113,8,"b"],[126,7,113,9],[126,10,113,12,"c"],[126,11,113,13],[127,4,114,4],[127,5,114,5],[127,11,115,9],[127,15,115,13],[127,18,115,16],[127,22,115,20,"h"],[127,23,115,21],[127,27,115,25,"h"],[127,28,115,26],[127,31,115,29],[127,34,115,32],[127,36,115,34],[128,6,116,8,"r"],[128,7,116,9],[128,10,116,12,"c"],[128,11,116,13],[129,6,117,8,"g"],[129,7,117,9],[129,10,117,12],[129,11,117,13],[130,6,118,8,"b"],[130,7,118,9],[130,10,118,12,"x"],[130,11,118,13],[131,4,119,4],[132,4,120,4],[132,11,120,11,"rgbaToRgb"],[132,20,120,20],[132,21,120,21],[133,6,121,8,"r"],[133,7,121,9],[133,9,121,11,"Math"],[133,13,121,15],[133,14,121,16,"round"],[133,19,121,21],[133,20,121,22],[133,21,121,23,"r"],[133,22,121,24],[133,25,121,27,"m"],[133,26,121,28],[133,30,121,32],[133,33,121,35],[133,34,121,36],[134,6,122,8,"g"],[134,7,122,9],[134,9,122,11,"Math"],[134,13,122,15],[134,14,122,16,"round"],[134,19,122,21],[134,20,122,22],[134,21,122,23,"g"],[134,22,122,24],[134,25,122,27,"m"],[134,26,122,28],[134,30,122,32],[134,33,122,35],[134,34,122,36],[135,6,123,8,"b"],[135,7,123,9],[135,9,123,11,"Math"],[135,13,123,15],[135,14,123,16,"round"],[135,19,123,21],[135,20,123,22],[135,21,123,23,"b"],[135,22,123,24],[135,25,123,27,"m"],[135,26,123,28],[135,30,123,32],[135,33,123,35],[135,34,123,36],[136,6,124,8,"a"],[136,7,124,9],[136,9,124,8,"a"],[137,4,125,4],[137,5,125,5],[137,6,125,6],[138,2,126,0],[139,2,127,0],[140,0,128,0],[141,0,129,0],[142,0,130,0],[143,0,131,0],[144,0,132,0],[145,0,133,0],[146,0,134,0],[147,2,135,0],[147,11,135,9,"rgbStringToRgb"],[147,25,135,23,"rgbStringToRgb"],[147,26,135,24,"rgb"],[147,29,135,27],[147,31,135,29],[148,4,136,4],[148,8,136,10,"color"],[148,13,136,15],[148,16,136,18,"rgb"],[148,19,136,21],[148,20,136,22,"replace"],[148,27,136,29],[148,28,136,30],[148,42,136,44],[148,44,136,46],[148,46,136,48],[148,47,136,49],[149,4,137,4],[150,4,138,4],[151,4,139,4],[151,8,139,8],[151,9,139,9,"rgb"],[151,12,139,12],[151,13,139,13,"indexOf"],[151,20,139,20],[151,21,139,21],[151,24,139,24],[151,25,139,25],[151,27,139,27],[152,6,140,8],[152,13,140,15,"hexToRgb"],[152,21,140,23],[152,22,140,24,"color"],[152,27,140,29],[152,28,140,30],[153,4,141,4],[154,4,142,4],[155,4,142,4],[155,9,143,9],[155,13,143,13],[155,14,143,14],[155,18,143,18],[155,19,143,19,"test"],[155,23,143,23],[155,24,143,24,"rgb"],[155,27,143,27],[155,28,143,28],[155,30,143,30],[156,6,144,8],[156,13,144,15,"colors"],[156,32,144,21],[156,33,144,22,"color"],[156,38,144,27],[156,39,144,28,"toLowerCase"],[156,50,144,39],[156,51,144,40],[156,52,144,41],[156,53,144,42],[157,4,145,4],[158,4,146,4],[159,4,146,4],[159,9,147,9],[160,6,148,8],[160,10,148,8,"_color$split3"],[160,23,148,8],[160,26,148,26,"color"],[160,31,148,31],[160,32,148,32,"split"],[160,37,148,37],[160,38,148,38],[160,41,148,41],[160,42,148,42],[161,8,148,42,"_color$split4"],[161,21,148,42],[161,28,148,42,"_slicedToArray2"],[161,43,148,42],[161,44,148,42,"default"],[161,51,148,42],[161,53,148,42,"_color$split3"],[161,66,148,42],[162,8,148,15,"r"],[162,9,148,16],[162,12,148,16,"_color$split4"],[162,25,148,16],[163,8,148,18,"g"],[163,9,148,19],[163,12,148,19,"_color$split4"],[163,25,148,19],[164,8,148,21,"b"],[164,9,148,22],[164,12,148,22,"_color$split4"],[164,25,148,22],[165,6,149,8],[165,7,149,9,"r"],[165,8,149,10],[165,10,149,12,"g"],[165,11,149,13],[165,13,149,15,"b"],[165,14,149,16],[165,15,149,17],[165,16,149,18,"forEach"],[165,23,149,25],[165,24,149,26],[165,34,149,26,"x"],[165,35,149,27],[166,8,149,27],[166,15,149,31,"x"],[166,16,149,32],[166,17,149,33,"trim"],[166,21,149,37],[166,22,149,38],[166,23,149,39],[167,6,149,39],[167,8,149,40],[168,6,150,8],[168,13,150,15],[169,8,150,17,"r"],[169,9,150,18],[169,11,150,20,"Number"],[169,17,150,26],[169,18,150,27,"r"],[169,19,150,28],[169,20,150,29],[170,8,150,31,"g"],[170,9,150,32],[170,11,150,34,"Number"],[170,17,150,40],[170,18,150,41,"g"],[170,19,150,42],[170,20,150,43],[171,8,150,45,"b"],[171,9,150,46],[171,11,150,48,"Number"],[171,17,150,54],[171,18,150,55,"b"],[171,19,150,56],[172,6,150,58],[172,7,150,59],[173,4,151,4],[174,2,152,0],[175,2,153,0],[176,0,154,0],[177,0,155,0],[178,0,156,0],[179,0,157,0],[180,0,158,0],[181,0,159,0],[182,0,160,0],[183,2,161,0],[183,11,161,9,"rgbaToRgb"],[183,20,161,18,"rgbaToRgb"],[183,21,161,19,"rgba"],[183,25,161,23],[183,27,161,25],[184,4,162,4],[184,8,162,8,"newAlpha"],[184,16,162,16],[184,19,162,19],[184,20,162,20],[185,4,163,4],[185,8,163,8,"RGB"],[185,11,163,11],[185,14,163,14],[185,21,163,21,"rgba"],[185,25,163,25],[185,30,163,30],[185,38,163,38],[185,41,163,41,"rgba"],[185,45,163,45],[185,48,163,48],[186,6,163,50,"r"],[186,7,163,51],[186,9,163,53],[186,12,163,56],[187,6,163,58,"g"],[187,7,163,59],[187,9,163,61],[187,12,163,64],[188,6,163,66,"b"],[188,7,163,67],[188,9,163,69],[189,4,163,73],[189,5,163,74],[190,4,164,4],[190,8,164,10,"calc"],[190,12,164,14],[190,15,164,17],[190,24,164,10,"calc"],[190,28,164,14,"calc"],[190,29,164,18,"val"],[190,32,164,21],[191,6,164,21],[191,13,164,26,"Math"],[191,17,164,30],[191,18,164,31,"round"],[191,23,164,36],[191,24,164,37,"newAlpha"],[191,32,164,45],[191,36,164,49,"val"],[191,39,164,52],[191,42,164,55],[191,45,164,58],[191,46,164,59],[191,49,164,62],[191,52,164,65],[191,53,164,66],[192,4,164,66],[192,6,164,67],[192,7,164,68],[193,4,165,4],[194,4,166,4],[194,8,166,8],[194,15,166,15,"rgba"],[194,19,166,19],[194,24,166,24],[194,32,166,32],[194,34,166,34],[195,6,167,8],[195,10,167,14,"val"],[195,13,167,17],[195,16,167,20,"rgba"],[195,20,167,24],[195,21,167,25,"replace"],[195,28,167,32],[195,29,167,33],[195,44,167,48],[195,46,167,50],[195,48,167,52],[195,49,167,53],[196,6,168,8],[196,10,168,14,"color"],[196,15,168,19],[196,18,168,22,"val"],[196,21,168,25],[196,22,168,26,"slice"],[196,27,168,31],[196,28,168,32],[196,29,168,33],[196,31,168,35,"val"],[196,34,168,38],[196,35,168,39,"lastIndexOf"],[196,46,168,50],[196,47,168,51],[196,50,168,54],[196,51,168,55],[196,52,168,56],[196,53,168,57,"trim"],[196,57,168,61],[196,58,168,62],[196,59,168,63],[197,6,169,8],[197,10,169,14,"alpha"],[197,15,169,19],[197,18,169,22,"Number"],[197,24,169,28],[197,25,169,29,"val"],[197,28,169,32],[197,29,169,33,"slice"],[197,34,169,38],[197,35,169,39,"val"],[197,38,169,42],[197,39,169,43,"lastIndexOf"],[197,50,169,54],[197,51,169,55],[197,54,169,58],[197,55,169,59],[197,58,169,62],[197,59,169,63],[197,60,169,64],[197,61,169,65,"trim"],[197,65,169,69],[197,66,169,70],[197,67,169,71],[197,68,169,72],[198,6,170,8],[199,6,171,8],[199,10,171,12,"color"],[199,15,171,17],[199,16,171,18],[199,17,171,19],[199,18,171,20],[199,23,171,25],[199,26,171,28],[199,28,171,30],[200,8,172,12,"RGB"],[200,11,172,15],[200,14,172,18,"hexToRgb"],[200,22,172,26],[200,23,172,27,"color"],[200,28,172,32],[200,29,172,33],[201,6,173,8],[202,6,174,8],[203,6,174,8],[203,11,175,13],[203,15,175,17],[203,16,175,18],[203,20,175,22],[203,21,175,23,"test"],[203,25,175,27],[203,26,175,28,"color"],[203,31,175,33],[203,32,175,34],[203,34,175,36],[204,8,176,12,"RGB"],[204,11,176,15],[204,14,176,18,"colors"],[204,33,176,24],[204,34,176,25,"color"],[204,39,176,30],[204,40,176,31,"toLowerCase"],[204,51,176,42],[204,52,176,43],[204,53,176,44],[204,54,176,45],[205,6,177,8],[206,6,178,8],[207,6,178,8],[207,11,179,13],[208,8,180,12],[208,12,180,12,"_color$split5"],[208,25,180,12],[208,28,180,30,"color"],[208,33,180,35],[208,34,180,36,"split"],[208,39,180,41],[208,40,180,42],[208,43,180,45],[208,44,180,46],[209,10,180,46,"_color$split6"],[209,23,180,46],[209,30,180,46,"_slicedToArray2"],[209,45,180,46],[209,46,180,46,"default"],[209,53,180,46],[209,55,180,46,"_color$split5"],[209,68,180,46],[210,10,180,19,"r"],[210,11,180,20],[210,14,180,20,"_color$split6"],[210,27,180,20],[211,10,180,22,"g"],[211,11,180,23],[211,14,180,23,"_color$split6"],[211,27,180,23],[212,10,180,25,"b"],[212,11,180,26],[212,14,180,26,"_color$split6"],[212,27,180,26],[213,8,181,12],[213,9,181,13,"r"],[213,10,181,14],[213,12,181,16,"g"],[213,13,181,17],[213,15,181,19,"b"],[213,16,181,20],[213,17,181,21],[213,18,181,22,"forEach"],[213,25,181,29],[213,26,181,30],[213,36,181,30,"x"],[213,37,181,31],[214,10,181,31],[214,17,181,35,"Number"],[214,23,181,41],[214,24,181,42,"x"],[214,25,181,43],[214,26,181,44,"trim"],[214,30,181,48],[214,31,181,49],[214,32,181,50],[214,33,181,51],[215,8,181,51],[215,10,181,52],[216,8,182,12,"RGB"],[216,11,182,15],[216,14,182,18],[217,10,182,20,"r"],[217,11,182,21],[217,13,182,23,"Number"],[217,19,182,29],[217,20,182,30,"r"],[217,21,182,31],[217,22,182,32],[218,10,182,34,"g"],[218,11,182,35],[218,13,182,37,"Number"],[218,19,182,43],[218,20,182,44,"g"],[218,21,182,45],[218,22,182,46],[219,10,182,48,"b"],[219,11,182,49],[219,13,182,51,"Number"],[219,19,182,57],[219,20,182,58,"b"],[219,21,182,59],[220,8,182,61],[220,9,182,62],[221,6,183,8],[222,6,184,8],[223,6,185,8,"newAlpha"],[223,14,185,16],[223,17,185,19,"alpha"],[223,22,185,24],[223,27,185,29],[223,28,185,30],[223,31,185,33],[223,32,185,34],[223,35,185,37,"Number"],[223,41,185,43],[223,42,185,44],[223,43,185,45],[223,44,185,46],[223,47,185,49,"alpha"],[223,52,185,54],[223,54,185,56,"toPrecision"],[223,65,185,67],[223,66,185,68],[223,67,185,69],[223,68,185,70],[223,69,185,71],[224,4,186,4],[225,4,187,4],[225,11,187,11],[226,6,187,13,"r"],[226,7,187,14],[226,9,187,16,"calc"],[226,13,187,20],[226,14,187,21,"RGB"],[226,17,187,24],[226,18,187,25,"r"],[226,19,187,26],[226,20,187,27],[227,6,187,29,"g"],[227,7,187,30],[227,9,187,32,"calc"],[227,13,187,36],[227,14,187,37,"RGB"],[227,17,187,40],[227,18,187,41,"g"],[227,19,187,42],[227,20,187,43],[228,6,187,45,"b"],[228,7,187,46],[228,9,187,48,"calc"],[228,13,187,52],[228,14,187,53,"RGB"],[228,17,187,56],[228,18,187,57,"b"],[228,19,187,58],[229,4,187,60],[229,5,187,61],[230,2,188,0],[231,2,189,0],[232,0,190,0],[233,0,191,0],[234,0,192,0],[235,0,193,0],[236,0,194,0],[237,0,195,0],[238,0,196,0],[239,2,197,0],[239,11,197,9,"checkColor"],[239,21,197,19,"checkColor"],[239,22,197,20,"color"],[239,27,197,25],[239,29,197,27],[240,4,198,4],[240,8,198,8,"color"],[240,13,198,13],[240,17,198,17,"colors"],[240,36,198,23],[240,38,198,25],[241,6,199,8],[241,13,199,15,"colors"],[241,32,199,21],[241,33,199,22,"color"],[241,38,199,27],[241,39,199,28,"toLowerCase"],[241,50,199,39],[241,51,199,40],[241,52,199,41],[241,53,199,42],[242,4,200,4],[242,5,200,5],[242,11,201,9],[242,15,201,13,"color"],[242,20,201,18],[242,21,201,19],[242,22,201,20],[242,23,201,21],[242,28,201,26],[242,31,201,29],[242,33,201,31],[243,6,202,8],[243,13,202,15,"hexToRgb"],[243,21,202,23],[243,22,202,24,"color"],[243,27,202,29],[243,28,202,30],[244,6,203,8],[245,4,204,4],[245,5,204,5],[245,11,205,9],[245,15,205,13],[245,16,205,14,"color"],[245,21,205,19],[245,22,205,20,"indexOf"],[245,29,205,27],[245,30,205,28],[245,35,205,33],[245,36,205,34],[245,38,205,36],[246,6,206,8],[246,13,206,15,"hslToRgb"],[246,21,206,23],[246,22,206,24,"color"],[246,27,206,29],[246,28,206,30],[247,6,207,8],[248,4,208,4],[248,5,208,5],[248,11,209,9],[248,15,209,13],[248,16,209,14,"color"],[248,21,209,19],[248,22,209,20,"indexOf"],[248,29,209,27],[248,30,209,28],[248,36,209,34],[248,37,209,35],[248,39,209,37],[249,6,210,8],[249,13,210,15,"rgbaToRgb"],[249,22,210,24],[249,23,210,25,"color"],[249,28,210,30],[249,29,210,31],[250,6,211,8],[251,4,212,4],[251,5,212,5],[251,11,213,9],[251,15,213,13],[251,16,213,14,"color"],[251,21,213,19],[251,22,213,20,"indexOf"],[251,29,213,27],[251,30,213,28],[251,35,213,33],[251,36,213,34],[251,38,213,36],[252,6,214,8],[252,13,214,15,"rgbStringToRgb"],[252,27,214,29],[252,28,214,30,"color"],[252,33,214,35],[252,34,214,36],[253,4,215,4],[254,4,216,4],[254,11,216,11],[255,6,216,13,"r"],[255,7,216,14],[255,9,216,16],[255,12,216,19],[256,6,216,21,"g"],[256,7,216,22],[256,9,216,24],[256,12,216,27],[257,6,216,29,"b"],[257,7,216,30],[257,9,216,32],[258,4,216,36],[258,5,216,37],[259,2,217,0],[260,2,218,0],[261,0,219,0],[262,0,220,0],[263,0,221,0],[264,0,222,0],[265,0,223,0],[266,0,224,0],[267,0,225,0],[268,2,226,7],[268,11,226,16,"setColorBasedOnBackground"],[268,36,226,41,"setColorBasedOnBackground"],[268,37,226,42,"color"],[268,42,226,47],[268,44,226,49],[269,4,227,4],[269,8,227,10,"c"],[269,9,227,11],[269,12,227,14,"checkColor"],[269,22,227,24],[269,23,227,25,"color"],[269,28,227,30],[269,29,227,31],[270,4,228,4],[270,8,228,10,"RGB"],[270,11,228,13],[270,14,228,16],[270,21,228,23,"c"],[270,22,228,24],[270,27,228,29],[270,35,228,37],[270,38,228,40,"c"],[270,39,228,41],[270,42,228,44],[271,6,228,46,"r"],[271,7,228,47],[271,9,228,49],[271,12,228,52],[272,6,228,54,"g"],[272,7,228,55],[272,9,228,57],[272,12,228,60],[273,6,228,62,"b"],[273,7,228,63],[273,9,228,65],[274,4,228,69],[274,5,228,70],[275,4,229,4],[276,4,230,4],[276,8,230,10,"o"],[276,9,230,11],[276,12,230,14,"Math"],[276,16,230,18],[276,17,230,19,"round"],[276,22,230,24],[276,23,230,25],[276,24,230,26,"RGB"],[276,27,230,29],[276,28,230,30,"r"],[276,29,230,31],[276,32,230,34],[276,35,230,37],[276,38,230,40,"RGB"],[276,41,230,43],[276,42,230,44,"g"],[276,43,230,45],[276,46,230,48],[276,49,230,51],[276,52,230,54,"RGB"],[276,55,230,57],[276,56,230,58,"b"],[276,57,230,59],[276,60,230,62],[276,63,230,65],[276,67,230,69],[276,71,230,73],[276,72,230,74],[277,4,231,4],[277,11,231,11,"o"],[277,12,231,12],[277,15,231,15],[277,18,231,18],[277,21,231,21],[277,38,231,38],[277,41,231,41],[277,64,231,64],[278,2,232,0],[279,2,233,0],[280,0,234,0],[281,0,235,0],[282,0,236,0],[283,0,237,0],[284,0,238,0],[285,0,239,0],[286,0,240,0],[287,0,241,0],[288,0,242,0],[289,0,243,0],[290,0,244,0],[291,2,245,7],[291,11,245,16,"setContrastScale"],[291,27,245,32,"setContrastScale"],[291,28,245,33,"contrast"],[291,36,245,41],[291,38,245,43,"color"],[291,43,245,48],[291,45,245,50],[292,4,246,4],[292,8,246,8,"contrast"],[292,16,246,16],[292,19,246,19],[292,20,246,20],[292,22,246,22],[293,6,247,8,"contrast"],[293,14,247,16],[293,17,247,19],[293,18,247,20],[294,4,248,4],[295,4,249,4],[295,8,249,8,"contrast"],[295,16,249,16],[295,19,249,19],[295,20,249,20],[295,22,249,22],[296,6,250,8,"contrast"],[296,14,250,16],[296,17,250,19],[296,18,250,20],[297,4,251,4],[298,4,252,4],[298,8,252,10,"max"],[298,11,252,13],[298,14,252,16],[298,17,252,19],[299,4,253,4],[299,8,253,10,"c"],[299,9,253,11],[299,12,253,14,"checkColor"],[299,22,253,24],[299,23,253,25,"color"],[299,28,253,30],[299,29,253,31],[300,4,254,4],[300,8,254,4,"_ref"],[300,12,254,4],[300,15,254,24],[300,22,254,31,"c"],[300,23,254,32],[300,28,254,37],[300,36,254,45],[300,39,254,48,"c"],[300,40,254,49],[300,43,254,52],[301,8,254,54,"r"],[301,9,254,55],[301,11,254,57],[301,14,254,60],[302,8,254,62,"g"],[302,9,254,63],[302,11,254,65],[302,14,254,68],[303,8,254,70,"b"],[303,9,254,71],[303,11,254,73],[304,6,254,77],[304,7,254,78],[305,6,254,12,"r"],[305,7,254,13],[305,10,254,13,"_ref"],[305,14,254,13],[305,15,254,12,"r"],[305,16,254,13],[306,6,254,15,"g"],[306,7,254,16],[306,10,254,16,"_ref"],[306,14,254,16],[306,15,254,15,"g"],[306,16,254,16],[307,6,254,18,"b"],[307,7,254,19],[307,10,254,19,"_ref"],[307,14,254,19],[307,15,254,18,"b"],[307,16,254,19],[308,4,255,4],[309,4,256,4],[309,8,256,10,"brightness"],[309,18,256,20],[309,21,256,23,"Math"],[309,25,256,27],[309,26,256,28,"round"],[309,31,256,33],[309,32,256,34],[309,33,256,35,"r"],[309,34,256,36],[309,37,256,39],[309,40,256,42],[309,43,256,45,"g"],[309,44,256,46],[309,47,256,49],[309,50,256,52],[309,53,256,55,"b"],[309,54,256,56],[309,57,256,59],[309,60,256,62],[309,64,256,66],[309,68,256,70],[309,69,256,71],[310,4,257,4],[310,8,257,10,"value"],[310,13,257,15],[310,16,257,18,"Math"],[310,20,257,22],[310,21,257,23,"round"],[310,26,257,28],[310,27,257,29,"brightness"],[310,37,257,39],[310,40,257,42,"max"],[310,43,257,45],[310,46,257,48],[310,47,257,49],[310,50,257,52,"max"],[310,53,257,55],[310,56,257,58,"max"],[310,59,257,61],[310,62,257,64,"contrast"],[310,70,257,72],[310,73,257,75,"max"],[310,76,257,78],[310,79,257,81,"contrast"],[310,87,257,89],[310,88,257,90],[311,4,258,4],[311,11,258,11,"RgbToHex"],[311,19,258,19],[311,20,258,20,"value"],[311,25,258,25],[311,27,258,27,"value"],[311,32,258,32],[311,34,258,34,"value"],[311,39,258,39],[311,40,258,40],[312,2,259,0],[313,2,259,1],[313,6,259,1,"_c"],[313,8,259,1],[314,2,259,1,"$RefreshReg$"],[314,14,259,1],[314,15,259,1,"_c"],[314,17,259,1],[315,0,259,1],[315,3]],"functionMap":{"names":["<global>","RgbToHex","hexToRgb","map$argument_0","anyColorToRgbString","hslToRgb","hsl.replace.split.map$argument_0","rgbStringToRgb","forEach$argument_0","rgbaToRgb","calc","checkColor","setColorBasedOnBackground","setContrastScale"],"mappings":"AAA;ACW;CDO;AES;8DCE,UD;CFO;OIS;CJG;AKS;aCI,aD;CLgE;AOS;0BCc,aD;CPG;ASS;iBCG,iDD;8BDiB,qBC;CTO;AWS;CXoB;OYS;CZM;Oaa;Cbc"}},"type":"js/module"}]}