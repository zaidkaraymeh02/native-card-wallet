{"dependencies":[],"output":[{"data":{"code":"__d((function(g,r,i,a,m,_e,d){function e(e){if(!e)return null;var n=new Error(e.message);return n.key=e.key,n}function n(e){return Array.isArray(e)?0===e.length?null:e:e?[e]:null}Object.defineProperty(_e,\"__esModule\",{value:!0}),_e.checkValidArgs=function(e,n){if(!Array.isArray(e)||0===e.length||!Array.isArray(e[0]))throw new Error(\"[AsyncStorage] Expected array of key-value pairs as first argument to multiSet\");if(n&&\"function\"!=typeof n){if(Array.isArray(n))throw new Error(\"[AsyncStorage] Expected function as second argument to multiSet. Did you forget to wrap key-value pairs in an array for the first argument?\");throw new Error(\"[AsyncStorage] Expected function as second argument to multiSet\")}},_e.checkValidInput=function(){for(var e=arguments.length,n=new Array(e),t=0;t<e;t++)n[t]=arguments[t];var o=n[0],s=n[1];\"string\"!=typeof o&&console.warn(`[AsyncStorage] Using ${typeof o} type for key is not supported. This can lead to unexpected behavior/errors. Use string instead.\\nKey passed: ${o}\\n`);if(n.length>1&&\"string\"!=typeof s){if(null==s)throw new Error(`[AsyncStorage] Passing null/undefined as value is not supported. If you want to remove value, Use .removeItem method instead.\\nPassed value: ${s}\\nPassed key: ${o}\\n`);console.warn(`[AsyncStorage] The value for key \"${o}\" is not a string. This can lead to unexpected behavior/errors. Consider stringifying it.\\nPassed value: ${s}\\nPassed key: ${o}\\n`)}},_e.convertError=e,_e.convertErrors=function(t){var o=n(t);return o?o.map((function(n){return e(n)})):null}}));","lineCount":1,"map":[[1,30,54,7],[1,39,54,16,"convertError"],[1,41,54,29,"error"],[1,44,55,2],[1,48,55,7,"error"],[1,50,56,4],[1,57,56,11],[1,62,59,2],[1,66,59,8,"out"],[1,68,59,14],[1,72,59,18,"Error"],[1,78,59,24,"error"],[1,80,59,30,"message"],[1,89,61,2],[1,96,60,2,"out"],[1,98,60,11],[1,102,60,15,"error"],[1,104,60,21,"key"],[1,108,61,9,"out"],[1,109,62,0],[1,110,71,0],[1,119,71,9,"ensureArray"],[1,121,71,21,"e"],[1,124,72,2],[1,131,72,6,"Array"],[1,137,72,12,"isArray"],[1,145,72,20,"e"],[1,148,73,24],[1,152,73,11,"e"],[1,154,73,13,"length"],[1,161,73,28],[1,166,73,35,"e"],[1,168,74,13,"e"],[1,170,75,11],[1,171,75,12,"e"],[1,174,77,11],[1,178,79,0],[1,179],[1,247,3,7],[1,256,4,2,"keyValuePairs"],[1,258,5,2,"callback"],[1,261,7,2],[1,265,8,5,"Array"],[1,271,8,11,"isArray"],[1,279,8,19,"keyValuePairs"],[1,283,9,29],[1,287,9,4,"keyValuePairs"],[1,289,9,18,"length"],[1,298,10,5,"Array"],[1,304,10,11,"isArray"],[1,312,10,19,"keyValuePairs"],[1,314,10,33],[1,318,12,4],[1,324,12,10],[1,328,12,14,"Error"],[1,334,13,6],[1,416,17,2],[1,419,17,6,"callback"],[1,422,17,38],[1,441,17,25,"callback"],[1,443,17,50],[1,444,18,4],[1,447,18,8,"Array"],[1,453,18,14,"isArray"],[1,461,18,22,"callback"],[1,464,19,6],[1,470,19,12],[1,474,19,16,"Error"],[1,480,20,8],[1,623,24,4],[1,629,24,10],[1,633,24,14,"Error"],[1,639,25,6],[1,705,27,2],[1,706,28,0],[1,708],[1,727,30,7],[1,738,30,53],[1,746,30,53,"_len"],[1,748,30,53,"arguments"],[1,758,30,53,"length"],[1,765,30,35,"input"],[1,767,30,40],[1,771,30,40,"Array"],[1,777,30,40,"_len"],[1,780,30,40,"_key"],[1,782,30,40],[1,784,30,40,"_key"],[1,786,30,40,"_len"],[1,788,30,40,"_key"],[1,792,30,35,"input"],[1,794,30,40,"_key"],[1,797,30,40,"arguments"],[1,807,30,40,"_key"],[1,810,31,2],[1,814,31,9,"key"],[1,816,31,23,"input"],[1,818,31,28],[1,821,31,14,"value"],[1,823,31,23,"input"],[1,825,31,28],[1,828,33,21],[1,845,33,13,"key"],[1,848,35,4,"console"],[1,856,35,12,"warn"],[1,861,36,6],[1,892,36,37,"key"],[1,1006,36,153,"key"],[1,1013,40,2],[1,1016,40,6,"input"],[1,1018,40,12,"length"],[1,1025,40,21],[1,1028,40,43],[1,1045,40,33,"value"],[1,1047,40,53],[1,1048,41,4],[1,1051,41,17],[1,1057,41,8,"value"],[1,1059,42,6],[1,1065,42,12],[1,1069,42,16,"Error"],[1,1075,43,8],[1,1219,43,152,"value"],[1,1237,43,174,"key"],[1,1244,47,6,"console"],[1,1252,47,14,"warn"],[1,1257,48,8],[1,1294,48,45,"key"],[1,1403,48,156,"value"],[1,1421,48,178,"key"],[1,1427,51,2],[1,1428,52,0],[1,1430],[1,1465,64,7],[1,1474,65,2,"errs"],[1,1477,67,2],[1,1481,67,8,"errors"],[1,1483,67,17,"ensureArray"],[1,1485,67,29,"errs"],[1,1488,68,2],[1,1495,68,9,"errors"],[1,1497,68,18,"errors"],[1,1499,68,25,"map"],[1,1504,68,29],[1,1513,68,30,"e"],[1,1516,68,31],[1,1523,68,36,"convertError"],[1,1525,68,49,"e"],[1,1527,68,51],[1,1531,68,55],[1,1535,69,0],[1,1536,79,1],[1,1540]],"functionMap":{"names":["<global>","checkValidArgs","checkValidInput","convertError","convertErrors","errors.map$argument_0","ensureArray"],"mappings":"AAA;OCE;CDyB;OEE;CFsB;OGE;CHQ;OIE;6BCI,sBD;CJC;AME;CNQ"}},"type":"js/module"}]}