{"dependencies":[{"name":"react","data":{"asyncType":null,"locs":[{"start":{"line":27,"column":14,"index":928},"end":{"line":27,"column":30,"index":944}}],"key":"a4EMkKqamYWCMMPV7UeQlqGQ+ks="}},{"name":"../../ReactNative/RendererProxy","data":{"asyncType":null,"locs":[{"start":{"line":25,"column":0,"index":791},"end":{"line":25,"column":68,"index":859}}],"key":"QxznglvNF7hpOO8cCvqhdE7Uo6Y="}},{"name":"../../Components/TextInput/RCTSingelineTextInputNativeComponent","data":{"asyncType":null,"locs":[{"start":{"line":23,"column":0,"index":676},"end":{"line":23,"column":113,"index":789}},{"start":{"line":23,"column":0,"index":676},"end":{"line":23,"column":113,"index":789}}],"key":"xy5EgYbiw/xdXM0MW9GrDb5OAUs="}},{"name":"../../Components/TextInput/AndroidTextInputNativeComponent","data":{"asyncType":null,"locs":[{"start":{"line":22,"column":0,"index":563},"end":{"line":22,"column":112,"index":675}},{"start":{"line":22,"column":0,"index":563},"end":{"line":22,"column":112,"index":675}}],"key":"1TUKdqxiiMm1SBvRrq2vze47EXg="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * @format\n   * \n   */\n\n  // This class is responsible for coordinating the \"focused\" state for\n  // TextInputs. All calls relating to the keyboard should be funneled\n  // through here.\n\n  var React = _$$_REQUIRE(_dependencyMap[0], \"react\");\n  var currentlyFocusedInputRef = null;\n  var inputs = new Set();\n  function currentlyFocusedInput() {\n    return currentlyFocusedInputRef;\n  }\n\n  /**\n   * Returns the ID of the currently focused text field, if one exists\n   * If no text field is focused it returns null\n   */\n  function currentlyFocusedField() {\n    if (__DEV__) {\n      console.error('currentlyFocusedField is deprecated and will be removed in a future release. Use currentlyFocusedInput');\n    }\n    return _$$_REQUIRE(_dependencyMap[1], \"../../ReactNative/RendererProxy\").findNodeHandle(currentlyFocusedInputRef);\n  }\n  function focusInput(textField) {\n    if (currentlyFocusedInputRef !== textField && textField != null) {\n      currentlyFocusedInputRef = textField;\n    }\n  }\n  function blurInput(textField) {\n    if (currentlyFocusedInputRef === textField && textField != null) {\n      currentlyFocusedInputRef = null;\n    }\n  }\n  function focusField(textFieldID) {\n    if (__DEV__) {\n      console.error('focusField no longer works. Use focusInput');\n    }\n    return;\n  }\n  function blurField(textFieldID) {\n    if (__DEV__) {\n      console.error('blurField no longer works. Use blurInput');\n    }\n    return;\n  }\n\n  /**\n   * @param {number} TextInputID id of the text field to focus\n   * Focuses the specified text field\n   * noop if the text field was already focused or if the field is not editable\n   */\n  function focusTextInput(textField) {\n    if (typeof textField === 'number') {\n      if (__DEV__) {\n        console.error('focusTextInput must be called with a host component. Passing a react tag is deprecated.');\n      }\n      return;\n    }\n    if (textField != null) {\n      var _textField$currentPro;\n      var fieldCanBeFocused = currentlyFocusedInputRef !== textField &&\n      // $FlowFixMe - `currentProps` is missing in `NativeMethods`\n      ((_textField$currentPro = textField.currentProps) == null ? void 0 : _textField$currentPro.editable) !== false;\n      if (!fieldCanBeFocused) {\n        return;\n      }\n      focusInput(textField);\n      if (\"android\" === 'ios') {\n        // This isn't necessarily a single line text input\n        // But commands don't actually care as long as the thing being passed in\n        // actually has a command with that name. So this should work with single\n        // and multiline text inputs. Ideally we'll merge them into one component\n        // in the future.\n        _$$_REQUIRE(_dependencyMap[2], \"../../Components/TextInput/RCTSingelineTextInputNativeComponent\").Commands.focus(textField);\n      } else if (\"android\" === 'android') {\n        _$$_REQUIRE(_dependencyMap[3], \"../../Components/TextInput/AndroidTextInputNativeComponent\").Commands.focus(textField);\n      }\n    }\n  }\n\n  /**\n   * @param {number} textFieldID id of the text field to unfocus\n   * Unfocuses the specified text field\n   * noop if it wasn't focused\n   */\n  function blurTextInput(textField) {\n    if (typeof textField === 'number') {\n      if (__DEV__) {\n        console.error('blurTextInput must be called with a host component. Passing a react tag is deprecated.');\n      }\n      return;\n    }\n    if (currentlyFocusedInputRef === textField && textField != null) {\n      blurInput(textField);\n      if (\"android\" === 'ios') {\n        // This isn't necessarily a single line text input\n        // But commands don't actually care as long as the thing being passed in\n        // actually has a command with that name. So this should work with single\n        // and multiline text inputs. Ideally we'll merge them into one component\n        // in the future.\n        _$$_REQUIRE(_dependencyMap[2], \"../../Components/TextInput/RCTSingelineTextInputNativeComponent\").Commands.blur(textField);\n      } else if (\"android\" === 'android') {\n        _$$_REQUIRE(_dependencyMap[3], \"../../Components/TextInput/AndroidTextInputNativeComponent\").Commands.blur(textField);\n      }\n    }\n  }\n  function registerInput(textField) {\n    if (typeof textField === 'number') {\n      if (__DEV__) {\n        console.error('registerInput must be called with a host component. Passing a react tag is deprecated.');\n      }\n      return;\n    }\n    inputs.add(textField);\n  }\n  function unregisterInput(textField) {\n    if (typeof textField === 'number') {\n      if (__DEV__) {\n        console.error('unregisterInput must be called with a host component. Passing a react tag is deprecated.');\n      }\n      return;\n    }\n    inputs.delete(textField);\n  }\n  function isTextInput(textField) {\n    if (typeof textField === 'number') {\n      if (__DEV__) {\n        console.error('isTextInput must be called with a host component. Passing a react tag is deprecated.');\n      }\n      return false;\n    }\n    return inputs.has(textField);\n  }\n  module.exports = {\n    currentlyFocusedInput: currentlyFocusedInput,\n    focusInput: focusInput,\n    blurInput: blurInput,\n    currentlyFocusedField: currentlyFocusedField,\n    focusField: focusField,\n    blurField: blurField,\n    focusTextInput: focusTextInput,\n    blurTextInput: blurTextInput,\n    registerInput: registerInput,\n    unregisterInput: unregisterInput,\n    isTextInput: isTextInput\n  };\n});","lineCount":156,"map":[[2,2,1,0],[3,0,2,0],[4,0,3,0],[5,0,4,0],[6,0,5,0],[7,0,6,0],[8,0,7,0],[9,0,8,0],[10,0,9,0],[12,2,11,0],[13,2,12,0],[14,2,13,0],[16,2,27,0],[16,6,27,6,"React"],[16,11,27,11],[16,14,27,14,"require"],[16,25,27,21],[16,26,27,21,"_dependencyMap"],[16,40,27,21],[16,52,27,29],[16,53,27,30],[17,2,30,0],[17,6,30,4,"currentlyFocusedInputRef"],[17,30,30,43],[17,33,30,46],[17,37,30,50],[18,2,31,0],[18,6,31,6,"inputs"],[18,12,31,12],[18,15,31,15],[18,19,31,19,"Set"],[18,22,31,22],[18,23,42,3],[18,24,42,4],[19,2,44,0],[19,11,44,9,"currentlyFocusedInput"],[19,32,44,30,"currentlyFocusedInput"],[19,33,44,30],[19,35,44,48],[20,4,45,2],[20,11,45,9,"currentlyFocusedInputRef"],[20,35,45,33],[21,2,46,0],[23,2,48,0],[24,0,49,0],[25,0,50,0],[26,0,51,0],[27,2,52,0],[27,11,52,9,"currentlyFocusedField"],[27,32,52,30,"currentlyFocusedField"],[27,33,52,30],[27,35,52,42],[28,4,53,2],[28,8,53,6,"__DEV__"],[28,15,53,13],[28,17,53,15],[29,6,54,4,"console"],[29,13,54,11],[29,14,54,12,"error"],[29,19,54,17],[29,20,55,6],[29,124,56,4],[29,125,56,5],[30,4,57,2],[31,4,59,2],[31,11,59,9,"_$$_REQUIRE"],[31,22,59,9],[31,23,59,9,"_dependencyMap"],[31,37,59,9],[31,77,59,9,"findNodeHandle"],[31,91,59,9],[31,92,59,24,"currentlyFocusedInputRef"],[31,116,59,48],[31,117,59,49],[32,2,60,0],[33,2,62,0],[33,11,62,9,"focusInput"],[33,21,62,19,"focusInput"],[33,22,62,20,"textField"],[33,31,62,44],[33,33,62,52],[34,4,63,2],[34,8,63,6,"currentlyFocusedInputRef"],[34,32,63,30],[34,37,63,35,"textField"],[34,46,63,44],[34,50,63,48,"textField"],[34,59,63,57],[34,63,63,61],[34,67,63,65],[34,69,63,67],[35,6,64,4,"currentlyFocusedInputRef"],[35,30,64,28],[35,33,64,31,"textField"],[35,42,64,40],[36,4,65,2],[37,2,66,0],[38,2,68,0],[38,11,68,9,"blurInput"],[38,20,68,18,"blurInput"],[38,21,68,19,"textField"],[38,30,68,43],[38,32,68,51],[39,4,69,2],[39,8,69,6,"currentlyFocusedInputRef"],[39,32,69,30],[39,37,69,35,"textField"],[39,46,69,44],[39,50,69,48,"textField"],[39,59,69,57],[39,63,69,61],[39,67,69,65],[39,69,69,67],[40,6,70,4,"currentlyFocusedInputRef"],[40,30,70,28],[40,33,70,31],[40,37,70,35],[41,4,71,2],[42,2,72,0],[43,2,74,0],[43,11,74,9,"focusField"],[43,21,74,19,"focusField"],[43,22,74,20,"textFieldID"],[43,33,74,40],[43,35,74,48],[44,4,75,2],[44,8,75,6,"__DEV__"],[44,15,75,13],[44,17,75,15],[45,6,76,4,"console"],[45,13,76,11],[45,14,76,12,"error"],[45,19,76,17],[45,20,76,18],[45,64,76,62],[45,65,76,63],[46,4,77,2],[47,4,79,2],[48,2,80,0],[49,2,82,0],[49,11,82,9,"blurField"],[49,20,82,18,"blurField"],[49,21,82,19,"textFieldID"],[49,32,82,39],[49,34,82,41],[50,4,83,2],[50,8,83,6,"__DEV__"],[50,15,83,13],[50,17,83,15],[51,6,84,4,"console"],[51,13,84,11],[51,14,84,12,"error"],[51,19,84,17],[51,20,84,18],[51,62,84,60],[51,63,84,61],[52,4,85,2],[53,4,87,2],[54,2,88,0],[56,2,90,0],[57,0,91,0],[58,0,92,0],[59,0,93,0],[60,0,94,0],[61,2,95,0],[61,11,95,9,"focusTextInput"],[61,25,95,23,"focusTextInput"],[61,26,95,24,"textField"],[61,35,95,48],[61,37,95,50],[62,4,96,2],[62,8,96,6],[62,15,96,13,"textField"],[62,24,96,22],[62,29,96,27],[62,37,96,35],[62,39,96,37],[63,6,97,4],[63,10,97,8,"__DEV__"],[63,17,97,15],[63,19,97,17],[64,8,98,6,"console"],[64,15,98,13],[64,16,98,14,"error"],[64,21,98,19],[64,22,99,8],[64,111,100,6],[64,112,100,7],[65,6,101,4],[66,6,103,4],[67,4,104,2],[68,4,106,2],[68,8,106,6,"textField"],[68,17,106,15],[68,21,106,19],[68,25,106,23],[68,27,106,25],[69,6,106,25],[69,10,106,25,"_textField$currentPro"],[69,31,106,25],[70,6,107,4],[70,10,107,10,"fieldCanBeFocused"],[70,27,107,27],[70,30,108,6,"currentlyFocusedInputRef"],[70,54,108,30],[70,59,108,35,"textField"],[70,68,108,44],[71,6,109,6],[72,6,110,6],[72,8,110,6,"_textField$currentPro"],[72,29,110,6],[72,32,110,6,"textField"],[72,41,110,15],[72,42,110,16,"currentProps"],[72,54,110,28],[72,75,110,6,"_textField$currentPro"],[72,96,110,6],[72,97,110,30,"editable"],[72,105,110,38],[72,111,110,43],[72,116,110,48],[73,6,112,4],[73,10,112,8],[73,11,112,9,"fieldCanBeFocused"],[73,28,112,26],[73,30,112,28],[74,8,113,6],[75,6,114,4],[76,6,115,4,"focusInput"],[76,16,115,14],[76,17,115,15,"textField"],[76,26,115,24],[76,27,115,25],[77,6,116,4],[77,10,116,8],[77,24,116,24],[77,29,116,29],[77,31,116,31],[78,8,117,6],[79,8,118,6],[80,8,119,6],[81,8,120,6],[82,8,121,6],[83,8,122,6,"iOSTextInputCommands"],[83,38,122,6],[83,39,122,6,"iOSTextInputCommands"],[83,114,122,26],[83,115,122,27,"focus"],[83,120,122,32],[83,121,122,33,"textField"],[83,130,122,42],[83,131,122,43],[84,6,123,4],[84,7,123,5],[84,13,123,11],[84,17,123,15],[84,31,123,31],[84,40,123,40],[84,42,123,42],[85,8,124,6,"AndroidTextInputCommands"],[85,38,124,6],[85,39,124,6,"AndroidTextInputCommands"],[85,109,124,30],[85,110,124,31,"focus"],[85,115,124,36],[85,116,124,37,"textField"],[85,125,124,46],[85,126,124,47],[86,6,125,4],[87,4,126,2],[88,2,127,0],[90,2,129,0],[91,0,130,0],[92,0,131,0],[93,0,132,0],[94,0,133,0],[95,2,134,0],[95,11,134,9,"blurTextInput"],[95,24,134,22,"blurTextInput"],[95,25,134,23,"textField"],[95,34,134,47],[95,36,134,49],[96,4,135,2],[96,8,135,6],[96,15,135,13,"textField"],[96,24,135,22],[96,29,135,27],[96,37,135,35],[96,39,135,37],[97,6,136,4],[97,10,136,8,"__DEV__"],[97,17,136,15],[97,19,136,17],[98,8,137,6,"console"],[98,15,137,13],[98,16,137,14,"error"],[98,21,137,19],[98,22,138,8],[98,110,139,6],[98,111,139,7],[99,6,140,4],[100,6,142,4],[101,4,143,2],[102,4,145,2],[102,8,145,6,"currentlyFocusedInputRef"],[102,32,145,30],[102,37,145,35,"textField"],[102,46,145,44],[102,50,145,48,"textField"],[102,59,145,57],[102,63,145,61],[102,67,145,65],[102,69,145,67],[103,6,146,4,"blurInput"],[103,15,146,13],[103,16,146,14,"textField"],[103,25,146,23],[103,26,146,24],[104,6,147,4],[104,10,147,8],[104,24,147,24],[104,29,147,29],[104,31,147,31],[105,8,148,6],[106,8,149,6],[107,8,150,6],[108,8,151,6],[109,8,152,6],[110,8,153,6,"iOSTextInputCommands"],[110,38,153,6],[110,39,153,6,"iOSTextInputCommands"],[110,114,153,26],[110,115,153,27,"blur"],[110,119,153,31],[110,120,153,32,"textField"],[110,129,153,41],[110,130,153,42],[111,6,154,4],[111,7,154,5],[111,13,154,11],[111,17,154,15],[111,31,154,31],[111,40,154,40],[111,42,154,42],[112,8,155,6,"AndroidTextInputCommands"],[112,38,155,6],[112,39,155,6,"AndroidTextInputCommands"],[112,109,155,30],[112,110,155,31,"blur"],[112,114,155,35],[112,115,155,36,"textField"],[112,124,155,45],[112,125,155,46],[113,6,156,4],[114,4,157,2],[115,2,158,0],[116,2,160,0],[116,11,160,9,"registerInput"],[116,24,160,22,"registerInput"],[116,25,160,23,"textField"],[116,34,160,46],[116,36,160,48],[117,4,161,2],[117,8,161,6],[117,15,161,13,"textField"],[117,24,161,22],[117,29,161,27],[117,37,161,35],[117,39,161,37],[118,6,162,4],[118,10,162,8,"__DEV__"],[118,17,162,15],[118,19,162,17],[119,8,163,6,"console"],[119,15,163,13],[119,16,163,14,"error"],[119,21,163,19],[119,22,164,8],[119,110,165,6],[119,111,165,7],[120,6,166,4],[121,6,168,4],[122,4,169,2],[123,4,171,2,"inputs"],[123,10,171,8],[123,11,171,9,"add"],[123,14,171,12],[123,15,171,13,"textField"],[123,24,171,22],[123,25,171,23],[124,2,172,0],[125,2,174,0],[125,11,174,9,"unregisterInput"],[125,26,174,24,"unregisterInput"],[125,27,174,25,"textField"],[125,36,174,48],[125,38,174,50],[126,4,175,2],[126,8,175,6],[126,15,175,13,"textField"],[126,24,175,22],[126,29,175,27],[126,37,175,35],[126,39,175,37],[127,6,176,4],[127,10,176,8,"__DEV__"],[127,17,176,15],[127,19,176,17],[128,8,177,6,"console"],[128,15,177,13],[128,16,177,14,"error"],[128,21,177,19],[128,22,178,8],[128,112,179,6],[128,113,179,7],[129,6,180,4],[130,6,182,4],[131,4,183,2],[132,4,184,2,"inputs"],[132,10,184,8],[132,11,184,9,"delete"],[132,17,184,15],[132,18,184,16,"textField"],[132,27,184,25],[132,28,184,26],[133,2,185,0],[134,2,187,0],[134,11,187,9,"isTextInput"],[134,22,187,20,"isTextInput"],[134,23,187,21,"textField"],[134,32,187,44],[134,34,187,55],[135,4,188,2],[135,8,188,6],[135,15,188,13,"textField"],[135,24,188,22],[135,29,188,27],[135,37,188,35],[135,39,188,37],[136,6,189,4],[136,10,189,8,"__DEV__"],[136,17,189,15],[136,19,189,17],[137,8,190,6,"console"],[137,15,190,13],[137,16,190,14,"error"],[137,21,190,19],[137,22,191,8],[137,108,192,6],[137,109,192,7],[138,6,193,4],[139,6,195,4],[139,13,195,11],[139,18,195,16],[140,4,196,2],[141,4,198,2],[141,11,198,9,"inputs"],[141,17,198,15],[141,18,198,16,"has"],[141,21,198,19],[141,22,198,20,"textField"],[141,31,198,29],[141,32,198,30],[142,2,199,0],[143,2,201,0,"module"],[143,8,201,6],[143,9,201,7,"exports"],[143,16,201,14],[143,19,201,17],[144,4,202,2,"currentlyFocusedInput"],[144,25,202,23],[144,27,202,2,"currentlyFocusedInput"],[144,48,202,23],[145,4,203,2,"focusInput"],[145,14,203,12],[145,16,203,2,"focusInput"],[145,26,203,12],[146,4,204,2,"blurInput"],[146,13,204,11],[146,15,204,2,"blurInput"],[146,24,204,11],[147,4,206,2,"currentlyFocusedField"],[147,25,206,23],[147,27,206,2,"currentlyFocusedField"],[147,48,206,23],[148,4,207,2,"focusField"],[148,14,207,12],[148,16,207,2,"focusField"],[148,26,207,12],[149,4,208,2,"blurField"],[149,13,208,11],[149,15,208,2,"blurField"],[149,24,208,11],[150,4,209,2,"focusTextInput"],[150,18,209,16],[150,20,209,2,"focusTextInput"],[150,34,209,16],[151,4,210,2,"blurTextInput"],[151,17,210,15],[151,19,210,2,"blurTextInput"],[151,32,210,15],[152,4,211,2,"registerInput"],[152,17,211,15],[152,19,211,2,"registerInput"],[152,32,211,15],[153,4,212,2,"unregisterInput"],[153,19,212,17],[153,21,212,2,"unregisterInput"],[153,36,212,17],[154,4,213,2,"isTextInput"],[154,15,213,13],[154,17,213,2,"isTextInput"],[155,2,214,0],[155,3,214,1],[156,0,214,2],[156,3]],"functionMap":{"names":["<global>","currentlyFocusedInput","currentlyFocusedField","focusInput","blurInput","focusField","blurField","focusTextInput","blurTextInput","registerInput","unregisterInput","isTextInput"],"mappings":"AAA;AC2C;CDE;AEM;CFQ;AGE;CHI;AIE;CJI;AKE;CLM;AME;CNM;AOO;CPgC;AQO;CRwB;ASE;CTY;AUE;CVW;AWE;CXY"}},"type":"js/module"}]}