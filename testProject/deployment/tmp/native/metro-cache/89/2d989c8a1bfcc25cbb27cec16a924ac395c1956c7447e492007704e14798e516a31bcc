{"dependencies":[{"name":"./ExceptionsManager","data":{"asyncType":null,"locs":[{"start":{"line":13,"column":0,"index":281},"end":{"line":13,"column":68,"index":349}},{"start":{"line":13,"column":0,"index":281},"end":{"line":13,"column":68,"index":349}},{"start":{"line":13,"column":0,"index":281},"end":{"line":13,"column":68,"index":349}}],"key":"dSfct/lO94rdoUbWE4YwKKwr2E8="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * @format\n   * \n   */\n\n  var ReactFiberErrorDialog = {\n    /**\n     * Intercept lifecycle errors and ensure they are shown with the correct stack\n     * trace within the native redbox component.\n     */\n    showErrorDialog: function showErrorDialog(_ref) {\n      var componentStack = _ref.componentStack,\n        errorValue = _ref.error;\n      var error;\n\n      // Typically, `errorValue` should be an error. However, other values such as\n      // strings (or even null) are sometimes thrown.\n      if (errorValue instanceof Error) {\n        /* $FlowFixMe[class-object-subtyping] added when improving typing for\n         * this parameters */\n        error = errorValue;\n      } else if (typeof errorValue === 'string') {\n        /* $FlowFixMe[class-object-subtyping] added when improving typing for\n         * this parameters */\n        error = new (_$$_REQUIRE(_dependencyMap[0], \"./ExceptionsManager\").SyntheticError)(errorValue);\n      } else {\n        /* $FlowFixMe[class-object-subtyping] added when improving typing for\n         * this parameters */\n        error = new (_$$_REQUIRE(_dependencyMap[0], \"./ExceptionsManager\").SyntheticError)('Unspecified error');\n      }\n      try {\n        error.componentStack = componentStack;\n        error.isComponentError = true;\n      } catch (_unused) {\n        // Ignored.\n      }\n      (0, _$$_REQUIRE(_dependencyMap[0], \"./ExceptionsManager\").handleException)(error, false);\n\n      // Return false here to prevent ReactFiberErrorLogger default behavior of\n      // logging error details to console.error. Calls to console.error are\n      // automatically routed to the native redbox controller, which we've already\n      // done above by calling ExceptionsManager.\n      return false;\n    }\n  };\n  var _default = exports.default = ReactFiberErrorDialog;\n});","lineCount":57,"map":[[6,2,1,0],[7,0,2,0],[8,0,3,0],[9,0,4,0],[10,0,5,0],[11,0,6,0],[12,0,7,0],[13,0,8,0],[14,0,9,0],[16,2,22,0],[16,6,22,6,"ReactFiberErrorDialog"],[16,27,22,27],[16,30,22,30],[17,4,23,2],[18,0,24,0],[19,0,25,0],[20,0,26,0],[21,4,27,2,"showErrorDialog"],[21,19,27,17],[21,30,27,2,"showErrorDialog"],[21,45,27,17,"showErrorDialog"],[21,46,27,17,"_ref"],[21,50,27,17],[21,52,27,79],[22,6,27,79],[22,10,27,19,"componentStack"],[22,24,27,33],[22,27,27,33,"_ref"],[22,31,27,33],[22,32,27,19,"componentStack"],[22,46,27,33],[23,8,27,42,"errorValue"],[23,18,27,52],[23,21,27,52,"_ref"],[23,25,27,52],[23,26,27,35,"error"],[23,31,27,40],[24,6,28,4],[24,10,28,8,"error"],[24,15,28,29],[26,6,30,4],[27,6,31,4],[28,6,32,4],[28,10,32,8,"errorValue"],[28,20,32,18],[28,32,32,30,"Error"],[28,37,32,35],[28,39,32,37],[29,8,33,6],[30,0,34,0],[31,8,35,6,"error"],[31,13,35,11],[31,16,35,15,"errorValue"],[31,26,35,41],[32,6,36,4],[32,7,36,5],[32,13,36,11],[32,17,36,15],[32,24,36,22,"errorValue"],[32,34,36,32],[32,39,36,37],[32,47,36,45],[32,49,36,47],[33,8,37,6],[34,0,38,0],[35,8,39,6,"error"],[35,13,39,11],[35,16,39,15],[35,21,39,19,"SyntheticError"],[35,51,39,19],[35,52,39,19,"SyntheticError"],[35,89,39,33],[35,91,39,34,"errorValue"],[35,101,39,44],[35,102,39,61],[36,6,40,4],[36,7,40,5],[36,13,40,11],[37,8,41,6],[38,0,42,0],[39,8,43,6,"error"],[39,13,43,11],[39,16,43,15],[39,21,43,19,"SyntheticError"],[39,51,43,19],[39,52,43,19,"SyntheticError"],[39,89,43,33],[39,91,43,34],[39,110,43,53],[39,111,43,70],[40,6,44,4],[41,6,45,4],[41,10,45,8],[42,8,46,6,"error"],[42,13,46,11],[42,14,46,12,"componentStack"],[42,28,46,26],[42,31,46,29,"componentStack"],[42,45,46,43],[43,8,47,6,"error"],[43,13,47,11],[43,14,47,12,"isComponentError"],[43,30,47,28],[43,33,47,31],[43,37,47,35],[44,6,48,4],[44,7,48,5],[44,8,48,6],[44,15,48,6,"_unused"],[44,22,48,6],[44,24,48,12],[45,8,49,6],[46,6,49,6],[47,6,52,4],[47,10,52,4,"handleException"],[47,40,52,4],[47,41,52,4,"handleException"],[47,79,52,19],[47,81,52,20,"error"],[47,86,52,25],[47,88,52,27],[47,93,52,32],[47,94,52,33],[49,6,54,4],[50,6,55,4],[51,6,56,4],[52,6,57,4],[53,6,58,4],[53,13,58,11],[53,18,58,16],[54,4,59,2],[55,2,60,0],[55,3,60,1],[56,2,60,2],[56,6,60,2,"_default"],[56,14,60,2],[56,17,60,2,"exports"],[56,24,60,2],[56,25,60,2,"default"],[56,32,60,2],[56,35,62,15,"ReactFiberErrorDialog"],[56,56,62,36],[57,0,62,36],[57,3]],"functionMap":{"names":["<global>","showErrorDialog"],"mappings":"AAA;EC0B;GDgC"}},"type":"js/module"}]}