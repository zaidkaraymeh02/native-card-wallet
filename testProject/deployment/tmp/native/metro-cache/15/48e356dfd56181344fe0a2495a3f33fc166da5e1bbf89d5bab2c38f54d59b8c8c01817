{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":103,"column":0,"index":3218}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":103,"column":0,"index":3218}}],"key":"XnmB3YjhLQUu4Gtg+kalDAx6bCo="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.INT32_MAX = void 0;\n  exports.deepEqual = deepEqual;\n  exports.hasProperty = hasProperty;\n  exports.isFabric = isFabric;\n  exports.isJestEnv = isJestEnv;\n  exports.isRemoteDebuggingEnabled = isRemoteDebuggingEnabled;\n  exports.tagMessage = tagMessage;\n  exports.toArray = toArray;\n  exports.withPrevAndCurrent = withPrevAndCurrent;\n  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/toConsumableArray\"));\n  function toArray(object) {\n    if (!Array.isArray(object)) {\n      return [object];\n    }\n    return object;\n  }\n  function withPrevAndCurrent(array, mapFn) {\n    var previousArr = [null];\n    var currentArr = (0, _toConsumableArray2.default)(array);\n    var transformedArr = [];\n    currentArr.forEach(function (current, i) {\n      // This type cast is fine and solves problem mentioned in https://github.com/software-mansion/react-native-gesture-handler/pull/2867 (namely that `previous` can be undefined).\n      // Unfortunately, linter on our CI does not allow this type of casting as it is unnecessary. To bypass that we use eslint-disable.\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\n      var previous = previousArr[i];\n      var transformed = mapFn(previous, current);\n      previousArr.push(transformed);\n      transformedArr.push(transformed);\n    });\n    return transformedArr;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  function hasProperty(object, key) {\n    return Object.prototype.hasOwnProperty.call(object, key);\n  }\n  function isJestEnv() {\n    // @ts-ignore Do not use `@types/node` because it will prioritise Node types over RN types which breaks the types (ex. setTimeout) in React Native projects.\n    return hasProperty(global, 'process') && !!process.env.JEST_WORKER_ID;\n  }\n  function tagMessage(msg) {\n    return `[react-native-gesture-handler] ${msg}`;\n  }\n\n  // Helper method to check whether Fabric is enabled, however global.nativeFabricUIManager\n  // may not be initialized before the first render\n  function isFabric() {\n    var _global;\n    // @ts-expect-error nativeFabricUIManager is not yet included in the RN types\n    return !!((_global = global) != null && _global.nativeFabricUIManager);\n  }\n  function isRemoteDebuggingEnabled() {\n    // react-native-reanimated checks if in remote debugging in the same way\n    // @ts-ignore global is available but node types are not included\n    var localGlobal = global;\n    return (!localGlobal.nativeCallSyncHook || !!localGlobal.__REMOTEDEV__) && !localGlobal.RN$Bridgeless;\n  }\n\n  /**\n   * Recursively compares two objects for deep equality.\n   *\n   * **Note:** This function does not support cyclic references.\n   *\n   * @param obj1 - The first object to compare.\n   * @param obj2 - The second object to compare.\n   * @returns `true` if the objects are deeply equal, `false` otherwise.\n   */\n  function deepEqual(obj1, obj2) {\n    if (obj1 === obj2) {\n      return true;\n    }\n    if (typeof obj1 !== 'object' || typeof obj2 !== 'object' || obj1 === null || obj2 === null) {\n      return false;\n    }\n    var keys1 = Object.keys(obj1);\n    var keys2 = Object.keys(obj2);\n    if (keys1.length !== keys2.length) {\n      return false;\n    }\n    for (var key of keys1) {\n      if (!keys2.includes(key) || !deepEqual(obj1[key], obj2[key])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  var INT32_MAX = exports.INT32_MAX = 2 ** 31 - 1;\n});","lineCount":93,"map":[[16,2,1,7],[16,11,1,16,"toArray"],[16,18,1,23,"toArray"],[16,19,1,27,"object"],[16,25,1,42],[16,27,1,49],[17,4,2,2],[17,8,2,6],[17,9,2,7,"Array"],[17,14,2,12],[17,15,2,13,"isArray"],[17,22,2,20],[17,23,2,21,"object"],[17,29,2,27],[17,30,2,28],[17,32,2,30],[18,6,3,4],[18,13,3,11],[18,14,3,12,"object"],[18,20,3,18],[18,21,3,19],[19,4,4,2],[20,4,6,2],[20,11,6,9,"object"],[20,17,6,15],[21,2,7,0],[22,2,13,7],[22,11,13,16,"withPrevAndCurrent"],[22,29,13,34,"withPrevAndCurrent"],[22,30,14,2,"array"],[22,35,14,12],[22,37,15,2,"mapFn"],[22,42,15,48],[22,44,16,17],[23,4,17,2],[23,8,17,8,"previousArr"],[23,19,17,43],[23,22,17,46],[23,23,17,47],[23,27,17,51],[23,28,17,52],[24,4,18,2],[24,8,18,8,"currentArr"],[24,18,18,18],[24,25,18,18,"_toConsumableArray2"],[24,44,18,18],[24,45,18,18,"default"],[24,52,18,18],[24,54,18,25,"array"],[24,59,18,30],[24,60,18,31],[25,4,19,2],[25,8,19,8,"transformedArr"],[25,22,19,37],[25,25,19,40],[25,27,19,42],[26,4,20,2,"currentArr"],[26,14,20,12],[26,15,20,13,"forEach"],[26,22,20,20],[26,23,20,21],[26,33,20,22,"current"],[26,40,20,29],[26,42,20,31,"i"],[26,43,20,32],[26,45,20,37],[27,6,21,4],[28,6,22,4],[29,6,23,4],[30,6,24,4],[30,10,24,10,"previous"],[30,18,24,18],[30,21,24,21,"previousArr"],[30,32,24,32],[30,33,24,33,"i"],[30,34,24,34],[30,35,24,57],[31,6,25,4],[31,10,25,10,"transformed"],[31,21,25,21],[31,24,25,24,"mapFn"],[31,29,25,29],[31,30,25,30,"previous"],[31,38,25,38],[31,40,25,40,"current"],[31,47,25,47],[31,48,25,48],[32,6,26,4,"previousArr"],[32,17,26,15],[32,18,26,16,"push"],[32,22,26,20],[32,23,26,21,"transformed"],[32,34,26,32],[32,35,26,33],[33,6,27,4,"transformedArr"],[33,20,27,18],[33,21,27,19,"push"],[33,25,27,23],[33,26,27,24,"transformed"],[33,37,27,35],[33,38,27,36],[34,4,28,2],[34,5,28,3],[34,6,28,4],[35,4,29,2],[35,11,29,9,"transformedArr"],[35,25,29,23],[36,2,30,0],[38,2,32,0],[39,2,33,7],[39,11,33,16,"hasProperty"],[39,22,33,27,"hasProperty"],[39,23,33,28,"object"],[39,29,33,42],[39,31,33,44,"key"],[39,34,33,55],[39,36,33,57],[40,4,34,2],[40,11,34,9,"Object"],[40,17,34,15],[40,18,34,16,"prototype"],[40,27,34,25],[40,28,34,26,"hasOwnProperty"],[40,42,34,40],[40,43,34,41,"call"],[40,47,34,45],[40,48,34,46,"object"],[40,54,34,52],[40,56,34,54,"key"],[40,59,34,57],[40,60,34,58],[41,2,35,0],[42,2,37,7],[42,11,37,16,"isJestEnv"],[42,20,37,25,"isJestEnv"],[42,21,37,25],[42,23,37,37],[43,4,38,2],[44,4,39,2],[44,11,39,9,"hasProperty"],[44,22,39,20],[44,23,39,21,"global"],[44,29,39,27],[44,31,39,29],[44,40,39,38],[44,41,39,39],[44,45,39,43],[44,46,39,44],[44,47,39,45,"process"],[44,54,39,52],[44,55,39,53,"env"],[44,58,39,56],[44,59,39,57,"JEST_WORKER_ID"],[44,73,39,71],[45,2,40,0],[46,2,42,7],[46,11,42,16,"tagMessage"],[46,21,42,26,"tagMessage"],[46,22,42,27,"msg"],[46,25,42,38],[46,27,42,40],[47,4,43,2],[47,11,43,9],[47,45,43,43,"msg"],[47,48,43,46],[47,50,43,48],[48,2,44,0],[50,2,46,0],[51,2,47,0],[52,2,48,7],[52,11,48,16,"isFabric"],[52,19,48,24,"isFabric"],[52,20,48,24],[52,22,48,36],[53,4,48,36],[53,8,48,36,"_global"],[53,15,48,36],[54,4,49,2],[55,4,50,2],[55,11,50,9],[55,12,50,10],[55,15,50,10,"_global"],[55,22,50,10],[55,25,50,11,"global"],[55,31,50,17],[55,44,50,11,"_global"],[55,51,50,11],[55,52,50,19,"nativeFabricUIManager"],[55,73,50,40],[56,2,51,0],[57,2,53,7],[57,11,53,16,"isRemoteDebuggingEnabled"],[57,35,53,40,"isRemoteDebuggingEnabled"],[57,36,53,40],[57,38,53,52],[58,4,54,2],[59,4,55,2],[60,4,56,2],[60,8,56,8,"localGlobal"],[60,19,56,19],[60,22,56,22,"global"],[60,28,56,35],[61,4,57,2],[61,11,58,4],[61,12,58,5],[61,13,58,6,"localGlobal"],[61,24,58,17],[61,25,58,18,"nativeCallSyncHook"],[61,43,58,36],[61,47,58,40],[61,48,58,41],[61,49,58,42,"localGlobal"],[61,60,58,53],[61,61,58,54,"__REMOTEDEV__"],[61,74,58,67],[61,79,59,4],[61,80,59,5,"localGlobal"],[61,91,59,16],[61,92,59,17,"RN$Bridgeless"],[61,105,59,30],[62,2,61,0],[64,2,63,0],[65,0,64,0],[66,0,65,0],[67,0,66,0],[68,0,67,0],[69,0,68,0],[70,0,69,0],[71,0,70,0],[72,0,71,0],[73,2,72,7],[73,11,72,16,"deepEqual"],[73,20,72,25,"deepEqual"],[73,21,72,26,"obj1"],[73,25,72,35],[73,27,72,37,"obj2"],[73,31,72,46],[73,33,72,48],[74,4,73,2],[74,8,73,6,"obj1"],[74,12,73,10],[74,17,73,15,"obj2"],[74,21,73,19],[74,23,73,21],[75,6,74,4],[75,13,74,11],[75,17,74,15],[76,4,75,2],[77,4,77,2],[77,8,78,4],[77,15,78,11,"obj1"],[77,19,78,15],[77,24,78,20],[77,32,78,28],[77,36,79,4],[77,43,79,11,"obj2"],[77,47,79,15],[77,52,79,20],[77,60,79,28],[77,64,80,4,"obj1"],[77,68,80,8],[77,73,80,13],[77,77,80,17],[77,81,81,4,"obj2"],[77,85,81,8],[77,90,81,13],[77,94,81,17],[77,96,82,4],[78,6,83,4],[78,13,83,11],[78,18,83,16],[79,4,84,2],[80,4,86,2],[80,8,86,8,"keys1"],[80,13,86,13],[80,16,86,16,"Object"],[80,22,86,22],[80,23,86,23,"keys"],[80,27,86,27],[80,28,86,28,"obj1"],[80,32,86,32],[80,33,86,33],[81,4,87,2],[81,8,87,8,"keys2"],[81,13,87,13],[81,16,87,16,"Object"],[81,22,87,22],[81,23,87,23,"keys"],[81,27,87,27],[81,28,87,28,"obj2"],[81,32,87,32],[81,33,87,33],[82,4,89,2],[82,8,89,6,"keys1"],[82,13,89,11],[82,14,89,12,"length"],[82,20,89,18],[82,25,89,23,"keys2"],[82,30,89,28],[82,31,89,29,"length"],[82,37,89,35],[82,39,89,37],[83,6,90,4],[83,13,90,11],[83,18,90,16],[84,4,91,2],[85,4,93,2],[85,9,93,7],[85,13,93,13,"key"],[85,16,93,16],[85,20,93,20,"keys1"],[85,25,93,25],[85,27,93,27],[86,6,94,4],[86,10,94,8],[86,11,94,9,"keys2"],[86,16,94,14],[86,17,94,15,"includes"],[86,25,94,23],[86,26,94,24,"key"],[86,29,94,27],[86,30,94,28],[86,34,94,32],[86,35,94,33,"deepEqual"],[86,44,94,42],[86,45,94,43,"obj1"],[86,49,94,47],[86,50,94,48,"key"],[86,53,94,51],[86,54,94,52],[86,56,94,54,"obj2"],[86,60,94,58],[86,61,94,59,"key"],[86,64,94,62],[86,65,94,63],[86,66,94,64],[86,68,94,66],[87,8,95,6],[87,15,95,13],[87,20,95,18],[88,6,96,4],[89,4,97,2],[90,4,99,2],[90,11,99,9],[90,15,99,13],[91,2,100,0],[92,2,102,7],[92,6,102,13,"INT32_MAX"],[92,15,102,22],[92,18,102,22,"exports"],[92,25,102,22],[92,26,102,22,"INT32_MAX"],[92,35,102,22],[92,38,102,25],[92,39,102,26],[92,43,102,30],[92,45,102,32],[92,48,102,35],[92,49,102,36],[93,0,102,37],[93,3]],"functionMap":{"names":["<global>","toArray","withPrevAndCurrent","currentArr.forEach$argument_0","hasProperty","isJestEnv","tagMessage","isFabric","isRemoteDebuggingEnabled","deepEqual"],"mappings":"AAA,OC;CDM;OEM;qBCO;GDQ;CFE;OIG;CJE;OKE;CLG;OME;CNE;OOI;CPG;OQE;CRQ;OSW;CT4B"}},"type":"js/module"}]}