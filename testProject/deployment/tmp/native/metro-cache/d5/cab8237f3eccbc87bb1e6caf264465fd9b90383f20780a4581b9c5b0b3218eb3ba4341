{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":32,"column":0,"index":972}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"../../src/private/webapis/performance/Performance","data":{"asyncType":null,"locs":[{"start":{"line":11,"column":0,"index":222},"end":{"line":11,"column":76,"index":298}}],"key":"qpAma1bSf6LgV18FF3+oyXKEo4Q="}},{"name":"../../src/private/webapis/performance/specs/NativePerformance","data":{"asyncType":null,"locs":[{"start":{"line":12,"column":0,"index":299},"end":{"line":12,"column":94,"index":393}}],"key":"x6UY9XdyRecwexNzu3gYO4CU/VY="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  var _Performance = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"../../src/private/webapis/performance/Performance\"));\n  var _NativePerformance = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"../../src/private/webapis/performance/specs/NativePerformance\"));\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * \n   * @format\n   */\n\n  // In case if the native implementation of the Performance API is available, use it,\n  // otherwise fall back to the legacy/default one, which only defines 'Performance.now()'\n  if (_NativePerformance.default) {\n    // $FlowExpectedError[cannot-write]\n    global.performance = new _Performance.default();\n  } else {\n    if (!global.performance) {\n      // $FlowExpectedError[cannot-write]\n      global.performance = {\n        mark: function mark() {},\n        measure: function measure() {},\n        now: function now() {\n          var performanceNow = global.nativePerformanceNow || Date.now;\n          return performanceNow();\n        }\n      };\n    }\n  }\n});","lineCount":33,"map":[[3,2,11,0],[3,6,11,0,"_Performance"],[3,18,11,0],[3,21,11,0,"_interopRequireDefault"],[3,43,11,0],[3,44,11,0,"_$$_REQUIRE"],[3,55,11,0],[3,56,11,0,"_dependencyMap"],[3,70,11,0],[4,2,12,0],[4,6,12,0,"_NativePerformance"],[4,24,12,0],[4,27,12,0,"_interopRequireDefault"],[4,49,12,0],[4,50,12,0,"_$$_REQUIRE"],[4,61,12,0],[4,62,12,0,"_dependencyMap"],[4,76,12,0],[5,2,1,0],[6,0,2,0],[7,0,3,0],[8,0,4,0],[9,0,5,0],[10,0,6,0],[11,0,7,0],[12,0,8,0],[13,0,9,0],[15,2,14,0],[16,2,15,0],[17,2,16,0],[17,6,16,4,"NativePerformance"],[17,32,16,21],[17,34,16,23],[18,4,17,2],[19,4,18,2,"global"],[19,10,18,8],[19,11,18,9,"performance"],[19,22,18,20],[19,25,18,23],[19,29,18,27,"Performance"],[19,49,18,38],[19,50,18,39],[19,51,18,40],[20,2,19,0],[20,3,19,1],[20,9,19,7],[21,4,20,2],[21,8,20,6],[21,9,20,7,"global"],[21,15,20,13],[21,16,20,14,"performance"],[21,27,20,25],[21,29,20,27],[22,6,21,4],[23,6,22,4,"global"],[23,12,22,10],[23,13,22,11,"performance"],[23,24,22,22],[23,27,22,25],[24,8,23,6,"mark"],[24,12,23,10],[24,14,23,12],[24,23,23,6,"mark"],[24,27,23,10,"mark"],[24,28,23,10],[24,30,23,18],[24,31,23,19],[24,32,23,20],[25,8,24,6,"measure"],[25,15,24,13],[25,17,24,15],[25,26,24,6,"measure"],[25,33,24,13,"measure"],[25,34,24,13],[25,36,24,21],[25,37,24,22],[25,38,24,23],[26,8,25,6,"now"],[26,11,25,9],[26,13,25,11],[26,22,25,6,"now"],[26,25,25,9,"now"],[26,26,25,9],[26,28,25,17],[27,10,26,8],[27,14,26,14,"performanceNow"],[27,28,26,28],[27,31,26,31,"global"],[27,37,26,37],[27,38,26,38,"nativePerformanceNow"],[27,58,26,58],[27,62,26,62,"Date"],[27,66,26,66],[27,67,26,67,"now"],[27,70,26,70],[28,10,27,8],[28,17,27,15,"performanceNow"],[28,31,27,29],[28,32,27,30],[28,33,27,31],[29,8,28,6],[30,6,29,4],[30,7,29,5],[31,4,30,2],[32,2,31,0],[33,0,31,1],[33,3]],"functionMap":{"names":["<global>","global.performance.mark","global.performance.measure","global.performance.now"],"mappings":"AAA;YCsB,QD;eEC,QF;WGC;OHG"}},"type":"js/module"}]}