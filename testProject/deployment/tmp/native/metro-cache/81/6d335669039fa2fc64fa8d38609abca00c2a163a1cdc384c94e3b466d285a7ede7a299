{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":72,"column":0,"index":1771}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":72,"column":0,"index":1771}}],"key":"ohGilxjVqjyE1GooDVDt9OYg9x0="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":72,"column":0,"index":1771}}],"key":"V6GYoXnblvuuGHJNMy7MHyaunsU="}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":72,"column":0,"index":1771}}],"key":"rcd0dMwf8BS2g+8U1wyhIOxtYEo="}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":72,"column":0,"index":1771}}],"key":"4pxOr+e+5cSZAdeEKxSt3F7LoKY="}},{"name":"@babel/runtime/helpers/inherits","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":72,"column":0,"index":1771}}],"key":"EDnOjopp9yNVawSzfBRsy2dq5dM="}},{"name":"./ReadOnlyNode","data":{"asyncType":null,"locs":[{"start":{"line":15,"column":0,"index":323},"end":{"line":15,"column":59,"index":382}}],"key":"lL+NFlIq1O8ujEqjZi4lF9PERHs="}},{"name":"./specs/NativeDOM","data":{"asyncType":null,"locs":[{"start":{"line":16,"column":0,"index":383},"end":{"line":16,"column":42,"index":425}}],"key":"TcbRiTYNok3yxUtTlzHcZCnDZbg="}},{"name":"./utilities/Traversal","data":{"asyncType":null,"locs":[{"start":{"line":17,"column":0,"index":426},"end":{"line":17,"column":56,"index":482}},{"start":{"line":17,"column":0,"index":426},"end":{"line":17,"column":56,"index":482}}],"key":"krkfCL9VZXF/b+1yFp3/wZW2uZQ="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/getPrototypeOf\"));\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/inherits\"));\n  var _ReadOnlyNode2 = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[6], \"./ReadOnlyNode\"));\n  var _NativeDOM = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"./specs/NativeDOM\"));\n  function _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\n  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\n  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }\n  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); } /**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n */ // flowlint unsafe-getters-setters:off\n  var ReadOnlyCharacterData = exports.default = /*#__PURE__*/function (_ReadOnlyNode) {\n    function ReadOnlyCharacterData() {\n      (0, _classCallCheck2.default)(this, ReadOnlyCharacterData);\n      return _callSuper(this, ReadOnlyCharacterData, arguments);\n    }\n    (0, _inherits2.default)(ReadOnlyCharacterData, _ReadOnlyNode);\n    return (0, _createClass2.default)(ReadOnlyCharacterData, [{\n      key: \"nextElementSibling\",\n      get: function get() {\n        return (0, _$$_REQUIRE(_dependencyMap[8], \"./utilities/Traversal\").getElementSibling)(this, 'next');\n      }\n    }, {\n      key: \"previousElementSibling\",\n      get: function get() {\n        return (0, _$$_REQUIRE(_dependencyMap[8], \"./utilities/Traversal\").getElementSibling)(this, 'previous');\n      }\n    }, {\n      key: \"data\",\n      get: function get() {\n        var shadowNode = (0, _ReadOnlyNode2.getShadowNode)(this);\n        if (shadowNode != null) {\n          return _NativeDOM.default.getTextContent(shadowNode);\n        }\n        return '';\n      }\n    }, {\n      key: \"length\",\n      get: function get() {\n        return this.data.length;\n      }\n\n      /**\n       * @override\n       */\n    }, {\n      key: \"textContent\",\n      get: function get() {\n        return this.data;\n      }\n\n      /**\n       * @override\n       */\n    }, {\n      key: \"nodeValue\",\n      get: function get() {\n        return this.data;\n      }\n    }, {\n      key: \"substringData\",\n      value: function substringData(offset, count) {\n        var data = this.data;\n        if (offset < 0) {\n          throw new TypeError(`Failed to execute 'substringData' on 'CharacterData': The offset ${offset} is negative.`);\n        }\n        if (offset > data.length) {\n          throw new TypeError(`Failed to execute 'substringData' on 'CharacterData': The offset ${offset} is greater than the node's length (${data.length}).`);\n        }\n        var adjustedCount = count < 0 || count > data.length ? data.length : count;\n        return data.slice(offset, offset + adjustedCount);\n      }\n    }]);\n  }(_ReadOnlyNode2.default);\n});","lineCount":89,"map":[[12,2,15,0],[12,6,15,0,"_ReadOnlyNode2"],[12,20,15,0],[12,23,15,0,"_interopRequireWildcard"],[12,46,15,0],[12,47,15,0,"_$$_REQUIRE"],[12,58,15,0],[12,59,15,0,"_dependencyMap"],[12,73,15,0],[13,2,16,0],[13,6,16,0,"_NativeDOM"],[13,16,16,0],[13,19,16,0,"_interopRequireDefault"],[13,41,16,0],[13,42,16,0,"_$$_REQUIRE"],[13,53,16,0],[13,54,16,0,"_dependencyMap"],[13,68,16,0],[14,2,16,42],[14,11,16,42,"_getRequireWildcardCache"],[14,36,16,42,"e"],[14,37,16,42],[14,66,16,42,"WeakMap"],[14,73,16,42],[14,92,16,42,"r"],[14,93,16,42],[14,100,16,42,"WeakMap"],[14,107,16,42],[14,111,16,42,"t"],[14,112,16,42],[14,119,16,42,"WeakMap"],[14,126,16,42],[14,138,16,42,"_getRequireWildcardCache"],[14,162,16,42],[14,174,16,42,"_getRequireWildcardCache"],[14,199,16,42,"e"],[14,200,16,42],[14,211,16,42,"e"],[14,212,16,42],[14,215,16,42,"t"],[14,216,16,42],[14,219,16,42,"r"],[14,220,16,42],[14,225,16,42,"e"],[14,226,16,42],[15,2,16,42],[15,11,16,42,"_interopRequireWildcard"],[15,35,16,42,"e"],[15,36,16,42],[15,38,16,42,"r"],[15,39,16,42],[15,48,16,42,"r"],[15,49,16,42],[15,53,16,42,"e"],[15,54,16,42],[15,58,16,42,"e"],[15,59,16,42],[15,60,16,42,"__esModule"],[15,70,16,42],[15,79,16,42,"e"],[15,80,16,42],[15,95,16,42,"e"],[15,96,16,42],[15,119,16,42,"e"],[15,120,16,42],[15,145,16,42,"e"],[15,146,16,42],[15,157,16,42,"default"],[15,164,16,42],[15,166,16,42,"e"],[15,167,16,42],[15,175,16,42,"t"],[15,176,16,42],[15,179,16,42,"_getRequireWildcardCache"],[15,203,16,42],[15,204,16,42,"r"],[15,205,16,42],[15,212,16,42,"t"],[15,213,16,42],[15,217,16,42,"t"],[15,218,16,42],[15,219,16,42,"has"],[15,222,16,42],[15,223,16,42,"e"],[15,224,16,42],[15,234,16,42,"t"],[15,235,16,42],[15,236,16,42,"get"],[15,239,16,42],[15,240,16,42,"e"],[15,241,16,42],[15,248,16,42,"n"],[15,249,16,42],[15,254,16,42,"__proto__"],[15,263,16,42],[15,273,16,42,"a"],[15,274,16,42],[15,277,16,42,"Object"],[15,283,16,42],[15,284,16,42,"defineProperty"],[15,298,16,42],[15,302,16,42,"Object"],[15,308,16,42],[15,309,16,42,"getOwnPropertyDescriptor"],[15,333,16,42],[15,344,16,42,"u"],[15,345,16,42],[15,349,16,42,"e"],[15,350,16,42],[15,370,16,42,"u"],[15,371,16,42],[15,378,16,42,"hasOwnProperty"],[15,392,16,42],[15,393,16,42,"call"],[15,397,16,42],[15,398,16,42,"e"],[15,399,16,42],[15,401,16,42,"u"],[15,402,16,42],[15,411,16,42,"i"],[15,412,16,42],[15,415,16,42,"a"],[15,416,16,42],[15,419,16,42,"Object"],[15,425,16,42],[15,426,16,42,"getOwnPropertyDescriptor"],[15,450,16,42],[15,451,16,42,"e"],[15,452,16,42],[15,454,16,42,"u"],[15,455,16,42],[15,465,16,42,"i"],[15,466,16,42],[15,471,16,42,"i"],[15,472,16,42],[15,473,16,42,"get"],[15,476,16,42],[15,480,16,42,"i"],[15,481,16,42],[15,482,16,42,"set"],[15,485,16,42],[15,489,16,42,"Object"],[15,495,16,42],[15,496,16,42,"defineProperty"],[15,510,16,42],[15,511,16,42,"n"],[15,512,16,42],[15,514,16,42,"u"],[15,515,16,42],[15,517,16,42,"i"],[15,518,16,42],[15,522,16,42,"n"],[15,523,16,42],[15,524,16,42,"u"],[15,525,16,42],[15,529,16,42,"e"],[15,530,16,42],[15,531,16,42,"u"],[15,532,16,42],[15,544,16,42,"n"],[15,545,16,42],[15,546,16,42,"default"],[15,553,16,42],[15,556,16,42,"e"],[15,557,16,42],[15,559,16,42,"t"],[15,560,16,42],[15,564,16,42,"t"],[15,565,16,42],[15,566,16,42,"set"],[15,569,16,42],[15,570,16,42,"e"],[15,571,16,42],[15,573,16,42,"n"],[15,574,16,42],[15,577,16,42,"n"],[15,578,16,42],[16,2,16,42],[16,11,16,42,"_callSuper"],[16,22,16,42,"t"],[16,23,16,42],[16,25,16,42,"o"],[16,26,16,42],[16,28,16,42,"e"],[16,29,16,42],[16,40,16,42,"o"],[16,41,16,42],[16,48,16,42,"_getPrototypeOf2"],[16,64,16,42],[16,65,16,42,"default"],[16,72,16,42],[16,74,16,42,"o"],[16,75,16,42],[16,82,16,42,"_possibleConstructorReturn2"],[16,109,16,42],[16,110,16,42,"default"],[16,117,16,42],[16,119,16,42,"t"],[16,120,16,42],[16,122,16,42,"_isNativeReflectConstruct"],[16,147,16,42],[16,152,16,42,"Reflect"],[16,159,16,42],[16,160,16,42,"construct"],[16,169,16,42],[16,170,16,42,"o"],[16,171,16,42],[16,173,16,42,"e"],[16,174,16,42],[16,186,16,42,"_getPrototypeOf2"],[16,202,16,42],[16,203,16,42,"default"],[16,210,16,42],[16,212,16,42,"t"],[16,213,16,42],[16,215,16,42,"constructor"],[16,226,16,42],[16,230,16,42,"o"],[16,231,16,42],[16,232,16,42,"apply"],[16,237,16,42],[16,238,16,42,"t"],[16,239,16,42],[16,241,16,42,"e"],[16,242,16,42],[17,2,16,42],[17,11,16,42,"_isNativeReflectConstruct"],[17,37,16,42],[17,51,16,42,"t"],[17,52,16,42],[17,56,16,42,"Boolean"],[17,63,16,42],[17,64,16,42,"prototype"],[17,73,16,42],[17,74,16,42,"valueOf"],[17,81,16,42],[17,82,16,42,"call"],[17,86,16,42],[17,87,16,42,"Reflect"],[17,94,16,42],[17,95,16,42,"construct"],[17,104,16,42],[17,105,16,42,"Boolean"],[17,112,16,42],[17,145,16,42,"t"],[17,146,16,42],[17,159,16,42,"_isNativeReflectConstruct"],[17,184,16,42],[17,196,16,42,"_isNativeReflectConstruct"],[17,222,16,42],[17,235,16,42,"t"],[17,236,16,42],[17,246,1,0],[18,0,2,0],[19,0,3,0],[20,0,4,0],[21,0,5,0],[22,0,6,0],[23,0,7,0],[24,0,8,0],[25,0,9,0],[25,3,1,0],[25,4,11,0],[26,2,11,0],[26,6,19,21,"ReadOnlyCharacterData"],[26,27,19,42],[26,30,19,42,"exports"],[26,37,19,42],[26,38,19,42,"default"],[26,45,19,42],[26,71,19,42,"_ReadOnlyNode"],[26,84,19,42],[27,4,19,42],[27,13,19,42,"ReadOnlyCharacterData"],[27,35,19,42],[28,6,19,42],[28,10,19,42,"_classCallCheck2"],[28,26,19,42],[28,27,19,42,"default"],[28,34,19,42],[28,42,19,42,"ReadOnlyCharacterData"],[28,63,19,42],[29,6,19,42],[29,13,19,42,"_callSuper"],[29,23,19,42],[29,30,19,42,"ReadOnlyCharacterData"],[29,51,19,42],[29,53,19,42,"arguments"],[29,62,19,42],[30,4,19,42],[31,4,19,42],[31,8,19,42,"_inherits2"],[31,18,19,42],[31,19,19,42,"default"],[31,26,19,42],[31,28,19,42,"ReadOnlyCharacterData"],[31,49,19,42],[31,51,19,42,"_ReadOnlyNode"],[31,64,19,42],[32,4,19,42],[32,15,19,42,"_createClass2"],[32,28,19,42],[32,29,19,42,"default"],[32,36,19,42],[32,38,19,42,"ReadOnlyCharacterData"],[32,59,19,42],[33,6,19,42,"key"],[33,9,19,42],[34,6,19,42,"get"],[34,9,19,42],[34,11,20,2],[34,20,20,2,"get"],[34,24,20,2],[34,26,20,51],[35,8,21,4],[35,15,21,11],[35,19,21,11,"getElementSibling"],[35,49,21,11],[35,50,21,11,"getElementSibling"],[35,92,21,28],[35,94,21,29],[35,98,21,33],[35,100,21,35],[35,106,21,41],[35,107,21,42],[36,6,22,2],[37,4,22,3],[38,6,22,3,"key"],[38,9,22,3],[39,6,22,3,"get"],[39,9,22,3],[39,11,24,2],[39,20,24,2,"get"],[39,24,24,2],[39,26,24,55],[40,8,25,4],[40,15,25,11],[40,19,25,11,"getElementSibling"],[40,49,25,11],[40,50,25,11,"getElementSibling"],[40,92,25,28],[40,94,25,29],[40,98,25,33],[40,100,25,35],[40,110,25,45],[40,111,25,46],[41,6,26,2],[42,4,26,3],[43,6,26,3,"key"],[43,9,26,3],[44,6,26,3,"get"],[44,9,26,3],[44,11,28,2],[44,20,28,2,"get"],[44,24,28,2],[44,26,28,21],[45,8,29,4],[45,12,29,10,"shadowNode"],[45,22,29,20],[45,25,29,23],[45,29,29,23,"getShadowNode"],[45,57,29,36],[45,59,29,37],[45,63,29,41],[45,64,29,42],[46,8,31,4],[46,12,31,8,"shadowNode"],[46,22,31,18],[46,26,31,22],[46,30,31,26],[46,32,31,28],[47,10,32,6],[47,17,32,13,"NativeDOM"],[47,35,32,22],[47,36,32,23,"getTextContent"],[47,50,32,37],[47,51,32,38,"shadowNode"],[47,61,32,48],[47,62,32,49],[48,8,33,4],[49,8,35,4],[49,15,35,11],[49,17,35,13],[50,6,36,2],[51,4,36,3],[52,6,36,3,"key"],[52,9,36,3],[53,6,36,3,"get"],[53,9,36,3],[53,11,38,2],[53,20,38,2,"get"],[53,24,38,2],[53,26,38,23],[54,8,39,4],[54,15,39,11],[54,19,39,15],[54,20,39,16,"data"],[54,24,39,20],[54,25,39,21,"length"],[54,31,39,27],[55,6,40,2],[57,6,42,2],[58,0,43,0],[59,0,44,0],[60,4,42,2],[61,6,42,2,"key"],[61,9,42,2],[62,6,42,2,"get"],[62,9,42,2],[62,11,45,2],[62,20,45,2,"get"],[62,24,45,2],[62,26,45,35],[63,8,46,4],[63,15,46,11],[63,19,46,15],[63,20,46,16,"data"],[63,24,46,20],[64,6,47,2],[66,6,49,2],[67,0,50,0],[68,0,51,0],[69,4,49,2],[70,6,49,2,"key"],[70,9,49,2],[71,6,49,2,"get"],[71,9,49,2],[71,11,52,2],[71,20,52,2,"get"],[71,24,52,2],[71,26,52,26],[72,8,53,4],[72,15,53,11],[72,19,53,15],[72,20,53,16,"data"],[72,24,53,20],[73,6,54,2],[74,4,54,3],[75,6,54,3,"key"],[75,9,54,3],[76,6,54,3,"value"],[76,11,54,3],[76,13,56,2],[76,22,56,2,"substringData"],[76,35,56,15,"substringData"],[76,36,56,16,"offset"],[76,42,56,30],[76,44,56,32,"count"],[76,49,56,45],[76,51,56,55],[77,8,57,4],[77,12,57,10,"data"],[77,16,57,14],[77,19,57,17],[77,23,57,21],[77,24,57,22,"data"],[77,28,57,26],[78,8,58,4],[78,12,58,8,"offset"],[78,18,58,14],[78,21,58,17],[78,22,58,18],[78,24,58,20],[79,10,59,6],[79,16,59,12],[79,20,59,16,"TypeError"],[79,29,59,25],[79,30,60,8],[79,98,60,76,"offset"],[79,104,60,82],[79,119,61,6],[79,120,61,7],[80,8,62,4],[81,8,63,4],[81,12,63,8,"offset"],[81,18,63,14],[81,21,63,17,"data"],[81,25,63,21],[81,26,63,22,"length"],[81,32,63,28],[81,34,63,30],[82,10,64,6],[82,16,64,12],[82,20,64,16,"TypeError"],[82,29,64,25],[82,30,65,8],[82,98,65,76,"offset"],[82,104,65,82],[82,143,65,121,"data"],[82,147,65,125],[82,148,65,126,"length"],[82,154,65,132],[82,158,66,6],[82,159,66,7],[83,8,67,4],[84,8,68,4],[84,12,68,8,"adjustedCount"],[84,25,68,21],[84,28,68,24,"count"],[84,33,68,29],[84,36,68,32],[84,37,68,33],[84,41,68,37,"count"],[84,46,68,42],[84,49,68,45,"data"],[84,53,68,49],[84,54,68,50,"length"],[84,60,68,56],[84,63,68,59,"data"],[84,67,68,63],[84,68,68,64,"length"],[84,74,68,70],[84,77,68,73,"count"],[84,82,68,78],[85,8,69,4],[85,15,69,11,"data"],[85,19,69,15],[85,20,69,16,"slice"],[85,25,69,21],[85,26,69,22,"offset"],[85,32,69,28],[85,34,69,30,"offset"],[85,40,69,36],[85,43,69,39,"adjustedCount"],[85,56,69,52],[85,57,69,53],[86,6,70,2],[87,4,70,3],[88,2,70,3],[88,4,19,51,"ReadOnlyNode"],[88,26,19,63],[89,0,19,63],[89,3]],"functionMap":{"names":["<global>","ReadOnlyCharacterData","get__nextElementSibling","get__previousElementSibling","get__data","get__length","get__textContent","get__nodeValue","substringData"],"mappings":"AAA;eCkB;ECC;GDE;EEE;GFE;EGE;GHQ;EIE;GJE;EKK;GLE;EMK;GNE;EOE;GPc;CDC"}},"type":"js/module"}]}