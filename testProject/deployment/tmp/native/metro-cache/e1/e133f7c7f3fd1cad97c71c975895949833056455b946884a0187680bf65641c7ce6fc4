{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":616,"column":0,"index":19796}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"../../src/private/featureflags/ReactNativeFeatureFlags","data":{"asyncType":null,"locs":[{"start":{"line":21,"column":0,"index":608},"end":{"line":21,"column":98,"index":706}}],"key":"On9He5TjYQGJzGlPyyzDdz1kZUA="}},{"name":"../EventEmitter/NativeEventEmitter","data":{"asyncType":null,"locs":[{"start":{"line":22,"column":0,"index":707},"end":{"line":22,"column":68,"index":775}}],"key":"FxUYVDH3eq4FUmUOIfY0RLK75tc="}},{"name":"../EventEmitter/RCTDeviceEventEmitter","data":{"asyncType":null,"locs":[{"start":{"line":23,"column":0,"index":776},"end":{"line":23,"column":74,"index":850}}],"key":"8/8s2qHajvAK0ZSPYhrCXcF24uY="}},{"name":"../Utilities/Platform","data":{"asyncType":null,"locs":[{"start":{"line":24,"column":0,"index":851},"end":{"line":24,"column":45,"index":896}}],"key":"3JpW2lByst9OohsYWa25ZOinj2I="}},{"name":"./NativeAnimatedModule","data":{"asyncType":null,"locs":[{"start":{"line":25,"column":0,"index":897},"end":{"line":25,"column":66,"index":963}}],"key":"2IHkob69BqWPcRW7TYgRTU/H7xU="}},{"name":"./NativeAnimatedTurboModule","data":{"asyncType":null,"locs":[{"start":{"line":26,"column":0,"index":964},"end":{"line":26,"column":68,"index":1032}}],"key":"5lLuBbz92WMWkrATIjmhcGDqF0g="}},{"name":"invariant","data":{"asyncType":null,"locs":[{"start":{"line":27,"column":0,"index":1033},"end":{"line":27,"column":34,"index":1067}}],"key":"Fzi/BpZws2YooIGJ9b6u0HJtuks="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var ReactNativeFeatureFlags = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1], \"../../src/private/featureflags/ReactNativeFeatureFlags\"));\n  var _NativeEventEmitter = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"../EventEmitter/NativeEventEmitter\"));\n  var _RCTDeviceEventEmitter = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"../EventEmitter/RCTDeviceEventEmitter\"));\n  var _Platform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"../Utilities/Platform\"));\n  var _NativeAnimatedModule = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"./NativeAnimatedModule\"));\n  var _NativeAnimatedTurboModule = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"./NativeAnimatedTurboModule\"));\n  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"invariant\"));\n  function _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\n  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * \n   * @format\n   */\n\n  // TODO T69437152 @petetheheat - Delete this fork when Fabric ships to 100%.\n  var NativeAnimatedModule = _NativeAnimatedModule.default != null ? _NativeAnimatedModule.default : _NativeAnimatedTurboModule.default;\n  var __nativeAnimatedNodeTagCount = 1; /* used for animated nodes */\n  var __nativeAnimationIdCount = 1; /* used for started animations */\n\n  var nativeEventEmitter;\n  var waitingForQueuedOperations = new Set();\n  var queueOperations = false;\n  var queue = [];\n  // $FlowFixMe\n  var singleOpQueue = [];\n  var useSingleOpBatching = _Platform.default.OS === 'android' && !!(NativeAnimatedModule != null && NativeAnimatedModule.queueAndExecuteBatchedOperations) && ReactNativeFeatureFlags.animatedShouldUseSingleOp();\n  var flushQueueTimeout = null;\n  var eventListenerGetValueCallbacks = {};\n  var eventListenerAnimationFinishedCallbacks = {};\n  var globalEventEmitterGetValueListener = null;\n  var globalEventEmitterAnimationFinishedListener = null;\n  var nativeOps = useSingleOpBatching ? function () {\n    var apis = ['createAnimatedNode',\n    // 1\n    'updateAnimatedNodeConfig',\n    // 2\n    'getValue',\n    // 3\n    'startListeningToAnimatedNodeValue',\n    // 4\n    'stopListeningToAnimatedNodeValue',\n    // 5\n    'connectAnimatedNodes',\n    // 6\n    'disconnectAnimatedNodes',\n    // 7\n    'startAnimatingNode',\n    // 8\n    'stopAnimation',\n    // 9\n    'setAnimatedNodeValue',\n    // 10\n    'setAnimatedNodeOffset',\n    // 11\n    'flattenAnimatedNodeOffset',\n    // 12\n    'extractAnimatedNodeOffset',\n    // 13\n    'connectAnimatedNodeToView',\n    // 14\n    'disconnectAnimatedNodeFromView',\n    // 15\n    'restoreDefaultValues',\n    // 16\n    'dropAnimatedNode',\n    // 17\n    'addAnimatedEventToView',\n    // 18\n    'removeAnimatedEventFromView',\n    // 19\n    'addListener',\n    // 20\n    'removeListener' // 21\n    ];\n    return apis.reduce(function (acc, functionName, i) {\n      // These indices need to be kept in sync with the indices in native (see NativeAnimatedModule in Java, or the equivalent for any other native platform).\n      // $FlowFixMe[prop-missing]\n      acc[functionName] = i + 1;\n      return acc;\n    }, {});\n  }() : NativeAnimatedModule;\n\n  /**\n   * Wrappers around NativeAnimatedModule to provide flow and autocomplete support for\n   * the native module methods, and automatic queue management on Android\n   */\n  var API = {\n    getValue: function getValue(tag, saveValueCallback) {\n      (0, _invariant.default)(nativeOps, 'Native animated module is not available');\n      if (useSingleOpBatching) {\n        if (saveValueCallback) {\n          eventListenerGetValueCallbacks[tag] = saveValueCallback;\n        }\n        // $FlowFixMe\n        API.queueOperation(nativeOps.getValue, tag);\n      } else {\n        API.queueOperation(nativeOps.getValue, tag, saveValueCallback);\n      }\n    },\n    setWaitingForIdentifier: function setWaitingForIdentifier(id) {\n      waitingForQueuedOperations.add(id);\n      queueOperations = true;\n      if (ReactNativeFeatureFlags.animatedShouldDebounceQueueFlush() && flushQueueTimeout) {\n        clearTimeout(flushQueueTimeout);\n      }\n    },\n    unsetWaitingForIdentifier: function unsetWaitingForIdentifier(id) {\n      waitingForQueuedOperations.delete(id);\n      if (waitingForQueuedOperations.size === 0) {\n        queueOperations = false;\n        API.disableQueue();\n      }\n    },\n    disableQueue: function disableQueue() {\n      (0, _invariant.default)(nativeOps, 'Native animated module is not available');\n      if (ReactNativeFeatureFlags.animatedShouldDebounceQueueFlush()) {\n        var prevTimeout = flushQueueTimeout;\n        clearImmediate(prevTimeout);\n        flushQueueTimeout = setImmediate(API.flushQueue);\n      } else {\n        API.flushQueue();\n      }\n    },\n    flushQueue: function flushQueue() {\n      // TODO: (T136971132)\n      (0, _invariant.default)(NativeAnimatedModule || process.env.NODE_ENV === 'test', 'Native animated module is not available');\n      flushQueueTimeout = null;\n\n      // Early returns before calling any APIs\n      if (useSingleOpBatching && singleOpQueue.length === 0) {\n        return;\n      }\n      if (!useSingleOpBatching && queue.length === 0) {\n        return;\n      }\n      if (useSingleOpBatching) {\n        // Set up event listener for callbacks if it's not set up\n        if (!globalEventEmitterGetValueListener || !globalEventEmitterAnimationFinishedListener) {\n          setupGlobalEventEmitterListeners();\n        }\n        // Single op batching doesn't use callback functions, instead we\n        // use RCTDeviceEventEmitter. This reduces overhead of sending lots of\n        // JSI functions across to native code; but also, TM infrastructure currently\n        // does not support packing a function into native arrays.\n        NativeAnimatedModule == null || NativeAnimatedModule.queueAndExecuteBatchedOperations == null || NativeAnimatedModule.queueAndExecuteBatchedOperations(singleOpQueue);\n        singleOpQueue.length = 0;\n      } else {\n        _Platform.default.OS === 'android' && (NativeAnimatedModule == null || NativeAnimatedModule.startOperationBatch == null ? void 0 : NativeAnimatedModule.startOperationBatch());\n        for (var q = 0, l = queue.length; q < l; q++) {\n          queue[q]();\n        }\n        queue.length = 0;\n        _Platform.default.OS === 'android' && (NativeAnimatedModule == null || NativeAnimatedModule.finishOperationBatch == null ? void 0 : NativeAnimatedModule.finishOperationBatch());\n      }\n    },\n    queueOperation: function queueOperation(fn) {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n      if (useSingleOpBatching) {\n        // Get the command ID from the queued function, and push that ID and any arguments needed to execute the operation\n        // $FlowFixMe: surprise, fn is actually a number\n        singleOpQueue.push.apply(singleOpQueue, [fn].concat(args));\n        return;\n      }\n\n      // If queueing is explicitly on, *or* the queue has not yet\n      // been flushed, use the queue. This is to prevent operations\n      // from being executed out of order.\n      if (queueOperations || queue.length !== 0) {\n        queue.push(function () {\n          return fn.apply(void 0, args);\n        });\n      } else {\n        fn.apply(void 0, args);\n      }\n    },\n    createAnimatedNode: function createAnimatedNode(tag, config) {\n      (0, _invariant.default)(nativeOps, 'Native animated module is not available');\n      API.queueOperation(nativeOps.createAnimatedNode, tag, config);\n    },\n    updateAnimatedNodeConfig: function updateAnimatedNodeConfig(tag, config) {\n      (0, _invariant.default)(nativeOps, 'Native animated module is not available');\n      if (nativeOps.updateAnimatedNodeConfig) {\n        API.queueOperation(nativeOps.updateAnimatedNodeConfig, tag, config);\n      }\n    },\n    startListeningToAnimatedNodeValue: function startListeningToAnimatedNodeValue(tag) {\n      (0, _invariant.default)(nativeOps, 'Native animated module is not available');\n      API.queueOperation(nativeOps.startListeningToAnimatedNodeValue, tag);\n    },\n    stopListeningToAnimatedNodeValue: function stopListeningToAnimatedNodeValue(tag) {\n      (0, _invariant.default)(nativeOps, 'Native animated module is not available');\n      API.queueOperation(nativeOps.stopListeningToAnimatedNodeValue, tag);\n    },\n    connectAnimatedNodes: function connectAnimatedNodes(parentTag, childTag) {\n      (0, _invariant.default)(nativeOps, 'Native animated module is not available');\n      API.queueOperation(nativeOps.connectAnimatedNodes, parentTag, childTag);\n    },\n    disconnectAnimatedNodes: function disconnectAnimatedNodes(parentTag, childTag) {\n      (0, _invariant.default)(nativeOps, 'Native animated module is not available');\n      API.queueOperation(nativeOps.disconnectAnimatedNodes, parentTag, childTag);\n    },\n    startAnimatingNode: function startAnimatingNode(animationId, nodeTag, config, endCallback) {\n      (0, _invariant.default)(nativeOps, 'Native animated module is not available');\n      if (useSingleOpBatching) {\n        if (endCallback) {\n          eventListenerAnimationFinishedCallbacks[animationId] = endCallback;\n        }\n        // $FlowFixMe\n        API.queueOperation(\n        // $FlowFixMe[incompatible-call]\n        nativeOps.startAnimatingNode, animationId, nodeTag, config);\n      } else {\n        API.queueOperation(nativeOps.startAnimatingNode, animationId, nodeTag, config, endCallback);\n      }\n    },\n    stopAnimation: function stopAnimation(animationId) {\n      (0, _invariant.default)(nativeOps, 'Native animated module is not available');\n      API.queueOperation(nativeOps.stopAnimation, animationId);\n    },\n    setAnimatedNodeValue: function setAnimatedNodeValue(nodeTag, value) {\n      (0, _invariant.default)(nativeOps, 'Native animated module is not available');\n      API.queueOperation(nativeOps.setAnimatedNodeValue, nodeTag, value);\n    },\n    setAnimatedNodeOffset: function setAnimatedNodeOffset(nodeTag, offset) {\n      (0, _invariant.default)(nativeOps, 'Native animated module is not available');\n      API.queueOperation(nativeOps.setAnimatedNodeOffset, nodeTag, offset);\n    },\n    flattenAnimatedNodeOffset: function flattenAnimatedNodeOffset(nodeTag) {\n      (0, _invariant.default)(nativeOps, 'Native animated module is not available');\n      API.queueOperation(nativeOps.flattenAnimatedNodeOffset, nodeTag);\n    },\n    extractAnimatedNodeOffset: function extractAnimatedNodeOffset(nodeTag) {\n      (0, _invariant.default)(nativeOps, 'Native animated module is not available');\n      API.queueOperation(nativeOps.extractAnimatedNodeOffset, nodeTag);\n    },\n    connectAnimatedNodeToView: function connectAnimatedNodeToView(nodeTag, viewTag) {\n      (0, _invariant.default)(nativeOps, 'Native animated module is not available');\n      API.queueOperation(nativeOps.connectAnimatedNodeToView, nodeTag, viewTag);\n    },\n    disconnectAnimatedNodeFromView: function disconnectAnimatedNodeFromView(nodeTag, viewTag) {\n      (0, _invariant.default)(nativeOps, 'Native animated module is not available');\n      API.queueOperation(nativeOps.disconnectAnimatedNodeFromView, nodeTag, viewTag);\n    },\n    restoreDefaultValues: function restoreDefaultValues(nodeTag) {\n      (0, _invariant.default)(nativeOps, 'Native animated module is not available');\n      // Backwards compat with older native runtimes, can be removed later.\n      if (nativeOps.restoreDefaultValues != null) {\n        API.queueOperation(nativeOps.restoreDefaultValues, nodeTag);\n      }\n    },\n    dropAnimatedNode: function dropAnimatedNode(tag) {\n      (0, _invariant.default)(nativeOps, 'Native animated module is not available');\n      API.queueOperation(nativeOps.dropAnimatedNode, tag);\n    },\n    addAnimatedEventToView: function addAnimatedEventToView(viewTag, eventName, eventMapping) {\n      (0, _invariant.default)(nativeOps, 'Native animated module is not available');\n      API.queueOperation(nativeOps.addAnimatedEventToView, viewTag, eventName, eventMapping);\n    },\n    removeAnimatedEventFromView: function removeAnimatedEventFromView(viewTag, eventName, animatedNodeTag) {\n      (0, _invariant.default)(nativeOps, 'Native animated module is not available');\n      API.queueOperation(nativeOps.removeAnimatedEventFromView, viewTag, eventName, animatedNodeTag);\n    }\n  };\n  function setupGlobalEventEmitterListeners() {\n    globalEventEmitterGetValueListener = _RCTDeviceEventEmitter.default.addListener('onNativeAnimatedModuleGetValue', function (params) {\n      var tag = params.tag;\n      var callback = eventListenerGetValueCallbacks[tag];\n      if (!callback) {\n        return;\n      }\n      callback(params.value);\n      delete eventListenerGetValueCallbacks[tag];\n    });\n    globalEventEmitterAnimationFinishedListener = _RCTDeviceEventEmitter.default.addListener('onNativeAnimatedModuleAnimationFinished', function (params) {\n      // TODO: remove Array.isArray once native changes have propagated\n      var animations = Array.isArray(params) ? params : [params];\n      for (var animation of animations) {\n        var animationId = animation.animationId;\n        var callback = eventListenerAnimationFinishedCallbacks[animationId];\n        if (callback) {\n          callback(animation);\n          delete eventListenerAnimationFinishedCallbacks[animationId];\n        }\n      }\n    });\n  }\n\n  /**\n   * Styles allowed by the native animated implementation.\n   *\n   * In general native animated implementation should support any numeric or color property that\n   * doesn't need to be updated through the shadow view hierarchy (all non-layout properties).\n   */\n  var SUPPORTED_COLOR_STYLES = {\n    backgroundColor: true,\n    borderBottomColor: true,\n    borderColor: true,\n    borderEndColor: true,\n    borderLeftColor: true,\n    borderRightColor: true,\n    borderStartColor: true,\n    borderTopColor: true,\n    color: true,\n    tintColor: true\n  };\n  var SUPPORTED_STYLES = Object.assign({}, SUPPORTED_COLOR_STYLES, {\n    borderBottomEndRadius: true,\n    borderBottomLeftRadius: true,\n    borderBottomRightRadius: true,\n    borderBottomStartRadius: true,\n    borderEndEndRadius: true,\n    borderEndStartRadius: true,\n    borderRadius: true,\n    borderTopEndRadius: true,\n    borderTopLeftRadius: true,\n    borderTopRightRadius: true,\n    borderTopStartRadius: true,\n    borderStartEndRadius: true,\n    borderStartStartRadius: true,\n    elevation: true,\n    opacity: true,\n    transform: true,\n    zIndex: true,\n    /* ios styles */\n    shadowOpacity: true,\n    shadowRadius: true,\n    /* legacy android transform properties */\n    scaleX: true,\n    scaleY: true,\n    translateX: true,\n    translateY: true\n  });\n  var SUPPORTED_TRANSFORMS = {\n    translateX: true,\n    translateY: true,\n    scale: true,\n    scaleX: true,\n    scaleY: true,\n    rotate: true,\n    rotateX: true,\n    rotateY: true,\n    rotateZ: true,\n    perspective: true,\n    skewX: true,\n    skewY: true,\n    matrix: ReactNativeFeatureFlags.shouldUseAnimatedObjectForTransform()\n  };\n  var SUPPORTED_INTERPOLATION_PARAMS = {\n    inputRange: true,\n    outputRange: true,\n    extrapolate: true,\n    extrapolateRight: true,\n    extrapolateLeft: true\n  };\n  function addWhitelistedStyleProp(prop) {\n    // $FlowFixMe[prop-missing]\n    SUPPORTED_STYLES[prop] = true;\n  }\n  function addWhitelistedTransformProp(prop) {\n    // $FlowFixMe[prop-missing]\n    SUPPORTED_TRANSFORMS[prop] = true;\n  }\n  function addWhitelistedInterpolationParam(param) {\n    // $FlowFixMe[prop-missing]\n    SUPPORTED_INTERPOLATION_PARAMS[param] = true;\n  }\n  function isSupportedColorStyleProp(prop) {\n    // $FlowFixMe[invalid-computed-prop]\n    return SUPPORTED_COLOR_STYLES[prop] === true;\n  }\n  function isSupportedStyleProp(prop) {\n    // $FlowFixMe[invalid-computed-prop]\n    return SUPPORTED_STYLES[prop] === true;\n  }\n  function isSupportedTransformProp(prop) {\n    // $FlowFixMe[invalid-computed-prop]\n    return SUPPORTED_TRANSFORMS[prop] === true;\n  }\n  function isSupportedInterpolationParam(param) {\n    // $FlowFixMe[invalid-computed-prop]\n    return SUPPORTED_INTERPOLATION_PARAMS[param] === true;\n  }\n  function validateTransform(configs) {\n    configs.forEach(function (config) {\n      if (!isSupportedTransformProp(config.property)) {\n        throw new Error(`Property '${config.property}' is not supported by native animated module`);\n      }\n    });\n  }\n  function validateStyles(styles) {\n    for (var _key2 in styles) {\n      if (!isSupportedStyleProp(_key2)) {\n        throw new Error(`Style property '${_key2}' is not supported by native animated module`);\n      }\n    }\n  }\n  function validateInterpolation(config) {\n    for (var _key3 in config) {\n      if (!isSupportedInterpolationParam(_key3)) {\n        throw new Error(`Interpolation property '${_key3}' is not supported by native animated module`);\n      }\n    }\n  }\n  function generateNewNodeTag() {\n    return __nativeAnimatedNodeTagCount++;\n  }\n  function generateNewAnimationId() {\n    return __nativeAnimationIdCount++;\n  }\n  function assertNativeAnimatedModule() {\n    (0, _invariant.default)(NativeAnimatedModule, 'Native animated module is not available');\n  }\n  var _warnedMissingNativeAnimated = false;\n  function shouldUseNativeDriver(config) {\n    if (config.useNativeDriver == null) {\n      console.warn('Animated: `useNativeDriver` was not specified. This is a required ' + 'option and must be explicitly set to `true` or `false`');\n    }\n    if (config.useNativeDriver === true && !NativeAnimatedModule) {\n      if (process.env.NODE_ENV !== 'test') {\n        if (!_warnedMissingNativeAnimated) {\n          console.warn('Animated: `useNativeDriver` is not supported because the native ' + 'animated module is missing. Falling back to JS-based animation. To ' + 'resolve this, add `RCTAnimation` module to this app, or remove ' + '`useNativeDriver`. ' + 'Make sure to run `bundle exec pod install` first. Read more about autolinking: https://github.com/react-native-community/cli/blob/master/docs/autolinking.md');\n          _warnedMissingNativeAnimated = true;\n        }\n      }\n      return false;\n    }\n    return config.useNativeDriver || false;\n  }\n  function transformDataType(value) {\n    // Change the string type to number type so we can reuse the same logic in\n    // iOS and Android platform\n    if (typeof value !== 'string') {\n      return value;\n    }\n\n    // Normalize degrees and radians to a number expressed in radians\n    if (value.endsWith('deg')) {\n      var degrees = parseFloat(value) || 0;\n      return degrees * Math.PI / 180.0;\n    } else if (value.endsWith('rad')) {\n      return parseFloat(value) || 0;\n    } else {\n      return value;\n    }\n  }\n  var _default = exports.default = {\n    API: API,\n    isSupportedColorStyleProp: isSupportedColorStyleProp,\n    isSupportedStyleProp: isSupportedStyleProp,\n    isSupportedTransformProp: isSupportedTransformProp,\n    isSupportedInterpolationParam: isSupportedInterpolationParam,\n    addWhitelistedStyleProp: addWhitelistedStyleProp,\n    addWhitelistedTransformProp: addWhitelistedTransformProp,\n    addWhitelistedInterpolationParam: addWhitelistedInterpolationParam,\n    validateStyles: validateStyles,\n    validateTransform: validateTransform,\n    validateInterpolation: validateInterpolation,\n    generateNewNodeTag: generateNewNodeTag,\n    generateNewAnimationId: generateNewAnimationId,\n    assertNativeAnimatedModule: assertNativeAnimatedModule,\n    shouldUseNativeDriver: shouldUseNativeDriver,\n    transformDataType: transformDataType,\n    // $FlowExpectedError[unsafe-getters-setters] - unsafe getter lint suppression\n    // $FlowExpectedError[missing-type-arg] - unsafe getter lint suppression\n    get nativeEventEmitter() {\n      if (!nativeEventEmitter) {\n        // $FlowFixMe[underconstrained-implicit-instantiation]\n        nativeEventEmitter = new _NativeEventEmitter.default(\n        // T88715063: NativeEventEmitter only used this parameter on iOS. Now it uses it on all platforms, so this code was modified automatically to preserve its behavior\n        // If you want to use the native module on other platforms, please remove this condition and test its behavior\n        _Platform.default.OS !== 'ios' ? null : NativeAnimatedModule);\n      }\n      return nativeEventEmitter;\n    }\n  };\n});","lineCount":489,"map":[[7,2,21,0],[7,6,21,0,"ReactNativeFeatureFlags"],[7,29,21,0],[7,32,21,0,"_interopRequireWildcard"],[7,55,21,0],[7,56,21,0,"_$$_REQUIRE"],[7,67,21,0],[7,68,21,0,"_dependencyMap"],[7,82,21,0],[8,2,22,0],[8,6,22,0,"_NativeEventEmitter"],[8,25,22,0],[8,28,22,0,"_interopRequireDefault"],[8,50,22,0],[8,51,22,0,"_$$_REQUIRE"],[8,62,22,0],[8,63,22,0,"_dependencyMap"],[8,77,22,0],[9,2,23,0],[9,6,23,0,"_RCTDeviceEventEmitter"],[9,28,23,0],[9,31,23,0,"_interopRequireDefault"],[9,53,23,0],[9,54,23,0,"_$$_REQUIRE"],[9,65,23,0],[9,66,23,0,"_dependencyMap"],[9,80,23,0],[10,2,24,0],[10,6,24,0,"_Platform"],[10,15,24,0],[10,18,24,0,"_interopRequireDefault"],[10,40,24,0],[10,41,24,0,"_$$_REQUIRE"],[10,52,24,0],[10,53,24,0,"_dependencyMap"],[10,67,24,0],[11,2,25,0],[11,6,25,0,"_NativeAnimatedModule"],[11,27,25,0],[11,30,25,0,"_interopRequireDefault"],[11,52,25,0],[11,53,25,0,"_$$_REQUIRE"],[11,64,25,0],[11,65,25,0,"_dependencyMap"],[11,79,25,0],[12,2,26,0],[12,6,26,0,"_NativeAnimatedTurboModule"],[12,32,26,0],[12,35,26,0,"_interopRequireDefault"],[12,57,26,0],[12,58,26,0,"_$$_REQUIRE"],[12,69,26,0],[12,70,26,0,"_dependencyMap"],[12,84,26,0],[13,2,27,0],[13,6,27,0,"_invariant"],[13,16,27,0],[13,19,27,0,"_interopRequireDefault"],[13,41,27,0],[13,42,27,0,"_$$_REQUIRE"],[13,53,27,0],[13,54,27,0,"_dependencyMap"],[13,68,27,0],[14,2,27,34],[14,11,27,34,"_getRequireWildcardCache"],[14,36,27,34,"e"],[14,37,27,34],[14,66,27,34,"WeakMap"],[14,73,27,34],[14,92,27,34,"r"],[14,93,27,34],[14,100,27,34,"WeakMap"],[14,107,27,34],[14,111,27,34,"t"],[14,112,27,34],[14,119,27,34,"WeakMap"],[14,126,27,34],[14,138,27,34,"_getRequireWildcardCache"],[14,162,27,34],[14,174,27,34,"_getRequireWildcardCache"],[14,199,27,34,"e"],[14,200,27,34],[14,211,27,34,"e"],[14,212,27,34],[14,215,27,34,"t"],[14,216,27,34],[14,219,27,34,"r"],[14,220,27,34],[14,225,27,34,"e"],[14,226,27,34],[15,2,27,34],[15,11,27,34,"_interopRequireWildcard"],[15,35,27,34,"e"],[15,36,27,34],[15,38,27,34,"r"],[15,39,27,34],[15,48,27,34,"r"],[15,49,27,34],[15,53,27,34,"e"],[15,54,27,34],[15,58,27,34,"e"],[15,59,27,34],[15,60,27,34,"__esModule"],[15,70,27,34],[15,79,27,34,"e"],[15,80,27,34],[15,95,27,34,"e"],[15,96,27,34],[15,119,27,34,"e"],[15,120,27,34],[15,145,27,34,"e"],[15,146,27,34],[15,157,27,34,"default"],[15,164,27,34],[15,166,27,34,"e"],[15,167,27,34],[15,175,27,34,"t"],[15,176,27,34],[15,179,27,34,"_getRequireWildcardCache"],[15,203,27,34],[15,204,27,34,"r"],[15,205,27,34],[15,212,27,34,"t"],[15,213,27,34],[15,217,27,34,"t"],[15,218,27,34],[15,219,27,34,"has"],[15,222,27,34],[15,223,27,34,"e"],[15,224,27,34],[15,234,27,34,"t"],[15,235,27,34],[15,236,27,34,"get"],[15,239,27,34],[15,240,27,34,"e"],[15,241,27,34],[15,248,27,34,"n"],[15,249,27,34],[15,254,27,34,"__proto__"],[15,263,27,34],[15,273,27,34,"a"],[15,274,27,34],[15,277,27,34,"Object"],[15,283,27,34],[15,284,27,34,"defineProperty"],[15,298,27,34],[15,302,27,34,"Object"],[15,308,27,34],[15,309,27,34,"getOwnPropertyDescriptor"],[15,333,27,34],[15,344,27,34,"u"],[15,345,27,34],[15,349,27,34,"e"],[15,350,27,34],[15,370,27,34,"u"],[15,371,27,34],[15,378,27,34,"hasOwnProperty"],[15,392,27,34],[15,393,27,34,"call"],[15,397,27,34],[15,398,27,34,"e"],[15,399,27,34],[15,401,27,34,"u"],[15,402,27,34],[15,411,27,34,"i"],[15,412,27,34],[15,415,27,34,"a"],[15,416,27,34],[15,419,27,34,"Object"],[15,425,27,34],[15,426,27,34,"getOwnPropertyDescriptor"],[15,450,27,34],[15,451,27,34,"e"],[15,452,27,34],[15,454,27,34,"u"],[15,455,27,34],[15,465,27,34,"i"],[15,466,27,34],[15,471,27,34,"i"],[15,472,27,34],[15,473,27,34,"get"],[15,476,27,34],[15,480,27,34,"i"],[15,481,27,34],[15,482,27,34,"set"],[15,485,27,34],[15,489,27,34,"Object"],[15,495,27,34],[15,496,27,34,"defineProperty"],[15,510,27,34],[15,511,27,34,"n"],[15,512,27,34],[15,514,27,34,"u"],[15,515,27,34],[15,517,27,34,"i"],[15,518,27,34],[15,522,27,34,"n"],[15,523,27,34],[15,524,27,34,"u"],[15,525,27,34],[15,529,27,34,"e"],[15,530,27,34],[15,531,27,34,"u"],[15,532,27,34],[15,544,27,34,"n"],[15,545,27,34],[15,546,27,34,"default"],[15,553,27,34],[15,556,27,34,"e"],[15,557,27,34],[15,559,27,34,"t"],[15,560,27,34],[15,564,27,34,"t"],[15,565,27,34],[15,566,27,34,"set"],[15,569,27,34],[15,570,27,34,"e"],[15,571,27,34],[15,573,27,34,"n"],[15,574,27,34],[15,577,27,34,"n"],[15,578,27,34],[16,2,1,0],[17,0,2,0],[18,0,3,0],[19,0,4,0],[20,0,5,0],[21,0,6,0],[22,0,7,0],[23,0,8,0],[24,0,9,0],[26,2,29,0],[27,2,30,0],[27,6,30,6,"NativeAnimatedModule"],[27,26,30,26],[27,29,31,2,"NativeAnimatedNonTurboModule"],[27,58,31,30],[27,69,31,2,"NativeAnimatedNonTurboModule"],[27,98,31,30],[27,101,31,34,"NativeAnimatedTurboModule"],[27,135,31,59],[28,2,33,0],[28,6,33,4,"__nativeAnimatedNodeTagCount"],[28,34,33,32],[28,37,33,35],[28,38,33,36],[28,39,33,37],[28,40,33,38],[29,2,34,0],[29,6,34,4,"__nativeAnimationIdCount"],[29,30,34,28],[29,33,34,31],[29,34,34,32],[29,35,34,33],[29,36,34,34],[31,2,36,0],[31,6,36,4,"nativeEventEmitter"],[31,24,36,22],[32,2,38,0],[32,6,38,4,"waitingForQueuedOperations"],[32,32,38,30],[32,35,38,33],[32,39,38,37,"Set"],[32,42,38,40],[32,43,38,49],[32,44,38,50],[33,2,39,0],[33,6,39,4,"queueOperations"],[33,21,39,19],[33,24,39,22],[33,29,39,27],[34,2,40,0],[34,6,40,4,"queue"],[34,11,40,28],[34,14,40,31],[34,16,40,33],[35,2,41,0],[36,2,42,0],[36,6,42,4,"singleOpQueue"],[36,19,42,29],[36,22,42,32],[36,24,42,34],[37,2,44,0],[37,6,44,6,"useSingleOpBatching"],[37,25,44,25],[37,28,45,2,"Platform"],[37,45,45,10],[37,46,45,11,"OS"],[37,48,45,13],[37,53,45,18],[37,62,45,27],[37,66,46,2],[37,67,46,3],[37,69,46,4,"NativeAnimatedModule"],[37,89,46,24],[37,101,46,4,"NativeAnimatedModule"],[37,121,46,24],[37,122,46,26,"queueAndExecuteBatchedOperations"],[37,154,46,58],[37,159,47,2,"ReactNativeFeatureFlags"],[37,182,47,25],[37,183,47,26,"animatedShouldUseSingleOp"],[37,208,47,51],[37,209,47,52],[37,210,47,53],[38,2,48,0],[38,6,48,4,"flushQueueTimeout"],[38,23,48,21],[38,26,48,24],[38,30,48,28],[39,2,50,0],[39,6,50,6,"eventListenerGetValueCallbacks"],[39,36,52,1],[39,39,52,4],[39,40,52,5],[39,41,52,6],[40,2,53,0],[40,6,53,6,"eventListenerAnimationFinishedCallbacks"],[40,45,55,1],[40,48,55,4],[40,49,55,5],[40,50,55,6],[41,2,56,0],[41,6,56,4,"globalEventEmitterGetValueListener"],[41,40,56,58],[41,43,56,61],[41,47,56,65],[42,2,57,0],[42,6,57,4,"globalEventEmitterAnimationFinishedListener"],[42,49,57,67],[42,52,57,70],[42,56,57,74],[43,2,59,0],[43,6,59,6,"nativeOps"],[43,15,59,45],[43,18,59,48,"useSingleOpBatching"],[43,37,59,67],[43,40,60,6],[43,52,60,18],[44,4,61,6],[44,8,61,12,"apis"],[44,12,61,16],[44,15,61,19],[44,16,62,8],[44,36,62,28],[45,4,62,30],[46,4,63,8],[46,30,63,34],[47,4,63,36],[48,4,64,8],[48,14,64,18],[49,4,64,20],[50,4,65,8],[50,39,65,43],[51,4,65,45],[52,4,66,8],[52,38,66,42],[53,4,66,44],[54,4,67,8],[54,26,67,30],[55,4,67,32],[56,4,68,8],[56,29,68,33],[57,4,68,35],[58,4,69,8],[58,24,69,28],[59,4,69,30],[60,4,70,8],[60,19,70,23],[61,4,70,25],[62,4,71,8],[62,26,71,30],[63,4,71,32],[64,4,72,8],[64,27,72,31],[65,4,72,33],[66,4,73,8],[66,31,73,35],[67,4,73,37],[68,4,74,8],[68,31,74,35],[69,4,74,37],[70,4,75,8],[70,31,75,35],[71,4,75,37],[72,4,76,8],[72,36,76,40],[73,4,76,42],[74,4,77,8],[74,26,77,30],[75,4,77,32],[76,4,78,8],[76,22,78,26],[77,4,78,28],[78,4,79,8],[78,28,79,32],[79,4,79,34],[80,4,80,8],[80,33,80,37],[81,4,80,39],[82,4,81,8],[82,17,81,21],[83,4,81,23],[84,4,82,8],[84,20,82,24],[84,21,82,26],[85,4,82,26],[85,5,83,7],[86,4,84,6],[86,11,84,13,"apis"],[86,15,84,17],[86,16,84,18,"reduce"],[86,22,84,24],[86,23,84,45],[86,33,84,46,"acc"],[86,36,84,49],[86,38,84,51,"functionName"],[86,50,84,63],[86,52,84,65,"i"],[86,53,84,66],[86,55,84,71],[87,6,85,8],[88,6,86,8],[89,6,87,8,"acc"],[89,9,87,11],[89,10,87,12,"functionName"],[89,22,87,24],[89,23,87,25],[89,26,87,28,"i"],[89,27,87,29],[89,30,87,32],[89,31,87,33],[90,6,88,8],[90,13,88,15,"acc"],[90,16,88,18],[91,4,89,6],[91,5,89,7],[91,7,89,9],[91,8,89,10],[91,9,89,11],[91,10,89,12],[92,2,90,4],[92,3,90,5],[92,4,90,7],[92,5,90,8],[92,8,91,4,"NativeAnimatedModule"],[92,28,91,24],[94,2,93,0],[95,0,94,0],[96,0,95,0],[97,0,96,0],[98,2,97,0],[98,6,97,6,"API"],[98,9,97,9],[98,12,97,12],[99,4,98,2,"getValue"],[99,12,98,10],[99,14,98,12],[99,23,98,2,"getValue"],[99,31,98,10,"getValue"],[99,32,99,4,"tag"],[99,35,99,15],[99,37,100,4,"saveValueCallback"],[99,54,100,46],[99,56,101,10],[100,6,102,4],[100,10,102,4,"invariant"],[100,28,102,13],[100,30,102,14,"nativeOps"],[100,39,102,23],[100,41,102,25],[100,82,102,66],[100,83,102,67],[101,6,103,4],[101,10,103,8,"useSingleOpBatching"],[101,29,103,27],[101,31,103,29],[102,8,104,6],[102,12,104,10,"saveValueCallback"],[102,29,104,27],[102,31,104,29],[103,10,105,8,"eventListenerGetValueCallbacks"],[103,40,105,38],[103,41,105,39,"tag"],[103,44,105,42],[103,45,105,43],[103,48,105,46,"saveValueCallback"],[103,65,105,63],[104,8,106,6],[105,8,107,6],[106,8,108,6,"API"],[106,11,108,9],[106,12,108,10,"queueOperation"],[106,26,108,24],[106,27,108,25,"nativeOps"],[106,36,108,34],[106,37,108,35,"getValue"],[106,45,108,43],[106,47,108,45,"tag"],[106,50,108,48],[106,51,108,49],[107,6,109,4],[107,7,109,5],[107,13,109,11],[108,8,110,6,"API"],[108,11,110,9],[108,12,110,10,"queueOperation"],[108,26,110,24],[108,27,110,25,"nativeOps"],[108,36,110,34],[108,37,110,35,"getValue"],[108,45,110,43],[108,47,110,45,"tag"],[108,50,110,48],[108,52,110,50,"saveValueCallback"],[108,69,110,67],[108,70,110,68],[109,6,111,4],[110,4,112,2],[110,5,112,3],[111,4,113,2,"setWaitingForIdentifier"],[111,27,113,25],[111,29,113,27],[111,38,113,2,"setWaitingForIdentifier"],[111,61,113,25,"setWaitingForIdentifier"],[111,62,113,37,"id"],[111,64,113,47],[111,66,113,55],[112,6,114,4,"waitingForQueuedOperations"],[112,32,114,30],[112,33,114,31,"add"],[112,36,114,34],[112,37,114,35,"id"],[112,39,114,37],[112,40,114,38],[113,6,115,4,"queueOperations"],[113,21,115,19],[113,24,115,22],[113,28,115,26],[114,6,116,4],[114,10,117,6,"ReactNativeFeatureFlags"],[114,33,117,29],[114,34,117,30,"animatedShouldDebounceQueueFlush"],[114,66,117,62],[114,67,117,63],[114,68,117,64],[114,72,118,6,"flushQueueTimeout"],[114,89,118,23],[114,91,119,6],[115,8,120,6,"clearTimeout"],[115,20,120,18],[115,21,120,19,"flushQueueTimeout"],[115,38,120,36],[115,39,120,37],[116,6,121,4],[117,4,122,2],[117,5,122,3],[118,4,123,2,"unsetWaitingForIdentifier"],[118,29,123,27],[118,31,123,29],[118,40,123,2,"unsetWaitingForIdentifier"],[118,65,123,27,"unsetWaitingForIdentifier"],[118,66,123,39,"id"],[118,68,123,49],[118,70,123,57],[119,6,124,4,"waitingForQueuedOperations"],[119,32,124,30],[119,33,124,31,"delete"],[119,39,124,37],[119,40,124,38,"id"],[119,42,124,40],[119,43,124,41],[120,6,126,4],[120,10,126,8,"waitingForQueuedOperations"],[120,36,126,34],[120,37,126,35,"size"],[120,41,126,39],[120,46,126,44],[120,47,126,45],[120,49,126,47],[121,8,127,6,"queueOperations"],[121,23,127,21],[121,26,127,24],[121,31,127,29],[122,8,128,6,"API"],[122,11,128,9],[122,12,128,10,"disableQueue"],[122,24,128,22],[122,25,128,23],[122,26,128,24],[123,6,129,4],[124,4,130,2],[124,5,130,3],[125,4,131,2,"disableQueue"],[125,16,131,14],[125,18,131,16],[125,27,131,2,"disableQueue"],[125,39,131,14,"disableQueue"],[125,40,131,14],[125,42,131,34],[126,6,132,4],[126,10,132,4,"invariant"],[126,28,132,13],[126,30,132,14,"nativeOps"],[126,39,132,23],[126,41,132,25],[126,82,132,66],[126,83,132,67],[127,6,134,4],[127,10,134,8,"ReactNativeFeatureFlags"],[127,33,134,31],[127,34,134,32,"animatedShouldDebounceQueueFlush"],[127,66,134,64],[127,67,134,65],[127,68,134,66],[127,70,134,68],[128,8,135,6],[128,12,135,12,"prevTimeout"],[128,23,135,23],[128,26,135,26,"flushQueueTimeout"],[128,43,135,43],[129,8,136,6,"clearImmediate"],[129,22,136,20],[129,23,136,21,"prevTimeout"],[129,34,136,32],[129,35,136,33],[130,8,137,6,"flushQueueTimeout"],[130,25,137,23],[130,28,137,26,"setImmediate"],[130,40,137,38],[130,41,137,39,"API"],[130,44,137,42],[130,45,137,43,"flushQueue"],[130,55,137,53],[130,56,137,54],[131,6,138,4],[131,7,138,5],[131,13,138,11],[132,8,139,6,"API"],[132,11,139,9],[132,12,139,10,"flushQueue"],[132,22,139,20],[132,23,139,21],[132,24,139,22],[133,6,140,4],[134,4,141,2],[134,5,141,3],[135,4,142,2,"flushQueue"],[135,14,142,12],[135,16,142,14],[135,25,142,2,"flushQueue"],[135,35,142,12,"flushQueue"],[135,36,142,12],[135,38,142,32],[136,6,143,4],[137,6,144,4],[137,10,144,4,"invariant"],[137,28,144,13],[137,30,145,6,"NativeAnimatedModule"],[137,50,145,26],[137,54,145,30,"process"],[137,61,145,37],[137,62,145,38,"env"],[137,65,145,41],[137,66,145,42,"NODE_ENV"],[137,74,145,50],[137,79,145,55],[137,85,145,61],[137,87,146,6],[137,128,147,4],[137,129,147,5],[138,6,148,4,"flushQueueTimeout"],[138,23,148,21],[138,26,148,24],[138,30,148,28],[140,6,150,4],[141,6,151,4],[141,10,151,8,"useSingleOpBatching"],[141,29,151,27],[141,33,151,31,"singleOpQueue"],[141,46,151,44],[141,47,151,45,"length"],[141,53,151,51],[141,58,151,56],[141,59,151,57],[141,61,151,59],[142,8,152,6],[143,6,153,4],[144,6,154,4],[144,10,154,8],[144,11,154,9,"useSingleOpBatching"],[144,30,154,28],[144,34,154,32,"queue"],[144,39,154,37],[144,40,154,38,"length"],[144,46,154,44],[144,51,154,49],[144,52,154,50],[144,54,154,52],[145,8,155,6],[146,6,156,4],[147,6,158,4],[147,10,158,8,"useSingleOpBatching"],[147,29,158,27],[147,31,158,29],[148,8,159,6],[149,8,160,6],[149,12,161,8],[149,13,161,9,"globalEventEmitterGetValueListener"],[149,47,161,43],[149,51,162,8],[149,52,162,9,"globalEventEmitterAnimationFinishedListener"],[149,95,162,52],[149,97,163,8],[150,10,164,8,"setupGlobalEventEmitterListeners"],[150,42,164,40],[150,43,164,41],[150,44,164,42],[151,8,165,6],[152,8,166,6],[153,8,167,6],[154,8,168,6],[155,8,169,6],[156,8,170,6,"NativeAnimatedModule"],[156,28,170,26],[156,40,170,6,"NativeAnimatedModule"],[156,60,170,26],[156,61,170,28,"queueAndExecuteBatchedOperations"],[156,93,170,60],[156,105,170,6,"NativeAnimatedModule"],[156,125,170,26],[156,126,170,28,"queueAndExecuteBatchedOperations"],[156,158,170,60],[156,159,170,63,"singleOpQueue"],[156,172,170,76],[156,173,170,77],[157,8,171,6,"singleOpQueue"],[157,21,171,19],[157,22,171,20,"length"],[157,28,171,26],[157,31,171,29],[157,32,171,30],[158,6,172,4],[158,7,172,5],[158,13,172,11],[159,8,173,6,"Platform"],[159,25,173,14],[159,26,173,15,"OS"],[159,28,173,17],[159,33,173,22],[159,42,173,31],[159,47,174,8,"NativeAnimatedModule"],[159,67,174,28],[159,79,174,8,"NativeAnimatedModule"],[159,99,174,28],[159,100,174,30,"startOperationBatch"],[159,119,174,49],[159,139,174,8,"NativeAnimatedModule"],[159,159,174,28],[159,160,174,30,"startOperationBatch"],[159,179,174,49],[159,180,174,52],[159,181,174,53],[160,8,176,6],[160,13,176,11],[160,17,176,15,"q"],[160,18,176,16],[160,21,176,19],[160,22,176,20],[160,24,176,22,"l"],[160,25,176,23],[160,28,176,26,"queue"],[160,33,176,31],[160,34,176,32,"length"],[160,40,176,38],[160,42,176,40,"q"],[160,43,176,41],[160,46,176,44,"l"],[160,47,176,45],[160,49,176,47,"q"],[160,50,176,48],[160,52,176,50],[160,54,176,52],[161,10,177,8,"queue"],[161,15,177,13],[161,16,177,14,"q"],[161,17,177,15],[161,18,177,16],[161,19,177,17],[161,20,177,18],[162,8,178,6],[163,8,179,6,"queue"],[163,13,179,11],[163,14,179,12,"length"],[163,20,179,18],[163,23,179,21],[163,24,179,22],[164,8,180,6,"Platform"],[164,25,180,14],[164,26,180,15,"OS"],[164,28,180,17],[164,33,180,22],[164,42,180,31],[164,47,181,8,"NativeAnimatedModule"],[164,67,181,28],[164,79,181,8,"NativeAnimatedModule"],[164,99,181,28],[164,100,181,30,"finishOperationBatch"],[164,120,181,50],[164,140,181,8,"NativeAnimatedModule"],[164,160,181,28],[164,161,181,30,"finishOperationBatch"],[164,181,181,50],[164,182,181,53],[164,183,181,54],[165,6,182,4],[166,4,183,2],[166,5,183,3],[167,4,184,2,"queueOperation"],[167,18,184,16],[167,20,184,18],[167,29,184,2,"queueOperation"],[167,43,184,16,"queueOperation"],[167,44,185,4,"fn"],[167,46,185,10],[167,48,187,13],[168,6,187,13],[168,15,187,13,"_len"],[168,19,187,13],[168,22,187,13,"arguments"],[168,31,187,13],[168,32,187,13,"length"],[168,38,187,13],[168,40,186,7,"args"],[168,44,186,11],[168,51,186,11,"Array"],[168,56,186,11],[168,57,186,11,"_len"],[168,61,186,11],[168,68,186,11,"_len"],[168,72,186,11],[168,83,186,11,"_key"],[168,87,186,11],[168,93,186,11,"_key"],[168,97,186,11],[168,100,186,11,"_len"],[168,104,186,11],[168,106,186,11,"_key"],[168,110,186,11],[169,8,186,7,"args"],[169,12,186,11],[169,13,186,11,"_key"],[169,17,186,11],[169,25,186,11,"arguments"],[169,34,186,11],[169,35,186,11,"_key"],[169,39,186,11],[170,6,186,11],[171,6,188,4],[171,10,188,8,"useSingleOpBatching"],[171,29,188,27],[171,31,188,29],[172,8,189,6],[173,8,190,6],[174,8,191,6,"singleOpQueue"],[174,21,191,19],[174,22,191,20,"push"],[174,26,191,24],[174,27,191,24,"apply"],[174,32,191,24],[174,33,191,6,"singleOpQueue"],[174,46,191,19],[174,49,191,25,"fn"],[174,51,191,27],[174,53,191,27,"concat"],[174,59,191,27],[174,60,191,32,"args"],[174,64,191,36],[174,66,191,37],[175,8,192,6],[176,6,193,4],[178,6,195,4],[179,6,196,4],[180,6,197,4],[181,6,198,4],[181,10,198,8,"queueOperations"],[181,25,198,23],[181,29,198,27,"queue"],[181,34,198,32],[181,35,198,33,"length"],[181,41,198,39],[181,46,198,44],[181,47,198,45],[181,49,198,47],[182,8,199,6,"queue"],[182,13,199,11],[182,14,199,12,"push"],[182,18,199,16],[182,19,199,17],[183,10,199,17],[183,17,199,23,"fn"],[183,19,199,25],[183,20,199,25,"apply"],[183,25,199,25],[183,34,199,29,"args"],[183,38,199,33],[183,39,199,34],[184,8,199,34],[184,10,199,35],[185,6,200,4],[185,7,200,5],[185,13,200,11],[186,8,201,6,"fn"],[186,10,201,8],[186,11,201,8,"apply"],[186,16,201,8],[186,25,201,12,"args"],[186,29,201,16],[186,30,201,17],[187,6,202,4],[188,4,203,2],[188,5,203,3],[189,4,204,2,"createAnimatedNode"],[189,22,204,20],[189,24,204,22],[189,33,204,2,"createAnimatedNode"],[189,51,204,20,"createAnimatedNode"],[189,52,204,32,"tag"],[189,55,204,43],[189,57,204,45,"config"],[189,63,204,71],[189,65,204,79],[190,6,205,4],[190,10,205,4,"invariant"],[190,28,205,13],[190,30,205,14,"nativeOps"],[190,39,205,23],[190,41,205,25],[190,82,205,66],[190,83,205,67],[191,6,206,4,"API"],[191,9,206,7],[191,10,206,8,"queueOperation"],[191,24,206,22],[191,25,206,23,"nativeOps"],[191,34,206,32],[191,35,206,33,"createAnimatedNode"],[191,53,206,51],[191,55,206,53,"tag"],[191,58,206,56],[191,60,206,58,"config"],[191,66,206,64],[191,67,206,65],[192,4,207,2],[192,5,207,3],[193,4,208,2,"updateAnimatedNodeConfig"],[193,28,208,26],[193,30,208,28],[193,39,208,2,"updateAnimatedNodeConfig"],[193,63,208,26,"updateAnimatedNodeConfig"],[193,64,209,4,"tag"],[193,67,209,15],[193,69,210,4,"config"],[193,75,210,30],[193,77,211,10],[194,6,212,4],[194,10,212,4,"invariant"],[194,28,212,13],[194,30,212,14,"nativeOps"],[194,39,212,23],[194,41,212,25],[194,82,212,66],[194,83,212,67],[195,6,213,4],[195,10,213,8,"nativeOps"],[195,19,213,17],[195,20,213,18,"updateAnimatedNodeConfig"],[195,44,213,42],[195,46,213,44],[196,8,214,6,"API"],[196,11,214,9],[196,12,214,10,"queueOperation"],[196,26,214,24],[196,27,214,25,"nativeOps"],[196,36,214,34],[196,37,214,35,"updateAnimatedNodeConfig"],[196,61,214,59],[196,63,214,61,"tag"],[196,66,214,64],[196,68,214,66,"config"],[196,74,214,72],[196,75,214,73],[197,6,215,4],[198,4,216,2],[198,5,216,3],[199,4,217,2,"startListeningToAnimatedNodeValue"],[199,37,217,35],[199,39,217,37],[199,48,217,2,"startListeningToAnimatedNodeValue"],[199,81,217,35,"startListeningToAnimatedNodeValue"],[199,82,217,47,"tag"],[199,85,217,58],[199,87,217,60],[200,6,218,4],[200,10,218,4,"invariant"],[200,28,218,13],[200,30,218,14,"nativeOps"],[200,39,218,23],[200,41,218,25],[200,82,218,66],[200,83,218,67],[201,6,219,4,"API"],[201,9,219,7],[201,10,219,8,"queueOperation"],[201,24,219,22],[201,25,219,23,"nativeOps"],[201,34,219,32],[201,35,219,33,"startListeningToAnimatedNodeValue"],[201,68,219,66],[201,70,219,68,"tag"],[201,73,219,71],[201,74,219,72],[202,4,220,2],[202,5,220,3],[203,4,221,2,"stopListeningToAnimatedNodeValue"],[203,36,221,34],[203,38,221,36],[203,47,221,2,"stopListeningToAnimatedNodeValue"],[203,79,221,34,"stopListeningToAnimatedNodeValue"],[203,80,221,46,"tag"],[203,83,221,57],[203,85,221,59],[204,6,222,4],[204,10,222,4,"invariant"],[204,28,222,13],[204,30,222,14,"nativeOps"],[204,39,222,23],[204,41,222,25],[204,82,222,66],[204,83,222,67],[205,6,223,4,"API"],[205,9,223,7],[205,10,223,8,"queueOperation"],[205,24,223,22],[205,25,223,23,"nativeOps"],[205,34,223,32],[205,35,223,33,"stopListeningToAnimatedNodeValue"],[205,67,223,65],[205,69,223,67,"tag"],[205,72,223,70],[205,73,223,71],[206,4,224,2],[206,5,224,3],[207,4,225,2,"connectAnimatedNodes"],[207,24,225,22],[207,26,225,24],[207,35,225,2,"connectAnimatedNodes"],[207,55,225,22,"connectAnimatedNodes"],[207,56,225,34,"parentTag"],[207,65,225,51],[207,67,225,53,"childTag"],[207,75,225,69],[207,77,225,77],[208,6,226,4],[208,10,226,4,"invariant"],[208,28,226,13],[208,30,226,14,"nativeOps"],[208,39,226,23],[208,41,226,25],[208,82,226,66],[208,83,226,67],[209,6,227,4,"API"],[209,9,227,7],[209,10,227,8,"queueOperation"],[209,24,227,22],[209,25,227,23,"nativeOps"],[209,34,227,32],[209,35,227,33,"connectAnimatedNodes"],[209,55,227,53],[209,57,227,55,"parentTag"],[209,66,227,64],[209,68,227,66,"childTag"],[209,76,227,74],[209,77,227,75],[210,4,228,2],[210,5,228,3],[211,4,229,2,"disconnectAnimatedNodes"],[211,27,229,25],[211,29,229,27],[211,38,229,2,"disconnectAnimatedNodes"],[211,61,229,25,"disconnectAnimatedNodes"],[211,62,230,4,"parentTag"],[211,71,230,21],[211,73,231,4,"childTag"],[211,81,231,20],[211,83,232,10],[212,6,233,4],[212,10,233,4,"invariant"],[212,28,233,13],[212,30,233,14,"nativeOps"],[212,39,233,23],[212,41,233,25],[212,82,233,66],[212,83,233,67],[213,6,234,4,"API"],[213,9,234,7],[213,10,234,8,"queueOperation"],[213,24,234,22],[213,25,234,23,"nativeOps"],[213,34,234,32],[213,35,234,33,"disconnectAnimatedNodes"],[213,58,234,56],[213,60,234,58,"parentTag"],[213,69,234,67],[213,71,234,69,"childTag"],[213,79,234,77],[213,80,234,78],[214,4,235,2],[214,5,235,3],[215,4,236,2,"startAnimatingNode"],[215,22,236,20],[215,24,236,22],[215,33,236,2,"startAnimatingNode"],[215,51,236,20,"startAnimatingNode"],[215,52,237,4,"animationId"],[215,63,237,23],[215,65,238,4,"nodeTag"],[215,72,238,19],[215,74,239,4,"config"],[215,80,239,31],[215,82,240,4,"endCallback"],[215,93,240,28],[215,95,241,10],[216,6,242,4],[216,10,242,4,"invariant"],[216,28,242,13],[216,30,242,14,"nativeOps"],[216,39,242,23],[216,41,242,25],[216,82,242,66],[216,83,242,67],[217,6,243,4],[217,10,243,8,"useSingleOpBatching"],[217,29,243,27],[217,31,243,29],[218,8,244,6],[218,12,244,10,"endCallback"],[218,23,244,21],[218,25,244,23],[219,10,245,8,"eventListenerAnimationFinishedCallbacks"],[219,49,245,47],[219,50,245,48,"animationId"],[219,61,245,59],[219,62,245,60],[219,65,245,63,"endCallback"],[219,76,245,74],[220,8,246,6],[221,8,247,6],[222,8,248,6,"API"],[222,11,248,9],[222,12,248,10,"queueOperation"],[222,26,248,24],[223,8,249,8],[224,8,250,8,"nativeOps"],[224,17,250,17],[224,18,250,18,"startAnimatingNode"],[224,36,250,36],[224,38,251,8,"animationId"],[224,49,251,19],[224,51,252,8,"nodeTag"],[224,58,252,15],[224,60,253,8,"config"],[224,66,254,6],[224,67,254,7],[225,6,255,4],[225,7,255,5],[225,13,255,11],[226,8,256,6,"API"],[226,11,256,9],[226,12,256,10,"queueOperation"],[226,26,256,24],[226,27,257,8,"nativeOps"],[226,36,257,17],[226,37,257,18,"startAnimatingNode"],[226,55,257,36],[226,57,258,8,"animationId"],[226,68,258,19],[226,70,259,8,"nodeTag"],[226,77,259,15],[226,79,260,8,"config"],[226,85,260,14],[226,87,261,8,"endCallback"],[226,98,262,6],[226,99,262,7],[227,6,263,4],[228,4,264,2],[228,5,264,3],[229,4,265,2,"stopAnimation"],[229,17,265,15],[229,19,265,17],[229,28,265,2,"stopAnimation"],[229,41,265,15,"stopAnimation"],[229,42,265,27,"animationId"],[229,53,265,46],[229,55,265,48],[230,6,266,4],[230,10,266,4,"invariant"],[230,28,266,13],[230,30,266,14,"nativeOps"],[230,39,266,23],[230,41,266,25],[230,82,266,66],[230,83,266,67],[231,6,267,4,"API"],[231,9,267,7],[231,10,267,8,"queueOperation"],[231,24,267,22],[231,25,267,23,"nativeOps"],[231,34,267,32],[231,35,267,33,"stopAnimation"],[231,48,267,46],[231,50,267,48,"animationId"],[231,61,267,59],[231,62,267,60],[232,4,268,2],[232,5,268,3],[233,4,269,2,"setAnimatedNodeValue"],[233,24,269,22],[233,26,269,24],[233,35,269,2,"setAnimatedNodeValue"],[233,55,269,22,"setAnimatedNodeValue"],[233,56,269,34,"nodeTag"],[233,63,269,49],[233,65,269,51,"value"],[233,70,269,64],[233,72,269,72],[234,6,270,4],[234,10,270,4,"invariant"],[234,28,270,13],[234,30,270,14,"nativeOps"],[234,39,270,23],[234,41,270,25],[234,82,270,66],[234,83,270,67],[235,6,271,4,"API"],[235,9,271,7],[235,10,271,8,"queueOperation"],[235,24,271,22],[235,25,271,23,"nativeOps"],[235,34,271,32],[235,35,271,33,"setAnimatedNodeValue"],[235,55,271,53],[235,57,271,55,"nodeTag"],[235,64,271,62],[235,66,271,64,"value"],[235,71,271,69],[235,72,271,70],[236,4,272,2],[236,5,272,3],[237,4,273,2,"setAnimatedNodeOffset"],[237,25,273,23],[237,27,273,25],[237,36,273,2,"setAnimatedNodeOffset"],[237,57,273,23,"setAnimatedNodeOffset"],[237,58,273,35,"nodeTag"],[237,65,273,50],[237,67,273,52,"offset"],[237,73,273,66],[237,75,273,74],[238,6,274,4],[238,10,274,4,"invariant"],[238,28,274,13],[238,30,274,14,"nativeOps"],[238,39,274,23],[238,41,274,25],[238,82,274,66],[238,83,274,67],[239,6,275,4,"API"],[239,9,275,7],[239,10,275,8,"queueOperation"],[239,24,275,22],[239,25,275,23,"nativeOps"],[239,34,275,32],[239,35,275,33,"setAnimatedNodeOffset"],[239,56,275,54],[239,58,275,56,"nodeTag"],[239,65,275,63],[239,67,275,65,"offset"],[239,73,275,71],[239,74,275,72],[240,4,276,2],[240,5,276,3],[241,4,277,2,"flattenAnimatedNodeOffset"],[241,29,277,27],[241,31,277,29],[241,40,277,2,"flattenAnimatedNodeOffset"],[241,65,277,27,"flattenAnimatedNodeOffset"],[241,66,277,39,"nodeTag"],[241,73,277,54],[241,75,277,62],[242,6,278,4],[242,10,278,4,"invariant"],[242,28,278,13],[242,30,278,14,"nativeOps"],[242,39,278,23],[242,41,278,25],[242,82,278,66],[242,83,278,67],[243,6,279,4,"API"],[243,9,279,7],[243,10,279,8,"queueOperation"],[243,24,279,22],[243,25,279,23,"nativeOps"],[243,34,279,32],[243,35,279,33,"flattenAnimatedNodeOffset"],[243,60,279,58],[243,62,279,60,"nodeTag"],[243,69,279,67],[243,70,279,68],[244,4,280,2],[244,5,280,3],[245,4,281,2,"extractAnimatedNodeOffset"],[245,29,281,27],[245,31,281,29],[245,40,281,2,"extractAnimatedNodeOffset"],[245,65,281,27,"extractAnimatedNodeOffset"],[245,66,281,39,"nodeTag"],[245,73,281,54],[245,75,281,62],[246,6,282,4],[246,10,282,4,"invariant"],[246,28,282,13],[246,30,282,14,"nativeOps"],[246,39,282,23],[246,41,282,25],[246,82,282,66],[246,83,282,67],[247,6,283,4,"API"],[247,9,283,7],[247,10,283,8,"queueOperation"],[247,24,283,22],[247,25,283,23,"nativeOps"],[247,34,283,32],[247,35,283,33,"extractAnimatedNodeOffset"],[247,60,283,58],[247,62,283,60,"nodeTag"],[247,69,283,67],[247,70,283,68],[248,4,284,2],[248,5,284,3],[249,4,285,2,"connectAnimatedNodeToView"],[249,29,285,27],[249,31,285,29],[249,40,285,2,"connectAnimatedNodeToView"],[249,65,285,27,"connectAnimatedNodeToView"],[249,66,285,39,"nodeTag"],[249,73,285,54],[249,75,285,56,"viewTag"],[249,82,285,71],[249,84,285,79],[250,6,286,4],[250,10,286,4,"invariant"],[250,28,286,13],[250,30,286,14,"nativeOps"],[250,39,286,23],[250,41,286,25],[250,82,286,66],[250,83,286,67],[251,6,287,4,"API"],[251,9,287,7],[251,10,287,8,"queueOperation"],[251,24,287,22],[251,25,287,23,"nativeOps"],[251,34,287,32],[251,35,287,33,"connectAnimatedNodeToView"],[251,60,287,58],[251,62,287,60,"nodeTag"],[251,69,287,67],[251,71,287,69,"viewTag"],[251,78,287,76],[251,79,287,77],[252,4,288,2],[252,5,288,3],[253,4,289,2,"disconnectAnimatedNodeFromView"],[253,34,289,32],[253,36,289,34],[253,45,289,2,"disconnectAnimatedNodeFromView"],[253,75,289,32,"disconnectAnimatedNodeFromView"],[253,76,290,4,"nodeTag"],[253,83,290,19],[253,85,291,4,"viewTag"],[253,92,291,19],[253,94,292,10],[254,6,293,4],[254,10,293,4,"invariant"],[254,28,293,13],[254,30,293,14,"nativeOps"],[254,39,293,23],[254,41,293,25],[254,82,293,66],[254,83,293,67],[255,6,294,4,"API"],[255,9,294,7],[255,10,294,8,"queueOperation"],[255,24,294,22],[255,25,295,6,"nativeOps"],[255,34,295,15],[255,35,295,16,"disconnectAnimatedNodeFromView"],[255,65,295,46],[255,67,296,6,"nodeTag"],[255,74,296,13],[255,76,297,6,"viewTag"],[255,83,298,4],[255,84,298,5],[256,4,299,2],[256,5,299,3],[257,4,300,2,"restoreDefaultValues"],[257,24,300,22],[257,26,300,24],[257,35,300,2,"restoreDefaultValues"],[257,55,300,22,"restoreDefaultValues"],[257,56,300,34,"nodeTag"],[257,63,300,49],[257,65,300,57],[258,6,301,4],[258,10,301,4,"invariant"],[258,28,301,13],[258,30,301,14,"nativeOps"],[258,39,301,23],[258,41,301,25],[258,82,301,66],[258,83,301,67],[259,6,302,4],[260,6,303,4],[260,10,303,8,"nativeOps"],[260,19,303,17],[260,20,303,18,"restoreDefaultValues"],[260,40,303,38],[260,44,303,42],[260,48,303,46],[260,50,303,48],[261,8,304,6,"API"],[261,11,304,9],[261,12,304,10,"queueOperation"],[261,26,304,24],[261,27,304,25,"nativeOps"],[261,36,304,34],[261,37,304,35,"restoreDefaultValues"],[261,57,304,55],[261,59,304,57,"nodeTag"],[261,66,304,64],[261,67,304,65],[262,6,305,4],[263,4,306,2],[263,5,306,3],[264,4,307,2,"dropAnimatedNode"],[264,20,307,18],[264,22,307,20],[264,31,307,2,"dropAnimatedNode"],[264,47,307,18,"dropAnimatedNode"],[264,48,307,30,"tag"],[264,51,307,41],[264,53,307,49],[265,6,308,4],[265,10,308,4,"invariant"],[265,28,308,13],[265,30,308,14,"nativeOps"],[265,39,308,23],[265,41,308,25],[265,82,308,66],[265,83,308,67],[266,6,309,4,"API"],[266,9,309,7],[266,10,309,8,"queueOperation"],[266,24,309,22],[266,25,309,23,"nativeOps"],[266,34,309,32],[266,35,309,33,"dropAnimatedNode"],[266,51,309,49],[266,53,309,51,"tag"],[266,56,309,54],[266,57,309,55],[267,4,310,2],[267,5,310,3],[268,4,311,2,"addAnimatedEventToView"],[268,26,311,24],[268,28,311,26],[268,37,311,2,"addAnimatedEventToView"],[268,59,311,24,"addAnimatedEventToView"],[268,60,312,4,"viewTag"],[268,67,312,19],[268,69,313,4,"eventName"],[268,78,313,21],[268,80,314,4,"eventMapping"],[268,92,314,30],[268,94,315,4],[269,6,316,4],[269,10,316,4,"invariant"],[269,28,316,13],[269,30,316,14,"nativeOps"],[269,39,316,23],[269,41,316,25],[269,82,316,66],[269,83,316,67],[270,6,317,4,"API"],[270,9,317,7],[270,10,317,8,"queueOperation"],[270,24,317,22],[270,25,318,6,"nativeOps"],[270,34,318,15],[270,35,318,16,"addAnimatedEventToView"],[270,57,318,38],[270,59,319,6,"viewTag"],[270,66,319,13],[270,68,320,6,"eventName"],[270,77,320,15],[270,79,321,6,"eventMapping"],[270,91,322,4],[270,92,322,5],[271,4,323,2],[271,5,323,3],[272,4,324,2,"removeAnimatedEventFromView"],[272,31,324,29],[272,42,324,2,"removeAnimatedEventFromView"],[272,69,324,29,"removeAnimatedEventFromView"],[272,70,325,4,"viewTag"],[272,77,325,19],[272,79,326,4,"eventName"],[272,88,326,21],[272,90,327,4,"animatedNodeTag"],[272,105,327,27],[272,107,328,4],[273,6,329,4],[273,10,329,4,"invariant"],[273,28,329,13],[273,30,329,14,"nativeOps"],[273,39,329,23],[273,41,329,25],[273,82,329,66],[273,83,329,67],[274,6,330,4,"API"],[274,9,330,7],[274,10,330,8,"queueOperation"],[274,24,330,22],[274,25,331,6,"nativeOps"],[274,34,331,15],[274,35,331,16,"removeAnimatedEventFromView"],[274,62,331,43],[274,64,332,6,"viewTag"],[274,71,332,13],[274,73,333,6,"eventName"],[274,82,333,15],[274,84,334,6,"animatedNodeTag"],[274,99,335,4],[274,100,335,5],[275,4,336,2],[276,2,337,0],[276,3,337,1],[277,2,339,0],[277,11,339,9,"setupGlobalEventEmitterListeners"],[277,43,339,41,"setupGlobalEventEmitterListeners"],[277,44,339,41],[277,46,339,44],[278,4,340,2,"globalEventEmitterGetValueListener"],[278,38,340,36],[278,41,340,39,"RCTDeviceEventEmitter"],[278,71,340,60],[278,72,340,61,"addListener"],[278,83,340,72],[278,84,341,4],[278,116,341,36],[278,118,342,4],[278,128,342,4,"params"],[278,134,342,10],[278,136,342,14],[279,6,343,6],[279,10,343,13,"tag"],[279,13,343,16],[279,16,343,20,"params"],[279,22,343,26],[279,23,343,13,"tag"],[279,26,343,16],[280,6,344,6],[280,10,344,12,"callback"],[280,18,344,20],[280,21,344,23,"eventListenerGetValueCallbacks"],[280,51,344,53],[280,52,344,54,"tag"],[280,55,344,57],[280,56,344,58],[281,6,345,6],[281,10,345,10],[281,11,345,11,"callback"],[281,19,345,19],[281,21,345,21],[282,8,346,8],[283,6,347,6],[284,6,348,6,"callback"],[284,14,348,14],[284,15,348,15,"params"],[284,21,348,21],[284,22,348,22,"value"],[284,27,348,27],[284,28,348,28],[285,6,349,6],[285,13,349,13,"eventListenerGetValueCallbacks"],[285,43,349,43],[285,44,349,44,"tag"],[285,47,349,47],[285,48,349,48],[286,4,350,4],[286,5,351,2],[286,6,351,3],[287,4,352,2,"globalEventEmitterAnimationFinishedListener"],[287,47,352,45],[287,50,353,4,"RCTDeviceEventEmitter"],[287,80,353,25],[287,81,353,26,"addListener"],[287,92,353,37],[287,93,354,6],[287,134,354,47],[287,136,355,6],[287,146,355,6,"params"],[287,152,355,12],[287,154,355,16],[288,6,356,8],[289,6,357,8],[289,10,357,14,"animations"],[289,20,357,24],[289,23,357,27,"Array"],[289,28,357,32],[289,29,357,33,"isArray"],[289,36,357,40],[289,37,357,41,"params"],[289,43,357,47],[289,44,357,48],[289,47,357,51,"params"],[289,53,357,57],[289,56,357,60],[289,57,357,61,"params"],[289,63,357,67],[289,64,357,68],[290,6,358,8],[290,11,358,13],[290,15,358,19,"animation"],[290,24,358,28],[290,28,358,32,"animations"],[290,38,358,42],[290,40,358,44],[291,8,359,10],[291,12,359,17,"animationId"],[291,23,359,28],[291,26,359,32,"animation"],[291,35,359,41],[291,36,359,17,"animationId"],[291,47,359,28],[292,8,360,10],[292,12,360,16,"callback"],[292,20,360,24],[292,23,360,27,"eventListenerAnimationFinishedCallbacks"],[292,62,360,66],[292,63,360,67,"animationId"],[292,74,360,78],[292,75,360,79],[293,8,361,10],[293,12,361,14,"callback"],[293,20,361,22],[293,22,361,24],[294,10,362,12,"callback"],[294,18,362,20],[294,19,362,21,"animation"],[294,28,362,30],[294,29,362,31],[295,10,363,12],[295,17,363,19,"eventListenerAnimationFinishedCallbacks"],[295,56,363,58],[295,57,363,59,"animationId"],[295,68,363,70],[295,69,363,71],[296,8,364,10],[297,6,365,8],[298,4,366,6],[298,5,367,4],[298,6,367,5],[299,2,368,0],[301,2,370,0],[302,0,371,0],[303,0,372,0],[304,0,373,0],[305,0,374,0],[306,0,375,0],[307,2,376,0],[307,6,376,6,"SUPPORTED_COLOR_STYLES"],[307,28,376,28],[307,31,376,31],[308,4,377,2,"backgroundColor"],[308,19,377,17],[308,21,377,19],[308,25,377,23],[309,4,378,2,"borderBottomColor"],[309,21,378,19],[309,23,378,21],[309,27,378,25],[310,4,379,2,"borderColor"],[310,15,379,13],[310,17,379,15],[310,21,379,19],[311,4,380,2,"borderEndColor"],[311,18,380,16],[311,20,380,18],[311,24,380,22],[312,4,381,2,"borderLeftColor"],[312,19,381,17],[312,21,381,19],[312,25,381,23],[313,4,382,2,"borderRightColor"],[313,20,382,18],[313,22,382,20],[313,26,382,24],[314,4,383,2,"borderStartColor"],[314,20,383,18],[314,22,383,20],[314,26,383,24],[315,4,384,2,"borderTopColor"],[315,18,384,16],[315,20,384,18],[315,24,384,22],[316,4,385,2,"color"],[316,9,385,7],[316,11,385,9],[316,15,385,13],[317,4,386,2,"tintColor"],[317,13,386,11],[317,15,386,13],[318,2,387,0],[318,3,387,1],[319,2,389,0],[319,6,389,6,"SUPPORTED_STYLES"],[319,22,389,22],[319,25,389,22,"Object"],[319,31,389,22],[319,32,389,22,"assign"],[319,38,389,22],[319,43,390,5,"SUPPORTED_COLOR_STYLES"],[319,65,390,27],[320,4,391,2,"borderBottomEndRadius"],[320,25,391,23],[320,27,391,25],[320,31,391,29],[321,4,392,2,"borderBottomLeftRadius"],[321,26,392,24],[321,28,392,26],[321,32,392,30],[322,4,393,2,"borderBottomRightRadius"],[322,27,393,25],[322,29,393,27],[322,33,393,31],[323,4,394,2,"borderBottomStartRadius"],[323,27,394,25],[323,29,394,27],[323,33,394,31],[324,4,395,2,"borderEndEndRadius"],[324,22,395,20],[324,24,395,22],[324,28,395,26],[325,4,396,2,"borderEndStartRadius"],[325,24,396,22],[325,26,396,24],[325,30,396,28],[326,4,397,2,"borderRadius"],[326,16,397,14],[326,18,397,16],[326,22,397,20],[327,4,398,2,"borderTopEndRadius"],[327,22,398,20],[327,24,398,22],[327,28,398,26],[328,4,399,2,"borderTopLeftRadius"],[328,23,399,21],[328,25,399,23],[328,29,399,27],[329,4,400,2,"borderTopRightRadius"],[329,24,400,22],[329,26,400,24],[329,30,400,28],[330,4,401,2,"borderTopStartRadius"],[330,24,401,22],[330,26,401,24],[330,30,401,28],[331,4,402,2,"borderStartEndRadius"],[331,24,402,22],[331,26,402,24],[331,30,402,28],[332,4,403,2,"borderStartStartRadius"],[332,26,403,24],[332,28,403,26],[332,32,403,30],[333,4,404,2,"elevation"],[333,13,404,11],[333,15,404,13],[333,19,404,17],[334,4,405,2,"opacity"],[334,11,405,9],[334,13,405,11],[334,17,405,15],[335,4,406,2,"transform"],[335,13,406,11],[335,15,406,13],[335,19,406,17],[336,4,407,2,"zIndex"],[336,10,407,8],[336,12,407,10],[336,16,407,14],[337,4,408,2],[338,4,409,2,"shadowOpacity"],[338,17,409,15],[338,19,409,17],[338,23,409,21],[339,4,410,2,"shadowRadius"],[339,16,410,14],[339,18,410,16],[339,22,410,20],[340,4,411,2],[341,4,412,2,"scaleX"],[341,10,412,8],[341,12,412,10],[341,16,412,14],[342,4,413,2,"scaleY"],[342,10,413,8],[342,12,413,10],[342,16,413,14],[343,4,414,2,"translateX"],[343,14,414,12],[343,16,414,14],[343,20,414,18],[344,4,415,2,"translateY"],[344,14,415,12],[344,16,415,14],[345,2,415,18],[345,4,416,1],[346,2,418,0],[346,6,418,6,"SUPPORTED_TRANSFORMS"],[346,26,418,26],[346,29,418,29],[347,4,419,2,"translateX"],[347,14,419,12],[347,16,419,14],[347,20,419,18],[348,4,420,2,"translateY"],[348,14,420,12],[348,16,420,14],[348,20,420,18],[349,4,421,2,"scale"],[349,9,421,7],[349,11,421,9],[349,15,421,13],[350,4,422,2,"scaleX"],[350,10,422,8],[350,12,422,10],[350,16,422,14],[351,4,423,2,"scaleY"],[351,10,423,8],[351,12,423,10],[351,16,423,14],[352,4,424,2,"rotate"],[352,10,424,8],[352,12,424,10],[352,16,424,14],[353,4,425,2,"rotateX"],[353,11,425,9],[353,13,425,11],[353,17,425,15],[354,4,426,2,"rotateY"],[354,11,426,9],[354,13,426,11],[354,17,426,15],[355,4,427,2,"rotateZ"],[355,11,427,9],[355,13,427,11],[355,17,427,15],[356,4,428,2,"perspective"],[356,15,428,13],[356,17,428,15],[356,21,428,19],[357,4,429,2,"skewX"],[357,9,429,7],[357,11,429,9],[357,15,429,13],[358,4,430,2,"skewY"],[358,9,430,7],[358,11,430,9],[358,15,430,13],[359,4,431,2,"matrix"],[359,10,431,8],[359,12,431,10,"ReactNativeFeatureFlags"],[359,35,431,33],[359,36,431,34,"shouldUseAnimatedObjectForTransform"],[359,71,431,69],[359,72,431,70],[360,2,432,0],[360,3,432,1],[361,2,434,0],[361,6,434,6,"SUPPORTED_INTERPOLATION_PARAMS"],[361,36,434,36],[361,39,434,39],[362,4,435,2,"inputRange"],[362,14,435,12],[362,16,435,14],[362,20,435,18],[363,4,436,2,"outputRange"],[363,15,436,13],[363,17,436,15],[363,21,436,19],[364,4,437,2,"extrapolate"],[364,15,437,13],[364,17,437,15],[364,21,437,19],[365,4,438,2,"extrapolateRight"],[365,20,438,18],[365,22,438,20],[365,26,438,24],[366,4,439,2,"extrapolateLeft"],[366,19,439,17],[366,21,439,19],[367,2,440,0],[367,3,440,1],[368,2,442,0],[368,11,442,9,"addWhitelistedStyleProp"],[368,34,442,32,"addWhitelistedStyleProp"],[368,35,442,33,"prop"],[368,39,442,45],[368,41,442,53],[369,4,443,2],[370,4,444,2,"SUPPORTED_STYLES"],[370,20,444,18],[370,21,444,19,"prop"],[370,25,444,23],[370,26,444,24],[370,29,444,27],[370,33,444,31],[371,2,445,0],[372,2,447,0],[372,11,447,9,"addWhitelistedTransformProp"],[372,38,447,36,"addWhitelistedTransformProp"],[372,39,447,37,"prop"],[372,43,447,49],[372,45,447,57],[373,4,448,2],[374,4,449,2,"SUPPORTED_TRANSFORMS"],[374,24,449,22],[374,25,449,23,"prop"],[374,29,449,27],[374,30,449,28],[374,33,449,31],[374,37,449,35],[375,2,450,0],[376,2,452,0],[376,11,452,9,"addWhitelistedInterpolationParam"],[376,43,452,41,"addWhitelistedInterpolationParam"],[376,44,452,42,"param"],[376,49,452,55],[376,51,452,63],[377,4,453,2],[378,4,454,2,"SUPPORTED_INTERPOLATION_PARAMS"],[378,34,454,32],[378,35,454,33,"param"],[378,40,454,38],[378,41,454,39],[378,44,454,42],[378,48,454,46],[379,2,455,0],[380,2,457,0],[380,11,457,9,"isSupportedColorStyleProp"],[380,36,457,34,"isSupportedColorStyleProp"],[380,37,457,35,"prop"],[380,41,457,47],[380,43,457,58],[381,4,458,2],[382,4,459,2],[382,11,459,9,"SUPPORTED_COLOR_STYLES"],[382,33,459,31],[382,34,459,32,"prop"],[382,38,459,36],[382,39,459,37],[382,44,459,42],[382,48,459,46],[383,2,460,0],[384,2,462,0],[384,11,462,9,"isSupportedStyleProp"],[384,31,462,29,"isSupportedStyleProp"],[384,32,462,30,"prop"],[384,36,462,42],[384,38,462,53],[385,4,463,2],[386,4,464,2],[386,11,464,9,"SUPPORTED_STYLES"],[386,27,464,25],[386,28,464,26,"prop"],[386,32,464,30],[386,33,464,31],[386,38,464,36],[386,42,464,40],[387,2,465,0],[388,2,467,0],[388,11,467,9,"isSupportedTransformProp"],[388,35,467,33,"isSupportedTransformProp"],[388,36,467,34,"prop"],[388,40,467,46],[388,42,467,57],[389,4,468,2],[390,4,469,2],[390,11,469,9,"SUPPORTED_TRANSFORMS"],[390,31,469,29],[390,32,469,30,"prop"],[390,36,469,34],[390,37,469,35],[390,42,469,40],[390,46,469,44],[391,2,470,0],[392,2,472,0],[392,11,472,9,"isSupportedInterpolationParam"],[392,40,472,38,"isSupportedInterpolationParam"],[392,41,472,39,"param"],[392,46,472,52],[392,48,472,63],[393,4,473,2],[394,4,474,2],[394,11,474,9,"SUPPORTED_INTERPOLATION_PARAMS"],[394,41,474,39],[394,42,474,40,"param"],[394,47,474,45],[394,48,474,46],[394,53,474,51],[394,57,474,55],[395,2,475,0],[396,2,477,0],[396,11,477,9,"validateTransform"],[396,28,477,26,"validateTransform"],[396,29,478,2,"configs"],[396,36,491,3],[396,38,492,8],[397,4,493,2,"configs"],[397,11,493,9],[397,12,493,10,"forEach"],[397,19,493,17],[397,20,493,18],[397,30,493,18,"config"],[397,36,493,24],[397,38,493,28],[398,6,494,4],[398,10,494,8],[398,11,494,9,"isSupportedTransformProp"],[398,35,494,33],[398,36,494,34,"config"],[398,42,494,40],[398,43,494,41,"property"],[398,51,494,49],[398,52,494,50],[398,54,494,52],[399,8,495,6],[399,14,495,12],[399,18,495,16,"Error"],[399,23,495,21],[399,24,496,8],[399,37,496,21,"config"],[399,43,496,27],[399,44,496,28,"property"],[399,52,496,36],[399,98,497,6],[399,99,497,7],[400,6,498,4],[401,4,499,2],[401,5,499,3],[401,6,499,4],[402,2,500,0],[403,2,502,0],[403,11,502,9,"validateStyles"],[403,25,502,23,"validateStyles"],[403,26,502,24,"styles"],[403,32,502,61],[403,34,502,69],[404,4,503,2],[404,9,503,7],[404,13,503,13,"key"],[404,18,503,16],[404,22,503,20,"styles"],[404,28,503,26],[404,30,503,28],[405,6,504,4],[405,10,504,8],[405,11,504,9,"isSupportedStyleProp"],[405,31,504,29],[405,32,504,30,"key"],[405,37,504,33],[405,38,504,34],[405,40,504,36],[406,8,505,6],[406,14,505,12],[406,18,505,16,"Error"],[406,23,505,21],[406,24,506,8],[406,43,506,27,"key"],[406,48,506,30],[406,94,507,6],[406,95,507,7],[407,6,508,4],[408,4,509,2],[409,2,510,0],[410,2,512,0],[410,11,512,9,"validateInterpolation"],[410,32,512,30,"validateInterpolation"],[410,33,513,2,"config"],[410,39,513,42],[410,41,514,8],[411,4,515,2],[411,9,515,7],[411,13,515,13,"key"],[411,18,515,16],[411,22,515,20,"config"],[411,28,515,26],[411,30,515,28],[412,6,516,4],[412,10,516,8],[412,11,516,9,"isSupportedInterpolationParam"],[412,40,516,38],[412,41,516,39,"key"],[412,46,516,42],[412,47,516,43],[412,49,516,45],[413,8,517,6],[413,14,517,12],[413,18,517,16,"Error"],[413,23,517,21],[413,24,518,8],[413,51,518,35,"key"],[413,56,518,38],[413,102,519,6],[413,103,519,7],[414,6,520,4],[415,4,521,2],[416,2,522,0],[417,2,524,0],[417,11,524,9,"generateNewNodeTag"],[417,29,524,27,"generateNewNodeTag"],[417,30,524,27],[417,32,524,38],[418,4,525,2],[418,11,525,9,"__nativeAnimatedNodeTagCount"],[418,39,525,37],[418,41,525,39],[419,2,526,0],[420,2,528,0],[420,11,528,9,"generateNewAnimationId"],[420,33,528,31,"generateNewAnimationId"],[420,34,528,31],[420,36,528,42],[421,4,529,2],[421,11,529,9,"__nativeAnimationIdCount"],[421,35,529,33],[421,37,529,35],[422,2,530,0],[423,2,532,0],[423,11,532,9,"assertNativeAnimatedModule"],[423,37,532,35,"assertNativeAnimatedModule"],[423,38,532,35],[423,40,532,44],[424,4,533,2],[424,8,533,2,"invariant"],[424,26,533,11],[424,28,533,12,"NativeAnimatedModule"],[424,48,533,32],[424,50,533,34],[424,91,533,75],[424,92,533,76],[425,2,534,0],[426,2,536,0],[426,6,536,4,"_warnedMissingNativeAnimated"],[426,34,536,32],[426,37,536,35],[426,42,536,40],[427,2,538,0],[427,11,538,9,"shouldUseNativeDriver"],[427,32,538,30,"shouldUseNativeDriver"],[427,33,539,2,"config"],[427,39,539,60],[427,41,540,11],[428,4,541,2],[428,8,541,6,"config"],[428,14,541,12],[428,15,541,13,"useNativeDriver"],[428,30,541,28],[428,34,541,32],[428,38,541,36],[428,40,541,38],[429,6,542,4,"console"],[429,13,542,11],[429,14,542,12,"warn"],[429,18,542,16],[429,19,543,6],[429,87,543,74],[429,90,544,8],[429,146,545,4],[429,147,545,5],[430,4,546,2],[431,4,548,2],[431,8,548,6,"config"],[431,14,548,12],[431,15,548,13,"useNativeDriver"],[431,30,548,28],[431,35,548,33],[431,39,548,37],[431,43,548,41],[431,44,548,42,"NativeAnimatedModule"],[431,64,548,62],[431,66,548,64],[432,6,549,4],[432,10,549,8,"process"],[432,17,549,15],[432,18,549,16,"env"],[432,21,549,19],[432,22,549,20,"NODE_ENV"],[432,30,549,28],[432,35,549,33],[432,41,549,39],[432,43,549,41],[433,8,550,6],[433,12,550,10],[433,13,550,11,"_warnedMissingNativeAnimated"],[433,41,550,39],[433,43,550,41],[434,10,551,8,"console"],[434,17,551,15],[434,18,551,16,"warn"],[434,22,551,20],[434,23,552,10],[434,89,552,76],[434,92,553,12],[434,161,553,81],[434,164,554,12],[434,229,554,77],[434,232,555,12],[434,253,555,33],[434,256,556,12],[434,414,557,8],[434,415,557,9],[435,10,558,8,"_warnedMissingNativeAnimated"],[435,38,558,36],[435,41,558,39],[435,45,558,43],[436,8,559,6],[437,6,560,4],[438,6,561,4],[438,13,561,11],[438,18,561,16],[439,4,562,2],[440,4,564,2],[440,11,564,9,"config"],[440,17,564,15],[440,18,564,16,"useNativeDriver"],[440,33,564,31],[440,37,564,35],[440,42,564,40],[441,2,565,0],[442,2,567,0],[442,11,567,9,"transformDataType"],[442,28,567,26,"transformDataType"],[442,29,567,27,"value"],[442,34,567,49],[442,36,567,68],[443,4,568,2],[444,4,569,2],[445,4,570,2],[445,8,570,6],[445,15,570,13,"value"],[445,20,570,18],[445,25,570,23],[445,33,570,31],[445,35,570,33],[446,6,571,4],[446,13,571,11,"value"],[446,18,571,16],[447,4,572,2],[449,4,574,2],[450,4,575,2],[450,8,575,6,"value"],[450,13,575,11],[450,14,575,12,"endsWith"],[450,22,575,20],[450,23,575,21],[450,28,575,26],[450,29,575,27],[450,31,575,29],[451,6,576,4],[451,10,576,10,"degrees"],[451,17,576,17],[451,20,576,20,"parseFloat"],[451,30,576,30],[451,31,576,31,"value"],[451,36,576,36],[451,37,576,37],[451,41,576,41],[451,42,576,42],[452,6,577,4],[452,13,577,12,"degrees"],[452,20,577,19],[452,23,577,22,"Math"],[452,27,577,26],[452,28,577,27,"PI"],[452,30,577,29],[452,33,577,33],[452,38,577,38],[453,4,578,2],[453,5,578,3],[453,11,578,9],[453,15,578,13,"value"],[453,20,578,18],[453,21,578,19,"endsWith"],[453,29,578,27],[453,30,578,28],[453,35,578,33],[453,36,578,34],[453,38,578,36],[454,6,579,4],[454,13,579,11,"parseFloat"],[454,23,579,21],[454,24,579,22,"value"],[454,29,579,27],[454,30,579,28],[454,34,579,32],[454,35,579,33],[455,4,580,2],[455,5,580,3],[455,11,580,9],[456,6,581,4],[456,13,581,11,"value"],[456,18,581,16],[457,4,582,2],[458,2,583,0],[459,2,583,1],[459,6,583,1,"_default"],[459,14,583,1],[459,17,583,1,"exports"],[459,24,583,1],[459,25,583,1,"default"],[459,32,583,1],[459,35,585,15],[460,4,586,2,"API"],[460,7,586,5],[460,9,586,2,"API"],[460,12,586,5],[461,4,587,2,"isSupportedColorStyleProp"],[461,29,587,27],[461,31,587,2,"isSupportedColorStyleProp"],[461,56,587,27],[462,4,588,2,"isSupportedStyleProp"],[462,24,588,22],[462,26,588,2,"isSupportedStyleProp"],[462,46,588,22],[463,4,589,2,"isSupportedTransformProp"],[463,28,589,26],[463,30,589,2,"isSupportedTransformProp"],[463,54,589,26],[464,4,590,2,"isSupportedInterpolationParam"],[464,33,590,31],[464,35,590,2,"isSupportedInterpolationParam"],[464,64,590,31],[465,4,591,2,"addWhitelistedStyleProp"],[465,27,591,25],[465,29,591,2,"addWhitelistedStyleProp"],[465,52,591,25],[466,4,592,2,"addWhitelistedTransformProp"],[466,31,592,29],[466,33,592,2,"addWhitelistedTransformProp"],[466,60,592,29],[467,4,593,2,"addWhitelistedInterpolationParam"],[467,36,593,34],[467,38,593,2,"addWhitelistedInterpolationParam"],[467,70,593,34],[468,4,594,2,"validateStyles"],[468,18,594,16],[468,20,594,2,"validateStyles"],[468,34,594,16],[469,4,595,2,"validateTransform"],[469,21,595,19],[469,23,595,2,"validateTransform"],[469,40,595,19],[470,4,596,2,"validateInterpolation"],[470,25,596,23],[470,27,596,2,"validateInterpolation"],[470,48,596,23],[471,4,597,2,"generateNewNodeTag"],[471,22,597,20],[471,24,597,2,"generateNewNodeTag"],[471,42,597,20],[472,4,598,2,"generateNewAnimationId"],[472,26,598,24],[472,28,598,2,"generateNewAnimationId"],[472,50,598,24],[473,4,599,2,"assertNativeAnimatedModule"],[473,30,599,28],[473,32,599,2,"assertNativeAnimatedModule"],[473,58,599,28],[474,4,600,2,"shouldUseNativeDriver"],[474,25,600,23],[474,27,600,2,"shouldUseNativeDriver"],[474,48,600,23],[475,4,601,2,"transformDataType"],[475,21,601,19],[475,23,601,2,"transformDataType"],[475,40,601,19],[476,4,602,2],[477,4,603,2],[478,4,604,2],[478,8,604,6,"nativeEventEmitter"],[478,26,604,24,"nativeEventEmitter"],[478,27,604,24],[478,29,604,47],[479,6,605,4],[479,10,605,8],[479,11,605,9,"nativeEventEmitter"],[479,29,605,27],[479,31,605,29],[480,8,606,6],[481,8,607,6,"nativeEventEmitter"],[481,26,607,24],[481,29,607,27],[481,33,607,31,"NativeEventEmitter"],[481,60,607,49],[482,8,608,8],[483,8,609,8],[484,8,610,8,"Platform"],[484,25,610,16],[484,26,610,17,"OS"],[484,28,610,19],[484,33,610,24],[484,38,610,29],[484,41,610,32],[484,45,610,36],[484,48,610,39,"NativeAnimatedModule"],[484,68,611,6],[484,69,611,7],[485,6,612,4],[486,6,613,4],[486,13,613,11,"nativeEventEmitter"],[486,31,613,29],[487,4,614,2],[488,2,615,0],[488,3,615,1],[489,0,615,1],[489,3]],"functionMap":{"names":["<global>","<anonymous>","apis.reduce$argument_0","API.getValue","API.setWaitingForIdentifier","API.unsetWaitingForIdentifier","API.disableQueue","API.flushQueue","API.queueOperation","queue.push$argument_0","API.createAnimatedNode","API.updateAnimatedNodeConfig","API.startListeningToAnimatedNodeValue","API.stopListeningToAnimatedNodeValue","API.connectAnimatedNodes","API.disconnectAnimatedNodes","API.startAnimatingNode","API.stopAnimation","API.setAnimatedNodeValue","API.setAnimatedNodeOffset","API.flattenAnimatedNodeOffset","API.extractAnimatedNodeOffset","API.connectAnimatedNodeToView","API.disconnectAnimatedNodeFromView","API.restoreDefaultValues","API.dropAnimatedNode","API.addAnimatedEventToView","API.removeAnimatedEventFromView","setupGlobalEventEmitterListeners","RCTDeviceEventEmitter.addListener$argument_1","addWhitelistedStyleProp","addWhitelistedTransformProp","addWhitelistedInterpolationParam","isSupportedColorStyleProp","isSupportedStyleProp","isSupportedTransformProp","isSupportedInterpolationParam","validateTransform","configs.forEach$argument_0","validateStyles","validateInterpolation","generateNewNodeTag","generateNewAnimationId","assertNativeAnimatedModule","shouldUseNativeDriver","transformDataType","default.get__nativeEventEmitter"],"mappings":"AAA;MC2D;6CCwB;ODK;KDC;YGQ;GHc;2BIC;GJS;6BKC;GLO;gBMC;GNU;cOC;GPyC;kBQC;iBCe,iBD;GRI;sBUC;GVG;4BWC;GXQ;qCYC;GZG;oCaC;GbG;wBcC;GdG;2BeC;GfM;sBgBC;GhB4B;iBiBC;GjBG;wBkBC;GlBG;yBmBC;GnBG;6BoBC;GpBG;6BqBC;GrBG;6BsBC;GtBG;kCuBC;GvBU;wBwBC;GxBM;oByBC;GzBG;0B0BC;G1BY;E2BC;G3BY;A4BG;ICG;KDQ;MCK;ODW;C5BE;A8B0E;C9BG;A+BE;C/BG;AgCE;ChCG;AiCE;CjCG;AkCE;ClCG;AmCE;CnCG;AoCE;CpCG;AqCE;kBCgB;GDM;CrCC;AuCE;CvCQ;AwCE;CxCU;AyCE;CzCE;A0CE;C1CE;A2CE;C3CE;A4CI;C5C2B;A6CE;C7CgB;E8CqB;G9CU"}},"type":"js/module"}]}