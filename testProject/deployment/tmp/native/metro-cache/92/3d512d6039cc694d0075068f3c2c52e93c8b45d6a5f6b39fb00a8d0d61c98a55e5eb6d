{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":303,"column":0,"index":9155}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":303,"column":0,"index":9155}}],"key":"ohGilxjVqjyE1GooDVDt9OYg9x0="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":303,"column":0,"index":9155}}],"key":"V6GYoXnblvuuGHJNMy7MHyaunsU="}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":303,"column":0,"index":9155}}],"key":"rcd0dMwf8BS2g+8U1wyhIOxtYEo="}},{"name":"@babel/runtime/helpers/get","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":303,"column":0,"index":9155}}],"key":"qjFFB5GnNNadLKzlHyZes/u71/A="}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":303,"column":0,"index":9155}}],"key":"4pxOr+e+5cSZAdeEKxSt3F7LoKY="}},{"name":"@babel/runtime/helpers/inherits","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":303,"column":0,"index":9155}}],"key":"EDnOjopp9yNVawSzfBRsy2dq5dM="}},{"name":"../../Interaction/InteractionManager","data":{"asyncType":null,"locs":[{"start":{"line":18,"column":0,"index":474},"end":{"line":18,"column":70,"index":544}}],"key":"Qf38izL1HMCyCmLqktxS9Igu47M="}},{"name":"../NativeAnimatedHelper","data":{"asyncType":null,"locs":[{"start":{"line":19,"column":0,"index":545},"end":{"line":19,"column":59,"index":604}}],"key":"1ezhP5tF6Z9mOXoBZysNLcWfZtg="}},{"name":"./AnimatedInterpolation","data":{"asyncType":null,"locs":[{"start":{"line":20,"column":0,"index":605},"end":{"line":20,"column":60,"index":665}}],"key":"DvbDhqSgaG6+M4+lszwc83Yfq1k="}},{"name":"./AnimatedWithChildren","data":{"asyncType":null,"locs":[{"start":{"line":21,"column":0,"index":666},"end":{"line":21,"column":58,"index":724}}],"key":"KMwERuBVcxv+eQEMzjuS4dJY6QI="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * \n   * @format\n   */\n\n  'use strict';\n\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  exports.flushValue = flushValue;\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n  var _get2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/get\"));\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/getPrototypeOf\"));\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/inherits\"));\n  var _InteractionManager = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"../../Interaction/InteractionManager\"));\n  var _NativeAnimatedHelper = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"../NativeAnimatedHelper\"));\n  var _AnimatedInterpolation = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9], \"./AnimatedInterpolation\"));\n  var _AnimatedWithChildren2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10], \"./AnimatedWithChildren\"));\n  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }\n  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\n  var NativeAnimatedAPI = _NativeAnimatedHelper.default.API;\n\n  /**\n   * Animated works by building a directed acyclic graph of dependencies\n   * transparently when you render your Animated components.\n   *\n   *               new Animated.Value(0)\n   *     .interpolate()        .interpolate()    new Animated.Value(1)\n   *         opacity               translateY      scale\n   *          style                         transform\n   *         View#234                         style\n   *                                         View#123\n   *\n   * A) Top Down phase\n   * When an Animated.Value is updated, we recursively go down through this\n   * graph in order to find leaf nodes: the views that we flag as needing\n   * an update.\n   *\n   * B) Bottom Up phase\n   * When a view is flagged as needing an update, we recursively go back up\n   * in order to build the new value that it needs. The reason why we need\n   * this two-phases process is to deal with composite props such as\n   * transform which can receive values from multiple parents.\n   */\n  function flushValue(rootNode) {\n    var leaves = new Set();\n    function findAnimatedStyles(node) {\n      // $FlowFixMe[prop-missing]\n      if (typeof node.update === 'function') {\n        leaves.add(node);\n      } else {\n        node.__getChildren().forEach(findAnimatedStyles);\n      }\n    }\n    findAnimatedStyles(rootNode);\n    leaves.forEach(function (leaf) {\n      return leaf.update();\n    });\n  }\n\n  /**\n   * Some operations are executed only on batch end, which is _mostly_ scheduled when\n   * Animated component props change. For some of the changes which require immediate execution\n   * (e.g. setValue), we create a separate batch in case none is scheduled.\n   */\n  function _executeAsAnimatedBatch(id, operation) {\n    NativeAnimatedAPI.setWaitingForIdentifier(id);\n    operation();\n    NativeAnimatedAPI.unsetWaitingForIdentifier(id);\n  }\n\n  /**\n   * Standard value for driving animations.  One `Animated.Value` can drive\n   * multiple properties in a synchronized fashion, but can only be driven by one\n   * mechanism at a time.  Using a new mechanism (e.g. starting a new animation,\n   * or calling `setValue`) will stop any previous ones.\n   *\n   * See https://reactnative.dev/docs/animatedvalue\n   */\n  var AnimatedValue = exports.default = /*#__PURE__*/function (_AnimatedWithChildren) {\n    function AnimatedValue(value, config) {\n      var _this;\n      (0, _classCallCheck2.default)(this, AnimatedValue);\n      _this = _callSuper(this, AnimatedValue);\n      if (typeof value !== 'number') {\n        throw new Error('AnimatedValue: Attempting to set value to undefined');\n      }\n      _this._startingValue = _this._value = value;\n      _this._offset = 0;\n      _this._animation = null;\n      if (config && config.useNativeDriver) {\n        _this.__makeNative();\n      }\n      return _this;\n    }\n    (0, _inherits2.default)(AnimatedValue, _AnimatedWithChildren);\n    return (0, _createClass2.default)(AnimatedValue, [{\n      key: \"__detach\",\n      value: function __detach() {\n        var _this2 = this;\n        if (this.__isNative) {\n          NativeAnimatedAPI.getValue(this.__getNativeTag(), function (value) {\n            _this2._value = value - _this2._offset;\n          });\n        }\n        this.stopAnimation();\n        (0, _get2.default)((0, _getPrototypeOf2.default)(AnimatedValue.prototype), \"__detach\", this).call(this);\n      }\n    }, {\n      key: \"__getValue\",\n      value: function __getValue() {\n        return this._value + this._offset;\n      }\n\n      /**\n       * Directly set the value.  This will stop any animations running on the value\n       * and update all the bound properties.\n       *\n       * See https://reactnative.dev/docs/animatedvalue#setvalue\n       */\n    }, {\n      key: \"setValue\",\n      value: function setValue(value) {\n        var _this3 = this;\n        if (this._animation) {\n          this._animation.stop();\n          this._animation = null;\n        }\n        this._updateValue(value, !this.__isNative /* don't perform a flush for natively driven values */);\n        if (this.__isNative) {\n          _executeAsAnimatedBatch(this.__getNativeTag().toString(), function () {\n            return NativeAnimatedAPI.setAnimatedNodeValue(_this3.__getNativeTag(), value);\n          });\n        }\n      }\n\n      /**\n       * Sets an offset that is applied on top of whatever value is set, whether via\n       * `setValue`, an animation, or `Animated.event`.  Useful for compensating\n       * things like the start of a pan gesture.\n       *\n       * See https://reactnative.dev/docs/animatedvalue#setoffset\n       */\n    }, {\n      key: \"setOffset\",\n      value: function setOffset(offset) {\n        this._offset = offset;\n        if (this.__isNative) {\n          NativeAnimatedAPI.setAnimatedNodeOffset(this.__getNativeTag(), offset);\n        }\n      }\n\n      /**\n       * Merges the offset value into the base value and resets the offset to zero.\n       * The final output of the value is unchanged.\n       *\n       * See https://reactnative.dev/docs/animatedvalue#flattenoffset\n       */\n    }, {\n      key: \"flattenOffset\",\n      value: function flattenOffset() {\n        this._value += this._offset;\n        this._offset = 0;\n        if (this.__isNative) {\n          NativeAnimatedAPI.flattenAnimatedNodeOffset(this.__getNativeTag());\n        }\n      }\n\n      /**\n       * Sets the offset value to the base value, and resets the base value to zero.\n       * The final output of the value is unchanged.\n       *\n       * See https://reactnative.dev/docs/animatedvalue#extractoffset\n       */\n    }, {\n      key: \"extractOffset\",\n      value: function extractOffset() {\n        this._offset += this._value;\n        this._value = 0;\n        if (this.__isNative) {\n          NativeAnimatedAPI.extractAnimatedNodeOffset(this.__getNativeTag());\n        }\n      }\n\n      /**\n       * Stops any running animation or tracking. `callback` is invoked with the\n       * final value after stopping the animation, which is useful for updating\n       * state to match the animation position with layout.\n       *\n       * See https://reactnative.dev/docs/animatedvalue#stopanimation\n       */\n    }, {\n      key: \"stopAnimation\",\n      value: function stopAnimation(callback) {\n        this.stopTracking();\n        this._animation && this._animation.stop();\n        this._animation = null;\n        if (callback) {\n          if (this.__isNative) {\n            NativeAnimatedAPI.getValue(this.__getNativeTag(), callback);\n          } else {\n            callback(this.__getValue());\n          }\n        }\n      }\n\n      /**\n       * Stops any animation and resets the value to its original.\n       *\n       * See https://reactnative.dev/docs/animatedvalue#resetanimation\n       */\n    }, {\n      key: \"resetAnimation\",\n      value: function resetAnimation(callback) {\n        this.stopAnimation(callback);\n        this._value = this._startingValue;\n        if (this.__isNative) {\n          NativeAnimatedAPI.setAnimatedNodeValue(this.__getNativeTag(), this._startingValue);\n        }\n      }\n    }, {\n      key: \"__onAnimatedValueUpdateReceived\",\n      value: function __onAnimatedValueUpdateReceived(value) {\n        this._updateValue(value, false /*flush*/);\n      }\n\n      /**\n       * Interpolates the value before updating the property, e.g. mapping 0-1 to\n       * 0-10.\n       */\n    }, {\n      key: \"interpolate\",\n      value: function interpolate(config) {\n        return new _AnimatedInterpolation.default(this, config);\n      }\n\n      /**\n       * Typically only used internally, but could be used by a custom Animation\n       * class.\n       *\n       * See https://reactnative.dev/docs/animatedvalue#animate\n       */\n    }, {\n      key: \"animate\",\n      value: function animate(animation, callback) {\n        var _this4 = this;\n        var handle = null;\n        if (animation.__isInteraction) {\n          handle = _InteractionManager.default.createInteractionHandle();\n        }\n        var previousAnimation = this._animation;\n        this._animation && this._animation.stop();\n        this._animation = animation;\n        animation.start(this._value, function (value) {\n          // Natively driven animations will never call into that callback, therefore we can always\n          // pass flush = true to allow the updated value to propagate to native with setNativeProps\n          _this4._updateValue(value, true /* flush */);\n        }, function (result) {\n          _this4._animation = null;\n          if (handle !== null) {\n            _InteractionManager.default.clearInteractionHandle(handle);\n          }\n          callback && callback(result);\n        }, previousAnimation, this);\n      }\n\n      /**\n       * Typically only used internally.\n       */\n    }, {\n      key: \"stopTracking\",\n      value: function stopTracking() {\n        this._tracking && this._tracking.__detach();\n        this._tracking = null;\n      }\n\n      /**\n       * Typically only used internally.\n       */\n    }, {\n      key: \"track\",\n      value: function track(tracking) {\n        this.stopTracking();\n        this._tracking = tracking;\n        // Make sure that the tracking animation starts executing\n        this._tracking && this._tracking.update();\n      }\n    }, {\n      key: \"_updateValue\",\n      value: function _updateValue(value, flush) {\n        if (value === undefined) {\n          throw new Error('AnimatedValue: Attempting to set value to undefined');\n        }\n        this._value = value;\n        if (flush) {\n          flushValue(this);\n        }\n        this.__callListeners(this.__getValue());\n      }\n    }, {\n      key: \"__getNativeConfig\",\n      value: function __getNativeConfig() {\n        return {\n          type: 'value',\n          value: this._value,\n          offset: this._offset\n        };\n      }\n    }]);\n  }(_AnimatedWithChildren2.default);\n});","lineCount":322,"map":[[2,2,1,0],[3,0,2,0],[4,0,3,0],[5,0,4,0],[6,0,5,0],[7,0,6,0],[8,0,7,0],[9,0,8,0],[10,0,9,0],[12,2,11,0],[12,14,11,12],[14,2,11,13],[14,6,11,13,"_interopRequireDefault"],[14,28,11,13],[14,31,11,13,"_$$_REQUIRE"],[14,42,11,13],[14,43,11,13,"_dependencyMap"],[14,57,11,13],[15,2,11,13,"Object"],[15,8,11,13],[15,9,11,13,"defineProperty"],[15,23,11,13],[15,24,11,13,"exports"],[15,31,11,13],[16,4,11,13,"value"],[16,9,11,13],[17,2,11,13],[18,2,11,13,"exports"],[18,9,11,13],[18,10,11,13,"default"],[18,17,11,13],[19,2,11,13,"exports"],[19,9,11,13],[19,10,11,13,"flushValue"],[19,20,11,13],[19,23,11,13,"flushValue"],[19,33,11,13],[20,2,11,13],[20,6,11,13,"_classCallCheck2"],[20,22,11,13],[20,25,11,13,"_interopRequireDefault"],[20,47,11,13],[20,48,11,13,"_$$_REQUIRE"],[20,59,11,13],[20,60,11,13,"_dependencyMap"],[20,74,11,13],[21,2,11,13],[21,6,11,13,"_createClass2"],[21,19,11,13],[21,22,11,13,"_interopRequireDefault"],[21,44,11,13],[21,45,11,13,"_$$_REQUIRE"],[21,56,11,13],[21,57,11,13,"_dependencyMap"],[21,71,11,13],[22,2,11,13],[22,6,11,13,"_possibleConstructorReturn2"],[22,33,11,13],[22,36,11,13,"_interopRequireDefault"],[22,58,11,13],[22,59,11,13,"_$$_REQUIRE"],[22,70,11,13],[22,71,11,13,"_dependencyMap"],[22,85,11,13],[23,2,11,13],[23,6,11,13,"_get2"],[23,11,11,13],[23,14,11,13,"_interopRequireDefault"],[23,36,11,13],[23,37,11,13,"_$$_REQUIRE"],[23,48,11,13],[23,49,11,13,"_dependencyMap"],[23,63,11,13],[24,2,11,13],[24,6,11,13,"_getPrototypeOf2"],[24,22,11,13],[24,25,11,13,"_interopRequireDefault"],[24,47,11,13],[24,48,11,13,"_$$_REQUIRE"],[24,59,11,13],[24,60,11,13,"_dependencyMap"],[24,74,11,13],[25,2,11,13],[25,6,11,13,"_inherits2"],[25,16,11,13],[25,19,11,13,"_interopRequireDefault"],[25,41,11,13],[25,42,11,13,"_$$_REQUIRE"],[25,53,11,13],[25,54,11,13,"_dependencyMap"],[25,68,11,13],[26,2,18,0],[26,6,18,0,"_InteractionManager"],[26,25,18,0],[26,28,18,0,"_interopRequireDefault"],[26,50,18,0],[26,51,18,0,"_$$_REQUIRE"],[26,62,18,0],[26,63,18,0,"_dependencyMap"],[26,77,18,0],[27,2,19,0],[27,6,19,0,"_NativeAnimatedHelper"],[27,27,19,0],[27,30,19,0,"_interopRequireDefault"],[27,52,19,0],[27,53,19,0,"_$$_REQUIRE"],[27,64,19,0],[27,65,19,0,"_dependencyMap"],[27,79,19,0],[28,2,20,0],[28,6,20,0,"_AnimatedInterpolation"],[28,28,20,0],[28,31,20,0,"_interopRequireDefault"],[28,53,20,0],[28,54,20,0,"_$$_REQUIRE"],[28,65,20,0],[28,66,20,0,"_dependencyMap"],[28,80,20,0],[29,2,21,0],[29,6,21,0,"_AnimatedWithChildren2"],[29,28,21,0],[29,31,21,0,"_interopRequireDefault"],[29,53,21,0],[29,54,21,0,"_$$_REQUIRE"],[29,65,21,0],[29,66,21,0,"_dependencyMap"],[29,80,21,0],[30,2,21,58],[30,11,21,58,"_callSuper"],[30,22,21,58,"t"],[30,23,21,58],[30,25,21,58,"o"],[30,26,21,58],[30,28,21,58,"e"],[30,29,21,58],[30,40,21,58,"o"],[30,41,21,58],[30,48,21,58,"_getPrototypeOf2"],[30,64,21,58],[30,65,21,58,"default"],[30,72,21,58],[30,74,21,58,"o"],[30,75,21,58],[30,82,21,58,"_possibleConstructorReturn2"],[30,109,21,58],[30,110,21,58,"default"],[30,117,21,58],[30,119,21,58,"t"],[30,120,21,58],[30,122,21,58,"_isNativeReflectConstruct"],[30,147,21,58],[30,152,21,58,"Reflect"],[30,159,21,58],[30,160,21,58,"construct"],[30,169,21,58],[30,170,21,58,"o"],[30,171,21,58],[30,173,21,58,"e"],[30,174,21,58],[30,186,21,58,"_getPrototypeOf2"],[30,202,21,58],[30,203,21,58,"default"],[30,210,21,58],[30,212,21,58,"t"],[30,213,21,58],[30,215,21,58,"constructor"],[30,226,21,58],[30,230,21,58,"o"],[30,231,21,58],[30,232,21,58,"apply"],[30,237,21,58],[30,238,21,58,"t"],[30,239,21,58],[30,241,21,58,"e"],[30,242,21,58],[31,2,21,58],[31,11,21,58,"_isNativeReflectConstruct"],[31,37,21,58],[31,51,21,58,"t"],[31,52,21,58],[31,56,21,58,"Boolean"],[31,63,21,58],[31,64,21,58,"prototype"],[31,73,21,58],[31,74,21,58,"valueOf"],[31,81,21,58],[31,82,21,58,"call"],[31,86,21,58],[31,87,21,58,"Reflect"],[31,94,21,58],[31,95,21,58,"construct"],[31,104,21,58],[31,105,21,58,"Boolean"],[31,112,21,58],[31,145,21,58,"t"],[31,146,21,58],[31,159,21,58,"_isNativeReflectConstruct"],[31,184,21,58],[31,196,21,58,"_isNativeReflectConstruct"],[31,222,21,58],[31,235,21,58,"t"],[31,236,21,58],[32,2,27,0],[32,6,27,6,"NativeAnimatedAPI"],[32,23,27,23],[32,26,27,26,"NativeAnimatedHelper"],[32,55,27,46],[32,56,27,47,"API"],[32,59,27,50],[34,2,29,0],[35,0,30,0],[36,0,31,0],[37,0,32,0],[38,0,33,0],[39,0,34,0],[40,0,35,0],[41,0,36,0],[42,0,37,0],[43,0,38,0],[44,0,39,0],[45,0,40,0],[46,0,41,0],[47,0,42,0],[48,0,43,0],[49,0,44,0],[50,0,45,0],[51,0,46,0],[52,0,47,0],[53,0,48,0],[54,0,49,0],[55,0,50,0],[56,2,51,7],[56,11,51,16,"flushValue"],[56,21,51,26,"flushValue"],[56,22,51,27,"rootNode"],[56,30,51,49],[56,32,51,57],[57,4,52,2],[57,8,52,8,"leaves"],[57,14,52,14],[57,17,52,17],[57,21,52,21,"Set"],[57,24,52,24],[57,25,52,52],[57,26,52,53],[58,4,53,2],[58,13,53,11,"findAnimatedStyles"],[58,31,53,29,"findAnimatedStyles"],[58,32,53,30,"node"],[58,36,53,48],[58,38,53,50],[59,6,54,4],[60,6,55,4],[60,10,55,8],[60,17,55,15,"node"],[60,21,55,19],[60,22,55,20,"update"],[60,28,55,26],[60,33,55,31],[60,43,55,41],[60,45,55,43],[61,8,56,6,"leaves"],[61,14,56,12],[61,15,56,13,"add"],[61,18,56,16],[61,19,56,18,"node"],[61,23,56,28],[61,24,56,29],[62,6,57,4],[62,7,57,5],[62,13,57,11],[63,8,58,6,"node"],[63,12,58,10],[63,13,58,11,"__getChildren"],[63,26,58,24],[63,27,58,25],[63,28,58,26],[63,29,58,27,"forEach"],[63,36,58,34],[63,37,58,35,"findAnimatedStyles"],[63,55,58,53],[63,56,58,54],[64,6,59,4],[65,4,60,2],[66,4,61,2,"findAnimatedStyles"],[66,22,61,20],[66,23,61,21,"rootNode"],[66,31,61,29],[66,32,61,30],[67,4,62,2,"leaves"],[67,10,62,8],[67,11,62,9,"forEach"],[67,18,62,16],[67,19,62,17],[67,29,62,17,"leaf"],[67,33,62,21],[68,6,62,21],[68,13,62,25,"leaf"],[68,17,62,29],[68,18,62,30,"update"],[68,24,62,36],[68,25,62,37],[68,26,62,38],[69,4,62,38],[69,6,62,39],[70,2,63,0],[72,2,65,0],[73,0,66,0],[74,0,67,0],[75,0,68,0],[76,0,69,0],[77,2,70,0],[77,11,70,9,"_executeAsAnimatedBatch"],[77,34,70,32,"_executeAsAnimatedBatch"],[77,35,70,33,"id"],[77,37,70,43],[77,39,70,45,"operation"],[77,48,70,66],[77,50,70,68],[78,4,71,2,"NativeAnimatedAPI"],[78,21,71,19],[78,22,71,20,"setWaitingForIdentifier"],[78,45,71,43],[78,46,71,44,"id"],[78,48,71,46],[78,49,71,47],[79,4,72,2,"operation"],[79,13,72,11],[79,14,72,12],[79,15,72,13],[80,4,73,2,"NativeAnimatedAPI"],[80,21,73,19],[80,22,73,20,"unsetWaitingForIdentifier"],[80,47,73,45],[80,48,73,46,"id"],[80,50,73,48],[80,51,73,49],[81,2,74,0],[83,2,76,0],[84,0,77,0],[85,0,78,0],[86,0,79,0],[87,0,80,0],[88,0,81,0],[89,0,82,0],[90,0,83,0],[91,2,76,0],[91,6,84,21,"AnimatedValue"],[91,19,84,34],[91,22,84,34,"exports"],[91,29,84,34],[91,30,84,34,"default"],[91,37,84,34],[91,63,84,34,"_AnimatedWithChildren"],[91,84,84,34],[92,4,91,2],[92,13,91,2,"AnimatedValue"],[92,27,91,14,"value"],[92,32,91,27],[92,34,91,29,"config"],[92,40,91,58],[92,42,91,60],[93,6,91,60],[93,10,91,60,"_this"],[93,15,91,60],[94,6,91,60],[94,10,91,60,"_classCallCheck2"],[94,26,91,60],[94,27,91,60,"default"],[94,34,91,60],[94,42,91,60,"AnimatedValue"],[94,55,91,60],[95,6,92,4,"_this"],[95,11,92,4],[95,14,92,4,"_callSuper"],[95,24,92,4],[95,31,92,4,"AnimatedValue"],[95,44,92,4],[96,6,93,4],[96,10,93,8],[96,17,93,15,"value"],[96,22,93,20],[96,27,93,25],[96,35,93,33],[96,37,93,35],[97,8,94,6],[97,14,94,12],[97,18,94,16,"Error"],[97,23,94,21],[97,24,94,22],[97,77,94,75],[97,78,94,76],[98,6,95,4],[99,6,96,4,"_this"],[99,11,96,4],[99,12,96,9,"_startingValue"],[99,26,96,23],[99,29,96,26,"_this"],[99,34,96,26],[99,35,96,31,"_value"],[99,41,96,37],[99,44,96,40,"value"],[99,49,96,45],[100,6,97,4,"_this"],[100,11,97,4],[100,12,97,9,"_offset"],[100,19,97,16],[100,22,97,19],[100,23,97,20],[101,6,98,4,"_this"],[101,11,98,4],[101,12,98,9,"_animation"],[101,22,98,19],[101,25,98,22],[101,29,98,26],[102,6,99,4],[102,10,99,8,"config"],[102,16,99,14],[102,20,99,18,"config"],[102,26,99,24],[102,27,99,25,"useNativeDriver"],[102,42,99,40],[102,44,99,42],[103,8,100,6,"_this"],[103,13,100,6],[103,14,100,11,"__makeNative"],[103,26,100,23],[103,27,100,24],[103,28,100,25],[104,6,101,4],[105,6,101,5],[105,13,101,5,"_this"],[105,18,101,5],[106,4,102,2],[107,4,102,3],[107,8,102,3,"_inherits2"],[107,18,102,3],[107,19,102,3,"default"],[107,26,102,3],[107,28,102,3,"AnimatedValue"],[107,41,102,3],[107,43,102,3,"_AnimatedWithChildren"],[107,64,102,3],[108,4,102,3],[108,15,102,3,"_createClass2"],[108,28,102,3],[108,29,102,3,"default"],[108,36,102,3],[108,38,102,3,"AnimatedValue"],[108,51,102,3],[109,6,102,3,"key"],[109,9,102,3],[110,6,102,3,"value"],[110,11,102,3],[110,13,104,2],[110,22,104,2,"__detach"],[110,30,104,10,"__detach"],[110,31,104,10],[110,33,104,13],[111,8,104,13],[111,12,104,13,"_this2"],[111,18,104,13],[112,8,105,4],[112,12,105,8],[112,16,105,12],[112,17,105,13,"__isNative"],[112,27,105,23],[112,29,105,25],[113,10,106,6,"NativeAnimatedAPI"],[113,27,106,23],[113,28,106,24,"getValue"],[113,36,106,32],[113,37,106,33],[113,41,106,37],[113,42,106,38,"__getNativeTag"],[113,56,106,52],[113,57,106,53],[113,58,106,54],[113,60,106,56],[113,70,106,56,"value"],[113,75,106,61],[113,77,106,65],[114,12,107,8,"_this2"],[114,18,107,12],[114,19,107,13,"_value"],[114,25,107,19],[114,28,107,22,"value"],[114,33,107,27],[114,36,107,30,"_this2"],[114,42,107,34],[114,43,107,35,"_offset"],[114,50,107,42],[115,10,108,6],[115,11,108,7],[115,12,108,8],[116,8,109,4],[117,8,110,4],[117,12,110,8],[117,13,110,9,"stopAnimation"],[117,26,110,22],[117,27,110,23],[117,28,110,24],[118,8,111,4],[118,12,111,4,"_get2"],[118,17,111,4],[118,18,111,4,"default"],[118,25,111,4],[118,31,111,4,"_getPrototypeOf2"],[118,47,111,4],[118,48,111,4,"default"],[118,55,111,4],[118,57,111,4,"AnimatedValue"],[118,70,111,4],[118,71,111,4,"prototype"],[118,80,111,4],[118,101,111,4,"call"],[118,105,111,4],[119,6,112,2],[120,4,112,3],[121,6,112,3,"key"],[121,9,112,3],[122,6,112,3,"value"],[122,11,112,3],[122,13,114,2],[122,22,114,2,"__getValue"],[122,32,114,12,"__getValue"],[122,33,114,12],[122,35,114,23],[123,8,115,4],[123,15,115,11],[123,19,115,15],[123,20,115,16,"_value"],[123,26,115,22],[123,29,115,25],[123,33,115,29],[123,34,115,30,"_offset"],[123,41,115,37],[124,6,116,2],[126,6,118,2],[127,0,119,0],[128,0,120,0],[129,0,121,0],[130,0,122,0],[131,0,123,0],[132,4,118,2],[133,6,118,2,"key"],[133,9,118,2],[134,6,118,2,"value"],[134,11,118,2],[134,13,124,2],[134,22,124,2,"setValue"],[134,30,124,10,"setValue"],[134,31,124,11,"value"],[134,36,124,24],[134,38,124,32],[135,8,124,32],[135,12,124,32,"_this3"],[135,18,124,32],[136,8,125,4],[136,12,125,8],[136,16,125,12],[136,17,125,13,"_animation"],[136,27,125,23],[136,29,125,25],[137,10,126,6],[137,14,126,10],[137,15,126,11,"_animation"],[137,25,126,21],[137,26,126,22,"stop"],[137,30,126,26],[137,31,126,27],[137,32,126,28],[138,10,127,6],[138,14,127,10],[138,15,127,11,"_animation"],[138,25,127,21],[138,28,127,24],[138,32,127,28],[139,8,128,4],[140,8,129,4],[140,12,129,8],[140,13,129,9,"_updateValue"],[140,25,129,21],[140,26,130,6,"value"],[140,31,130,11],[140,33,131,6],[140,34,131,7],[140,38,131,11],[140,39,131,12,"__isNative"],[140,49,131,22],[140,50,131,23],[140,104,132,4],[140,105,132,5],[141,8,133,4],[141,12,133,8],[141,16,133,12],[141,17,133,13,"__isNative"],[141,27,133,23],[141,29,133,25],[142,10,134,6,"_executeAsAnimatedBatch"],[142,33,134,29],[142,34,134,30],[142,38,134,34],[142,39,134,35,"__getNativeTag"],[142,53,134,49],[142,54,134,50],[142,55,134,51],[142,56,134,52,"toString"],[142,64,134,60],[142,65,134,61],[142,66,134,62],[142,68,134,64],[143,12,134,64],[143,19,135,8,"NativeAnimatedAPI"],[143,36,135,25],[143,37,135,26,"setAnimatedNodeValue"],[143,57,135,46],[143,58,135,47,"_this3"],[143,64,135,51],[143,65,135,52,"__getNativeTag"],[143,79,135,66],[143,80,135,67],[143,81,135,68],[143,83,135,70,"value"],[143,88,135,75],[143,89,135,76],[144,10,135,76],[144,11,136,6],[144,12,136,7],[145,8,137,4],[146,6,138,2],[148,6,140,2],[149,0,141,0],[150,0,142,0],[151,0,143,0],[152,0,144,0],[153,0,145,0],[154,0,146,0],[155,4,140,2],[156,6,140,2,"key"],[156,9,140,2],[157,6,140,2,"value"],[157,11,140,2],[157,13,147,2],[157,22,147,2,"setOffset"],[157,31,147,11,"setOffset"],[157,32,147,12,"offset"],[157,38,147,26],[157,40,147,34],[158,8,148,4],[158,12,148,8],[158,13,148,9,"_offset"],[158,20,148,16],[158,23,148,19,"offset"],[158,29,148,25],[159,8,149,4],[159,12,149,8],[159,16,149,12],[159,17,149,13,"__isNative"],[159,27,149,23],[159,29,149,25],[160,10,150,6,"NativeAnimatedAPI"],[160,27,150,23],[160,28,150,24,"setAnimatedNodeOffset"],[160,49,150,45],[160,50,150,46],[160,54,150,50],[160,55,150,51,"__getNativeTag"],[160,69,150,65],[160,70,150,66],[160,71,150,67],[160,73,150,69,"offset"],[160,79,150,75],[160,80,150,76],[161,8,151,4],[162,6,152,2],[164,6,154,2],[165,0,155,0],[166,0,156,0],[167,0,157,0],[168,0,158,0],[169,0,159,0],[170,4,154,2],[171,6,154,2,"key"],[171,9,154,2],[172,6,154,2,"value"],[172,11,154,2],[172,13,160,2],[172,22,160,2,"flattenOffset"],[172,35,160,15,"flattenOffset"],[172,36,160,15],[172,38,160,24],[173,8,161,4],[173,12,161,8],[173,13,161,9,"_value"],[173,19,161,15],[173,23,161,19],[173,27,161,23],[173,28,161,24,"_offset"],[173,35,161,31],[174,8,162,4],[174,12,162,8],[174,13,162,9,"_offset"],[174,20,162,16],[174,23,162,19],[174,24,162,20],[175,8,163,4],[175,12,163,8],[175,16,163,12],[175,17,163,13,"__isNative"],[175,27,163,23],[175,29,163,25],[176,10,164,6,"NativeAnimatedAPI"],[176,27,164,23],[176,28,164,24,"flattenAnimatedNodeOffset"],[176,53,164,49],[176,54,164,50],[176,58,164,54],[176,59,164,55,"__getNativeTag"],[176,73,164,69],[176,74,164,70],[176,75,164,71],[176,76,164,72],[177,8,165,4],[178,6,166,2],[180,6,168,2],[181,0,169,0],[182,0,170,0],[183,0,171,0],[184,0,172,0],[185,0,173,0],[186,4,168,2],[187,6,168,2,"key"],[187,9,168,2],[188,6,168,2,"value"],[188,11,168,2],[188,13,174,2],[188,22,174,2,"extractOffset"],[188,35,174,15,"extractOffset"],[188,36,174,15],[188,38,174,24],[189,8,175,4],[189,12,175,8],[189,13,175,9,"_offset"],[189,20,175,16],[189,24,175,20],[189,28,175,24],[189,29,175,25,"_value"],[189,35,175,31],[190,8,176,4],[190,12,176,8],[190,13,176,9,"_value"],[190,19,176,15],[190,22,176,18],[190,23,176,19],[191,8,177,4],[191,12,177,8],[191,16,177,12],[191,17,177,13,"__isNative"],[191,27,177,23],[191,29,177,25],[192,10,178,6,"NativeAnimatedAPI"],[192,27,178,23],[192,28,178,24,"extractAnimatedNodeOffset"],[192,53,178,49],[192,54,178,50],[192,58,178,54],[192,59,178,55,"__getNativeTag"],[192,73,178,69],[192,74,178,70],[192,75,178,71],[192,76,178,72],[193,8,179,4],[194,6,180,2],[196,6,182,2],[197,0,183,0],[198,0,184,0],[199,0,185,0],[200,0,186,0],[201,0,187,0],[202,0,188,0],[203,4,182,2],[204,6,182,2,"key"],[204,9,182,2],[205,6,182,2,"value"],[205,11,182,2],[205,13,189,2],[205,22,189,2,"stopAnimation"],[205,35,189,15,"stopAnimation"],[205,36,189,16,"callback"],[205,44,189,51],[205,46,189,59],[206,8,190,4],[206,12,190,8],[206,13,190,9,"stopTracking"],[206,25,190,21],[206,26,190,22],[206,27,190,23],[207,8,191,4],[207,12,191,8],[207,13,191,9,"_animation"],[207,23,191,19],[207,27,191,23],[207,31,191,27],[207,32,191,28,"_animation"],[207,42,191,38],[207,43,191,39,"stop"],[207,47,191,43],[207,48,191,44],[207,49,191,45],[208,8,192,4],[208,12,192,8],[208,13,192,9,"_animation"],[208,23,192,19],[208,26,192,22],[208,30,192,26],[209,8,193,4],[209,12,193,8,"callback"],[209,20,193,16],[209,22,193,18],[210,10,194,6],[210,14,194,10],[210,18,194,14],[210,19,194,15,"__isNative"],[210,29,194,25],[210,31,194,27],[211,12,195,8,"NativeAnimatedAPI"],[211,29,195,25],[211,30,195,26,"getValue"],[211,38,195,34],[211,39,195,35],[211,43,195,39],[211,44,195,40,"__getNativeTag"],[211,58,195,54],[211,59,195,55],[211,60,195,56],[211,62,195,58,"callback"],[211,70,195,66],[211,71,195,67],[212,10,196,6],[212,11,196,7],[212,17,196,13],[213,12,197,8,"callback"],[213,20,197,16],[213,21,197,17],[213,25,197,21],[213,26,197,22,"__getValue"],[213,36,197,32],[213,37,197,33],[213,38,197,34],[213,39,197,35],[214,10,198,6],[215,8,199,4],[216,6,200,2],[218,6,202,2],[219,0,203,0],[220,0,204,0],[221,0,205,0],[222,0,206,0],[223,4,202,2],[224,6,202,2,"key"],[224,9,202,2],[225,6,202,2,"value"],[225,11,202,2],[225,13,207,2],[225,22,207,2,"resetAnimation"],[225,36,207,16,"resetAnimation"],[225,37,207,17,"callback"],[225,45,207,52],[225,47,207,60],[226,8,208,4],[226,12,208,8],[226,13,208,9,"stopAnimation"],[226,26,208,22],[226,27,208,23,"callback"],[226,35,208,31],[226,36,208,32],[227,8,209,4],[227,12,209,8],[227,13,209,9,"_value"],[227,19,209,15],[227,22,209,18],[227,26,209,22],[227,27,209,23,"_startingValue"],[227,41,209,37],[228,8,210,4],[228,12,210,8],[228,16,210,12],[228,17,210,13,"__isNative"],[228,27,210,23],[228,29,210,25],[229,10,211,6,"NativeAnimatedAPI"],[229,27,211,23],[229,28,211,24,"setAnimatedNodeValue"],[229,48,211,44],[229,49,212,8],[229,53,212,12],[229,54,212,13,"__getNativeTag"],[229,68,212,27],[229,69,212,28],[229,70,212,29],[229,72,213,8],[229,76,213,12],[229,77,213,13,"_startingValue"],[229,91,214,6],[229,92,214,7],[230,8,215,4],[231,6,216,2],[232,4,216,3],[233,6,216,3,"key"],[233,9,216,3],[234,6,216,3,"value"],[234,11,216,3],[234,13,218,2],[234,22,218,2,"__onAnimatedValueUpdateReceived"],[234,53,218,33,"__onAnimatedValueUpdateReceived"],[234,54,218,34,"value"],[234,59,218,47],[234,61,218,55],[235,8,219,4],[235,12,219,8],[235,13,219,9,"_updateValue"],[235,25,219,21],[235,26,219,22,"value"],[235,31,219,27],[235,33,219,29],[235,38,219,34],[235,39,219,35],[235,48,219,44],[235,49,219,45],[236,6,220,2],[238,6,222,2],[239,0,223,0],[240,0,224,0],[241,0,225,0],[242,4,222,2],[243,6,222,2,"key"],[243,9,222,2],[244,6,222,2,"value"],[244,11,222,2],[244,13,226,2],[244,22,226,2,"interpolate"],[244,33,226,13,"interpolate"],[244,34,227,4,"config"],[244,40,227,44],[244,42,228,36],[245,8,229,4],[245,15,229,11],[245,19,229,15,"AnimatedInterpolation"],[245,49,229,36],[245,50,229,37],[245,54,229,41],[245,56,229,43,"config"],[245,62,229,49],[245,63,229,50],[246,6,230,2],[248,6,232,2],[249,0,233,0],[250,0,234,0],[251,0,235,0],[252,0,236,0],[253,0,237,0],[254,4,232,2],[255,6,232,2,"key"],[255,9,232,2],[256,6,232,2,"value"],[256,11,232,2],[256,13,238,2],[256,22,238,2,"animate"],[256,29,238,9,"animate"],[256,30,238,10,"animation"],[256,39,238,30],[256,41,238,32,"callback"],[256,49,238,54],[256,51,238,62],[257,8,238,62],[257,12,238,62,"_this4"],[257,18,238,62],[258,8,239,4],[258,12,239,8,"handle"],[258,18,239,14],[258,21,239,17],[258,25,239,21],[259,8,240,4],[259,12,240,8,"animation"],[259,21,240,17],[259,22,240,18,"__isInteraction"],[259,37,240,33],[259,39,240,35],[260,10,241,6,"handle"],[260,16,241,12],[260,19,241,15,"InteractionManager"],[260,46,241,33],[260,47,241,34,"createInteractionHandle"],[260,70,241,57],[260,71,241,58],[260,72,241,59],[261,8,242,4],[262,8,243,4],[262,12,243,10,"previousAnimation"],[262,29,243,27],[262,32,243,30],[262,36,243,34],[262,37,243,35,"_animation"],[262,47,243,45],[263,8,244,4],[263,12,244,8],[263,13,244,9,"_animation"],[263,23,244,19],[263,27,244,23],[263,31,244,27],[263,32,244,28,"_animation"],[263,42,244,38],[263,43,244,39,"stop"],[263,47,244,43],[263,48,244,44],[263,49,244,45],[264,8,245,4],[264,12,245,8],[264,13,245,9,"_animation"],[264,23,245,19],[264,26,245,22,"animation"],[264,35,245,31],[265,8,246,4,"animation"],[265,17,246,13],[265,18,246,14,"start"],[265,23,246,19],[265,24,247,6],[265,28,247,10],[265,29,247,11,"_value"],[265,35,247,17],[265,37,248,6],[265,47,248,6,"value"],[265,52,248,11],[265,54,248,15],[266,10,249,8],[267,10,250,8],[268,10,251,8,"_this4"],[268,16,251,12],[268,17,251,13,"_updateValue"],[268,29,251,25],[268,30,251,26,"value"],[268,35,251,31],[268,37,251,33],[268,41,251,37],[268,42,251,38],[268,53,251,49],[268,54,251,50],[269,8,252,6],[269,9,252,7],[269,11,253,6],[269,21,253,6,"result"],[269,27,253,12],[269,29,253,16],[270,10,254,8,"_this4"],[270,16,254,12],[270,17,254,13,"_animation"],[270,27,254,23],[270,30,254,26],[270,34,254,30],[271,10,255,8],[271,14,255,12,"handle"],[271,20,255,18],[271,25,255,23],[271,29,255,27],[271,31,255,29],[272,12,256,10,"InteractionManager"],[272,39,256,28],[272,40,256,29,"clearInteractionHandle"],[272,62,256,51],[272,63,256,52,"handle"],[272,69,256,58],[272,70,256,59],[273,10,257,8],[274,10,258,8,"callback"],[274,18,258,16],[274,22,258,20,"callback"],[274,30,258,28],[274,31,258,29,"result"],[274,37,258,35],[274,38,258,36],[275,8,259,6],[275,9,259,7],[275,11,260,6,"previousAnimation"],[275,28,260,23],[275,30,261,6],[275,34,262,4],[275,35,262,5],[276,6,263,2],[278,6,265,2],[279,0,266,0],[280,0,267,0],[281,4,265,2],[282,6,265,2,"key"],[282,9,265,2],[283,6,265,2,"value"],[283,11,265,2],[283,13,268,2],[283,22,268,2,"stopTracking"],[283,34,268,14,"stopTracking"],[283,35,268,14],[283,37,268,23],[284,8,269,4],[284,12,269,8],[284,13,269,9,"_tracking"],[284,22,269,18],[284,26,269,22],[284,30,269,26],[284,31,269,27,"_tracking"],[284,40,269,36],[284,41,269,37,"__detach"],[284,49,269,45],[284,50,269,46],[284,51,269,47],[285,8,270,4],[285,12,270,8],[285,13,270,9,"_tracking"],[285,22,270,18],[285,25,270,21],[285,29,270,25],[286,6,271,2],[288,6,273,2],[289,0,274,0],[290,0,275,0],[291,4,273,2],[292,6,273,2,"key"],[292,9,273,2],[293,6,273,2,"value"],[293,11,273,2],[293,13,276,2],[293,22,276,2,"track"],[293,27,276,7,"track"],[293,28,276,8,"tracking"],[293,36,276,34],[293,38,276,42],[294,8,277,4],[294,12,277,8],[294,13,277,9,"stopTracking"],[294,25,277,21],[294,26,277,22],[294,27,277,23],[295,8,278,4],[295,12,278,8],[295,13,278,9,"_tracking"],[295,22,278,18],[295,25,278,21,"tracking"],[295,33,278,29],[296,8,279,4],[297,8,280,4],[297,12,280,8],[297,13,280,9,"_tracking"],[297,22,280,18],[297,26,280,22],[297,30,280,26],[297,31,280,27,"_tracking"],[297,40,280,36],[297,41,280,37,"update"],[297,47,280,43],[297,48,280,44],[297,49,280,45],[298,6,281,2],[299,4,281,3],[300,6,281,3,"key"],[300,9,281,3],[301,6,281,3,"value"],[301,11,281,3],[301,13,283,2],[301,22,283,2,"_updateValue"],[301,34,283,14,"_updateValue"],[301,35,283,15,"value"],[301,40,283,28],[301,42,283,30,"flush"],[301,47,283,44],[301,49,283,52],[302,8,284,4],[302,12,284,8,"value"],[302,17,284,13],[302,22,284,18,"undefined"],[302,31,284,27],[302,33,284,29],[303,10,285,6],[303,16,285,12],[303,20,285,16,"Error"],[303,25,285,21],[303,26,285,22],[303,79,285,75],[303,80,285,76],[304,8,286,4],[305,8,288,4],[305,12,288,8],[305,13,288,9,"_value"],[305,19,288,15],[305,22,288,18,"value"],[305,27,288,23],[306,8,289,4],[306,12,289,8,"flush"],[306,17,289,13],[306,19,289,15],[307,10,290,6,"flushValue"],[307,20,290,16],[307,21,290,17],[307,25,290,21],[307,26,290,22],[308,8,291,4],[309,8,292,4],[309,12,292,8],[309,13,292,9,"__callListeners"],[309,28,292,24],[309,29,292,25],[309,33,292,29],[309,34,292,30,"__getValue"],[309,44,292,40],[309,45,292,41],[309,46,292,42],[309,47,292,43],[310,6,293,2],[311,4,293,3],[312,6,293,3,"key"],[312,9,293,3],[313,6,293,3,"value"],[313,11,293,3],[313,13,295,2],[313,22,295,2,"__getNativeConfig"],[313,39,295,19,"__getNativeConfig"],[313,40,295,19],[313,42,295,30],[314,8,296,4],[314,15,296,11],[315,10,297,6,"type"],[315,14,297,10],[315,16,297,12],[315,23,297,19],[316,10,298,6,"value"],[316,15,298,11],[316,17,298,13],[316,21,298,17],[316,22,298,18,"_value"],[316,28,298,24],[317,10,299,6,"offset"],[317,16,299,12],[317,18,299,14],[317,22,299,18],[317,23,299,19,"_offset"],[318,8,300,4],[318,9,300,5],[319,6,301,2],[320,4,301,3],[321,2,301,3],[321,4,84,43,"AnimatedWithChildren"],[321,34,84,63],[322,0,84,63],[322,3]],"functionMap":{"names":["<global>","flushValue","findAnimatedStyles","leaves.forEach$argument_0","_executeAsAnimatedBatch","AnimatedValue","constructor","__detach","NativeAnimatedAPI.getValue$argument_1","__getValue","setValue","_executeAsAnimatedBatch$argument_1","setOffset","flattenOffset","extractOffset","stopAnimation","resetAnimation","__onAnimatedValueUpdateReceived","interpolate","animate","animation.start$argument_1","animation.start$argument_2","stopTracking","track","_updateValue","__getNativeConfig"],"mappings":"AAA;OCkD;ECE;GDO;iBEE,qBF;CDC;AIO;CJI;eKU;ECO;GDW;EEE;wDCE;ODE;GFI;EIE;GJE;EKQ;gECU;4EDC;GLG;EOS;GPK;EQQ;GRM;ESQ;GTM;EUS;GVW;EWO;GXS;EYE;GZE;EaM;GbI;EcQ;MCU;ODI;MEC;OFM;GdI;EiBK;GjBG;EkBK;GlBK;EmBE;GnBU;EoBE;GpBM;CLC"}},"type":"js/module"}]}