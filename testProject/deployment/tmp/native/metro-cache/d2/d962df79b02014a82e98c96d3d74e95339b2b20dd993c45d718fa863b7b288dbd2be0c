{"dependencies":[],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * @format\n   * \n   */\n\n  'use strict';\n\n  /**\n   * Defines a lazily evaluated property on the supplied `object`.\n   */\n  function defineLazyObjectProperty(object, name, descriptor) {\n    var get = descriptor.get;\n    var enumerable = descriptor.enumerable !== false;\n    var writable = descriptor.writable !== false;\n    var value;\n    var valueSet = false;\n    function getValue() {\n      // WORKAROUND: A weird infinite loop occurs where calling `getValue` calls\n      // `setValue` which calls `Object.defineProperty` which somehow triggers\n      // `getValue` again. Adding `valueSet` breaks this loop.\n      if (!valueSet) {\n        // Calling `get()` here can trigger an infinite loop if it fails to\n        // remove the getter on the property, which can happen when executing\n        // JS in a V8 context.  `valueSet = true` will break this loop, and\n        // sets the value of the property to undefined, until the code in `get()`\n        // finishes, at which point the property is set to the correct value.\n        valueSet = true;\n        setValue(get());\n      }\n      return value;\n    }\n    function setValue(newValue) {\n      value = newValue;\n      valueSet = true;\n      Object.defineProperty(object, name, {\n        value: newValue,\n        configurable: true,\n        enumerable: enumerable,\n        writable: writable\n      });\n    }\n    Object.defineProperty(object, name, {\n      get: getValue,\n      set: setValue,\n      configurable: true,\n      enumerable: enumerable\n    });\n  }\n  module.exports = defineLazyObjectProperty;\n});","lineCount":56,"map":[[2,2,1,0],[3,0,2,0],[4,0,3,0],[5,0,4,0],[6,0,5,0],[7,0,6,0],[8,0,7,0],[9,0,8,0],[10,0,9,0],[12,2,11,0],[12,14,11,12],[14,2,13,0],[15,0,14,0],[16,0,15,0],[17,2,16,0],[17,11,16,9,"defineLazyObjectProperty"],[17,35,16,33,"defineLazyObjectProperty"],[17,36,17,2,"object"],[17,42,17,22],[17,44,18,2,"name"],[17,48,18,14],[17,50,19,2,"descriptor"],[17,60,24,3],[17,62,25,8],[18,4,26,2],[18,8,26,9,"get"],[18,11,26,12],[18,14,26,16,"descriptor"],[18,24,26,26],[18,25,26,9,"get"],[18,28,26,12],[19,4,27,2],[19,8,27,8,"enumerable"],[19,18,27,18],[19,21,27,21,"descriptor"],[19,31,27,31],[19,32,27,32,"enumerable"],[19,42,27,42],[19,47,27,47],[19,52,27,52],[20,4,28,2],[20,8,28,8,"writable"],[20,16,28,16],[20,19,28,19,"descriptor"],[20,29,28,29],[20,30,28,30,"writable"],[20,38,28,38],[20,43,28,43],[20,48,28,48],[21,4,30,2],[21,8,30,6,"value"],[21,13,30,11],[22,4,31,2],[22,8,31,6,"valueSet"],[22,16,31,14],[22,19,31,17],[22,24,31,22],[23,4,32,2],[23,13,32,11,"getValue"],[23,21,32,19,"getValue"],[23,22,32,19],[23,24,32,25],[24,6,33,4],[25,6,34,4],[26,6,35,4],[27,6,36,4],[27,10,36,8],[27,11,36,9,"valueSet"],[27,19,36,17],[27,21,36,19],[28,8,37,6],[29,8,38,6],[30,8,39,6],[31,8,40,6],[32,8,41,6],[33,8,42,6,"valueSet"],[33,16,42,14],[33,19,42,17],[33,23,42,21],[34,8,43,6,"setValue"],[34,16,43,14],[34,17,43,15,"get"],[34,20,43,18],[34,21,43,19],[34,22,43,20],[34,23,43,21],[35,6,44,4],[36,6,45,4],[36,13,45,11,"value"],[36,18,45,16],[37,4,46,2],[38,4,47,2],[38,13,47,11,"setValue"],[38,21,47,19,"setValue"],[38,22,47,20,"newValue"],[38,30,47,31],[38,32,47,39],[39,6,48,4,"value"],[39,11,48,9],[39,14,48,12,"newValue"],[39,22,48,20],[40,6,49,4,"valueSet"],[40,14,49,12],[40,17,49,15],[40,21,49,19],[41,6,50,4,"Object"],[41,12,50,10],[41,13,50,11,"defineProperty"],[41,27,50,25],[41,28,50,26,"object"],[41,34,50,32],[41,36,50,34,"name"],[41,40,50,38],[41,42,50,40],[42,8,51,6,"value"],[42,13,51,11],[42,15,51,13,"newValue"],[42,23,51,21],[43,8,52,6,"configurable"],[43,20,52,18],[43,22,52,20],[43,26,52,24],[44,8,53,6,"enumerable"],[44,18,53,16],[44,20,53,6,"enumerable"],[44,30,53,16],[45,8,54,6,"writable"],[45,16,54,14],[45,18,54,6,"writable"],[46,6,55,4],[46,7,55,5],[46,8,55,6],[47,4,56,2],[48,4,58,2,"Object"],[48,10,58,8],[48,11,58,9,"defineProperty"],[48,25,58,23],[48,26,58,24,"object"],[48,32,58,30],[48,34,58,32,"name"],[48,38,58,36],[48,40,58,38],[49,6,59,4,"get"],[49,9,59,7],[49,11,59,9,"getValue"],[49,19,59,17],[50,6,60,4,"set"],[50,9,60,7],[50,11,60,9,"setValue"],[50,19,60,17],[51,6,61,4,"configurable"],[51,18,61,16],[51,20,61,18],[51,24,61,22],[52,6,62,4,"enumerable"],[52,16,62,14],[52,18,62,4,"enumerable"],[53,4,63,2],[53,5,63,3],[53,6,63,4],[54,2,64,0],[55,2,66,0,"module"],[55,8,66,6],[55,9,66,7,"exports"],[55,16,66,14],[55,19,66,17,"defineLazyObjectProperty"],[55,43,66,41],[56,0,66,42],[56,3]],"functionMap":{"names":["<global>","defineLazyObjectProperty","getValue","setValue"],"mappings":"AAA;ACe;ECgB;GDc;EEC;GFS;CDQ"}},"type":"js/module"}]}