{"dependencies":[],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * @format\n   * \n   */\n\n  'use strict';\n\n  // Globally Unique Immediate ID.\n  var GUIID = 1;\n\n  // A global set of the currently cleared immediates.\n  var clearedImmediates = new Set();\n\n  /**\n   * Shim the setImmediate API on top of queueMicrotask.\n   * @param {function} func Callback to be invoked before the end of the\n   * current JavaScript execution loop.\n   */\n  function setImmediate(callback) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    if (arguments.length < 1) {\n      throw new TypeError('setImmediate must be called with at least one argument (a function to call)');\n    }\n    if (typeof callback !== 'function') {\n      throw new TypeError('The first argument to setImmediate must be a function.');\n    }\n    var id = GUIID++;\n    // This is an edgey case in which the sequentially assigned ID has been\n    // \"guessed\" and \"cleared\" ahead of time, so we need to clear it up first.\n    if (clearedImmediates.has(id)) {\n      clearedImmediates.delete(id);\n    }\n\n    // $FlowFixMe[incompatible-call]\n    global.queueMicrotask(function () {\n      if (!clearedImmediates.has(id)) {\n        callback.apply(undefined, args);\n      } else {\n        // Free up the Set entry.\n        clearedImmediates.delete(id);\n      }\n    });\n    return id;\n  }\n\n  /**\n   * @param {number} immediateID The ID of the immediate to be clearred.\n   */\n  function clearImmediate(immediateID) {\n    clearedImmediates.add(immediateID);\n  }\n  var immediateShim = {\n    setImmediate: setImmediate,\n    clearImmediate: clearImmediate\n  };\n  module.exports = immediateShim;\n});","lineCount":65,"map":[[2,2,1,0],[3,0,2,0],[4,0,3,0],[5,0,4,0],[6,0,5,0],[7,0,6,0],[8,0,7,0],[9,0,8,0],[10,0,9,0],[12,2,11,0],[12,14,11,12],[14,2,13,0],[15,2,14,0],[15,6,14,4,"GUIID"],[15,11,14,9],[15,14,14,12],[15,15,14,13],[17,2,16,0],[18,2,17,0],[18,6,17,6,"clearedImmediates"],[18,23,17,36],[18,26,17,39],[18,30,17,43,"Set"],[18,33,17,46],[18,34,17,47],[18,35,17,48],[20,2,19,0],[21,0,20,0],[22,0,21,0],[23,0,22,0],[24,0,23,0],[25,2,24,0],[25,11,24,9,"setImmediate"],[25,23,24,21,"setImmediate"],[25,24,24,22,"callback"],[25,32,24,40],[25,34,24,64],[26,4,24,64],[26,13,24,64,"_len"],[26,17,24,64],[26,20,24,64,"arguments"],[26,29,24,64],[26,30,24,64,"length"],[26,36,24,64],[26,38,24,45,"args"],[26,42,24,49],[26,49,24,49,"Array"],[26,54,24,49],[26,55,24,49,"_len"],[26,59,24,49],[26,66,24,49,"_len"],[26,70,24,49],[26,81,24,49,"_key"],[26,85,24,49],[26,91,24,49,"_key"],[26,95,24,49],[26,98,24,49,"_len"],[26,102,24,49],[26,104,24,49,"_key"],[26,108,24,49],[27,6,24,45,"args"],[27,10,24,49],[27,11,24,49,"_key"],[27,15,24,49],[27,23,24,49,"arguments"],[27,32,24,49],[27,33,24,49,"_key"],[27,37,24,49],[28,4,24,49],[29,4,25,2],[29,8,25,6,"arguments"],[29,17,25,15],[29,18,25,16,"length"],[29,24,25,22],[29,27,25,25],[29,28,25,26],[29,30,25,28],[30,6,26,4],[30,12,26,10],[30,16,26,14,"TypeError"],[30,25,26,23],[30,26,27,6],[30,103,28,4],[30,104,28,5],[31,4,29,2],[32,4,30,2],[32,8,30,6],[32,15,30,13,"callback"],[32,23,30,21],[32,28,30,26],[32,38,30,36],[32,40,30,38],[33,6,31,4],[33,12,31,10],[33,16,31,14,"TypeError"],[33,25,31,23],[33,26,32,6],[33,82,33,4],[33,83,33,5],[34,4,34,2],[35,4,36,2],[35,8,36,8,"id"],[35,10,36,10],[35,13,36,13,"GUIID"],[35,18,36,18],[35,20,36,20],[36,4,37,2],[37,4,38,2],[38,4,39,2],[38,8,39,6,"clearedImmediates"],[38,25,39,23],[38,26,39,24,"has"],[38,29,39,27],[38,30,39,28,"id"],[38,32,39,30],[38,33,39,31],[38,35,39,33],[39,6,40,4,"clearedImmediates"],[39,23,40,21],[39,24,40,22,"delete"],[39,30,40,28],[39,31,40,29,"id"],[39,33,40,31],[39,34,40,32],[40,4,41,2],[42,4,43,2],[43,4,44,2,"global"],[43,10,44,8],[43,11,44,9,"queueMicrotask"],[43,25,44,23],[43,26,44,24],[43,38,44,30],[44,6,45,4],[44,10,45,8],[44,11,45,9,"clearedImmediates"],[44,28,45,26],[44,29,45,27,"has"],[44,32,45,30],[44,33,45,31,"id"],[44,35,45,33],[44,36,45,34],[44,38,45,36],[45,8,46,6,"callback"],[45,16,46,14],[45,17,46,15,"apply"],[45,22,46,20],[45,23,46,21,"undefined"],[45,32,46,30],[45,34,46,32,"args"],[45,38,46,36],[45,39,46,37],[46,6,47,4],[46,7,47,5],[46,13,47,11],[47,8,48,6],[48,8,49,6,"clearedImmediates"],[48,25,49,23],[48,26,49,24,"delete"],[48,32,49,30],[48,33,49,31,"id"],[48,35,49,33],[48,36,49,34],[49,6,50,4],[50,4,51,2],[50,5,51,3],[50,6,51,4],[51,4,53,2],[51,11,53,9,"id"],[51,13,53,11],[52,2,54,0],[54,2,56,0],[55,0,57,0],[56,0,58,0],[57,2,59,0],[57,11,59,9,"clearImmediate"],[57,25,59,23,"clearImmediate"],[57,26,59,24,"immediateID"],[57,37,59,43],[57,39,59,45],[58,4,60,2,"clearedImmediates"],[58,21,60,19],[58,22,60,20,"add"],[58,25,60,23],[58,26,60,24,"immediateID"],[58,37,60,35],[58,38,60,36],[59,2,61,0],[60,2,63,0],[60,6,63,6,"immediateShim"],[60,19,63,19],[60,22,63,22],[61,4,64,2,"setImmediate"],[61,16,64,14],[61,18,64,16,"setImmediate"],[61,30,64,28],[62,4,65,2,"clearImmediate"],[62,18,65,16],[62,20,65,18,"clearImmediate"],[63,2,66,0],[63,3,66,1],[64,2,68,0,"module"],[64,8,68,6],[64,9,68,7,"exports"],[64,16,68,14],[64,19,68,17,"immediateShim"],[64,32,68,30],[65,0,68,31],[65,3]],"functionMap":{"names":["<global>","setImmediate","global.queueMicrotask$argument_0","clearImmediate"],"mappings":"AAA;ACuB;wBCoB;GDO;CDG;AGK;CHE"}},"type":"js/module"}]}