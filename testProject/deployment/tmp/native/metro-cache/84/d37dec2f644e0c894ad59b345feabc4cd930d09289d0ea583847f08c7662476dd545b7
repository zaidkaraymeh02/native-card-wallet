{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":230,"column":0,"index":6593}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"../EventEmitter/NativeEventEmitter","data":{"asyncType":null,"locs":[{"start":{"line":10,"column":0,"index":206},"end":{"line":10,"column":68,"index":274}}],"key":"FxUYVDH3eq4FUmUOIfY0RLK75tc="}},{"name":"../Utilities/Platform","data":{"asyncType":null,"locs":[{"start":{"line":11,"column":0,"index":275},"end":{"line":11,"column":45,"index":320}}],"key":"3JpW2lByst9OohsYWa25ZOinj2I="}},{"name":"./NativeWebSocketModule","data":{"asyncType":null,"locs":[{"start":{"line":12,"column":0,"index":321},"end":{"line":12,"column":60,"index":381}}],"key":"Dj/4SJpAZslk3IS3t3drfDLHrjY="}},{"name":"base64-js","data":{"asyncType":null,"locs":[{"start":{"line":13,"column":0,"index":382},"end":{"line":13,"column":31,"index":413}}],"key":"WsVgY7Y3wTb44B4uSuqCo4p+2Ho="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  var _NativeEventEmitter = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"../EventEmitter/NativeEventEmitter\"));\n  var _Platform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"../Utilities/Platform\"));\n  var _NativeWebSocketModule = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"./NativeWebSocketModule\"));\n  var _base64Js = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"base64-js\"));\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * @format\n   */\n\n  var originalRCTWebSocketConnect = _NativeWebSocketModule.default.connect;\n  var originalRCTWebSocketSend = _NativeWebSocketModule.default.send;\n  var originalRCTWebSocketSendBinary = _NativeWebSocketModule.default.sendBinary;\n  var originalRCTWebSocketClose = _NativeWebSocketModule.default.close;\n  var eventEmitter;\n  var subscriptions;\n  var closeCallback;\n  var sendCallback;\n  var connectCallback;\n  var onOpenCallback;\n  var onMessageCallback;\n  var onErrorCallback;\n  var onCloseCallback;\n  var _isInterceptorEnabled = false;\n\n  /**\n   * A network interceptor which monkey-patches RCTWebSocketModule methods\n   * to gather all websocket network requests/responses, in order to show\n   * their information in the React Native inspector development tool.\n   */\n\n  var WebSocketInterceptor = {\n    /**\n     * Invoked when RCTWebSocketModule.close(...) is called.\n     */\n    setCloseCallback: function setCloseCallback(callback) {\n      closeCallback = callback;\n    },\n    /**\n     * Invoked when RCTWebSocketModule.send(...) or sendBinary(...) is called.\n     */\n    setSendCallback: function setSendCallback(callback) {\n      sendCallback = callback;\n    },\n    /**\n     * Invoked when RCTWebSocketModule.connect(...) is called.\n     */\n    setConnectCallback: function setConnectCallback(callback) {\n      connectCallback = callback;\n    },\n    /**\n     * Invoked when event \"websocketOpen\" happens.\n     */\n    setOnOpenCallback: function setOnOpenCallback(callback) {\n      onOpenCallback = callback;\n    },\n    /**\n     * Invoked when event \"websocketMessage\" happens.\n     */\n    setOnMessageCallback: function setOnMessageCallback(callback) {\n      onMessageCallback = callback;\n    },\n    /**\n     * Invoked when event \"websocketFailed\" happens.\n     */\n    setOnErrorCallback: function setOnErrorCallback(callback) {\n      onErrorCallback = callback;\n    },\n    /**\n     * Invoked when event \"websocketClosed\" happens.\n     */\n    setOnCloseCallback: function setOnCloseCallback(callback) {\n      onCloseCallback = callback;\n    },\n    isInterceptorEnabled: function isInterceptorEnabled() {\n      return _isInterceptorEnabled;\n    },\n    _unregisterEvents: function _unregisterEvents() {\n      subscriptions.forEach(function (e) {\n        return e.remove();\n      });\n      subscriptions = [];\n    },\n    /**\n     * Add listeners to the RCTWebSocketModule events to intercept them.\n     */\n    _registerEvents: function _registerEvents() {\n      subscriptions = [eventEmitter.addListener('websocketMessage', function (ev) {\n        if (onMessageCallback) {\n          onMessageCallback(ev.id, ev.type === 'binary' ? WebSocketInterceptor._arrayBufferToString(ev.data) : ev.data);\n        }\n      }), eventEmitter.addListener('websocketOpen', function (ev) {\n        if (onOpenCallback) {\n          onOpenCallback(ev.id);\n        }\n      }), eventEmitter.addListener('websocketClosed', function (ev) {\n        if (onCloseCallback) {\n          onCloseCallback(ev.id, {\n            code: ev.code,\n            reason: ev.reason\n          });\n        }\n      }), eventEmitter.addListener('websocketFailed', function (ev) {\n        if (onErrorCallback) {\n          onErrorCallback(ev.id, {\n            message: ev.message\n          });\n        }\n      })];\n    },\n    enableInterception: function enableInterception() {\n      if (_isInterceptorEnabled) {\n        return;\n      }\n      eventEmitter = new _NativeEventEmitter.default(\n      // T88715063: NativeEventEmitter only used this parameter on iOS. Now it uses it on all platforms, so this code was modified automatically to preserve its behavior\n      // If you want to use the native module on other platforms, please remove this condition and test its behavior\n      _Platform.default.OS !== 'ios' ? null : _NativeWebSocketModule.default);\n      WebSocketInterceptor._registerEvents();\n\n      // Override `connect` method for all RCTWebSocketModule requests\n      // to intercept the request url, protocols, options and socketId,\n      // then pass them through the `connectCallback`.\n      _NativeWebSocketModule.default.connect = function (url, protocols, options, socketId) {\n        if (connectCallback) {\n          connectCallback(url, protocols, options, socketId);\n        }\n        originalRCTWebSocketConnect.apply(this, arguments);\n      };\n\n      // Override `send` method for all RCTWebSocketModule requests to intercept\n      // the data sent, then pass them through the `sendCallback`.\n      _NativeWebSocketModule.default.send = function (data, socketId) {\n        if (sendCallback) {\n          sendCallback(data, socketId);\n        }\n        originalRCTWebSocketSend.apply(this, arguments);\n      };\n\n      // Override `sendBinary` method for all RCTWebSocketModule requests to\n      // intercept the data sent, then pass them through the `sendCallback`.\n      _NativeWebSocketModule.default.sendBinary = function (data, socketId) {\n        if (sendCallback) {\n          sendCallback(WebSocketInterceptor._arrayBufferToString(data), socketId);\n        }\n        originalRCTWebSocketSendBinary.apply(this, arguments);\n      };\n\n      // Override `close` method for all RCTWebSocketModule requests to intercept\n      // the close information, then pass them through the `closeCallback`.\n      _NativeWebSocketModule.default.close = function () {\n        if (closeCallback) {\n          if (arguments.length === 3) {\n            closeCallback(arguments[0], arguments[1], arguments[2]);\n          } else {\n            closeCallback(null, null, arguments[0]);\n          }\n        }\n        originalRCTWebSocketClose.apply(this, arguments);\n      };\n      _isInterceptorEnabled = true;\n    },\n    _arrayBufferToString: function _arrayBufferToString(data) {\n      var value = _base64Js.default.toByteArray(data).buffer;\n      if (value === undefined || value === null) {\n        return '(no value)';\n      }\n      if (typeof ArrayBuffer !== 'undefined' && typeof Uint8Array !== 'undefined' && value instanceof ArrayBuffer) {\n        return `ArrayBuffer {${String(Array.from(new Uint8Array(value)))}}`;\n      }\n      return value;\n    },\n    // Unpatch RCTWebSocketModule methods and remove the callbacks.\n    disableInterception: function disableInterception() {\n      if (!_isInterceptorEnabled) {\n        return;\n      }\n      _isInterceptorEnabled = false;\n      _NativeWebSocketModule.default.send = originalRCTWebSocketSend;\n      _NativeWebSocketModule.default.sendBinary = originalRCTWebSocketSendBinary;\n      _NativeWebSocketModule.default.close = originalRCTWebSocketClose;\n      _NativeWebSocketModule.default.connect = originalRCTWebSocketConnect;\n      connectCallback = null;\n      closeCallback = null;\n      sendCallback = null;\n      onOpenCallback = null;\n      onMessageCallback = null;\n      onCloseCallback = null;\n      onErrorCallback = null;\n      WebSocketInterceptor._unregisterEvents();\n    }\n  };\n  module.exports = WebSocketInterceptor;\n});","lineCount":199,"map":[[3,2,10,0],[3,6,10,0,"_NativeEventEmitter"],[3,25,10,0],[3,28,10,0,"_interopRequireDefault"],[3,50,10,0],[3,51,10,0,"_$$_REQUIRE"],[3,62,10,0],[3,63,10,0,"_dependencyMap"],[3,77,10,0],[4,2,11,0],[4,6,11,0,"_Platform"],[4,15,11,0],[4,18,11,0,"_interopRequireDefault"],[4,40,11,0],[4,41,11,0,"_$$_REQUIRE"],[4,52,11,0],[4,53,11,0,"_dependencyMap"],[4,67,11,0],[5,2,12,0],[5,6,12,0,"_NativeWebSocketModule"],[5,28,12,0],[5,31,12,0,"_interopRequireDefault"],[5,53,12,0],[5,54,12,0,"_$$_REQUIRE"],[5,65,12,0],[5,66,12,0,"_dependencyMap"],[5,80,12,0],[6,2,13,0],[6,6,13,0,"_base64Js"],[6,15,13,0],[6,18,13,0,"_interopRequireDefault"],[6,40,13,0],[6,41,13,0,"_$$_REQUIRE"],[6,52,13,0],[6,53,13,0,"_dependencyMap"],[6,67,13,0],[7,2,1,0],[8,0,2,0],[9,0,3,0],[10,0,4,0],[11,0,5,0],[12,0,6,0],[13,0,7,0],[14,0,8,0],[16,2,15,0],[16,6,15,6,"originalRCTWebSocketConnect"],[16,33,15,33],[16,36,15,36,"NativeWebSocketModule"],[16,66,15,57],[16,67,15,58,"connect"],[16,74,15,65],[17,2,16,0],[17,6,16,6,"originalRCTWebSocketSend"],[17,30,16,30],[17,33,16,33,"NativeWebSocketModule"],[17,63,16,54],[17,64,16,55,"send"],[17,68,16,59],[18,2,17,0],[18,6,17,6,"originalRCTWebSocketSendBinary"],[18,36,17,36],[18,39,17,39,"NativeWebSocketModule"],[18,69,17,60],[18,70,17,61,"sendBinary"],[18,80,17,71],[19,2,18,0],[19,6,18,6,"originalRCTWebSocketClose"],[19,31,18,31],[19,34,18,34,"NativeWebSocketModule"],[19,64,18,55],[19,65,18,56,"close"],[19,70,18,61],[20,2,20,0],[20,6,20,4,"eventEmitter"],[20,18,20,16],[21,2,21,0],[21,6,21,4,"subscriptions"],[21,19,21,17],[22,2,23,0],[22,6,23,4,"closeCallback"],[22,19,23,17],[23,2,24,0],[23,6,24,4,"sendCallback"],[23,18,24,16],[24,2,25,0],[24,6,25,4,"connectCallback"],[24,21,25,19],[25,2,26,0],[25,6,26,4,"onOpenCallback"],[25,20,26,18],[26,2,27,0],[26,6,27,4,"onMessageCallback"],[26,23,27,21],[27,2,28,0],[27,6,28,4,"onErrorCallback"],[27,21,28,19],[28,2,29,0],[28,6,29,4,"onCloseCallback"],[28,21,29,19],[29,2,31,0],[29,6,31,4,"isInterceptorEnabled"],[29,27,31,24],[29,30,31,27],[29,35,31,32],[31,2,33,0],[32,0,34,0],[33,0,35,0],[34,0,36,0],[35,0,37,0],[37,2,39,0],[37,6,39,6,"WebSocketInterceptor"],[37,26,39,26],[37,29,39,29],[38,4,40,2],[39,0,41,0],[40,0,42,0],[41,4,43,2,"setCloseCallback"],[41,20,43,18],[41,31,43,2,"setCloseCallback"],[41,47,43,18,"setCloseCallback"],[41,48,43,19,"callback"],[41,56,43,27],[41,58,43,29],[42,6,44,4,"closeCallback"],[42,19,44,17],[42,22,44,20,"callback"],[42,30,44,28],[43,4,45,2],[43,5,45,3],[44,4,47,2],[45,0,48,0],[46,0,49,0],[47,4,50,2,"setSendCallback"],[47,19,50,17],[47,30,50,2,"setSendCallback"],[47,45,50,17,"setSendCallback"],[47,46,50,18,"callback"],[47,54,50,26],[47,56,50,28],[48,6,51,4,"sendCallback"],[48,18,51,16],[48,21,51,19,"callback"],[48,29,51,27],[49,4,52,2],[49,5,52,3],[50,4,54,2],[51,0,55,0],[52,0,56,0],[53,4,57,2,"setConnectCallback"],[53,22,57,20],[53,33,57,2,"setConnectCallback"],[53,51,57,20,"setConnectCallback"],[53,52,57,21,"callback"],[53,60,57,29],[53,62,57,31],[54,6,58,4,"connectCallback"],[54,21,58,19],[54,24,58,22,"callback"],[54,32,58,30],[55,4,59,2],[55,5,59,3],[56,4,61,2],[57,0,62,0],[58,0,63,0],[59,4,64,2,"setOnOpenCallback"],[59,21,64,19],[59,32,64,2,"setOnOpenCallback"],[59,49,64,19,"setOnOpenCallback"],[59,50,64,20,"callback"],[59,58,64,28],[59,60,64,30],[60,6,65,4,"onOpenCallback"],[60,20,65,18],[60,23,65,21,"callback"],[60,31,65,29],[61,4,66,2],[61,5,66,3],[62,4,68,2],[63,0,69,0],[64,0,70,0],[65,4,71,2,"setOnMessageCallback"],[65,24,71,22],[65,35,71,2,"setOnMessageCallback"],[65,55,71,22,"setOnMessageCallback"],[65,56,71,23,"callback"],[65,64,71,31],[65,66,71,33],[66,6,72,4,"onMessageCallback"],[66,23,72,21],[66,26,72,24,"callback"],[66,34,72,32],[67,4,73,2],[67,5,73,3],[68,4,75,2],[69,0,76,0],[70,0,77,0],[71,4,78,2,"setOnErrorCallback"],[71,22,78,20],[71,33,78,2,"setOnErrorCallback"],[71,51,78,20,"setOnErrorCallback"],[71,52,78,21,"callback"],[71,60,78,29],[71,62,78,31],[72,6,79,4,"onErrorCallback"],[72,21,79,19],[72,24,79,22,"callback"],[72,32,79,30],[73,4,80,2],[73,5,80,3],[74,4,82,2],[75,0,83,0],[76,0,84,0],[77,4,85,2,"setOnCloseCallback"],[77,22,85,20],[77,33,85,2,"setOnCloseCallback"],[77,51,85,20,"setOnCloseCallback"],[77,52,85,21,"callback"],[77,60,85,29],[77,62,85,31],[78,6,86,4,"onCloseCallback"],[78,21,86,19],[78,24,86,22,"callback"],[78,32,86,30],[79,4,87,2],[79,5,87,3],[80,4,89,2,"isInterceptorEnabled"],[80,24,89,22],[80,35,89,2,"isInterceptorEnabled"],[80,55,89,22,"isInterceptorEnabled"],[80,56,89,22],[80,58,89,25],[81,6,90,4],[81,13,90,11,"isInterceptorEnabled"],[81,34,90,31],[82,4,91,2],[82,5,91,3],[83,4,93,2,"_unregisterEvents"],[83,21,93,19],[83,32,93,2,"_unregisterEvents"],[83,49,93,19,"_unregisterEvents"],[83,50,93,19],[83,52,93,22],[84,6,94,4,"subscriptions"],[84,19,94,17],[84,20,94,18,"forEach"],[84,27,94,25],[84,28,94,26],[84,38,94,26,"e"],[84,39,94,27],[85,8,94,27],[85,15,94,31,"e"],[85,16,94,32],[85,17,94,33,"remove"],[85,23,94,39],[85,24,94,40],[85,25,94,41],[86,6,94,41],[86,8,94,42],[87,6,95,4,"subscriptions"],[87,19,95,17],[87,22,95,20],[87,24,95,22],[88,4,96,2],[88,5,96,3],[89,4,98,2],[90,0,99,0],[91,0,100,0],[92,4,101,2,"_registerEvents"],[92,19,101,17],[92,30,101,2,"_registerEvents"],[92,45,101,17,"_registerEvents"],[92,46,101,17],[92,48,101,20],[93,6,102,4,"subscriptions"],[93,19,102,17],[93,22,102,20],[93,23,103,6,"eventEmitter"],[93,35,103,18],[93,36,103,19,"addListener"],[93,47,103,30],[93,48,103,31],[93,66,103,49],[93,68,103,51],[93,78,103,51,"ev"],[93,80,103,53],[93,82,103,57],[94,8,104,8],[94,12,104,12,"onMessageCallback"],[94,29,104,29],[94,31,104,31],[95,10,105,10,"onMessageCallback"],[95,27,105,27],[95,28,106,12,"ev"],[95,30,106,14],[95,31,106,15,"id"],[95,33,106,17],[95,35,107,12,"ev"],[95,37,107,14],[95,38,107,15,"type"],[95,42,107,19],[95,47,107,24],[95,55,107,32],[95,58,108,16,"WebSocketInterceptor"],[95,78,108,36],[95,79,108,37,"_arrayBufferToString"],[95,99,108,57],[95,100,108,58,"ev"],[95,102,108,60],[95,103,108,61,"data"],[95,107,108,65],[95,108,108,66],[95,111,109,16,"ev"],[95,113,109,18],[95,114,109,19,"data"],[95,118,110,10],[95,119,110,11],[96,8,111,8],[97,6,112,6],[97,7,112,7],[97,8,112,8],[97,10,113,6,"eventEmitter"],[97,22,113,18],[97,23,113,19,"addListener"],[97,34,113,30],[97,35,113,31],[97,50,113,46],[97,52,113,48],[97,62,113,48,"ev"],[97,64,113,50],[97,66,113,54],[98,8,114,8],[98,12,114,12,"onOpenCallback"],[98,26,114,26],[98,28,114,28],[99,10,115,10,"onOpenCallback"],[99,24,115,24],[99,25,115,25,"ev"],[99,27,115,27],[99,28,115,28,"id"],[99,30,115,30],[99,31,115,31],[100,8,116,8],[101,6,117,6],[101,7,117,7],[101,8,117,8],[101,10,118,6,"eventEmitter"],[101,22,118,18],[101,23,118,19,"addListener"],[101,34,118,30],[101,35,118,31],[101,52,118,48],[101,54,118,50],[101,64,118,50,"ev"],[101,66,118,52],[101,68,118,56],[102,8,119,8],[102,12,119,12,"onCloseCallback"],[102,27,119,27],[102,29,119,29],[103,10,120,10,"onCloseCallback"],[103,25,120,25],[103,26,120,26,"ev"],[103,28,120,28],[103,29,120,29,"id"],[103,31,120,31],[103,33,120,33],[104,12,120,34,"code"],[104,16,120,38],[104,18,120,40,"ev"],[104,20,120,42],[104,21,120,43,"code"],[104,25,120,47],[105,12,120,49,"reason"],[105,18,120,55],[105,20,120,57,"ev"],[105,22,120,59],[105,23,120,60,"reason"],[106,10,120,66],[106,11,120,67],[106,12,120,68],[107,8,121,8],[108,6,122,6],[108,7,122,7],[108,8,122,8],[108,10,123,6,"eventEmitter"],[108,22,123,18],[108,23,123,19,"addListener"],[108,34,123,30],[108,35,123,31],[108,52,123,48],[108,54,123,50],[108,64,123,50,"ev"],[108,66,123,52],[108,68,123,56],[109,8,124,8],[109,12,124,12,"onErrorCallback"],[109,27,124,27],[109,29,124,29],[110,10,125,10,"onErrorCallback"],[110,25,125,25],[110,26,125,26,"ev"],[110,28,125,28],[110,29,125,29,"id"],[110,31,125,31],[110,33,125,33],[111,12,125,34,"message"],[111,19,125,41],[111,21,125,43,"ev"],[111,23,125,45],[111,24,125,46,"message"],[112,10,125,53],[112,11,125,54],[112,12,125,55],[113,8,126,8],[114,6,127,6],[114,7,127,7],[114,8,127,8],[114,9,128,5],[115,4,129,2],[115,5,129,3],[116,4,131,2,"enableInterception"],[116,22,131,20],[116,33,131,2,"enableInterception"],[116,51,131,20,"enableInterception"],[116,52,131,20],[116,54,131,23],[117,6,132,4],[117,10,132,8,"isInterceptorEnabled"],[117,31,132,28],[117,33,132,30],[118,8,133,6],[119,6,134,4],[120,6,135,4,"eventEmitter"],[120,18,135,16],[120,21,135,19],[120,25,135,23,"NativeEventEmitter"],[120,52,135,41],[121,6,136,6],[122,6,137,6],[123,6,138,6,"Platform"],[123,23,138,14],[123,24,138,15,"OS"],[123,26,138,17],[123,31,138,22],[123,36,138,27],[123,39,138,30],[123,43,138,34],[123,46,138,37,"NativeWebSocketModule"],[123,76,139,4],[123,77,139,5],[124,6,140,4,"WebSocketInterceptor"],[124,26,140,24],[124,27,140,25,"_registerEvents"],[124,42,140,40],[124,43,140,41],[124,44,140,42],[126,6,142,4],[127,6,143,4],[128,6,144,4],[129,6,145,4,"NativeWebSocketModule"],[129,36,145,25],[129,37,145,26,"connect"],[129,44,145,33],[129,47,145,36],[129,57,146,6,"url"],[129,60,146,9],[129,62,147,6,"protocols"],[129,71,147,15],[129,73,148,6,"options"],[129,80,148,13],[129,82,149,6,"socketId"],[129,90,149,14],[129,92,150,6],[130,8,151,6],[130,12,151,10,"connectCallback"],[130,27,151,25],[130,29,151,27],[131,10,152,8,"connectCallback"],[131,25,152,23],[131,26,152,24,"url"],[131,29,152,27],[131,31,152,29,"protocols"],[131,40,152,38],[131,42,152,40,"options"],[131,49,152,47],[131,51,152,49,"socketId"],[131,59,152,57],[131,60,152,58],[132,8,153,6],[133,8,154,6,"originalRCTWebSocketConnect"],[133,35,154,33],[133,36,154,34,"apply"],[133,41,154,39],[133,42,154,40],[133,46,154,44],[133,48,154,46,"arguments"],[133,57,154,55],[133,58,154,56],[134,6,155,4],[134,7,155,5],[136,6,157,4],[137,6,158,4],[138,6,159,4,"NativeWebSocketModule"],[138,36,159,25],[138,37,159,26,"send"],[138,41,159,30],[138,44,159,33],[138,54,159,43,"data"],[138,58,159,47],[138,60,159,49,"socketId"],[138,68,159,57],[138,70,159,59],[139,8,160,6],[139,12,160,10,"sendCallback"],[139,24,160,22],[139,26,160,24],[140,10,161,8,"sendCallback"],[140,22,161,20],[140,23,161,21,"data"],[140,27,161,25],[140,29,161,27,"socketId"],[140,37,161,35],[140,38,161,36],[141,8,162,6],[142,8,163,6,"originalRCTWebSocketSend"],[142,32,163,30],[142,33,163,31,"apply"],[142,38,163,36],[142,39,163,37],[142,43,163,41],[142,45,163,43,"arguments"],[142,54,163,52],[142,55,163,53],[143,6,164,4],[143,7,164,5],[145,6,166,4],[146,6,167,4],[147,6,168,4,"NativeWebSocketModule"],[147,36,168,25],[147,37,168,26,"sendBinary"],[147,47,168,36],[147,50,168,39],[147,60,168,49,"data"],[147,64,168,53],[147,66,168,55,"socketId"],[147,74,168,63],[147,76,168,65],[148,8,169,6],[148,12,169,10,"sendCallback"],[148,24,169,22],[148,26,169,24],[149,10,170,8,"sendCallback"],[149,22,170,20],[149,23,170,21,"WebSocketInterceptor"],[149,43,170,41],[149,44,170,42,"_arrayBufferToString"],[149,64,170,62],[149,65,170,63,"data"],[149,69,170,67],[149,70,170,68],[149,72,170,70,"socketId"],[149,80,170,78],[149,81,170,79],[150,8,171,6],[151,8,172,6,"originalRCTWebSocketSendBinary"],[151,38,172,36],[151,39,172,37,"apply"],[151,44,172,42],[151,45,172,43],[151,49,172,47],[151,51,172,49,"arguments"],[151,60,172,58],[151,61,172,59],[152,6,173,4],[152,7,173,5],[154,6,175,4],[155,6,176,4],[156,6,177,4,"NativeWebSocketModule"],[156,36,177,25],[156,37,177,26,"close"],[156,42,177,31],[156,45,177,34],[156,57,177,46],[157,8,178,6],[157,12,178,10,"closeCallback"],[157,25,178,23],[157,27,178,25],[158,10,179,8],[158,14,179,12,"arguments"],[158,23,179,21],[158,24,179,22,"length"],[158,30,179,28],[158,35,179,33],[158,36,179,34],[158,38,179,36],[159,12,180,10,"closeCallback"],[159,25,180,23],[159,26,180,24,"arguments"],[159,35,180,33],[159,36,180,34],[159,37,180,35],[159,38,180,36],[159,40,180,38,"arguments"],[159,49,180,47],[159,50,180,48],[159,51,180,49],[159,52,180,50],[159,54,180,52,"arguments"],[159,63,180,61],[159,64,180,62],[159,65,180,63],[159,66,180,64],[159,67,180,65],[160,10,181,8],[160,11,181,9],[160,17,181,15],[161,12,182,10,"closeCallback"],[161,25,182,23],[161,26,182,24],[161,30,182,28],[161,32,182,30],[161,36,182,34],[161,38,182,36,"arguments"],[161,47,182,45],[161,48,182,46],[161,49,182,47],[161,50,182,48],[161,51,182,49],[162,10,183,8],[163,8,184,6],[164,8,185,6,"originalRCTWebSocketClose"],[164,33,185,31],[164,34,185,32,"apply"],[164,39,185,37],[164,40,185,38],[164,44,185,42],[164,46,185,44,"arguments"],[164,55,185,53],[164,56,185,54],[165,6,186,4],[165,7,186,5],[166,6,188,4,"isInterceptorEnabled"],[166,27,188,24],[166,30,188,27],[166,34,188,31],[167,4,189,2],[167,5,189,3],[168,4,191,2,"_arrayBufferToString"],[168,24,191,22],[168,35,191,2,"_arrayBufferToString"],[168,55,191,22,"_arrayBufferToString"],[168,56,191,23,"data"],[168,60,191,27],[168,62,191,29],[169,6,192,4],[169,10,192,10,"value"],[169,15,192,15],[169,18,192,18,"base64"],[169,35,192,24],[169,36,192,25,"toByteArray"],[169,47,192,36],[169,48,192,37,"data"],[169,52,192,41],[169,53,192,42],[169,54,192,43,"buffer"],[169,60,192,49],[170,6,193,4],[170,10,193,8,"value"],[170,15,193,13],[170,20,193,18,"undefined"],[170,29,193,27],[170,33,193,31,"value"],[170,38,193,36],[170,43,193,41],[170,47,193,45],[170,49,193,47],[171,8,194,6],[171,15,194,13],[171,27,194,25],[172,6,195,4],[173,6,196,4],[173,10,197,6],[173,17,197,13,"ArrayBuffer"],[173,28,197,24],[173,33,197,29],[173,44,197,40],[173,48,198,6],[173,55,198,13,"Uint8Array"],[173,65,198,23],[173,70,198,28],[173,81,198,39],[173,85,199,6,"value"],[173,90,199,11],[173,102,199,23,"ArrayBuffer"],[173,113,199,34],[173,115,200,6],[174,8,201,6],[174,15,201,13],[174,31,201,29,"String"],[174,37,201,35],[174,38,201,36,"Array"],[174,43,201,41],[174,44,201,42,"from"],[174,48,201,46],[174,49,201,47],[174,53,201,51,"Uint8Array"],[174,63,201,61],[174,64,201,62,"value"],[174,69,201,67],[174,70,201,68],[174,71,201,69],[174,72,201,70],[174,75,201,73],[175,6,202,4],[176,6,203,4],[176,13,203,11,"value"],[176,18,203,16],[177,4,204,2],[177,5,204,3],[178,4,206,2],[179,4,207,2,"disableInterception"],[179,23,207,21],[179,34,207,2,"disableInterception"],[179,53,207,21,"disableInterception"],[179,54,207,21],[179,56,207,24],[180,6,208,4],[180,10,208,8],[180,11,208,9,"isInterceptorEnabled"],[180,32,208,29],[180,34,208,31],[181,8,209,6],[182,6,210,4],[183,6,211,4,"isInterceptorEnabled"],[183,27,211,24],[183,30,211,27],[183,35,211,32],[184,6,212,4,"NativeWebSocketModule"],[184,36,212,25],[184,37,212,26,"send"],[184,41,212,30],[184,44,212,33,"originalRCTWebSocketSend"],[184,68,212,57],[185,6,213,4,"NativeWebSocketModule"],[185,36,213,25],[185,37,213,26,"sendBinary"],[185,47,213,36],[185,50,213,39,"originalRCTWebSocketSendBinary"],[185,80,213,69],[186,6,214,4,"NativeWebSocketModule"],[186,36,214,25],[186,37,214,26,"close"],[186,42,214,31],[186,45,214,34,"originalRCTWebSocketClose"],[186,70,214,59],[187,6,215,4,"NativeWebSocketModule"],[187,36,215,25],[187,37,215,26,"connect"],[187,44,215,33],[187,47,215,36,"originalRCTWebSocketConnect"],[187,74,215,63],[188,6,217,4,"connectCallback"],[188,21,217,19],[188,24,217,22],[188,28,217,26],[189,6,218,4,"closeCallback"],[189,19,218,17],[189,22,218,20],[189,26,218,24],[190,6,219,4,"sendCallback"],[190,18,219,16],[190,21,219,19],[190,25,219,23],[191,6,220,4,"onOpenCallback"],[191,20,220,18],[191,23,220,21],[191,27,220,25],[192,6,221,4,"onMessageCallback"],[192,23,221,21],[192,26,221,24],[192,30,221,28],[193,6,222,4,"onCloseCallback"],[193,21,222,19],[193,24,222,22],[193,28,222,26],[194,6,223,4,"onErrorCallback"],[194,21,223,19],[194,24,223,22],[194,28,223,26],[195,6,225,4,"WebSocketInterceptor"],[195,26,225,24],[195,27,225,25,"_unregisterEvents"],[195,44,225,42],[195,45,225,43],[195,46,225,44],[196,4,226,2],[197,2,227,0],[197,3,227,1],[198,2,229,0,"module"],[198,8,229,6],[198,9,229,7,"exports"],[198,16,229,14],[198,19,229,17,"WebSocketInterceptor"],[198,39,229,37],[199,0,229,38],[199,3]],"functionMap":{"names":["<global>","setCloseCallback","setSendCallback","setConnectCallback","setOnOpenCallback","setOnMessageCallback","setOnErrorCallback","setOnCloseCallback","isInterceptorEnabled","_unregisterEvents","subscriptions.forEach$argument_0","_registerEvents","eventEmitter.addListener$argument_1","enableInterception","NativeWebSocketModule.connect","NativeWebSocketModule.send","NativeWebSocketModule.sendBinary","NativeWebSocketModule.close","_arrayBufferToString","disableInterception"],"mappings":"AAA;EC0C;GDE;EEK;GFE;EGK;GHE;EIK;GJE;EKK;GLE;EMK;GNE;EOK;GPE;EQE;GRE;ESE;0BCC,eD;GTE;EWK;mDCE;ODS;gDCC;ODI;kDCC;ODI;kDCC;ODI;GXE;EaE;oCCc;KDU;iCEI;KFK;uCGI;KHK;kCII;KJS;GbG;EkBE;GlBa;EmBG;GnBmB"}},"type":"js/module"}]}