{"dependencies":[],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.createEntriesIterator = createEntriesIterator;\n  exports.createKeyIterator = createKeyIterator;\n  exports.createValueIterator = createValueIterator;\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * @format\n   * \n   */\n\n  /**\n   * This definition is different from the current built-in type `$ArrayLike`\n   * provided by Flow, in that this is an interface and that one is an object.\n   *\n   * The difference is important because, when using objects, Flow thinks\n   * a `length` property would be copied over when using the spread operator,\n   * which is incorrect.\n   */\n\n  function* createValueIterator(arrayLike) {\n    for (var i = 0; i < arrayLike.length; i++) {\n      yield arrayLike[i];\n    }\n  }\n  function* createKeyIterator(arrayLike) {\n    for (var i = 0; i < arrayLike.length; i++) {\n      yield i;\n    }\n  }\n  function* createEntriesIterator(arrayLike) {\n    for (var i = 0; i < arrayLike.length; i++) {\n      yield [i, arrayLike[i]];\n    }\n  }\n});","lineCount":42,"map":[[8,2,1,0],[9,0,2,0],[10,0,3,0],[11,0,4,0],[12,0,5,0],[13,0,6,0],[14,0,7,0],[15,0,8,0],[16,0,9,0],[18,2,11,0],[19,0,12,0],[20,0,13,0],[21,0,14,0],[22,0,15,0],[23,0,16,0],[24,0,17,0],[25,0,18,0],[27,2,26,7],[27,12,26,17,"createValueIterator"],[27,31,26,36,"createValueIterator"],[27,32,26,40,"arrayLike"],[27,41,26,63],[27,43,26,78],[28,4,27,2],[28,9,27,7],[28,13,27,11,"i"],[28,14,27,12],[28,17,27,15],[28,18,27,16],[28,20,27,18,"i"],[28,21,27,19],[28,24,27,22,"arrayLike"],[28,33,27,31],[28,34,27,32,"length"],[28,40,27,38],[28,42,27,40,"i"],[28,43,27,41],[28,45,27,43],[28,47,27,45],[29,6,28,4],[29,12,28,10,"arrayLike"],[29,21,28,19],[29,22,28,20,"i"],[29,23,28,21],[29,24,28,22],[30,4,29,2],[31,2,30,0],[32,2,32,7],[32,12,32,17,"createKeyIterator"],[32,29,32,34,"createKeyIterator"],[32,30,33,2,"arrayLike"],[32,39,33,25],[32,41,34,20],[33,4,35,2],[33,9,35,7],[33,13,35,11,"i"],[33,14,35,12],[33,17,35,15],[33,18,35,16],[33,20,35,18,"i"],[33,21,35,19],[33,24,35,22,"arrayLike"],[33,33,35,31],[33,34,35,32,"length"],[33,40,35,38],[33,42,35,40,"i"],[33,43,35,41],[33,45,35,43],[33,47,35,45],[34,6,36,4],[34,12,36,10,"i"],[34,13,36,11],[35,4,37,2],[36,2,38,0],[37,2,40,7],[37,12,40,17,"createEntriesIterator"],[37,33,40,38,"createEntriesIterator"],[37,34,41,2,"arrayLike"],[37,43,41,25],[37,45,42,25],[38,4,43,2],[38,9,43,7],[38,13,43,11,"i"],[38,14,43,12],[38,17,43,15],[38,18,43,16],[38,20,43,18,"i"],[38,21,43,19],[38,24,43,22,"arrayLike"],[38,33,43,31],[38,34,43,32,"length"],[38,40,43,38],[38,42,43,40,"i"],[38,43,43,41],[38,45,43,43],[38,47,43,45],[39,6,44,4],[39,12,44,10],[39,13,44,11,"i"],[39,14,44,12],[39,16,44,14,"arrayLike"],[39,25,44,23],[39,26,44,24,"i"],[39,27,44,25],[39,28,44,26],[39,29,44,27],[40,4,45,2],[41,2,46,0],[42,0,46,1],[42,3]],"functionMap":{"names":["<global>","createValueIterator","createKeyIterator","createEntriesIterator"],"mappings":"AAA;OCyB;CDI;OEE;CFM;OGE;CHM"}},"type":"js/module"}]}