{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":212,"column":0,"index":6808}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"../vendor/emitter/EventEmitter","data":{"asyncType":null,"locs":[{"start":{"line":13,"column":0,"index":268},"end":{"line":13,"column":58,"index":326}}],"key":"fgDwi/IrVIcBdLV47qHthWsoTIw="}},{"name":"../Utilities/infoLog","data":{"asyncType":null,"locs":[{"start":{"line":16,"column":16,"index":409},"end":{"line":16,"column":47,"index":440}},{"start":{"line":16,"column":16,"index":409},"end":{"line":16,"column":47,"index":440}}],"key":"te7FMDljSHoh4Ptoq0ebhkaWbSA="}},{"name":"invariant","data":{"asyncType":null,"locs":[{"start":{"line":18,"column":18,"index":502},"end":{"line":18,"column":38,"index":522}}],"key":"Fzi/BpZws2YooIGJ9b6u0HJtuks="}},{"name":"./TaskQueue","data":{"asyncType":null,"locs":[{"start":{"line":17,"column":18,"index":460},"end":{"line":17,"column":40,"index":482}}],"key":"1ceiWyFBQZw9eNp9+Dpb/TWmHXc="}},{"name":"../BatchedBridge/BatchedBridge","data":{"asyncType":null,"locs":[{"start":{"line":15,"column":22,"index":350},"end":{"line":15,"column":63,"index":391}}],"key":"MvuFHLrr66uWZvuv+I/rfsDBNt0="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  var _EventEmitter = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"../vendor/emitter/EventEmitter\")); /**\n                                                                                                                 * Copyright (c) Meta Platforms, Inc. and affiliates.\n                                                                                                                 *\n                                                                                                                 * This source code is licensed under the MIT license found in the\n                                                                                                                 * LICENSE file in the root directory of this source tree.\n                                                                                                                 *\n                                                                                                                 * @format\n                                                                                                                 * \n                                                                                                                 */\n\n  var _emitter = new _EventEmitter.default();\n  var DEBUG_DELAY = 0;\n  var DEBUG = false;\n\n  /**\n   * InteractionManager allows long-running work to be scheduled after any\n   * interactions/animations have completed. In particular, this allows JavaScript\n   * animations to run smoothly.\n   *\n   * Applications can schedule tasks to run after interactions with the following:\n   *\n   * ```\n   * InteractionManager.runAfterInteractions(() => {\n   *   // ...long-running synchronous task...\n   * });\n   * ```\n   *\n   * Compare this to other scheduling alternatives:\n   *\n   * - requestAnimationFrame(): for code that animates a view over time.\n   * - setImmediate/setTimeout(): run code later, note this may delay animations.\n   * - runAfterInteractions(): run code later, without delaying active animations.\n   *\n   * The touch handling system considers one or more active touches to be an\n   * 'interaction' and will delay `runAfterInteractions()` callbacks until all\n   * touches have ended or been cancelled.\n   *\n   * InteractionManager also allows applications to register animations by\n   * creating an interaction 'handle' on animation start, and clearing it upon\n   * completion:\n   *\n   * ```\n   * var handle = InteractionManager.createInteractionHandle();\n   * // run animation... (`runAfterInteractions` tasks are queued)\n   * // later, on animation completion:\n   * InteractionManager.clearInteractionHandle(handle);\n   * // queued tasks run if all handles were cleared\n   * ```\n   *\n   * `runAfterInteractions` takes either a plain callback function, or a\n   * `PromiseTask` object with a `gen` method that returns a `Promise`.  If a\n   * `PromiseTask` is supplied, then it is fully resolved (including asynchronous\n   * dependencies that also schedule more tasks via `runAfterInteractions`) before\n   * starting on the next task that might have been queued up synchronously\n   * earlier.\n   *\n   * By default, queued tasks are executed together in a loop in one\n   * `setImmediate` batch. If `setDeadline` is called with a positive number, then\n   * tasks will only be executed until the deadline (in terms of js event loop run\n   * time) approaches, at which point execution will yield via setTimeout,\n   * allowing events such as touches to start interactions and block queued tasks\n   * from executing, making apps more responsive.\n   */\n  var InteractionManager = {\n    Events: {\n      interactionStart: 'interactionStart',\n      interactionComplete: 'interactionComplete'\n    },\n    /**\n     * Schedule a function to run after all interactions have completed. Returns a cancellable\n     * \"promise\".\n     */\n    runAfterInteractions: function runAfterInteractions(task) {\n      var tasks = [];\n      var promise = new Promise(function (resolve) {\n        _scheduleUpdate();\n        if (task) {\n          tasks.push(task);\n        }\n        tasks.push({\n          run: resolve,\n          name: 'resolve ' + (task && task.name || '?')\n        });\n        _taskQueue.enqueueTasks(tasks);\n      });\n      return {\n        // $FlowFixMe[method-unbinding] added when improving typing for this parameters\n        then: promise.then.bind(promise),\n        cancel: function cancel() {\n          _taskQueue.cancelTasks(tasks);\n        }\n      };\n    },\n    /**\n     * Notify manager that an interaction has started.\n     */\n    createInteractionHandle: function createInteractionHandle() {\n      DEBUG && _$$_REQUIRE(_dependencyMap[2], \"../Utilities/infoLog\")('InteractionManager: create interaction handle');\n      _scheduleUpdate();\n      var handle = ++_inc;\n      _addInteractionSet.add(handle);\n      return handle;\n    },\n    /**\n     * Notify manager that an interaction has completed.\n     */\n    clearInteractionHandle: function clearInteractionHandle(handle) {\n      DEBUG && _$$_REQUIRE(_dependencyMap[2], \"../Utilities/infoLog\")('InteractionManager: clear interaction handle');\n      _$$_REQUIRE(_dependencyMap[3], \"invariant\")(!!handle, 'InteractionManager: Must provide a handle to clear.');\n      _scheduleUpdate();\n      _addInteractionSet.delete(handle);\n      _deleteInteractionSet.add(handle);\n    },\n    // $FlowFixMe[method-unbinding] added when improving typing for this parameters\n    addListener: _emitter.addListener.bind(_emitter),\n    /**\n     * A positive number will use setTimeout to schedule any tasks after the\n     * eventLoopRunningTime hits the deadline value, otherwise all tasks will be\n     * executed in one setImmediate batch (default).\n     */\n    setDeadline: function setDeadline(deadline) {\n      _deadline = deadline;\n    }\n  };\n  var _interactionSet = new Set();\n  var _addInteractionSet = new Set();\n  var _deleteInteractionSet = new Set();\n  var _taskQueue = new (_$$_REQUIRE(_dependencyMap[4], \"./TaskQueue\"))({\n    onMoreTasks: _scheduleUpdate\n  });\n  var _nextUpdateHandle = 0;\n  var _inc = 0;\n  var _deadline = -1;\n\n  /**\n   * Schedule an asynchronous update to the interaction state.\n   */\n  function _scheduleUpdate() {\n    if (!_nextUpdateHandle) {\n      if (_deadline > 0) {\n        _nextUpdateHandle = setTimeout(_processUpdate, 0 + DEBUG_DELAY);\n      } else {\n        _nextUpdateHandle = setImmediate(_processUpdate);\n      }\n    }\n  }\n\n  /**\n   * Notify listeners, process queue, etc\n   */\n  function _processUpdate() {\n    _nextUpdateHandle = 0;\n    var interactionCount = _interactionSet.size;\n    _addInteractionSet.forEach(function (handle) {\n      return _interactionSet.add(handle);\n    });\n    _deleteInteractionSet.forEach(function (handle) {\n      return _interactionSet.delete(handle);\n    });\n    var nextInteractionCount = _interactionSet.size;\n    if (interactionCount !== 0 && nextInteractionCount === 0) {\n      // transition from 1+ --> 0 interactions\n      _emitter.emit(InteractionManager.Events.interactionComplete);\n    } else if (interactionCount === 0 && nextInteractionCount !== 0) {\n      // transition from 0 --> 1+ interactions\n      _emitter.emit(InteractionManager.Events.interactionStart);\n    }\n\n    // process the queue regardless of a transition\n    if (nextInteractionCount === 0) {\n      while (_taskQueue.hasTasksToProcess()) {\n        _taskQueue.processNext();\n        if (_deadline > 0 && _$$_REQUIRE(_dependencyMap[5], \"../BatchedBridge/BatchedBridge\").getEventLoopRunningTime() >= _deadline) {\n          // Hit deadline before processing all tasks, so process more later.\n          _scheduleUpdate();\n          break;\n        }\n      }\n    }\n    _addInteractionSet.clear();\n    _deleteInteractionSet.clear();\n  }\n  module.exports = InteractionManager;\n});","lineCount":186,"map":[[3,2,13,0],[3,6,13,0,"_EventEmitter"],[3,19,13,0],[3,22,13,0,"_interopRequireDefault"],[3,44,13,0],[3,45,13,0,"_$$_REQUIRE"],[3,56,13,0],[3,57,13,0,"_dependencyMap"],[3,71,13,0],[3,111,13,58],[3,112,1,0],[4,0,2,0],[5,0,3,0],[6,0,4,0],[7,0,5,0],[8,0,6,0],[9,0,7,0],[10,0,8,0],[11,0,9,0],[13,2,22,0],[13,6,22,6,"_emitter"],[13,14,22,14],[13,17,22,17],[13,21,22,21,"EventEmitter"],[13,42,22,33],[13,43,25,3],[13,44,25,4],[14,2,27,0],[14,6,27,6,"DEBUG_DELAY"],[14,17,27,20],[14,20,27,23],[14,21,27,24],[15,2,28,0],[15,6,28,6,"DEBUG"],[15,11,28,18],[15,14,28,21],[15,19,28,26],[17,2,30,0],[18,0,31,0],[19,0,32,0],[20,0,33,0],[21,0,34,0],[22,0,35,0],[23,0,36,0],[24,0,37,0],[25,0,38,0],[26,0,39,0],[27,0,40,0],[28,0,41,0],[29,0,42,0],[30,0,43,0],[31,0,44,0],[32,0,45,0],[33,0,46,0],[34,0,47,0],[35,0,48,0],[36,0,49,0],[37,0,50,0],[38,0,51,0],[39,0,52,0],[40,0,53,0],[41,0,54,0],[42,0,55,0],[43,0,56,0],[44,0,57,0],[45,0,58,0],[46,0,59,0],[47,0,60,0],[48,0,61,0],[49,0,62,0],[50,0,63,0],[51,0,64,0],[52,0,65,0],[53,0,66,0],[54,0,67,0],[55,0,68,0],[56,0,69,0],[57,0,70,0],[58,0,71,0],[59,0,72,0],[60,0,73,0],[61,0,74,0],[62,0,75,0],[63,0,76,0],[64,0,77,0],[65,0,78,0],[66,2,79,0],[66,6,79,6,"InteractionManager"],[66,24,79,24],[66,27,79,27],[67,4,80,2,"Events"],[67,10,80,8],[67,12,80,10],[68,6,81,4,"interactionStart"],[68,22,81,20],[68,24,81,22],[68,42,81,40],[69,6,82,4,"interactionComplete"],[69,25,82,23],[69,27,82,25],[70,4,83,2],[70,5,83,3],[71,4,85,2],[72,0,86,0],[73,0,87,0],[74,0,88,0],[75,4,89,2,"runAfterInteractions"],[75,24,89,22],[75,35,89,2,"runAfterInteractions"],[75,55,89,22,"runAfterInteractions"],[75,56,89,23,"task"],[75,60,89,34],[75,62,96,4],[76,6,97,4],[76,10,97,10,"tasks"],[76,15,97,28],[76,18,97,31],[76,20,97,33],[77,6,98,4],[77,10,98,10,"promise"],[77,17,98,17],[77,20,98,20],[77,24,98,24,"Promise"],[77,31,98,31],[77,32,98,32],[77,42,98,33,"resolve"],[77,49,98,52],[77,51,98,57],[78,8,99,6,"_scheduleUpdate"],[78,23,99,21],[78,24,99,22],[78,25,99,23],[79,8,100,6],[79,12,100,10,"task"],[79,16,100,14],[79,18,100,16],[80,10,101,8,"tasks"],[80,15,101,13],[80,16,101,14,"push"],[80,20,101,18],[80,21,101,19,"task"],[80,25,101,23],[80,26,101,24],[81,8,102,6],[82,8,103,6,"tasks"],[82,13,103,11],[82,14,103,12,"push"],[82,18,103,16],[82,19,103,17],[83,10,104,8,"run"],[83,13,104,11],[83,15,104,13,"resolve"],[83,22,104,20],[84,10,105,8,"name"],[84,14,105,12],[84,16,105,14],[84,26,105,24],[84,30,105,29,"task"],[84,34,105,33],[84,38,105,37,"task"],[84,42,105,41],[84,43,105,42,"name"],[84,47,105,46],[84,51,105,51],[84,54,105,54],[85,8,106,6],[85,9,106,7],[85,10,106,8],[86,8,107,6,"_taskQueue"],[86,18,107,16],[86,19,107,17,"enqueueTasks"],[86,31,107,29],[86,32,107,30,"tasks"],[86,37,107,35],[86,38,107,36],[87,6,108,4],[87,7,108,5],[87,8,108,6],[88,6,109,4],[88,13,109,11],[89,8,110,6],[90,8,111,6,"then"],[90,12,111,10],[90,14,111,12,"promise"],[90,21,111,19],[90,22,111,20,"then"],[90,26,111,24],[90,27,111,25,"bind"],[90,31,111,29],[90,32,111,30,"promise"],[90,39,111,37],[90,40,111,38],[91,8,112,6,"cancel"],[91,14,112,12],[91,16,112,14],[91,25,112,6,"cancel"],[91,31,112,12,"cancel"],[91,32,112,12],[91,34,112,26],[92,10,113,8,"_taskQueue"],[92,20,113,18],[92,21,113,19,"cancelTasks"],[92,32,113,30],[92,33,113,31,"tasks"],[92,38,113,36],[92,39,113,37],[93,8,114,6],[94,6,115,4],[94,7,115,5],[95,4,116,2],[95,5,116,3],[96,4,118,2],[97,0,119,0],[98,0,120,0],[99,4,121,2,"createInteractionHandle"],[99,27,121,25],[99,38,121,2,"createInteractionHandle"],[99,61,121,25,"createInteractionHandle"],[99,62,121,25],[99,64,121,36],[100,6,122,4,"DEBUG"],[100,11,122,9],[100,15,122,13,"_$$_REQUIRE"],[100,26,122,13],[100,27,122,13,"_dependencyMap"],[100,41,122,13],[100,70,122,21],[100,117,122,68],[100,118,122,69],[101,6,123,4,"_scheduleUpdate"],[101,21,123,19],[101,22,123,20],[101,23,123,21],[102,6,124,4],[102,10,124,10,"handle"],[102,16,124,16],[102,19,124,19],[102,21,124,21,"_inc"],[102,25,124,25],[103,6,125,4,"_addInteractionSet"],[103,24,125,22],[103,25,125,23,"add"],[103,28,125,26],[103,29,125,27,"handle"],[103,35,125,33],[103,36,125,34],[104,6,126,4],[104,13,126,11,"handle"],[104,19,126,17],[105,4,127,2],[105,5,127,3],[106,4,129,2],[107,0,130,0],[108,0,131,0],[109,4,132,2,"clearInteractionHandle"],[109,26,132,24],[109,37,132,2,"clearInteractionHandle"],[109,59,132,24,"clearInteractionHandle"],[109,60,132,25,"handle"],[109,66,132,39],[109,68,132,41],[110,6,133,4,"DEBUG"],[110,11,133,9],[110,15,133,13,"_$$_REQUIRE"],[110,26,133,13],[110,27,133,13,"_dependencyMap"],[110,41,133,13],[110,70,133,21],[110,116,133,67],[110,117,133,68],[111,6,134,4,"_$$_REQUIRE"],[111,17,134,4],[111,18,134,4,"_dependencyMap"],[111,32,134,4],[111,50,134,14],[111,51,134,15],[111,52,134,16,"handle"],[111,58,134,22],[111,60,134,24],[111,113,134,77],[111,114,134,78],[112,6,135,4,"_scheduleUpdate"],[112,21,135,19],[112,22,135,20],[112,23,135,21],[113,6,136,4,"_addInteractionSet"],[113,24,136,22],[113,25,136,23,"delete"],[113,31,136,29],[113,32,136,30,"handle"],[113,38,136,36],[113,39,136,37],[114,6,137,4,"_deleteInteractionSet"],[114,27,137,25],[114,28,137,26,"add"],[114,31,137,29],[114,32,137,30,"handle"],[114,38,137,36],[114,39,137,37],[115,4,138,2],[115,5,138,3],[116,4,140,2],[117,4,141,2,"addListener"],[117,15,141,13],[117,17,141,16,"_emitter"],[117,25,141,24],[117,26,141,25,"addListener"],[117,37,141,36],[117,38,141,37,"bind"],[117,42,141,41],[117,43,141,42,"_emitter"],[117,51,141,50],[117,52,141,64],[118,4,143,2],[119,0,144,0],[120,0,145,0],[121,0,146,0],[122,0,147,0],[123,4,148,2,"setDeadline"],[123,15,148,13],[123,26,148,2,"setDeadline"],[123,37,148,13,"setDeadline"],[123,38,148,14,"deadline"],[123,46,148,30],[123,48,148,32],[124,6,149,4,"_deadline"],[124,15,149,13],[124,18,149,16,"deadline"],[124,26,149,24],[125,4,150,2],[126,2,151,0],[126,3,151,1],[127,2,153,0],[127,6,153,6,"_interactionSet"],[127,21,153,21],[127,24,153,24],[127,28,153,28,"Set"],[127,31,153,31],[127,32,153,49],[127,33,153,50],[128,2,154,0],[128,6,154,6,"_addInteractionSet"],[128,24,154,24],[128,27,154,27],[128,31,154,31,"Set"],[128,34,154,34],[128,35,154,52],[128,36,154,53],[129,2,155,0],[129,6,155,6,"_deleteInteractionSet"],[129,27,155,27],[129,30,155,30],[129,34,155,34,"Set"],[129,37,155,37],[129,38,155,46],[129,39,155,47],[130,2,156,0],[130,6,156,6,"_taskQueue"],[130,16,156,16],[130,19,156,19],[130,24,156,19,"_$$_REQUIRE"],[130,35,156,19],[130,36,156,19,"_dependencyMap"],[130,50,156,19],[130,71,156,33],[131,4,156,34,"onMoreTasks"],[131,15,156,45],[131,17,156,47,"_scheduleUpdate"],[132,2,156,62],[132,3,156,63],[132,4,156,64],[133,2,157,0],[133,6,157,4,"_nextUpdateHandle"],[133,23,157,45],[133,26,157,48],[133,27,157,49],[134,2,158,0],[134,6,158,4,"_inc"],[134,10,158,8],[134,13,158,11],[134,14,158,12],[135,2,159,0],[135,6,159,4,"_deadline"],[135,15,159,13],[135,18,159,16],[135,19,159,17],[135,20,159,18],[137,2,161,0],[138,0,162,0],[139,0,163,0],[140,2,164,0],[140,11,164,9,"_scheduleUpdate"],[140,26,164,24,"_scheduleUpdate"],[140,27,164,24],[140,29,164,27],[141,4,165,2],[141,8,165,6],[141,9,165,7,"_nextUpdateHandle"],[141,26,165,24],[141,28,165,26],[142,6,166,4],[142,10,166,8,"_deadline"],[142,19,166,17],[142,22,166,20],[142,23,166,21],[142,25,166,23],[143,8,167,6,"_nextUpdateHandle"],[143,25,167,23],[143,28,167,26,"setTimeout"],[143,38,167,36],[143,39,167,37,"_processUpdate"],[143,53,167,51],[143,55,167,53],[143,56,167,54],[143,59,167,57,"DEBUG_DELAY"],[143,70,167,68],[143,71,167,69],[144,6,168,4],[144,7,168,5],[144,13,168,11],[145,8,169,6,"_nextUpdateHandle"],[145,25,169,23],[145,28,169,26,"setImmediate"],[145,40,169,38],[145,41,169,39,"_processUpdate"],[145,55,169,53],[145,56,169,54],[146,6,170,4],[147,4,171,2],[148,2,172,0],[150,2,174,0],[151,0,175,0],[152,0,176,0],[153,2,177,0],[153,11,177,9,"_processUpdate"],[153,25,177,23,"_processUpdate"],[153,26,177,23],[153,28,177,26],[154,4,178,2,"_nextUpdateHandle"],[154,21,178,19],[154,24,178,22],[154,25,178,23],[155,4,180,2],[155,8,180,8,"interactionCount"],[155,24,180,24],[155,27,180,27,"_interactionSet"],[155,42,180,42],[155,43,180,43,"size"],[155,47,180,47],[156,4,181,2,"_addInteractionSet"],[156,22,181,20],[156,23,181,21,"forEach"],[156,30,181,28],[156,31,181,29],[156,41,181,29,"handle"],[156,47,181,35],[157,6,181,35],[157,13,181,39,"_interactionSet"],[157,28,181,54],[157,29,181,55,"add"],[157,32,181,58],[157,33,181,59,"handle"],[157,39,181,65],[157,40,181,66],[158,4,181,66],[158,6,181,67],[159,4,182,2,"_deleteInteractionSet"],[159,25,182,23],[159,26,182,24,"forEach"],[159,33,182,31],[159,34,182,32],[159,44,182,32,"handle"],[159,50,182,38],[160,6,182,38],[160,13,182,42,"_interactionSet"],[160,28,182,57],[160,29,182,58,"delete"],[160,35,182,64],[160,36,182,65,"handle"],[160,42,182,71],[160,43,182,72],[161,4,182,72],[161,6,182,73],[162,4,183,2],[162,8,183,8,"nextInteractionCount"],[162,28,183,28],[162,31,183,31,"_interactionSet"],[162,46,183,46],[162,47,183,47,"size"],[162,51,183,51],[163,4,185,2],[163,8,185,6,"interactionCount"],[163,24,185,22],[163,29,185,27],[163,30,185,28],[163,34,185,32,"nextInteractionCount"],[163,54,185,52],[163,59,185,57],[163,60,185,58],[163,62,185,60],[164,6,186,4],[165,6,187,4,"_emitter"],[165,14,187,12],[165,15,187,13,"emit"],[165,19,187,17],[165,20,187,18,"InteractionManager"],[165,38,187,36],[165,39,187,37,"Events"],[165,45,187,43],[165,46,187,44,"interactionComplete"],[165,65,187,63],[165,66,187,64],[166,4,188,2],[166,5,188,3],[166,11,188,9],[166,15,188,13,"interactionCount"],[166,31,188,29],[166,36,188,34],[166,37,188,35],[166,41,188,39,"nextInteractionCount"],[166,61,188,59],[166,66,188,64],[166,67,188,65],[166,69,188,67],[167,6,189,4],[168,6,190,4,"_emitter"],[168,14,190,12],[168,15,190,13,"emit"],[168,19,190,17],[168,20,190,18,"InteractionManager"],[168,38,190,36],[168,39,190,37,"Events"],[168,45,190,43],[168,46,190,44,"interactionStart"],[168,62,190,60],[168,63,190,61],[169,4,191,2],[171,4,193,2],[172,4,194,2],[172,8,194,6,"nextInteractionCount"],[172,28,194,26],[172,33,194,31],[172,34,194,32],[172,36,194,34],[173,6,195,4],[173,13,195,11,"_taskQueue"],[173,23,195,21],[173,24,195,22,"hasTasksToProcess"],[173,41,195,39],[173,42,195,40],[173,43,195,41],[173,45,195,43],[174,8,196,6,"_taskQueue"],[174,18,196,16],[174,19,196,17,"processNext"],[174,30,196,28],[174,31,196,29],[174,32,196,30],[175,8,197,6],[175,12,198,8,"_deadline"],[175,21,198,17],[175,24,198,20],[175,25,198,21],[175,29,199,8,"_$$_REQUIRE"],[175,40,199,8],[175,41,199,8,"_dependencyMap"],[175,55,199,8],[175,94,199,22,"getEventLoopRunningTime"],[175,117,199,45],[175,118,199,46],[175,119,199,47],[175,123,199,51,"_deadline"],[175,132,199,60],[175,134,200,8],[176,10,201,8],[177,10,202,8,"_scheduleUpdate"],[177,25,202,23],[177,26,202,24],[177,27,202,25],[178,10,203,8],[179,8,204,6],[180,6,205,4],[181,4,206,2],[182,4,207,2,"_addInteractionSet"],[182,22,207,20],[182,23,207,21,"clear"],[182,28,207,26],[182,29,207,27],[182,30,207,28],[183,4,208,2,"_deleteInteractionSet"],[183,25,208,23],[183,26,208,24,"clear"],[183,31,208,29],[183,32,208,30],[183,33,208,31],[184,2,209,0],[185,2,211,0,"module"],[185,8,211,6],[185,9,211,7,"exports"],[185,16,211,14],[185,19,211,17,"InteractionManager"],[185,37,211,35],[186,0,211,36],[186,3]],"functionMap":{"names":["<global>","runAfterInteractions","Promise$argument_0","cancel","createInteractionHandle","clearInteractionHandle","setDeadline","_scheduleUpdate","_processUpdate","_addInteractionSet.forEach$argument_0","_deleteInteractionSet.forEach$argument_0"],"mappings":"AAA;ECwF;gCCS;KDU;cEI;OFE;GDE;EIK;GJM;EKK;GLM;EMU;GNE;AOc;CPQ;AQK;6BCI,qCD;gCEC,wCF;CR2B"}},"type":"js/module"}]}