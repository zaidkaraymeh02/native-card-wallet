{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":222,"column":0,"index":6980}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":222,"column":0,"index":6980}}],"key":"ohGilxjVqjyE1GooDVDt9OYg9x0="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":222,"column":0,"index":6980}}],"key":"V6GYoXnblvuuGHJNMy7MHyaunsU="}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":222,"column":0,"index":6980}}],"key":"rcd0dMwf8BS2g+8U1wyhIOxtYEo="}},{"name":"@babel/runtime/helpers/get","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":222,"column":0,"index":6980}}],"key":"qjFFB5GnNNadLKzlHyZes/u71/A="}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":222,"column":0,"index":6980}}],"key":"4pxOr+e+5cSZAdeEKxSt3F7LoKY="}},{"name":"@babel/runtime/helpers/inherits","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":222,"column":0,"index":6980}}],"key":"EDnOjopp9yNVawSzfBRsy2dq5dM="}},{"name":"./gesture","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":68,"index":68}}],"key":"rijS9WvIw33qqKul2343YfpqKYE="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.PanGesture = void 0;\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n  var _get2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/get\"));\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/getPrototypeOf\"));\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/inherits\"));\n  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }\n  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\n  function changeEventCalculator(current, previous) {\n    'worklet';\n\n    var changePayload;\n    if (previous === undefined) {\n      changePayload = {\n        changeX: current.translationX,\n        changeY: current.translationY\n      };\n    } else {\n      changePayload = {\n        changeX: current.translationX - previous.translationX,\n        changeY: current.translationY - previous.translationY\n      };\n    }\n    return Object.assign({}, current, changePayload);\n  }\n  var PanGesture = exports.PanGesture = /*#__PURE__*/function (_ContinousBaseGesture) {\n    function PanGesture() {\n      var _this;\n      (0, _classCallCheck2.default)(this, PanGesture);\n      _this = _callSuper(this, PanGesture);\n      _this.config = {};\n      _this.handlerName = 'PanGestureHandler';\n      return _this;\n    }\n\n    /**\n     * Range along Y axis (in points) where fingers travels without activation of gesture.\n     * @param offset\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pan-gesture#activeoffsetyvalue-number--number\n     */\n    (0, _inherits2.default)(PanGesture, _ContinousBaseGesture);\n    return (0, _createClass2.default)(PanGesture, [{\n      key: \"activeOffsetY\",\n      value: function activeOffsetY(offset) {\n        if (Array.isArray(offset)) {\n          this.config.activeOffsetYStart = offset[0];\n          this.config.activeOffsetYEnd = offset[1];\n        } else if (offset < 0) {\n          this.config.activeOffsetYStart = offset;\n        } else {\n          this.config.activeOffsetYEnd = offset;\n        }\n        return this;\n      }\n\n      /**\n       * Range along X axis (in points) where fingers travels without activation of gesture.\n       * @param offset\n       * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pan-gesture#activeoffsetxvalue-number--number\n       */\n    }, {\n      key: \"activeOffsetX\",\n      value: function activeOffsetX(offset) {\n        if (Array.isArray(offset)) {\n          this.config.activeOffsetXStart = offset[0];\n          this.config.activeOffsetXEnd = offset[1];\n        } else if (offset < 0) {\n          this.config.activeOffsetXStart = offset;\n        } else {\n          this.config.activeOffsetXEnd = offset;\n        }\n        return this;\n      }\n\n      /**\n       * When the finger moves outside this range (in points) along Y axis and gesture hasn't yet activated it will fail recognizing the gesture.\n       * @param offset\n       * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pan-gesture#failoffsetyvalue-number--number\n       */\n    }, {\n      key: \"failOffsetY\",\n      value: function failOffsetY(offset) {\n        if (Array.isArray(offset)) {\n          this.config.failOffsetYStart = offset[0];\n          this.config.failOffsetYEnd = offset[1];\n        } else if (offset < 0) {\n          this.config.failOffsetYStart = offset;\n        } else {\n          this.config.failOffsetYEnd = offset;\n        }\n        return this;\n      }\n\n      /**\n       * When the finger moves outside this range (in points) along X axis and gesture hasn't yet activated it will fail recognizing the gesture.\n       * @param offset\n       * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pan-gesture#failoffsetxvalue-number--number\n       */\n    }, {\n      key: \"failOffsetX\",\n      value: function failOffsetX(offset) {\n        if (Array.isArray(offset)) {\n          this.config.failOffsetXStart = offset[0];\n          this.config.failOffsetXEnd = offset[1];\n        } else if (offset < 0) {\n          this.config.failOffsetXStart = offset;\n        } else {\n          this.config.failOffsetXEnd = offset;\n        }\n        return this;\n      }\n\n      /**\n       * A number of fingers that is required to be placed before gesture can activate. Should be a higher or equal to 0 integer.\n       * @param minPointers\n       */\n    }, {\n      key: \"minPointers\",\n      value: function minPointers(_minPointers) {\n        this.config.minPointers = _minPointers;\n        return this;\n      }\n\n      /**\n       * When the given number of fingers is placed on the screen and gesture hasn't yet activated it will fail recognizing the gesture.\n       * Should be a higher or equal to 0 integer.\n       * @param maxPointers\n       */\n    }, {\n      key: \"maxPointers\",\n      value: function maxPointers(_maxPointers) {\n        this.config.maxPointers = _maxPointers;\n        return this;\n      }\n\n      /**\n       * Minimum distance the finger (or multiple finger) need to travel before the gesture activates.\n       * Expressed in points.\n       * @param distance\n       */\n    }, {\n      key: \"minDistance\",\n      value: function minDistance(distance) {\n        this.config.minDist = distance;\n        return this;\n      }\n\n      /**\n       * Minimum velocity the finger has to reach in order to activate handler.\n       * @param velocity\n       */\n    }, {\n      key: \"minVelocity\",\n      value: function minVelocity(velocity) {\n        this.config.minVelocity = velocity;\n        return this;\n      }\n\n      /**\n       * Minimum velocity along X axis the finger has to reach in order to activate handler.\n       * @param velocity\n       */\n    }, {\n      key: \"minVelocityX\",\n      value: function minVelocityX(velocity) {\n        this.config.minVelocityX = velocity;\n        return this;\n      }\n\n      /**\n       * Minimum velocity along Y axis the finger has to reach in order to activate handler.\n       * @param velocity\n       */\n    }, {\n      key: \"minVelocityY\",\n      value: function minVelocityY(velocity) {\n        this.config.minVelocityY = velocity;\n        return this;\n      }\n\n      /**\n       * #### Android only\n       * Android, by default, will calculate translation values based on the position of the leading pointer (the first one that was placed on the screen).\n       * This modifier allows that behavior to be changed to the one that is default on iOS - the averaged position of all active pointers will be used to calculate the translation values.\n       * @param value\n       */\n    }, {\n      key: \"averageTouches\",\n      value: function averageTouches(value) {\n        this.config.avgTouches = value;\n        return this;\n      }\n\n      /**\n       * #### iOS only\n       * Enables two-finger gestures on supported devices, for example iPads with trackpads.\n       * @param value\n       * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pan-gesture/#enabletrackpadtwofingergesturevalue-boolean-ios-only\n       */\n    }, {\n      key: \"enableTrackpadTwoFingerGesture\",\n      value: function enableTrackpadTwoFingerGesture(value) {\n        this.config.enableTrackpadTwoFingerGesture = value;\n        return this;\n      }\n\n      /**\n       * Duration in milliseconds of the LongPress gesture before Pan is allowed to activate.\n       * @param duration\n       * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pan-gesture/#activateafterlongpressduration-number\n       */\n    }, {\n      key: \"activateAfterLongPress\",\n      value: function activateAfterLongPress(duration) {\n        this.config.activateAfterLongPress = duration;\n        return this;\n      }\n    }, {\n      key: \"onChange\",\n      value: function onChange(callback) {\n        // @ts-ignore TS being overprotective, PanGestureHandlerEventPayload is Record\n        this.handlers.changeEventCalculator = changeEventCalculator;\n        return (0, _get2.default)((0, _getPrototypeOf2.default)(PanGesture.prototype), \"onChange\", this).call(this, callback);\n      }\n    }]);\n  }(_$$_REQUIRE(_dependencyMap[7], \"./gesture\").ContinousBaseGesture);\n});","lineCount":233,"map":[[15,2,11,0],[15,11,11,9,"changeEventCalculator"],[15,32,11,30,"changeEventCalculator"],[15,33,12,2,"current"],[15,40,12,60],[15,42,13,2,"previous"],[15,50,13,62],[15,52,14,2],[16,4,15,2],[16,13,15,11],[18,4,16,2],[18,8,16,6,"changePayload"],[18,21,16,49],[19,4,17,2],[19,8,17,6,"previous"],[19,16,17,14],[19,21,17,19,"undefined"],[19,30,17,28],[19,32,17,30],[20,6,18,4,"changePayload"],[20,19,18,17],[20,22,18,20],[21,8,19,6,"changeX"],[21,15,19,13],[21,17,19,15,"current"],[21,24,19,22],[21,25,19,23,"translationX"],[21,37,19,35],[22,8,20,6,"changeY"],[22,15,20,13],[22,17,20,15,"current"],[22,24,20,22],[22,25,20,23,"translationY"],[23,6,21,4],[23,7,21,5],[24,4,22,2],[24,5,22,3],[24,11,22,9],[25,6,23,4,"changePayload"],[25,19,23,17],[25,22,23,20],[26,8,24,6,"changeX"],[26,15,24,13],[26,17,24,15,"current"],[26,24,24,22],[26,25,24,23,"translationX"],[26,37,24,35],[26,40,24,38,"previous"],[26,48,24,46],[26,49,24,47,"translationX"],[26,61,24,59],[27,8,25,6,"changeY"],[27,15,25,13],[27,17,25,15,"current"],[27,24,25,22],[27,25,25,23,"translationY"],[27,37,25,35],[27,40,25,38,"previous"],[27,48,25,46],[27,49,25,47,"translationY"],[28,6,26,4],[28,7,26,5],[29,4,27,2],[30,4,29,2],[30,11,29,2,"Object"],[30,17,29,2],[30,18,29,2,"assign"],[30,24,29,2],[30,29,29,14,"current"],[30,36,29,21],[30,38,29,26,"changePayload"],[30,51,29,39],[31,2,30,0],[32,2,30,1],[32,6,32,13,"PanGesture"],[32,16,32,23],[32,19,32,23,"exports"],[32,26,32,23],[32,27,32,23,"PanGesture"],[32,37,32,23],[32,63,32,23,"_ContinousBaseGesture"],[32,84,32,23],[33,4,38,2],[33,13,38,2,"PanGesture"],[33,24,38,2],[33,26,38,16],[34,6,38,16],[34,10,38,16,"_this"],[34,15,38,16],[35,6,38,16],[35,10,38,16,"_classCallCheck2"],[35,26,38,16],[35,27,38,16,"default"],[35,34,38,16],[35,42,38,16,"PanGesture"],[35,52,38,16],[36,6,39,4,"_this"],[36,11,39,4],[36,14,39,4,"_callSuper"],[36,24,39,4],[36,31,39,4,"PanGesture"],[36,41,39,4],[37,6,39,12,"_this"],[37,11,39,12],[37,12,36,9,"config"],[37,18,36,15],[37,21,36,56],[37,22,36,57],[37,23,36,58],[38,6,41,4,"_this"],[38,11,41,4],[38,12,41,9,"handlerName"],[38,23,41,20],[38,26,41,23],[38,45,41,42],[39,6,41,43],[39,13,41,43,"_this"],[39,18,41,43],[40,4,42,2],[42,4,44,2],[43,0,45,0],[44,0,46,0],[45,0,47,0],[46,0,48,0],[47,4,44,2],[47,8,44,2,"_inherits2"],[47,18,44,2],[47,19,44,2,"default"],[47,26,44,2],[47,28,44,2,"PanGesture"],[47,38,44,2],[47,40,44,2,"_ContinousBaseGesture"],[47,61,44,2],[48,4,44,2],[48,15,44,2,"_createClass2"],[48,28,44,2],[48,29,44,2,"default"],[48,36,44,2],[48,38,44,2,"PanGesture"],[48,48,44,2],[49,6,44,2,"key"],[49,9,44,2],[50,6,44,2,"value"],[50,11,44,2],[50,13,49,2],[50,22,49,2,"activeOffsetY"],[50,35,49,15,"activeOffsetY"],[50,36,50,4,"offset"],[50,42,50,75],[50,44,51,4],[51,8,52,4],[51,12,52,8,"Array"],[51,17,52,13],[51,18,52,14,"isArray"],[51,25,52,21],[51,26,52,22,"offset"],[51,32,52,28],[51,33,52,29],[51,35,52,31],[52,10,53,6],[52,14,53,10],[52,15,53,11,"config"],[52,21,53,17],[52,22,53,18,"activeOffsetYStart"],[52,40,53,36],[52,43,53,39,"offset"],[52,49,53,45],[52,50,53,46],[52,51,53,47],[52,52,53,48],[53,10,54,6],[53,14,54,10],[53,15,54,11,"config"],[53,21,54,17],[53,22,54,18,"activeOffsetYEnd"],[53,38,54,34],[53,41,54,37,"offset"],[53,47,54,43],[53,48,54,44],[53,49,54,45],[53,50,54,46],[54,8,55,4],[54,9,55,5],[54,15,55,11],[54,19,55,15,"offset"],[54,25,55,21],[54,28,55,24],[54,29,55,25],[54,31,55,27],[55,10,56,6],[55,14,56,10],[55,15,56,11,"config"],[55,21,56,17],[55,22,56,18,"activeOffsetYStart"],[55,40,56,36],[55,43,56,39,"offset"],[55,49,56,45],[56,8,57,4],[56,9,57,5],[56,15,57,11],[57,10,58,6],[57,14,58,10],[57,15,58,11,"config"],[57,21,58,17],[57,22,58,18,"activeOffsetYEnd"],[57,38,58,34],[57,41,58,37,"offset"],[57,47,58,43],[58,8,59,4],[59,8,60,4],[59,15,60,11],[59,19,60,15],[60,6,61,2],[62,6,63,2],[63,0,64,0],[64,0,65,0],[65,0,66,0],[66,0,67,0],[67,4,63,2],[68,6,63,2,"key"],[68,9,63,2],[69,6,63,2,"value"],[69,11,63,2],[69,13,68,2],[69,22,68,2,"activeOffsetX"],[69,35,68,15,"activeOffsetX"],[69,36,69,4,"offset"],[69,42,69,75],[69,44,70,4],[70,8,71,4],[70,12,71,8,"Array"],[70,17,71,13],[70,18,71,14,"isArray"],[70,25,71,21],[70,26,71,22,"offset"],[70,32,71,28],[70,33,71,29],[70,35,71,31],[71,10,72,6],[71,14,72,10],[71,15,72,11,"config"],[71,21,72,17],[71,22,72,18,"activeOffsetXStart"],[71,40,72,36],[71,43,72,39,"offset"],[71,49,72,45],[71,50,72,46],[71,51,72,47],[71,52,72,48],[72,10,73,6],[72,14,73,10],[72,15,73,11,"config"],[72,21,73,17],[72,22,73,18,"activeOffsetXEnd"],[72,38,73,34],[72,41,73,37,"offset"],[72,47,73,43],[72,48,73,44],[72,49,73,45],[72,50,73,46],[73,8,74,4],[73,9,74,5],[73,15,74,11],[73,19,74,15,"offset"],[73,25,74,21],[73,28,74,24],[73,29,74,25],[73,31,74,27],[74,10,75,6],[74,14,75,10],[74,15,75,11,"config"],[74,21,75,17],[74,22,75,18,"activeOffsetXStart"],[74,40,75,36],[74,43,75,39,"offset"],[74,49,75,45],[75,8,76,4],[75,9,76,5],[75,15,76,11],[76,10,77,6],[76,14,77,10],[76,15,77,11,"config"],[76,21,77,17],[76,22,77,18,"activeOffsetXEnd"],[76,38,77,34],[76,41,77,37,"offset"],[76,47,77,43],[77,8,78,4],[78,8,79,4],[78,15,79,11],[78,19,79,15],[79,6,80,2],[81,6,82,2],[82,0,83,0],[83,0,84,0],[84,0,85,0],[85,0,86,0],[86,4,82,2],[87,6,82,2,"key"],[87,9,82,2],[88,6,82,2,"value"],[88,11,82,2],[88,13,87,2],[88,22,87,2,"failOffsetY"],[88,33,87,13,"failOffsetY"],[88,34,88,4,"offset"],[88,40,88,71],[88,42,89,4],[89,8,90,4],[89,12,90,8,"Array"],[89,17,90,13],[89,18,90,14,"isArray"],[89,25,90,21],[89,26,90,22,"offset"],[89,32,90,28],[89,33,90,29],[89,35,90,31],[90,10,91,6],[90,14,91,10],[90,15,91,11,"config"],[90,21,91,17],[90,22,91,18,"failOffsetYStart"],[90,38,91,34],[90,41,91,37,"offset"],[90,47,91,43],[90,48,91,44],[90,49,91,45],[90,50,91,46],[91,10,92,6],[91,14,92,10],[91,15,92,11,"config"],[91,21,92,17],[91,22,92,18,"failOffsetYEnd"],[91,36,92,32],[91,39,92,35,"offset"],[91,45,92,41],[91,46,92,42],[91,47,92,43],[91,48,92,44],[92,8,93,4],[92,9,93,5],[92,15,93,11],[92,19,93,15,"offset"],[92,25,93,21],[92,28,93,24],[92,29,93,25],[92,31,93,27],[93,10,94,6],[93,14,94,10],[93,15,94,11,"config"],[93,21,94,17],[93,22,94,18,"failOffsetYStart"],[93,38,94,34],[93,41,94,37,"offset"],[93,47,94,43],[94,8,95,4],[94,9,95,5],[94,15,95,11],[95,10,96,6],[95,14,96,10],[95,15,96,11,"config"],[95,21,96,17],[95,22,96,18,"failOffsetYEnd"],[95,36,96,32],[95,39,96,35,"offset"],[95,45,96,41],[96,8,97,4],[97,8,98,4],[97,15,98,11],[97,19,98,15],[98,6,99,2],[100,6,101,2],[101,0,102,0],[102,0,103,0],[103,0,104,0],[104,0,105,0],[105,4,101,2],[106,6,101,2,"key"],[106,9,101,2],[107,6,101,2,"value"],[107,11,101,2],[107,13,106,2],[107,22,106,2,"failOffsetX"],[107,33,106,13,"failOffsetX"],[107,34,107,4,"offset"],[107,40,107,71],[107,42,108,4],[108,8,109,4],[108,12,109,8,"Array"],[108,17,109,13],[108,18,109,14,"isArray"],[108,25,109,21],[108,26,109,22,"offset"],[108,32,109,28],[108,33,109,29],[108,35,109,31],[109,10,110,6],[109,14,110,10],[109,15,110,11,"config"],[109,21,110,17],[109,22,110,18,"failOffsetXStart"],[109,38,110,34],[109,41,110,37,"offset"],[109,47,110,43],[109,48,110,44],[109,49,110,45],[109,50,110,46],[110,10,111,6],[110,14,111,10],[110,15,111,11,"config"],[110,21,111,17],[110,22,111,18,"failOffsetXEnd"],[110,36,111,32],[110,39,111,35,"offset"],[110,45,111,41],[110,46,111,42],[110,47,111,43],[110,48,111,44],[111,8,112,4],[111,9,112,5],[111,15,112,11],[111,19,112,15,"offset"],[111,25,112,21],[111,28,112,24],[111,29,112,25],[111,31,112,27],[112,10,113,6],[112,14,113,10],[112,15,113,11,"config"],[112,21,113,17],[112,22,113,18,"failOffsetXStart"],[112,38,113,34],[112,41,113,37,"offset"],[112,47,113,43],[113,8,114,4],[113,9,114,5],[113,15,114,11],[114,10,115,6],[114,14,115,10],[114,15,115,11,"config"],[114,21,115,17],[114,22,115,18,"failOffsetXEnd"],[114,36,115,32],[114,39,115,35,"offset"],[114,45,115,41],[115,8,116,4],[116,8,117,4],[116,15,117,11],[116,19,117,15],[117,6,118,2],[119,6,120,2],[120,0,121,0],[121,0,122,0],[122,0,123,0],[123,4,120,2],[124,6,120,2,"key"],[124,9,120,2],[125,6,120,2,"value"],[125,11,120,2],[125,13,124,2],[125,22,124,2,"minPointers"],[125,33,124,13,"minPointers"],[125,34,124,14,"minPointers"],[125,46,124,33],[125,48,124,35],[126,8,125,4],[126,12,125,8],[126,13,125,9,"config"],[126,19,125,15],[126,20,125,16,"minPointers"],[126,31,125,27],[126,34,125,30,"minPointers"],[126,46,125,41],[127,8,126,4],[127,15,126,11],[127,19,126,15],[128,6,127,2],[130,6,129,2],[131,0,130,0],[132,0,131,0],[133,0,132,0],[134,0,133,0],[135,4,129,2],[136,6,129,2,"key"],[136,9,129,2],[137,6,129,2,"value"],[137,11,129,2],[137,13,134,2],[137,22,134,2,"maxPointers"],[137,33,134,13,"maxPointers"],[137,34,134,14,"maxPointers"],[137,46,134,33],[137,48,134,35],[138,8,135,4],[138,12,135,8],[138,13,135,9,"config"],[138,19,135,15],[138,20,135,16,"maxPointers"],[138,31,135,27],[138,34,135,30,"maxPointers"],[138,46,135,41],[139,8,136,4],[139,15,136,11],[139,19,136,15],[140,6,137,2],[142,6,139,2],[143,0,140,0],[144,0,141,0],[145,0,142,0],[146,0,143,0],[147,4,139,2],[148,6,139,2,"key"],[148,9,139,2],[149,6,139,2,"value"],[149,11,139,2],[149,13,144,2],[149,22,144,2,"minDistance"],[149,33,144,13,"minDistance"],[149,34,144,14,"distance"],[149,42,144,30],[149,44,144,32],[150,8,145,4],[150,12,145,8],[150,13,145,9,"config"],[150,19,145,15],[150,20,145,16,"minDist"],[150,27,145,23],[150,30,145,26,"distance"],[150,38,145,34],[151,8,146,4],[151,15,146,11],[151,19,146,15],[152,6,147,2],[154,6,149,2],[155,0,150,0],[156,0,151,0],[157,0,152,0],[158,4,149,2],[159,6,149,2,"key"],[159,9,149,2],[160,6,149,2,"value"],[160,11,149,2],[160,13,153,2],[160,22,153,2,"minVelocity"],[160,33,153,13,"minVelocity"],[160,34,153,14,"velocity"],[160,42,153,30],[160,44,153,32],[161,8,154,4],[161,12,154,8],[161,13,154,9,"config"],[161,19,154,15],[161,20,154,16,"minVelocity"],[161,31,154,27],[161,34,154,30,"velocity"],[161,42,154,38],[162,8,155,4],[162,15,155,11],[162,19,155,15],[163,6,156,2],[165,6,158,2],[166,0,159,0],[167,0,160,0],[168,0,161,0],[169,4,158,2],[170,6,158,2,"key"],[170,9,158,2],[171,6,158,2,"value"],[171,11,158,2],[171,13,162,2],[171,22,162,2,"minVelocityX"],[171,34,162,14,"minVelocityX"],[171,35,162,15,"velocity"],[171,43,162,31],[171,45,162,33],[172,8,163,4],[172,12,163,8],[172,13,163,9,"config"],[172,19,163,15],[172,20,163,16,"minVelocityX"],[172,32,163,28],[172,35,163,31,"velocity"],[172,43,163,39],[173,8,164,4],[173,15,164,11],[173,19,164,15],[174,6,165,2],[176,6,167,2],[177,0,168,0],[178,0,169,0],[179,0,170,0],[180,4,167,2],[181,6,167,2,"key"],[181,9,167,2],[182,6,167,2,"value"],[182,11,167,2],[182,13,171,2],[182,22,171,2,"minVelocityY"],[182,34,171,14,"minVelocityY"],[182,35,171,15,"velocity"],[182,43,171,31],[182,45,171,33],[183,8,172,4],[183,12,172,8],[183,13,172,9,"config"],[183,19,172,15],[183,20,172,16,"minVelocityY"],[183,32,172,28],[183,35,172,31,"velocity"],[183,43,172,39],[184,8,173,4],[184,15,173,11],[184,19,173,15],[185,6,174,2],[187,6,176,2],[188,0,177,0],[189,0,178,0],[190,0,179,0],[191,0,180,0],[192,0,181,0],[193,4,176,2],[194,6,176,2,"key"],[194,9,176,2],[195,6,176,2,"value"],[195,11,176,2],[195,13,182,2],[195,22,182,2,"averageTouches"],[195,36,182,16,"averageTouches"],[195,37,182,17,"value"],[195,42,182,31],[195,44,182,33],[196,8,183,4],[196,12,183,8],[196,13,183,9,"config"],[196,19,183,15],[196,20,183,16,"avgTouches"],[196,30,183,26],[196,33,183,29,"value"],[196,38,183,34],[197,8,184,4],[197,15,184,11],[197,19,184,15],[198,6,185,2],[200,6,187,2],[201,0,188,0],[202,0,189,0],[203,0,190,0],[204,0,191,0],[205,0,192,0],[206,4,187,2],[207,6,187,2,"key"],[207,9,187,2],[208,6,187,2,"value"],[208,11,187,2],[208,13,193,2],[208,22,193,2,"enableTrackpadTwoFingerGesture"],[208,52,193,32,"enableTrackpadTwoFingerGesture"],[208,53,193,33,"value"],[208,58,193,47],[208,60,193,49],[209,8,194,4],[209,12,194,8],[209,13,194,9,"config"],[209,19,194,15],[209,20,194,16,"enableTrackpadTwoFingerGesture"],[209,50,194,46],[209,53,194,49,"value"],[209,58,194,54],[210,8,195,4],[210,15,195,11],[210,19,195,15],[211,6,196,2],[213,6,198,2],[214,0,199,0],[215,0,200,0],[216,0,201,0],[217,0,202,0],[218,4,198,2],[219,6,198,2,"key"],[219,9,198,2],[220,6,198,2,"value"],[220,11,198,2],[220,13,203,2],[220,22,203,2,"activateAfterLongPress"],[220,44,203,24,"activateAfterLongPress"],[220,45,203,25,"duration"],[220,53,203,41],[220,55,203,43],[221,8,204,4],[221,12,204,8],[221,13,204,9,"config"],[221,19,204,15],[221,20,204,16,"activateAfterLongPress"],[221,42,204,38],[221,45,204,41,"duration"],[221,53,204,49],[222,8,205,4],[222,15,205,11],[222,19,205,15],[223,6,206,2],[224,4,206,3],[225,6,206,3,"key"],[225,9,206,3],[226,6,206,3,"value"],[226,11,206,3],[226,13,208,2],[226,22,208,2,"onChange"],[226,30,208,10,"onChange"],[226,31,209,4,"callback"],[226,39,213,13],[226,41,214,4],[227,8,215,4],[228,8,216,4],[228,12,216,8],[228,13,216,9,"handlers"],[228,21,216,17],[228,22,216,18,"changeEventCalculator"],[228,43,216,39],[228,46,216,42,"changeEventCalculator"],[228,67,216,63],[229,8,217,4],[229,19,217,4,"_get2"],[229,24,217,4],[229,25,217,4,"default"],[229,32,217,4],[229,38,217,4,"_getPrototypeOf2"],[229,54,217,4],[229,55,217,4,"default"],[229,62,217,4],[229,64,217,4,"PanGesture"],[229,74,217,4],[229,75,217,4,"prototype"],[229,84,217,4],[229,105,217,4,"call"],[229,109,217,4],[229,116,217,26,"callback"],[229,124,217,34],[230,6,218,2],[231,4,218,3],[232,2,218,3],[232,4,32,32,"ContinousBaseGesture"],[232,34,32,32],[232,35,32,32,"ContinousBaseGesture"],[232,68,32,52],[233,0,32,52],[233,3]],"functionMap":{"names":["<global>","changeEventCalculator","PanGesture","PanGesture#constructor","PanGesture#activeOffsetY","PanGesture#activeOffsetX","PanGesture#failOffsetY","PanGesture#failOffsetX","PanGesture#minPointers","PanGesture#maxPointers","PanGesture#minDistance","PanGesture#minVelocity","PanGesture#minVelocityX","PanGesture#minVelocityY","PanGesture#averageTouches","PanGesture#enableTrackpadTwoFingerGesture","PanGesture#activateAfterLongPress","PanGesture#onChange"],"mappings":"AAA;ACU;CDmB;OEE;ECM;GDI;EEO;GFY;EGO;GHY;EIO;GJY;EKO;GLY;EMM;GNG;EOO;GPG;EQO;GRG;ESM;GTG;EUM;GVG;EWM;GXG;EYQ;GZG;EaQ;GbG;EcO;GdG;EeE;GfU;CFC"}},"type":"js/module"}]}