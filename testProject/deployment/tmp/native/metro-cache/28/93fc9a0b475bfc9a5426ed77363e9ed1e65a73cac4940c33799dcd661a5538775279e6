{"dependencies":[{"name":"./ExceptionsManager","data":{"asyncType":null,"locs":[{"start":{"line":15,"column":0,"index":290},"end":{"line":15,"column":68,"index":358}},{"start":{"line":15,"column":0,"index":290},"end":{"line":15,"column":68,"index":358}},{"start":{"line":15,"column":0,"index":290},"end":{"line":15,"column":68,"index":358}},{"start":{"line":15,"column":0,"index":290},"end":{"line":15,"column":68,"index":358}},{"start":{"line":15,"column":0,"index":290},"end":{"line":15,"column":68,"index":358}},{"start":{"line":15,"column":0,"index":290},"end":{"line":15,"column":68,"index":358}},{"start":{"line":15,"column":0,"index":290},"end":{"line":15,"column":68,"index":358}},{"start":{"line":15,"column":0,"index":290},"end":{"line":15,"column":68,"index":358}}],"key":"dSfct/lO94rdoUbWE4YwKKwr2E8="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * @format\n   * \n   */\n\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.onCaughtError = onCaughtError;\n  exports.onRecoverableError = onRecoverableError;\n  exports.onUncaughtError = onUncaughtError;\n  function onUncaughtError(errorValue, errorInfo) {\n    var error;\n\n    // Typically, `errorValue` should be an error. However, other values such as\n    // strings (or even null) are sometimes thrown.\n    if (errorValue instanceof Error) {\n      /* $FlowFixMe[class-object-subtyping] added when improving typing for\n       * this parameters */\n      error = errorValue;\n    } else if (typeof errorValue === 'string') {\n      /* $FlowFixMe[class-object-subtyping] added when improving typing for\n       * this parameters */\n      error = new (_$$_REQUIRE(_dependencyMap[0], \"./ExceptionsManager\").SyntheticError)(errorValue);\n    } else {\n      /* $FlowFixMe[class-object-subtyping] added when improving typing for\n       * this parameters */\n      error = new (_$$_REQUIRE(_dependencyMap[0], \"./ExceptionsManager\").SyntheticError)('Unspecified error');\n    }\n    try {\n      // $FlowFixMe[incompatible-use] this is in try/catch.\n      error.componentStack = errorInfo.componentStack;\n      error.isComponentError = true;\n    } catch (_unused) {\n      // Ignored.\n    }\n\n    // Uncaught errors are fatal.\n    (0, _$$_REQUIRE(_dependencyMap[0], \"./ExceptionsManager\").handleException)(error, true);\n  }\n  function onCaughtError(errorValue, errorInfo) {\n    var error;\n\n    // Typically, `errorValue` should be an error. However, other values such as\n    // strings (or even null) are sometimes thrown.\n    if (errorValue instanceof Error) {\n      /* $FlowFixMe[class-object-subtyping] added when improving typing for\n       * this parameters */\n      error = errorValue;\n    } else if (typeof errorValue === 'string') {\n      /* $FlowFixMe[class-object-subtyping] added when improving typing for\n       * this parameters */\n      error = new (_$$_REQUIRE(_dependencyMap[0], \"./ExceptionsManager\").SyntheticError)(errorValue);\n    } else {\n      /* $FlowFixMe[class-object-subtyping] added when improving typing for\n       * this parameters */\n      error = new (_$$_REQUIRE(_dependencyMap[0], \"./ExceptionsManager\").SyntheticError)('Unspecified error');\n    }\n    try {\n      // $FlowFixMe[incompatible-use] this is in try/catch.\n      error.componentStack = errorInfo.componentStack;\n      error.isComponentError = true;\n    } catch (_unused2) {\n      // Ignored.\n    }\n\n    // Caught errors are not fatal.\n    (0, _$$_REQUIRE(_dependencyMap[0], \"./ExceptionsManager\").handleException)(error, false);\n  }\n  function onRecoverableError(errorValue, errorInfo) {\n    var error;\n\n    // Typically, `errorValue` should be an error. However, other values such as\n    // strings (or even null) are sometimes thrown.\n    if (errorValue instanceof Error) {\n      /* $FlowFixMe[class-object-subtyping] added when improving typing for\n       * this parameters */\n      error = errorValue;\n    } else if (typeof errorValue === 'string') {\n      /* $FlowFixMe[class-object-subtyping] added when improving typing for\n       * this parameters */\n      error = new (_$$_REQUIRE(_dependencyMap[0], \"./ExceptionsManager\").SyntheticError)(errorValue);\n    } else {\n      /* $FlowFixMe[class-object-subtyping] added when improving typing for\n       * this parameters */\n      error = new (_$$_REQUIRE(_dependencyMap[0], \"./ExceptionsManager\").SyntheticError)('Unspecified error');\n    }\n    try {\n      // $FlowFixMe[incompatible-use] this is in try/catch.\n      error.componentStack = errorInfo.componentStack;\n      error.isComponentError = true;\n    } catch (_unused3) {\n      // Ignored.\n    }\n\n    // Recoverable errors should only be warnings.\n    // This will make it a soft error in LogBox.\n    // TODO: improve the logging for recoverable errors in prod.\n    console.warn(error);\n  }\n});","lineCount":109,"map":[[2,2,1,0],[3,0,2,0],[4,0,3,0],[5,0,4,0],[6,0,5,0],[7,0,6,0],[8,0,7,0],[9,0,8,0],[10,0,9,0],[12,2,11,0],[12,14,11,12],[14,2,11,13,"Object"],[14,8,11,13],[14,9,11,13,"defineProperty"],[14,23,11,13],[14,24,11,13,"exports"],[14,31,11,13],[15,4,11,13,"value"],[15,9,11,13],[16,2,11,13],[17,2,11,13,"exports"],[17,9,11,13],[17,10,11,13,"onCaughtError"],[17,23,11,13],[17,26,11,13,"onCaughtError"],[17,39,11,13],[18,2,11,13,"exports"],[18,9,11,13],[18,10,11,13,"onRecoverableError"],[18,28,11,13],[18,31,11,13,"onRecoverableError"],[18,49,11,13],[19,2,11,13,"exports"],[19,9,11,13],[19,10,11,13,"onUncaughtError"],[19,25,11,13],[19,28,11,13,"onUncaughtError"],[19,43,11,13],[20,2,23,7],[20,11,23,16,"onUncaughtError"],[20,26,23,31,"onUncaughtError"],[20,27,23,32,"errorValue"],[20,37,23,49],[20,39,23,51,"errorInfo"],[20,48,23,71],[20,50,23,79],[21,4,24,2],[21,8,24,6,"error"],[21,13,24,11],[23,4,26,2],[24,4,27,2],[25,4,28,2],[25,8,28,6,"errorValue"],[25,18,28,16],[25,30,28,28,"Error"],[25,35,28,33],[25,37,28,35],[26,6,29,4],[27,0,30,0],[28,6,31,4,"error"],[28,11,31,9],[28,14,31,13,"errorValue"],[28,24,31,39],[29,4,32,2],[29,5,32,3],[29,11,32,9],[29,15,32,13],[29,22,32,20,"errorValue"],[29,32,32,30],[29,37,32,35],[29,45,32,43],[29,47,32,45],[30,6,33,4],[31,0,34,0],[32,6,35,4,"error"],[32,11,35,9],[32,14,35,13],[32,19,35,17,"SyntheticError"],[32,49,35,17],[32,50,35,17,"SyntheticError"],[32,87,35,31],[32,89,35,32,"errorValue"],[32,99,35,42],[32,100,35,59],[33,4,36,2],[33,5,36,3],[33,11,36,9],[34,6,37,4],[35,0,38,0],[36,6,39,4,"error"],[36,11,39,9],[36,14,39,13],[36,19,39,17,"SyntheticError"],[36,49,39,17],[36,50,39,17,"SyntheticError"],[36,87,39,31],[36,89,39,32],[36,108,39,51],[36,109,39,68],[37,4,40,2],[38,4,41,2],[38,8,41,6],[39,6,42,4],[40,6,43,4,"error"],[40,11,43,9],[40,12,43,10,"componentStack"],[40,26,43,24],[40,29,43,27,"errorInfo"],[40,38,43,36],[40,39,43,37,"componentStack"],[40,53,43,51],[41,6,44,4,"error"],[41,11,44,9],[41,12,44,10,"isComponentError"],[41,28,44,26],[41,31,44,29],[41,35,44,33],[42,4,45,2],[42,5,45,3],[42,6,45,4],[42,13,45,4,"_unused"],[42,20,45,4],[42,22,45,10],[43,6,46,4],[44,4,46,4],[46,4,49,2],[47,4,50,2],[47,8,50,2,"handleException"],[47,38,50,2],[47,39,50,2,"handleException"],[47,77,50,17],[47,79,50,18,"error"],[47,84,50,23],[47,86,50,25],[47,90,50,29],[47,91,50,30],[48,2,51,0],[49,2,53,7],[49,11,53,16,"onCaughtError"],[49,24,53,29,"onCaughtError"],[49,25,53,30,"errorValue"],[49,35,53,47],[49,37,53,49,"errorInfo"],[49,46,53,69],[49,48,53,77],[50,4,54,2],[50,8,54,6,"error"],[50,13,54,11],[52,4,56,2],[53,4,57,2],[54,4,58,2],[54,8,58,6,"errorValue"],[54,18,58,16],[54,30,58,28,"Error"],[54,35,58,33],[54,37,58,35],[55,6,59,4],[56,0,60,0],[57,6,61,4,"error"],[57,11,61,9],[57,14,61,13,"errorValue"],[57,24,61,39],[58,4,62,2],[58,5,62,3],[58,11,62,9],[58,15,62,13],[58,22,62,20,"errorValue"],[58,32,62,30],[58,37,62,35],[58,45,62,43],[58,47,62,45],[59,6,63,4],[60,0,64,0],[61,6,65,4,"error"],[61,11,65,9],[61,14,65,13],[61,19,65,17,"SyntheticError"],[61,49,65,17],[61,50,65,17,"SyntheticError"],[61,87,65,31],[61,89,65,32,"errorValue"],[61,99,65,42],[61,100,65,59],[62,4,66,2],[62,5,66,3],[62,11,66,9],[63,6,67,4],[64,0,68,0],[65,6,69,4,"error"],[65,11,69,9],[65,14,69,13],[65,19,69,17,"SyntheticError"],[65,49,69,17],[65,50,69,17,"SyntheticError"],[65,87,69,31],[65,89,69,32],[65,108,69,51],[65,109,69,68],[66,4,70,2],[67,4,71,2],[67,8,71,6],[68,6,72,4],[69,6,73,4,"error"],[69,11,73,9],[69,12,73,10,"componentStack"],[69,26,73,24],[69,29,73,27,"errorInfo"],[69,38,73,36],[69,39,73,37,"componentStack"],[69,53,73,51],[70,6,74,4,"error"],[70,11,74,9],[70,12,74,10,"isComponentError"],[70,28,74,26],[70,31,74,29],[70,35,74,33],[71,4,75,2],[71,5,75,3],[71,6,75,4],[71,13,75,4,"_unused2"],[71,21,75,4],[71,23,75,10],[72,6,76,4],[73,4,76,4],[75,4,79,2],[76,4,80,2],[76,8,80,2,"handleException"],[76,38,80,2],[76,39,80,2,"handleException"],[76,77,80,17],[76,79,80,18,"error"],[76,84,80,23],[76,86,80,25],[76,91,80,30],[76,92,80,31],[77,2,81,0],[78,2,83,7],[78,11,83,16,"onRecoverableError"],[78,29,83,34,"onRecoverableError"],[78,30,84,2,"errorValue"],[78,40,84,19],[78,42,85,2,"errorInfo"],[78,51,85,22],[78,53,86,8],[79,4,87,2],[79,8,87,6,"error"],[79,13,87,11],[81,4,89,2],[82,4,90,2],[83,4,91,2],[83,8,91,6,"errorValue"],[83,18,91,16],[83,30,91,28,"Error"],[83,35,91,33],[83,37,91,35],[84,6,92,4],[85,0,93,0],[86,6,94,4,"error"],[86,11,94,9],[86,14,94,13,"errorValue"],[86,24,94,39],[87,4,95,2],[87,5,95,3],[87,11,95,9],[87,15,95,13],[87,22,95,20,"errorValue"],[87,32,95,30],[87,37,95,35],[87,45,95,43],[87,47,95,45],[88,6,96,4],[89,0,97,0],[90,6,98,4,"error"],[90,11,98,9],[90,14,98,13],[90,19,98,17,"SyntheticError"],[90,49,98,17],[90,50,98,17,"SyntheticError"],[90,87,98,31],[90,89,98,32,"errorValue"],[90,99,98,42],[90,100,98,59],[91,4,99,2],[91,5,99,3],[91,11,99,9],[92,6,100,4],[93,0,101,0],[94,6,102,4,"error"],[94,11,102,9],[94,14,102,13],[94,19,102,17,"SyntheticError"],[94,49,102,17],[94,50,102,17,"SyntheticError"],[94,87,102,31],[94,89,102,32],[94,108,102,51],[94,109,102,68],[95,4,103,2],[96,4,104,2],[96,8,104,6],[97,6,105,4],[98,6,106,4,"error"],[98,11,106,9],[98,12,106,10,"componentStack"],[98,26,106,24],[98,29,106,27,"errorInfo"],[98,38,106,36],[98,39,106,37,"componentStack"],[98,53,106,51],[99,6,107,4,"error"],[99,11,107,9],[99,12,107,10,"isComponentError"],[99,28,107,26],[99,31,107,29],[99,35,107,33],[100,4,108,2],[100,5,108,3],[100,6,108,4],[100,13,108,4,"_unused3"],[100,21,108,4],[100,23,108,10],[101,6,109,4],[102,4,109,4],[104,4,112,2],[105,4,113,2],[106,4,114,2],[107,4,115,2,"console"],[107,11,115,9],[107,12,115,10,"warn"],[107,16,115,14],[107,17,115,15,"error"],[107,22,115,20],[107,23,115,21],[108,2,116,0],[109,0,116,1],[109,3]],"functionMap":{"names":["<global>","onUncaughtError","onCaughtError","onRecoverableError"],"mappings":"AAA;OCsB;CD4B;OEE;CF4B;OGE;CHiC"}},"type":"js/module"}]}